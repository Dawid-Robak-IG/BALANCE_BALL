
BALANCE_BALL.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000ddcc  080001b0  080001b0  000011b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000004d4  0800df80  0800df80  0000ef80  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800e454  0800e454  000101e0  2**0
                  CONTENTS, READONLY
  4 .ARM          00000008  0800e454  0800e454  0000f454  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  0800e45c  0800e45c  000101e0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800e45c  0800e45c  0000f45c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  0800e460  0800e460  0000f460  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         000001e0  20000000  0800e464  00010000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  000101e0  2**0
                  CONTENTS
 10 .bss          000262b0  200001e0  200001e0  000101e0  2**2
                  ALLOC
 11 ._user_heap_stack 00000600  20026490  20026490  000101e0  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  000101e0  2**0
                  CONTENTS, READONLY
 13 .debug_info   00029dbb  00000000  00000000  00010210  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 0000686c  00000000  00000000  00039fcb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000023d8  00000000  00000000  00040838  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00001ba0  00000000  00000000  00042c10  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  0002d1cc  00000000  00000000  000447b0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   0002ff25  00000000  00000000  0007197c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000f65e8  00000000  00000000  000a18a1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  00197e89  2**0
                  CONTENTS, READONLY
 21 .debug_frame  0000a63c  00000000  00000000  00197ecc  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 00000066  00000000  00000000  001a2508  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	@ (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	@ (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	@ (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	200001e0 	.word	0x200001e0
 80001cc:	00000000 	.word	0x00000000
 80001d0:	0800df64 	.word	0x0800df64

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	@ (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	@ (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	@ (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	200001e4 	.word	0x200001e4
 80001ec:	0800df64 	.word	0x0800df64

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <strlen>:
 8000290:	4603      	mov	r3, r0
 8000292:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000296:	2a00      	cmp	r2, #0
 8000298:	d1fb      	bne.n	8000292 <strlen+0x2>
 800029a:	1a18      	subs	r0, r3, r0
 800029c:	3801      	subs	r0, #1
 800029e:	4770      	bx	lr

080002a0 <__aeabi_drsub>:
 80002a0:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 80002a4:	e002      	b.n	80002ac <__adddf3>
 80002a6:	bf00      	nop

080002a8 <__aeabi_dsub>:
 80002a8:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

080002ac <__adddf3>:
 80002ac:	b530      	push	{r4, r5, lr}
 80002ae:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002b2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002b6:	ea94 0f05 	teq	r4, r5
 80002ba:	bf08      	it	eq
 80002bc:	ea90 0f02 	teqeq	r0, r2
 80002c0:	bf1f      	itttt	ne
 80002c2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002c6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ca:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ce:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002d2:	f000 80e2 	beq.w	800049a <__adddf3+0x1ee>
 80002d6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002da:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002de:	bfb8      	it	lt
 80002e0:	426d      	neglt	r5, r5
 80002e2:	dd0c      	ble.n	80002fe <__adddf3+0x52>
 80002e4:	442c      	add	r4, r5
 80002e6:	ea80 0202 	eor.w	r2, r0, r2
 80002ea:	ea81 0303 	eor.w	r3, r1, r3
 80002ee:	ea82 0000 	eor.w	r0, r2, r0
 80002f2:	ea83 0101 	eor.w	r1, r3, r1
 80002f6:	ea80 0202 	eor.w	r2, r0, r2
 80002fa:	ea81 0303 	eor.w	r3, r1, r3
 80002fe:	2d36      	cmp	r5, #54	@ 0x36
 8000300:	bf88      	it	hi
 8000302:	bd30      	pophi	{r4, r5, pc}
 8000304:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000308:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800030c:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 8000310:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000314:	d002      	beq.n	800031c <__adddf3+0x70>
 8000316:	4240      	negs	r0, r0
 8000318:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800031c:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 8000320:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000324:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000328:	d002      	beq.n	8000330 <__adddf3+0x84>
 800032a:	4252      	negs	r2, r2
 800032c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000330:	ea94 0f05 	teq	r4, r5
 8000334:	f000 80a7 	beq.w	8000486 <__adddf3+0x1da>
 8000338:	f1a4 0401 	sub.w	r4, r4, #1
 800033c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000340:	db0d      	blt.n	800035e <__adddf3+0xb2>
 8000342:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000346:	fa22 f205 	lsr.w	r2, r2, r5
 800034a:	1880      	adds	r0, r0, r2
 800034c:	f141 0100 	adc.w	r1, r1, #0
 8000350:	fa03 f20e 	lsl.w	r2, r3, lr
 8000354:	1880      	adds	r0, r0, r2
 8000356:	fa43 f305 	asr.w	r3, r3, r5
 800035a:	4159      	adcs	r1, r3
 800035c:	e00e      	b.n	800037c <__adddf3+0xd0>
 800035e:	f1a5 0520 	sub.w	r5, r5, #32
 8000362:	f10e 0e20 	add.w	lr, lr, #32
 8000366:	2a01      	cmp	r2, #1
 8000368:	fa03 fc0e 	lsl.w	ip, r3, lr
 800036c:	bf28      	it	cs
 800036e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000372:	fa43 f305 	asr.w	r3, r3, r5
 8000376:	18c0      	adds	r0, r0, r3
 8000378:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800037c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000380:	d507      	bpl.n	8000392 <__adddf3+0xe6>
 8000382:	f04f 0e00 	mov.w	lr, #0
 8000386:	f1dc 0c00 	rsbs	ip, ip, #0
 800038a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800038e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000392:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 8000396:	d31b      	bcc.n	80003d0 <__adddf3+0x124>
 8000398:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 800039c:	d30c      	bcc.n	80003b8 <__adddf3+0x10c>
 800039e:	0849      	lsrs	r1, r1, #1
 80003a0:	ea5f 0030 	movs.w	r0, r0, rrx
 80003a4:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80003a8:	f104 0401 	add.w	r4, r4, #1
 80003ac:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003b0:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 80003b4:	f080 809a 	bcs.w	80004ec <__adddf3+0x240>
 80003b8:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 80003bc:	bf08      	it	eq
 80003be:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003c2:	f150 0000 	adcs.w	r0, r0, #0
 80003c6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ca:	ea41 0105 	orr.w	r1, r1, r5
 80003ce:	bd30      	pop	{r4, r5, pc}
 80003d0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003d4:	4140      	adcs	r0, r0
 80003d6:	eb41 0101 	adc.w	r1, r1, r1
 80003da:	3c01      	subs	r4, #1
 80003dc:	bf28      	it	cs
 80003de:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 80003e2:	d2e9      	bcs.n	80003b8 <__adddf3+0x10c>
 80003e4:	f091 0f00 	teq	r1, #0
 80003e8:	bf04      	itt	eq
 80003ea:	4601      	moveq	r1, r0
 80003ec:	2000      	moveq	r0, #0
 80003ee:	fab1 f381 	clz	r3, r1
 80003f2:	bf08      	it	eq
 80003f4:	3320      	addeq	r3, #32
 80003f6:	f1a3 030b 	sub.w	r3, r3, #11
 80003fa:	f1b3 0220 	subs.w	r2, r3, #32
 80003fe:	da0c      	bge.n	800041a <__adddf3+0x16e>
 8000400:	320c      	adds	r2, #12
 8000402:	dd08      	ble.n	8000416 <__adddf3+0x16a>
 8000404:	f102 0c14 	add.w	ip, r2, #20
 8000408:	f1c2 020c 	rsb	r2, r2, #12
 800040c:	fa01 f00c 	lsl.w	r0, r1, ip
 8000410:	fa21 f102 	lsr.w	r1, r1, r2
 8000414:	e00c      	b.n	8000430 <__adddf3+0x184>
 8000416:	f102 0214 	add.w	r2, r2, #20
 800041a:	bfd8      	it	le
 800041c:	f1c2 0c20 	rsble	ip, r2, #32
 8000420:	fa01 f102 	lsl.w	r1, r1, r2
 8000424:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000428:	bfdc      	itt	le
 800042a:	ea41 010c 	orrle.w	r1, r1, ip
 800042e:	4090      	lslle	r0, r2
 8000430:	1ae4      	subs	r4, r4, r3
 8000432:	bfa2      	ittt	ge
 8000434:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000438:	4329      	orrge	r1, r5
 800043a:	bd30      	popge	{r4, r5, pc}
 800043c:	ea6f 0404 	mvn.w	r4, r4
 8000440:	3c1f      	subs	r4, #31
 8000442:	da1c      	bge.n	800047e <__adddf3+0x1d2>
 8000444:	340c      	adds	r4, #12
 8000446:	dc0e      	bgt.n	8000466 <__adddf3+0x1ba>
 8000448:	f104 0414 	add.w	r4, r4, #20
 800044c:	f1c4 0220 	rsb	r2, r4, #32
 8000450:	fa20 f004 	lsr.w	r0, r0, r4
 8000454:	fa01 f302 	lsl.w	r3, r1, r2
 8000458:	ea40 0003 	orr.w	r0, r0, r3
 800045c:	fa21 f304 	lsr.w	r3, r1, r4
 8000460:	ea45 0103 	orr.w	r1, r5, r3
 8000464:	bd30      	pop	{r4, r5, pc}
 8000466:	f1c4 040c 	rsb	r4, r4, #12
 800046a:	f1c4 0220 	rsb	r2, r4, #32
 800046e:	fa20 f002 	lsr.w	r0, r0, r2
 8000472:	fa01 f304 	lsl.w	r3, r1, r4
 8000476:	ea40 0003 	orr.w	r0, r0, r3
 800047a:	4629      	mov	r1, r5
 800047c:	bd30      	pop	{r4, r5, pc}
 800047e:	fa21 f004 	lsr.w	r0, r1, r4
 8000482:	4629      	mov	r1, r5
 8000484:	bd30      	pop	{r4, r5, pc}
 8000486:	f094 0f00 	teq	r4, #0
 800048a:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 800048e:	bf06      	itte	eq
 8000490:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 8000494:	3401      	addeq	r4, #1
 8000496:	3d01      	subne	r5, #1
 8000498:	e74e      	b.n	8000338 <__adddf3+0x8c>
 800049a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800049e:	bf18      	it	ne
 80004a0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80004a4:	d029      	beq.n	80004fa <__adddf3+0x24e>
 80004a6:	ea94 0f05 	teq	r4, r5
 80004aa:	bf08      	it	eq
 80004ac:	ea90 0f02 	teqeq	r0, r2
 80004b0:	d005      	beq.n	80004be <__adddf3+0x212>
 80004b2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004b6:	bf04      	itt	eq
 80004b8:	4619      	moveq	r1, r3
 80004ba:	4610      	moveq	r0, r2
 80004bc:	bd30      	pop	{r4, r5, pc}
 80004be:	ea91 0f03 	teq	r1, r3
 80004c2:	bf1e      	ittt	ne
 80004c4:	2100      	movne	r1, #0
 80004c6:	2000      	movne	r0, #0
 80004c8:	bd30      	popne	{r4, r5, pc}
 80004ca:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ce:	d105      	bne.n	80004dc <__adddf3+0x230>
 80004d0:	0040      	lsls	r0, r0, #1
 80004d2:	4149      	adcs	r1, r1
 80004d4:	bf28      	it	cs
 80004d6:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 80004da:	bd30      	pop	{r4, r5, pc}
 80004dc:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 80004e0:	bf3c      	itt	cc
 80004e2:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 80004e6:	bd30      	popcc	{r4, r5, pc}
 80004e8:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80004ec:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 80004f0:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 80004f4:	f04f 0000 	mov.w	r0, #0
 80004f8:	bd30      	pop	{r4, r5, pc}
 80004fa:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004fe:	bf1a      	itte	ne
 8000500:	4619      	movne	r1, r3
 8000502:	4610      	movne	r0, r2
 8000504:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000508:	bf1c      	itt	ne
 800050a:	460b      	movne	r3, r1
 800050c:	4602      	movne	r2, r0
 800050e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000512:	bf06      	itte	eq
 8000514:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000518:	ea91 0f03 	teqeq	r1, r3
 800051c:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 8000520:	bd30      	pop	{r4, r5, pc}
 8000522:	bf00      	nop

08000524 <__aeabi_ui2d>:
 8000524:	f090 0f00 	teq	r0, #0
 8000528:	bf04      	itt	eq
 800052a:	2100      	moveq	r1, #0
 800052c:	4770      	bxeq	lr
 800052e:	b530      	push	{r4, r5, lr}
 8000530:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000534:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000538:	f04f 0500 	mov.w	r5, #0
 800053c:	f04f 0100 	mov.w	r1, #0
 8000540:	e750      	b.n	80003e4 <__adddf3+0x138>
 8000542:	bf00      	nop

08000544 <__aeabi_i2d>:
 8000544:	f090 0f00 	teq	r0, #0
 8000548:	bf04      	itt	eq
 800054a:	2100      	moveq	r1, #0
 800054c:	4770      	bxeq	lr
 800054e:	b530      	push	{r4, r5, lr}
 8000550:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000554:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000558:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 800055c:	bf48      	it	mi
 800055e:	4240      	negmi	r0, r0
 8000560:	f04f 0100 	mov.w	r1, #0
 8000564:	e73e      	b.n	80003e4 <__adddf3+0x138>
 8000566:	bf00      	nop

08000568 <__aeabi_f2d>:
 8000568:	0042      	lsls	r2, r0, #1
 800056a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800056e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000572:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000576:	bf1f      	itttt	ne
 8000578:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 800057c:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 8000580:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 8000584:	4770      	bxne	lr
 8000586:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 800058a:	bf08      	it	eq
 800058c:	4770      	bxeq	lr
 800058e:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 8000592:	bf04      	itt	eq
 8000594:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 8000598:	4770      	bxeq	lr
 800059a:	b530      	push	{r4, r5, lr}
 800059c:	f44f 7460 	mov.w	r4, #896	@ 0x380
 80005a0:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80005a4:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 80005a8:	e71c      	b.n	80003e4 <__adddf3+0x138>
 80005aa:	bf00      	nop

080005ac <__aeabi_ul2d>:
 80005ac:	ea50 0201 	orrs.w	r2, r0, r1
 80005b0:	bf08      	it	eq
 80005b2:	4770      	bxeq	lr
 80005b4:	b530      	push	{r4, r5, lr}
 80005b6:	f04f 0500 	mov.w	r5, #0
 80005ba:	e00a      	b.n	80005d2 <__aeabi_l2d+0x16>

080005bc <__aeabi_l2d>:
 80005bc:	ea50 0201 	orrs.w	r2, r0, r1
 80005c0:	bf08      	it	eq
 80005c2:	4770      	bxeq	lr
 80005c4:	b530      	push	{r4, r5, lr}
 80005c6:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 80005ca:	d502      	bpl.n	80005d2 <__aeabi_l2d+0x16>
 80005cc:	4240      	negs	r0, r0
 80005ce:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005d2:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80005d6:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80005da:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005de:	f43f aed8 	beq.w	8000392 <__adddf3+0xe6>
 80005e2:	f04f 0203 	mov.w	r2, #3
 80005e6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005ea:	bf18      	it	ne
 80005ec:	3203      	addne	r2, #3
 80005ee:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005f2:	bf18      	it	ne
 80005f4:	3203      	addne	r2, #3
 80005f6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005fa:	f1c2 0320 	rsb	r3, r2, #32
 80005fe:	fa00 fc03 	lsl.w	ip, r0, r3
 8000602:	fa20 f002 	lsr.w	r0, r0, r2
 8000606:	fa01 fe03 	lsl.w	lr, r1, r3
 800060a:	ea40 000e 	orr.w	r0, r0, lr
 800060e:	fa21 f102 	lsr.w	r1, r1, r2
 8000612:	4414      	add	r4, r2
 8000614:	e6bd      	b.n	8000392 <__adddf3+0xe6>
 8000616:	bf00      	nop

08000618 <__aeabi_dmul>:
 8000618:	b570      	push	{r4, r5, r6, lr}
 800061a:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 800061e:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000622:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000626:	bf1d      	ittte	ne
 8000628:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800062c:	ea94 0f0c 	teqne	r4, ip
 8000630:	ea95 0f0c 	teqne	r5, ip
 8000634:	f000 f8de 	bleq	80007f4 <__aeabi_dmul+0x1dc>
 8000638:	442c      	add	r4, r5
 800063a:	ea81 0603 	eor.w	r6, r1, r3
 800063e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000642:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000646:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800064a:	bf18      	it	ne
 800064c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000650:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000654:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8000658:	d038      	beq.n	80006cc <__aeabi_dmul+0xb4>
 800065a:	fba0 ce02 	umull	ip, lr, r0, r2
 800065e:	f04f 0500 	mov.w	r5, #0
 8000662:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000666:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 800066a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800066e:	f04f 0600 	mov.w	r6, #0
 8000672:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000676:	f09c 0f00 	teq	ip, #0
 800067a:	bf18      	it	ne
 800067c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000680:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 8000684:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 8000688:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 800068c:	d204      	bcs.n	8000698 <__aeabi_dmul+0x80>
 800068e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000692:	416d      	adcs	r5, r5
 8000694:	eb46 0606 	adc.w	r6, r6, r6
 8000698:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800069c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80006a0:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80006a4:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80006a8:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80006ac:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 80006b0:	bf88      	it	hi
 80006b2:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 80006b6:	d81e      	bhi.n	80006f6 <__aeabi_dmul+0xde>
 80006b8:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 80006bc:	bf08      	it	eq
 80006be:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006c2:	f150 0000 	adcs.w	r0, r0, #0
 80006c6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ca:	bd70      	pop	{r4, r5, r6, pc}
 80006cc:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 80006d0:	ea46 0101 	orr.w	r1, r6, r1
 80006d4:	ea40 0002 	orr.w	r0, r0, r2
 80006d8:	ea81 0103 	eor.w	r1, r1, r3
 80006dc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006e0:	bfc2      	ittt	gt
 80006e2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006e6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006ea:	bd70      	popgt	{r4, r5, r6, pc}
 80006ec:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80006f0:	f04f 0e00 	mov.w	lr, #0
 80006f4:	3c01      	subs	r4, #1
 80006f6:	f300 80ab 	bgt.w	8000850 <__aeabi_dmul+0x238>
 80006fa:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 80006fe:	bfde      	ittt	le
 8000700:	2000      	movle	r0, #0
 8000702:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 8000706:	bd70      	pople	{r4, r5, r6, pc}
 8000708:	f1c4 0400 	rsb	r4, r4, #0
 800070c:	3c20      	subs	r4, #32
 800070e:	da35      	bge.n	800077c <__aeabi_dmul+0x164>
 8000710:	340c      	adds	r4, #12
 8000712:	dc1b      	bgt.n	800074c <__aeabi_dmul+0x134>
 8000714:	f104 0414 	add.w	r4, r4, #20
 8000718:	f1c4 0520 	rsb	r5, r4, #32
 800071c:	fa00 f305 	lsl.w	r3, r0, r5
 8000720:	fa20 f004 	lsr.w	r0, r0, r4
 8000724:	fa01 f205 	lsl.w	r2, r1, r5
 8000728:	ea40 0002 	orr.w	r0, r0, r2
 800072c:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 8000730:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000734:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000738:	fa21 f604 	lsr.w	r6, r1, r4
 800073c:	eb42 0106 	adc.w	r1, r2, r6
 8000740:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000744:	bf08      	it	eq
 8000746:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800074a:	bd70      	pop	{r4, r5, r6, pc}
 800074c:	f1c4 040c 	rsb	r4, r4, #12
 8000750:	f1c4 0520 	rsb	r5, r4, #32
 8000754:	fa00 f304 	lsl.w	r3, r0, r4
 8000758:	fa20 f005 	lsr.w	r0, r0, r5
 800075c:	fa01 f204 	lsl.w	r2, r1, r4
 8000760:	ea40 0002 	orr.w	r0, r0, r2
 8000764:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000768:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800076c:	f141 0100 	adc.w	r1, r1, #0
 8000770:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000774:	bf08      	it	eq
 8000776:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800077a:	bd70      	pop	{r4, r5, r6, pc}
 800077c:	f1c4 0520 	rsb	r5, r4, #32
 8000780:	fa00 f205 	lsl.w	r2, r0, r5
 8000784:	ea4e 0e02 	orr.w	lr, lr, r2
 8000788:	fa20 f304 	lsr.w	r3, r0, r4
 800078c:	fa01 f205 	lsl.w	r2, r1, r5
 8000790:	ea43 0302 	orr.w	r3, r3, r2
 8000794:	fa21 f004 	lsr.w	r0, r1, r4
 8000798:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 800079c:	fa21 f204 	lsr.w	r2, r1, r4
 80007a0:	ea20 0002 	bic.w	r0, r0, r2
 80007a4:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80007a8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007ac:	bf08      	it	eq
 80007ae:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007b2:	bd70      	pop	{r4, r5, r6, pc}
 80007b4:	f094 0f00 	teq	r4, #0
 80007b8:	d10f      	bne.n	80007da <__aeabi_dmul+0x1c2>
 80007ba:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 80007be:	0040      	lsls	r0, r0, #1
 80007c0:	eb41 0101 	adc.w	r1, r1, r1
 80007c4:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80007c8:	bf08      	it	eq
 80007ca:	3c01      	subeq	r4, #1
 80007cc:	d0f7      	beq.n	80007be <__aeabi_dmul+0x1a6>
 80007ce:	ea41 0106 	orr.w	r1, r1, r6
 80007d2:	f095 0f00 	teq	r5, #0
 80007d6:	bf18      	it	ne
 80007d8:	4770      	bxne	lr
 80007da:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 80007de:	0052      	lsls	r2, r2, #1
 80007e0:	eb43 0303 	adc.w	r3, r3, r3
 80007e4:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 80007e8:	bf08      	it	eq
 80007ea:	3d01      	subeq	r5, #1
 80007ec:	d0f7      	beq.n	80007de <__aeabi_dmul+0x1c6>
 80007ee:	ea43 0306 	orr.w	r3, r3, r6
 80007f2:	4770      	bx	lr
 80007f4:	ea94 0f0c 	teq	r4, ip
 80007f8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007fc:	bf18      	it	ne
 80007fe:	ea95 0f0c 	teqne	r5, ip
 8000802:	d00c      	beq.n	800081e <__aeabi_dmul+0x206>
 8000804:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000808:	bf18      	it	ne
 800080a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800080e:	d1d1      	bne.n	80007b4 <__aeabi_dmul+0x19c>
 8000810:	ea81 0103 	eor.w	r1, r1, r3
 8000814:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000818:	f04f 0000 	mov.w	r0, #0
 800081c:	bd70      	pop	{r4, r5, r6, pc}
 800081e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000822:	bf06      	itte	eq
 8000824:	4610      	moveq	r0, r2
 8000826:	4619      	moveq	r1, r3
 8000828:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800082c:	d019      	beq.n	8000862 <__aeabi_dmul+0x24a>
 800082e:	ea94 0f0c 	teq	r4, ip
 8000832:	d102      	bne.n	800083a <__aeabi_dmul+0x222>
 8000834:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000838:	d113      	bne.n	8000862 <__aeabi_dmul+0x24a>
 800083a:	ea95 0f0c 	teq	r5, ip
 800083e:	d105      	bne.n	800084c <__aeabi_dmul+0x234>
 8000840:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000844:	bf1c      	itt	ne
 8000846:	4610      	movne	r0, r2
 8000848:	4619      	movne	r1, r3
 800084a:	d10a      	bne.n	8000862 <__aeabi_dmul+0x24a>
 800084c:	ea81 0103 	eor.w	r1, r1, r3
 8000850:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000854:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000858:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800085c:	f04f 0000 	mov.w	r0, #0
 8000860:	bd70      	pop	{r4, r5, r6, pc}
 8000862:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000866:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 800086a:	bd70      	pop	{r4, r5, r6, pc}

0800086c <__aeabi_ddiv>:
 800086c:	b570      	push	{r4, r5, r6, lr}
 800086e:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000872:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000876:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800087a:	bf1d      	ittte	ne
 800087c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000880:	ea94 0f0c 	teqne	r4, ip
 8000884:	ea95 0f0c 	teqne	r5, ip
 8000888:	f000 f8a7 	bleq	80009da <__aeabi_ddiv+0x16e>
 800088c:	eba4 0405 	sub.w	r4, r4, r5
 8000890:	ea81 0e03 	eor.w	lr, r1, r3
 8000894:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000898:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800089c:	f000 8088 	beq.w	80009b0 <__aeabi_ddiv+0x144>
 80008a0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80008a4:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 80008a8:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80008ac:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008b0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008b4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008b8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008bc:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008c0:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 80008c4:	429d      	cmp	r5, r3
 80008c6:	bf08      	it	eq
 80008c8:	4296      	cmpeq	r6, r2
 80008ca:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 80008ce:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 80008d2:	d202      	bcs.n	80008da <__aeabi_ddiv+0x6e>
 80008d4:	085b      	lsrs	r3, r3, #1
 80008d6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008da:	1ab6      	subs	r6, r6, r2
 80008dc:	eb65 0503 	sbc.w	r5, r5, r3
 80008e0:	085b      	lsrs	r3, r3, #1
 80008e2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008e6:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 80008ea:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 80008ee:	ebb6 0e02 	subs.w	lr, r6, r2
 80008f2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008f6:	bf22      	ittt	cs
 80008f8:	1ab6      	subcs	r6, r6, r2
 80008fa:	4675      	movcs	r5, lr
 80008fc:	ea40 000c 	orrcs.w	r0, r0, ip
 8000900:	085b      	lsrs	r3, r3, #1
 8000902:	ea4f 0232 	mov.w	r2, r2, rrx
 8000906:	ebb6 0e02 	subs.w	lr, r6, r2
 800090a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800090e:	bf22      	ittt	cs
 8000910:	1ab6      	subcs	r6, r6, r2
 8000912:	4675      	movcs	r5, lr
 8000914:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000918:	085b      	lsrs	r3, r3, #1
 800091a:	ea4f 0232 	mov.w	r2, r2, rrx
 800091e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000922:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000926:	bf22      	ittt	cs
 8000928:	1ab6      	subcs	r6, r6, r2
 800092a:	4675      	movcs	r5, lr
 800092c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000930:	085b      	lsrs	r3, r3, #1
 8000932:	ea4f 0232 	mov.w	r2, r2, rrx
 8000936:	ebb6 0e02 	subs.w	lr, r6, r2
 800093a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800093e:	bf22      	ittt	cs
 8000940:	1ab6      	subcs	r6, r6, r2
 8000942:	4675      	movcs	r5, lr
 8000944:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000948:	ea55 0e06 	orrs.w	lr, r5, r6
 800094c:	d018      	beq.n	8000980 <__aeabi_ddiv+0x114>
 800094e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000952:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000956:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800095a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800095e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000962:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000966:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800096a:	d1c0      	bne.n	80008ee <__aeabi_ddiv+0x82>
 800096c:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000970:	d10b      	bne.n	800098a <__aeabi_ddiv+0x11e>
 8000972:	ea41 0100 	orr.w	r1, r1, r0
 8000976:	f04f 0000 	mov.w	r0, #0
 800097a:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 800097e:	e7b6      	b.n	80008ee <__aeabi_ddiv+0x82>
 8000980:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000984:	bf04      	itt	eq
 8000986:	4301      	orreq	r1, r0
 8000988:	2000      	moveq	r0, #0
 800098a:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 800098e:	bf88      	it	hi
 8000990:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000994:	f63f aeaf 	bhi.w	80006f6 <__aeabi_dmul+0xde>
 8000998:	ebb5 0c03 	subs.w	ip, r5, r3
 800099c:	bf04      	itt	eq
 800099e:	ebb6 0c02 	subseq.w	ip, r6, r2
 80009a2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80009a6:	f150 0000 	adcs.w	r0, r0, #0
 80009aa:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80009ae:	bd70      	pop	{r4, r5, r6, pc}
 80009b0:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 80009b4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009b8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009bc:	bfc2      	ittt	gt
 80009be:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009c2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009c6:	bd70      	popgt	{r4, r5, r6, pc}
 80009c8:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80009cc:	f04f 0e00 	mov.w	lr, #0
 80009d0:	3c01      	subs	r4, #1
 80009d2:	e690      	b.n	80006f6 <__aeabi_dmul+0xde>
 80009d4:	ea45 0e06 	orr.w	lr, r5, r6
 80009d8:	e68d      	b.n	80006f6 <__aeabi_dmul+0xde>
 80009da:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009de:	ea94 0f0c 	teq	r4, ip
 80009e2:	bf08      	it	eq
 80009e4:	ea95 0f0c 	teqeq	r5, ip
 80009e8:	f43f af3b 	beq.w	8000862 <__aeabi_dmul+0x24a>
 80009ec:	ea94 0f0c 	teq	r4, ip
 80009f0:	d10a      	bne.n	8000a08 <__aeabi_ddiv+0x19c>
 80009f2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009f6:	f47f af34 	bne.w	8000862 <__aeabi_dmul+0x24a>
 80009fa:	ea95 0f0c 	teq	r5, ip
 80009fe:	f47f af25 	bne.w	800084c <__aeabi_dmul+0x234>
 8000a02:	4610      	mov	r0, r2
 8000a04:	4619      	mov	r1, r3
 8000a06:	e72c      	b.n	8000862 <__aeabi_dmul+0x24a>
 8000a08:	ea95 0f0c 	teq	r5, ip
 8000a0c:	d106      	bne.n	8000a1c <__aeabi_ddiv+0x1b0>
 8000a0e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a12:	f43f aefd 	beq.w	8000810 <__aeabi_dmul+0x1f8>
 8000a16:	4610      	mov	r0, r2
 8000a18:	4619      	mov	r1, r3
 8000a1a:	e722      	b.n	8000862 <__aeabi_dmul+0x24a>
 8000a1c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a20:	bf18      	it	ne
 8000a22:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a26:	f47f aec5 	bne.w	80007b4 <__aeabi_dmul+0x19c>
 8000a2a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a2e:	f47f af0d 	bne.w	800084c <__aeabi_dmul+0x234>
 8000a32:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a36:	f47f aeeb 	bne.w	8000810 <__aeabi_dmul+0x1f8>
 8000a3a:	e712      	b.n	8000862 <__aeabi_dmul+0x24a>

08000a3c <__gedf2>:
 8000a3c:	f04f 3cff 	mov.w	ip, #4294967295	@ 0xffffffff
 8000a40:	e006      	b.n	8000a50 <__cmpdf2+0x4>
 8000a42:	bf00      	nop

08000a44 <__ledf2>:
 8000a44:	f04f 0c01 	mov.w	ip, #1
 8000a48:	e002      	b.n	8000a50 <__cmpdf2+0x4>
 8000a4a:	bf00      	nop

08000a4c <__cmpdf2>:
 8000a4c:	f04f 0c01 	mov.w	ip, #1
 8000a50:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a54:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a58:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a5c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a60:	bf18      	it	ne
 8000a62:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a66:	d01b      	beq.n	8000aa0 <__cmpdf2+0x54>
 8000a68:	b001      	add	sp, #4
 8000a6a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a6e:	bf0c      	ite	eq
 8000a70:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a74:	ea91 0f03 	teqne	r1, r3
 8000a78:	bf02      	ittt	eq
 8000a7a:	ea90 0f02 	teqeq	r0, r2
 8000a7e:	2000      	moveq	r0, #0
 8000a80:	4770      	bxeq	lr
 8000a82:	f110 0f00 	cmn.w	r0, #0
 8000a86:	ea91 0f03 	teq	r1, r3
 8000a8a:	bf58      	it	pl
 8000a8c:	4299      	cmppl	r1, r3
 8000a8e:	bf08      	it	eq
 8000a90:	4290      	cmpeq	r0, r2
 8000a92:	bf2c      	ite	cs
 8000a94:	17d8      	asrcs	r0, r3, #31
 8000a96:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a9a:	f040 0001 	orr.w	r0, r0, #1
 8000a9e:	4770      	bx	lr
 8000aa0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000aa4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000aa8:	d102      	bne.n	8000ab0 <__cmpdf2+0x64>
 8000aaa:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000aae:	d107      	bne.n	8000ac0 <__cmpdf2+0x74>
 8000ab0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000ab4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ab8:	d1d6      	bne.n	8000a68 <__cmpdf2+0x1c>
 8000aba:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000abe:	d0d3      	beq.n	8000a68 <__cmpdf2+0x1c>
 8000ac0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ac4:	4770      	bx	lr
 8000ac6:	bf00      	nop

08000ac8 <__aeabi_cdrcmple>:
 8000ac8:	4684      	mov	ip, r0
 8000aca:	4610      	mov	r0, r2
 8000acc:	4662      	mov	r2, ip
 8000ace:	468c      	mov	ip, r1
 8000ad0:	4619      	mov	r1, r3
 8000ad2:	4663      	mov	r3, ip
 8000ad4:	e000      	b.n	8000ad8 <__aeabi_cdcmpeq>
 8000ad6:	bf00      	nop

08000ad8 <__aeabi_cdcmpeq>:
 8000ad8:	b501      	push	{r0, lr}
 8000ada:	f7ff ffb7 	bl	8000a4c <__cmpdf2>
 8000ade:	2800      	cmp	r0, #0
 8000ae0:	bf48      	it	mi
 8000ae2:	f110 0f00 	cmnmi.w	r0, #0
 8000ae6:	bd01      	pop	{r0, pc}

08000ae8 <__aeabi_dcmpeq>:
 8000ae8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000aec:	f7ff fff4 	bl	8000ad8 <__aeabi_cdcmpeq>
 8000af0:	bf0c      	ite	eq
 8000af2:	2001      	moveq	r0, #1
 8000af4:	2000      	movne	r0, #0
 8000af6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000afa:	bf00      	nop

08000afc <__aeabi_dcmplt>:
 8000afc:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b00:	f7ff ffea 	bl	8000ad8 <__aeabi_cdcmpeq>
 8000b04:	bf34      	ite	cc
 8000b06:	2001      	movcc	r0, #1
 8000b08:	2000      	movcs	r0, #0
 8000b0a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b0e:	bf00      	nop

08000b10 <__aeabi_dcmple>:
 8000b10:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b14:	f7ff ffe0 	bl	8000ad8 <__aeabi_cdcmpeq>
 8000b18:	bf94      	ite	ls
 8000b1a:	2001      	movls	r0, #1
 8000b1c:	2000      	movhi	r0, #0
 8000b1e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b22:	bf00      	nop

08000b24 <__aeabi_dcmpge>:
 8000b24:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b28:	f7ff ffce 	bl	8000ac8 <__aeabi_cdrcmple>
 8000b2c:	bf94      	ite	ls
 8000b2e:	2001      	movls	r0, #1
 8000b30:	2000      	movhi	r0, #0
 8000b32:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b36:	bf00      	nop

08000b38 <__aeabi_dcmpgt>:
 8000b38:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b3c:	f7ff ffc4 	bl	8000ac8 <__aeabi_cdrcmple>
 8000b40:	bf34      	ite	cc
 8000b42:	2001      	movcc	r0, #1
 8000b44:	2000      	movcs	r0, #0
 8000b46:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b4a:	bf00      	nop

08000b4c <__aeabi_dcmpun>:
 8000b4c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b50:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b54:	d102      	bne.n	8000b5c <__aeabi_dcmpun+0x10>
 8000b56:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b5a:	d10a      	bne.n	8000b72 <__aeabi_dcmpun+0x26>
 8000b5c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b60:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b64:	d102      	bne.n	8000b6c <__aeabi_dcmpun+0x20>
 8000b66:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b6a:	d102      	bne.n	8000b72 <__aeabi_dcmpun+0x26>
 8000b6c:	f04f 0000 	mov.w	r0, #0
 8000b70:	4770      	bx	lr
 8000b72:	f04f 0001 	mov.w	r0, #1
 8000b76:	4770      	bx	lr

08000b78 <__aeabi_d2iz>:
 8000b78:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b7c:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000b80:	d215      	bcs.n	8000bae <__aeabi_d2iz+0x36>
 8000b82:	d511      	bpl.n	8000ba8 <__aeabi_d2iz+0x30>
 8000b84:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000b88:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b8c:	d912      	bls.n	8000bb4 <__aeabi_d2iz+0x3c>
 8000b8e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b92:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000b96:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b9a:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000b9e:	fa23 f002 	lsr.w	r0, r3, r2
 8000ba2:	bf18      	it	ne
 8000ba4:	4240      	negne	r0, r0
 8000ba6:	4770      	bx	lr
 8000ba8:	f04f 0000 	mov.w	r0, #0
 8000bac:	4770      	bx	lr
 8000bae:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000bb2:	d105      	bne.n	8000bc0 <__aeabi_d2iz+0x48>
 8000bb4:	f011 4000 	ands.w	r0, r1, #2147483648	@ 0x80000000
 8000bb8:	bf08      	it	eq
 8000bba:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
 8000bbe:	4770      	bx	lr
 8000bc0:	f04f 0000 	mov.w	r0, #0
 8000bc4:	4770      	bx	lr
 8000bc6:	bf00      	nop

08000bc8 <__aeabi_uldivmod>:
 8000bc8:	b953      	cbnz	r3, 8000be0 <__aeabi_uldivmod+0x18>
 8000bca:	b94a      	cbnz	r2, 8000be0 <__aeabi_uldivmod+0x18>
 8000bcc:	2900      	cmp	r1, #0
 8000bce:	bf08      	it	eq
 8000bd0:	2800      	cmpeq	r0, #0
 8000bd2:	bf1c      	itt	ne
 8000bd4:	f04f 31ff 	movne.w	r1, #4294967295	@ 0xffffffff
 8000bd8:	f04f 30ff 	movne.w	r0, #4294967295	@ 0xffffffff
 8000bdc:	f000 b988 	b.w	8000ef0 <__aeabi_idiv0>
 8000be0:	f1ad 0c08 	sub.w	ip, sp, #8
 8000be4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000be8:	f000 f806 	bl	8000bf8 <__udivmoddi4>
 8000bec:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000bf0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000bf4:	b004      	add	sp, #16
 8000bf6:	4770      	bx	lr

08000bf8 <__udivmoddi4>:
 8000bf8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000bfc:	9d08      	ldr	r5, [sp, #32]
 8000bfe:	468e      	mov	lr, r1
 8000c00:	4604      	mov	r4, r0
 8000c02:	4688      	mov	r8, r1
 8000c04:	2b00      	cmp	r3, #0
 8000c06:	d14a      	bne.n	8000c9e <__udivmoddi4+0xa6>
 8000c08:	428a      	cmp	r2, r1
 8000c0a:	4617      	mov	r7, r2
 8000c0c:	d962      	bls.n	8000cd4 <__udivmoddi4+0xdc>
 8000c0e:	fab2 f682 	clz	r6, r2
 8000c12:	b14e      	cbz	r6, 8000c28 <__udivmoddi4+0x30>
 8000c14:	f1c6 0320 	rsb	r3, r6, #32
 8000c18:	fa01 f806 	lsl.w	r8, r1, r6
 8000c1c:	fa20 f303 	lsr.w	r3, r0, r3
 8000c20:	40b7      	lsls	r7, r6
 8000c22:	ea43 0808 	orr.w	r8, r3, r8
 8000c26:	40b4      	lsls	r4, r6
 8000c28:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000c2c:	fa1f fc87 	uxth.w	ip, r7
 8000c30:	fbb8 f1fe 	udiv	r1, r8, lr
 8000c34:	0c23      	lsrs	r3, r4, #16
 8000c36:	fb0e 8811 	mls	r8, lr, r1, r8
 8000c3a:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8000c3e:	fb01 f20c 	mul.w	r2, r1, ip
 8000c42:	429a      	cmp	r2, r3
 8000c44:	d909      	bls.n	8000c5a <__udivmoddi4+0x62>
 8000c46:	18fb      	adds	r3, r7, r3
 8000c48:	f101 30ff 	add.w	r0, r1, #4294967295	@ 0xffffffff
 8000c4c:	f080 80ea 	bcs.w	8000e24 <__udivmoddi4+0x22c>
 8000c50:	429a      	cmp	r2, r3
 8000c52:	f240 80e7 	bls.w	8000e24 <__udivmoddi4+0x22c>
 8000c56:	3902      	subs	r1, #2
 8000c58:	443b      	add	r3, r7
 8000c5a:	1a9a      	subs	r2, r3, r2
 8000c5c:	b2a3      	uxth	r3, r4
 8000c5e:	fbb2 f0fe 	udiv	r0, r2, lr
 8000c62:	fb0e 2210 	mls	r2, lr, r0, r2
 8000c66:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8000c6a:	fb00 fc0c 	mul.w	ip, r0, ip
 8000c6e:	459c      	cmp	ip, r3
 8000c70:	d909      	bls.n	8000c86 <__udivmoddi4+0x8e>
 8000c72:	18fb      	adds	r3, r7, r3
 8000c74:	f100 32ff 	add.w	r2, r0, #4294967295	@ 0xffffffff
 8000c78:	f080 80d6 	bcs.w	8000e28 <__udivmoddi4+0x230>
 8000c7c:	459c      	cmp	ip, r3
 8000c7e:	f240 80d3 	bls.w	8000e28 <__udivmoddi4+0x230>
 8000c82:	443b      	add	r3, r7
 8000c84:	3802      	subs	r0, #2
 8000c86:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000c8a:	eba3 030c 	sub.w	r3, r3, ip
 8000c8e:	2100      	movs	r1, #0
 8000c90:	b11d      	cbz	r5, 8000c9a <__udivmoddi4+0xa2>
 8000c92:	40f3      	lsrs	r3, r6
 8000c94:	2200      	movs	r2, #0
 8000c96:	e9c5 3200 	strd	r3, r2, [r5]
 8000c9a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000c9e:	428b      	cmp	r3, r1
 8000ca0:	d905      	bls.n	8000cae <__udivmoddi4+0xb6>
 8000ca2:	b10d      	cbz	r5, 8000ca8 <__udivmoddi4+0xb0>
 8000ca4:	e9c5 0100 	strd	r0, r1, [r5]
 8000ca8:	2100      	movs	r1, #0
 8000caa:	4608      	mov	r0, r1
 8000cac:	e7f5      	b.n	8000c9a <__udivmoddi4+0xa2>
 8000cae:	fab3 f183 	clz	r1, r3
 8000cb2:	2900      	cmp	r1, #0
 8000cb4:	d146      	bne.n	8000d44 <__udivmoddi4+0x14c>
 8000cb6:	4573      	cmp	r3, lr
 8000cb8:	d302      	bcc.n	8000cc0 <__udivmoddi4+0xc8>
 8000cba:	4282      	cmp	r2, r0
 8000cbc:	f200 8105 	bhi.w	8000eca <__udivmoddi4+0x2d2>
 8000cc0:	1a84      	subs	r4, r0, r2
 8000cc2:	eb6e 0203 	sbc.w	r2, lr, r3
 8000cc6:	2001      	movs	r0, #1
 8000cc8:	4690      	mov	r8, r2
 8000cca:	2d00      	cmp	r5, #0
 8000ccc:	d0e5      	beq.n	8000c9a <__udivmoddi4+0xa2>
 8000cce:	e9c5 4800 	strd	r4, r8, [r5]
 8000cd2:	e7e2      	b.n	8000c9a <__udivmoddi4+0xa2>
 8000cd4:	2a00      	cmp	r2, #0
 8000cd6:	f000 8090 	beq.w	8000dfa <__udivmoddi4+0x202>
 8000cda:	fab2 f682 	clz	r6, r2
 8000cde:	2e00      	cmp	r6, #0
 8000ce0:	f040 80a4 	bne.w	8000e2c <__udivmoddi4+0x234>
 8000ce4:	1a8a      	subs	r2, r1, r2
 8000ce6:	0c03      	lsrs	r3, r0, #16
 8000ce8:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000cec:	b280      	uxth	r0, r0
 8000cee:	b2bc      	uxth	r4, r7
 8000cf0:	2101      	movs	r1, #1
 8000cf2:	fbb2 fcfe 	udiv	ip, r2, lr
 8000cf6:	fb0e 221c 	mls	r2, lr, ip, r2
 8000cfa:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8000cfe:	fb04 f20c 	mul.w	r2, r4, ip
 8000d02:	429a      	cmp	r2, r3
 8000d04:	d907      	bls.n	8000d16 <__udivmoddi4+0x11e>
 8000d06:	18fb      	adds	r3, r7, r3
 8000d08:	f10c 38ff 	add.w	r8, ip, #4294967295	@ 0xffffffff
 8000d0c:	d202      	bcs.n	8000d14 <__udivmoddi4+0x11c>
 8000d0e:	429a      	cmp	r2, r3
 8000d10:	f200 80e0 	bhi.w	8000ed4 <__udivmoddi4+0x2dc>
 8000d14:	46c4      	mov	ip, r8
 8000d16:	1a9b      	subs	r3, r3, r2
 8000d18:	fbb3 f2fe 	udiv	r2, r3, lr
 8000d1c:	fb0e 3312 	mls	r3, lr, r2, r3
 8000d20:	ea40 4303 	orr.w	r3, r0, r3, lsl #16
 8000d24:	fb02 f404 	mul.w	r4, r2, r4
 8000d28:	429c      	cmp	r4, r3
 8000d2a:	d907      	bls.n	8000d3c <__udivmoddi4+0x144>
 8000d2c:	18fb      	adds	r3, r7, r3
 8000d2e:	f102 30ff 	add.w	r0, r2, #4294967295	@ 0xffffffff
 8000d32:	d202      	bcs.n	8000d3a <__udivmoddi4+0x142>
 8000d34:	429c      	cmp	r4, r3
 8000d36:	f200 80ca 	bhi.w	8000ece <__udivmoddi4+0x2d6>
 8000d3a:	4602      	mov	r2, r0
 8000d3c:	1b1b      	subs	r3, r3, r4
 8000d3e:	ea42 400c 	orr.w	r0, r2, ip, lsl #16
 8000d42:	e7a5      	b.n	8000c90 <__udivmoddi4+0x98>
 8000d44:	f1c1 0620 	rsb	r6, r1, #32
 8000d48:	408b      	lsls	r3, r1
 8000d4a:	fa22 f706 	lsr.w	r7, r2, r6
 8000d4e:	431f      	orrs	r7, r3
 8000d50:	fa0e f401 	lsl.w	r4, lr, r1
 8000d54:	fa20 f306 	lsr.w	r3, r0, r6
 8000d58:	fa2e fe06 	lsr.w	lr, lr, r6
 8000d5c:	ea4f 4917 	mov.w	r9, r7, lsr #16
 8000d60:	4323      	orrs	r3, r4
 8000d62:	fa00 f801 	lsl.w	r8, r0, r1
 8000d66:	fa1f fc87 	uxth.w	ip, r7
 8000d6a:	fbbe f0f9 	udiv	r0, lr, r9
 8000d6e:	0c1c      	lsrs	r4, r3, #16
 8000d70:	fb09 ee10 	mls	lr, r9, r0, lr
 8000d74:	ea44 440e 	orr.w	r4, r4, lr, lsl #16
 8000d78:	fb00 fe0c 	mul.w	lr, r0, ip
 8000d7c:	45a6      	cmp	lr, r4
 8000d7e:	fa02 f201 	lsl.w	r2, r2, r1
 8000d82:	d909      	bls.n	8000d98 <__udivmoddi4+0x1a0>
 8000d84:	193c      	adds	r4, r7, r4
 8000d86:	f100 3aff 	add.w	sl, r0, #4294967295	@ 0xffffffff
 8000d8a:	f080 809c 	bcs.w	8000ec6 <__udivmoddi4+0x2ce>
 8000d8e:	45a6      	cmp	lr, r4
 8000d90:	f240 8099 	bls.w	8000ec6 <__udivmoddi4+0x2ce>
 8000d94:	3802      	subs	r0, #2
 8000d96:	443c      	add	r4, r7
 8000d98:	eba4 040e 	sub.w	r4, r4, lr
 8000d9c:	fa1f fe83 	uxth.w	lr, r3
 8000da0:	fbb4 f3f9 	udiv	r3, r4, r9
 8000da4:	fb09 4413 	mls	r4, r9, r3, r4
 8000da8:	ea4e 4404 	orr.w	r4, lr, r4, lsl #16
 8000dac:	fb03 fc0c 	mul.w	ip, r3, ip
 8000db0:	45a4      	cmp	ip, r4
 8000db2:	d908      	bls.n	8000dc6 <__udivmoddi4+0x1ce>
 8000db4:	193c      	adds	r4, r7, r4
 8000db6:	f103 3eff 	add.w	lr, r3, #4294967295	@ 0xffffffff
 8000dba:	f080 8082 	bcs.w	8000ec2 <__udivmoddi4+0x2ca>
 8000dbe:	45a4      	cmp	ip, r4
 8000dc0:	d97f      	bls.n	8000ec2 <__udivmoddi4+0x2ca>
 8000dc2:	3b02      	subs	r3, #2
 8000dc4:	443c      	add	r4, r7
 8000dc6:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
 8000dca:	eba4 040c 	sub.w	r4, r4, ip
 8000dce:	fba0 ec02 	umull	lr, ip, r0, r2
 8000dd2:	4564      	cmp	r4, ip
 8000dd4:	4673      	mov	r3, lr
 8000dd6:	46e1      	mov	r9, ip
 8000dd8:	d362      	bcc.n	8000ea0 <__udivmoddi4+0x2a8>
 8000dda:	d05f      	beq.n	8000e9c <__udivmoddi4+0x2a4>
 8000ddc:	b15d      	cbz	r5, 8000df6 <__udivmoddi4+0x1fe>
 8000dde:	ebb8 0203 	subs.w	r2, r8, r3
 8000de2:	eb64 0409 	sbc.w	r4, r4, r9
 8000de6:	fa04 f606 	lsl.w	r6, r4, r6
 8000dea:	fa22 f301 	lsr.w	r3, r2, r1
 8000dee:	431e      	orrs	r6, r3
 8000df0:	40cc      	lsrs	r4, r1
 8000df2:	e9c5 6400 	strd	r6, r4, [r5]
 8000df6:	2100      	movs	r1, #0
 8000df8:	e74f      	b.n	8000c9a <__udivmoddi4+0xa2>
 8000dfa:	fbb1 fcf2 	udiv	ip, r1, r2
 8000dfe:	0c01      	lsrs	r1, r0, #16
 8000e00:	ea41 410e 	orr.w	r1, r1, lr, lsl #16
 8000e04:	b280      	uxth	r0, r0
 8000e06:	ea40 4201 	orr.w	r2, r0, r1, lsl #16
 8000e0a:	463b      	mov	r3, r7
 8000e0c:	4638      	mov	r0, r7
 8000e0e:	463c      	mov	r4, r7
 8000e10:	46b8      	mov	r8, r7
 8000e12:	46be      	mov	lr, r7
 8000e14:	2620      	movs	r6, #32
 8000e16:	fbb1 f1f7 	udiv	r1, r1, r7
 8000e1a:	eba2 0208 	sub.w	r2, r2, r8
 8000e1e:	ea41 410c 	orr.w	r1, r1, ip, lsl #16
 8000e22:	e766      	b.n	8000cf2 <__udivmoddi4+0xfa>
 8000e24:	4601      	mov	r1, r0
 8000e26:	e718      	b.n	8000c5a <__udivmoddi4+0x62>
 8000e28:	4610      	mov	r0, r2
 8000e2a:	e72c      	b.n	8000c86 <__udivmoddi4+0x8e>
 8000e2c:	f1c6 0220 	rsb	r2, r6, #32
 8000e30:	fa2e f302 	lsr.w	r3, lr, r2
 8000e34:	40b7      	lsls	r7, r6
 8000e36:	40b1      	lsls	r1, r6
 8000e38:	fa20 f202 	lsr.w	r2, r0, r2
 8000e3c:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000e40:	430a      	orrs	r2, r1
 8000e42:	fbb3 f8fe 	udiv	r8, r3, lr
 8000e46:	b2bc      	uxth	r4, r7
 8000e48:	fb0e 3318 	mls	r3, lr, r8, r3
 8000e4c:	0c11      	lsrs	r1, r2, #16
 8000e4e:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000e52:	fb08 f904 	mul.w	r9, r8, r4
 8000e56:	40b0      	lsls	r0, r6
 8000e58:	4589      	cmp	r9, r1
 8000e5a:	ea4f 4310 	mov.w	r3, r0, lsr #16
 8000e5e:	b280      	uxth	r0, r0
 8000e60:	d93e      	bls.n	8000ee0 <__udivmoddi4+0x2e8>
 8000e62:	1879      	adds	r1, r7, r1
 8000e64:	f108 3cff 	add.w	ip, r8, #4294967295	@ 0xffffffff
 8000e68:	d201      	bcs.n	8000e6e <__udivmoddi4+0x276>
 8000e6a:	4589      	cmp	r9, r1
 8000e6c:	d81f      	bhi.n	8000eae <__udivmoddi4+0x2b6>
 8000e6e:	eba1 0109 	sub.w	r1, r1, r9
 8000e72:	fbb1 f9fe 	udiv	r9, r1, lr
 8000e76:	fb09 f804 	mul.w	r8, r9, r4
 8000e7a:	fb0e 1119 	mls	r1, lr, r9, r1
 8000e7e:	b292      	uxth	r2, r2
 8000e80:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000e84:	4542      	cmp	r2, r8
 8000e86:	d229      	bcs.n	8000edc <__udivmoddi4+0x2e4>
 8000e88:	18ba      	adds	r2, r7, r2
 8000e8a:	f109 31ff 	add.w	r1, r9, #4294967295	@ 0xffffffff
 8000e8e:	d2c4      	bcs.n	8000e1a <__udivmoddi4+0x222>
 8000e90:	4542      	cmp	r2, r8
 8000e92:	d2c2      	bcs.n	8000e1a <__udivmoddi4+0x222>
 8000e94:	f1a9 0102 	sub.w	r1, r9, #2
 8000e98:	443a      	add	r2, r7
 8000e9a:	e7be      	b.n	8000e1a <__udivmoddi4+0x222>
 8000e9c:	45f0      	cmp	r8, lr
 8000e9e:	d29d      	bcs.n	8000ddc <__udivmoddi4+0x1e4>
 8000ea0:	ebbe 0302 	subs.w	r3, lr, r2
 8000ea4:	eb6c 0c07 	sbc.w	ip, ip, r7
 8000ea8:	3801      	subs	r0, #1
 8000eaa:	46e1      	mov	r9, ip
 8000eac:	e796      	b.n	8000ddc <__udivmoddi4+0x1e4>
 8000eae:	eba7 0909 	sub.w	r9, r7, r9
 8000eb2:	4449      	add	r1, r9
 8000eb4:	f1a8 0c02 	sub.w	ip, r8, #2
 8000eb8:	fbb1 f9fe 	udiv	r9, r1, lr
 8000ebc:	fb09 f804 	mul.w	r8, r9, r4
 8000ec0:	e7db      	b.n	8000e7a <__udivmoddi4+0x282>
 8000ec2:	4673      	mov	r3, lr
 8000ec4:	e77f      	b.n	8000dc6 <__udivmoddi4+0x1ce>
 8000ec6:	4650      	mov	r0, sl
 8000ec8:	e766      	b.n	8000d98 <__udivmoddi4+0x1a0>
 8000eca:	4608      	mov	r0, r1
 8000ecc:	e6fd      	b.n	8000cca <__udivmoddi4+0xd2>
 8000ece:	443b      	add	r3, r7
 8000ed0:	3a02      	subs	r2, #2
 8000ed2:	e733      	b.n	8000d3c <__udivmoddi4+0x144>
 8000ed4:	f1ac 0c02 	sub.w	ip, ip, #2
 8000ed8:	443b      	add	r3, r7
 8000eda:	e71c      	b.n	8000d16 <__udivmoddi4+0x11e>
 8000edc:	4649      	mov	r1, r9
 8000ede:	e79c      	b.n	8000e1a <__udivmoddi4+0x222>
 8000ee0:	eba1 0109 	sub.w	r1, r1, r9
 8000ee4:	46c4      	mov	ip, r8
 8000ee6:	fbb1 f9fe 	udiv	r9, r1, lr
 8000eea:	fb09 f804 	mul.w	r8, r9, r4
 8000eee:	e7c4      	b.n	8000e7a <__udivmoddi4+0x282>

08000ef0 <__aeabi_idiv0>:
 8000ef0:	4770      	bx	lr
 8000ef2:	bf00      	nop
 8000ef4:	0000      	movs	r0, r0
	...

08000ef8 <ball_set_speed>:
#include "ball_physics.h"

int16_t max_speed = 20;


void ball_set_speed(int16_t *speed_x,int16_t *speed_y){
 8000ef8:	b5b0      	push	{r4, r5, r7, lr}
 8000efa:	b084      	sub	sp, #16
 8000efc:	af00      	add	r7, sp, #0
 8000efe:	6078      	str	r0, [r7, #4]
 8000f00:	6039      	str	r1, [r7, #0]
	int dx = (int)(gyro_scaled_data_s.y) ;
 8000f02:	4b6d      	ldr	r3, [pc, #436]	@ (80010b8 <ball_set_speed+0x1c0>)
 8000f04:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8000f08:	60fb      	str	r3, [r7, #12]
	int dy = (int)(gyro_scaled_data_s.x);
 8000f0a:	4b6b      	ldr	r3, [pc, #428]	@ (80010b8 <ball_set_speed+0x1c0>)
 8000f0c:	f9b3 3000 	ldrsh.w	r3, [r3]
 8000f10:	60bb      	str	r3, [r7, #8]

	if (abs(dx) < 2) dx=0;
 8000f12:	68fb      	ldr	r3, [r7, #12]
 8000f14:	f1b3 3fff 	cmp.w	r3, #4294967295	@ 0xffffffff
 8000f18:	db04      	blt.n	8000f24 <ball_set_speed+0x2c>
 8000f1a:	68fb      	ldr	r3, [r7, #12]
 8000f1c:	2b01      	cmp	r3, #1
 8000f1e:	dc01      	bgt.n	8000f24 <ball_set_speed+0x2c>
 8000f20:	2300      	movs	r3, #0
 8000f22:	60fb      	str	r3, [r7, #12]
	if (abs(dy) < 2) dy=0;
 8000f24:	68bb      	ldr	r3, [r7, #8]
 8000f26:	f1b3 3fff 	cmp.w	r3, #4294967295	@ 0xffffffff
 8000f2a:	db04      	blt.n	8000f36 <ball_set_speed+0x3e>
 8000f2c:	68bb      	ldr	r3, [r7, #8]
 8000f2e:	2b01      	cmp	r3, #1
 8000f30:	dc01      	bgt.n	8000f36 <ball_set_speed+0x3e>
 8000f32:	2300      	movs	r3, #0
 8000f34:	60bb      	str	r3, [r7, #8]

	if(dx==0){
 8000f36:	68fb      	ldr	r3, [r7, #12]
 8000f38:	2b00      	cmp	r3, #0
 8000f3a:	d115      	bne.n	8000f68 <ball_set_speed+0x70>
		*speed_x*=0.99;
 8000f3c:	687b      	ldr	r3, [r7, #4]
 8000f3e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8000f42:	4618      	mov	r0, r3
 8000f44:	f7ff fafe 	bl	8000544 <__aeabi_i2d>
 8000f48:	a357      	add	r3, pc, #348	@ (adr r3, 80010a8 <ball_set_speed+0x1b0>)
 8000f4a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8000f4e:	f7ff fb63 	bl	8000618 <__aeabi_dmul>
 8000f52:	4602      	mov	r2, r0
 8000f54:	460b      	mov	r3, r1
 8000f56:	4610      	mov	r0, r2
 8000f58:	4619      	mov	r1, r3
 8000f5a:	f7ff fe0d 	bl	8000b78 <__aeabi_d2iz>
 8000f5e:	4603      	mov	r3, r0
 8000f60:	b21a      	sxth	r2, r3
 8000f62:	687b      	ldr	r3, [r7, #4]
 8000f64:	801a      	strh	r2, [r3, #0]
 8000f66:	e01f      	b.n	8000fa8 <ball_set_speed+0xb0>
	}else{
		*speed_x -= 0.1*dx;
 8000f68:	687b      	ldr	r3, [r7, #4]
 8000f6a:	f9b3 3000 	ldrsh.w	r3, [r3]
 8000f6e:	4618      	mov	r0, r3
 8000f70:	f7ff fae8 	bl	8000544 <__aeabi_i2d>
 8000f74:	4604      	mov	r4, r0
 8000f76:	460d      	mov	r5, r1
 8000f78:	68f8      	ldr	r0, [r7, #12]
 8000f7a:	f7ff fae3 	bl	8000544 <__aeabi_i2d>
 8000f7e:	a34c      	add	r3, pc, #304	@ (adr r3, 80010b0 <ball_set_speed+0x1b8>)
 8000f80:	e9d3 2300 	ldrd	r2, r3, [r3]
 8000f84:	f7ff fb48 	bl	8000618 <__aeabi_dmul>
 8000f88:	4602      	mov	r2, r0
 8000f8a:	460b      	mov	r3, r1
 8000f8c:	4620      	mov	r0, r4
 8000f8e:	4629      	mov	r1, r5
 8000f90:	f7ff f98a 	bl	80002a8 <__aeabi_dsub>
 8000f94:	4602      	mov	r2, r0
 8000f96:	460b      	mov	r3, r1
 8000f98:	4610      	mov	r0, r2
 8000f9a:	4619      	mov	r1, r3
 8000f9c:	f7ff fdec 	bl	8000b78 <__aeabi_d2iz>
 8000fa0:	4603      	mov	r3, r0
 8000fa2:	b21a      	sxth	r2, r3
 8000fa4:	687b      	ldr	r3, [r7, #4]
 8000fa6:	801a      	strh	r2, [r3, #0]
	}

	if(dy==0){
 8000fa8:	68bb      	ldr	r3, [r7, #8]
 8000faa:	2b00      	cmp	r3, #0
 8000fac:	d115      	bne.n	8000fda <ball_set_speed+0xe2>
			*speed_y*=0.99;
 8000fae:	683b      	ldr	r3, [r7, #0]
 8000fb0:	f9b3 3000 	ldrsh.w	r3, [r3]
 8000fb4:	4618      	mov	r0, r3
 8000fb6:	f7ff fac5 	bl	8000544 <__aeabi_i2d>
 8000fba:	a33b      	add	r3, pc, #236	@ (adr r3, 80010a8 <ball_set_speed+0x1b0>)
 8000fbc:	e9d3 2300 	ldrd	r2, r3, [r3]
 8000fc0:	f7ff fb2a 	bl	8000618 <__aeabi_dmul>
 8000fc4:	4602      	mov	r2, r0
 8000fc6:	460b      	mov	r3, r1
 8000fc8:	4610      	mov	r0, r2
 8000fca:	4619      	mov	r1, r3
 8000fcc:	f7ff fdd4 	bl	8000b78 <__aeabi_d2iz>
 8000fd0:	4603      	mov	r3, r0
 8000fd2:	b21a      	sxth	r2, r3
 8000fd4:	683b      	ldr	r3, [r7, #0]
 8000fd6:	801a      	strh	r2, [r3, #0]
 8000fd8:	e01f      	b.n	800101a <ball_set_speed+0x122>
		}
	else{
		*speed_y -=  0.1*dy;
 8000fda:	683b      	ldr	r3, [r7, #0]
 8000fdc:	f9b3 3000 	ldrsh.w	r3, [r3]
 8000fe0:	4618      	mov	r0, r3
 8000fe2:	f7ff faaf 	bl	8000544 <__aeabi_i2d>
 8000fe6:	4604      	mov	r4, r0
 8000fe8:	460d      	mov	r5, r1
 8000fea:	68b8      	ldr	r0, [r7, #8]
 8000fec:	f7ff faaa 	bl	8000544 <__aeabi_i2d>
 8000ff0:	a32f      	add	r3, pc, #188	@ (adr r3, 80010b0 <ball_set_speed+0x1b8>)
 8000ff2:	e9d3 2300 	ldrd	r2, r3, [r3]
 8000ff6:	f7ff fb0f 	bl	8000618 <__aeabi_dmul>
 8000ffa:	4602      	mov	r2, r0
 8000ffc:	460b      	mov	r3, r1
 8000ffe:	4620      	mov	r0, r4
 8001000:	4629      	mov	r1, r5
 8001002:	f7ff f951 	bl	80002a8 <__aeabi_dsub>
 8001006:	4602      	mov	r2, r0
 8001008:	460b      	mov	r3, r1
 800100a:	4610      	mov	r0, r2
 800100c:	4619      	mov	r1, r3
 800100e:	f7ff fdb3 	bl	8000b78 <__aeabi_d2iz>
 8001012:	4603      	mov	r3, r0
 8001014:	b21a      	sxth	r2, r3
 8001016:	683b      	ldr	r3, [r7, #0]
 8001018:	801a      	strh	r2, [r3, #0]
	}


	if (*speed_x > max_speed) *speed_x = max_speed;
 800101a:	687b      	ldr	r3, [r7, #4]
 800101c:	f9b3 2000 	ldrsh.w	r2, [r3]
 8001020:	4b26      	ldr	r3, [pc, #152]	@ (80010bc <ball_set_speed+0x1c4>)
 8001022:	f9b3 3000 	ldrsh.w	r3, [r3]
 8001026:	429a      	cmp	r2, r3
 8001028:	dd04      	ble.n	8001034 <ball_set_speed+0x13c>
 800102a:	4b24      	ldr	r3, [pc, #144]	@ (80010bc <ball_set_speed+0x1c4>)
 800102c:	f9b3 2000 	ldrsh.w	r2, [r3]
 8001030:	687b      	ldr	r3, [r7, #4]
 8001032:	801a      	strh	r2, [r3, #0]
	if (*speed_x < -max_speed) *speed_x = -max_speed;
 8001034:	687b      	ldr	r3, [r7, #4]
 8001036:	f9b3 3000 	ldrsh.w	r3, [r3]
 800103a:	461a      	mov	r2, r3
 800103c:	4b1f      	ldr	r3, [pc, #124]	@ (80010bc <ball_set_speed+0x1c4>)
 800103e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8001042:	425b      	negs	r3, r3
 8001044:	429a      	cmp	r2, r3
 8001046:	da08      	bge.n	800105a <ball_set_speed+0x162>
 8001048:	4b1c      	ldr	r3, [pc, #112]	@ (80010bc <ball_set_speed+0x1c4>)
 800104a:	f9b3 3000 	ldrsh.w	r3, [r3]
 800104e:	b29b      	uxth	r3, r3
 8001050:	425b      	negs	r3, r3
 8001052:	b29b      	uxth	r3, r3
 8001054:	b21a      	sxth	r2, r3
 8001056:	687b      	ldr	r3, [r7, #4]
 8001058:	801a      	strh	r2, [r3, #0]

	if (*speed_y > max_speed) *speed_y = max_speed;
 800105a:	683b      	ldr	r3, [r7, #0]
 800105c:	f9b3 2000 	ldrsh.w	r2, [r3]
 8001060:	4b16      	ldr	r3, [pc, #88]	@ (80010bc <ball_set_speed+0x1c4>)
 8001062:	f9b3 3000 	ldrsh.w	r3, [r3]
 8001066:	429a      	cmp	r2, r3
 8001068:	dd04      	ble.n	8001074 <ball_set_speed+0x17c>
 800106a:	4b14      	ldr	r3, [pc, #80]	@ (80010bc <ball_set_speed+0x1c4>)
 800106c:	f9b3 2000 	ldrsh.w	r2, [r3]
 8001070:	683b      	ldr	r3, [r7, #0]
 8001072:	801a      	strh	r2, [r3, #0]
    if (*speed_y < -max_speed) *speed_y = -max_speed;
 8001074:	683b      	ldr	r3, [r7, #0]
 8001076:	f9b3 3000 	ldrsh.w	r3, [r3]
 800107a:	461a      	mov	r2, r3
 800107c:	4b0f      	ldr	r3, [pc, #60]	@ (80010bc <ball_set_speed+0x1c4>)
 800107e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8001082:	425b      	negs	r3, r3
 8001084:	429a      	cmp	r2, r3
 8001086:	da08      	bge.n	800109a <ball_set_speed+0x1a2>
 8001088:	4b0c      	ldr	r3, [pc, #48]	@ (80010bc <ball_set_speed+0x1c4>)
 800108a:	f9b3 3000 	ldrsh.w	r3, [r3]
 800108e:	b29b      	uxth	r3, r3
 8001090:	425b      	negs	r3, r3
 8001092:	b29b      	uxth	r3, r3
 8001094:	b21a      	sxth	r2, r3
 8001096:	683b      	ldr	r3, [r7, #0]
 8001098:	801a      	strh	r2, [r3, #0]
}
 800109a:	bf00      	nop
 800109c:	3710      	adds	r7, #16
 800109e:	46bd      	mov	sp, r7
 80010a0:	bdb0      	pop	{r4, r5, r7, pc}
 80010a2:	bf00      	nop
 80010a4:	f3af 8000 	nop.w
 80010a8:	7ae147ae 	.word	0x7ae147ae
 80010ac:	3fefae14 	.word	0x3fefae14
 80010b0:	9999999a 	.word	0x9999999a
 80010b4:	3fb99999 	.word	0x3fb99999
 80010b8:	20025c84 	.word	0x20025c84
 80010bc:	20000000 	.word	0x20000000

080010c0 <ball_move>:



void ball_move(int16_t *speed_x,int16_t *speed_y){
 80010c0:	b580      	push	{r7, lr}
 80010c2:	b08a      	sub	sp, #40	@ 0x28
 80010c4:	af04      	add	r7, sp, #16
 80010c6:	6078      	str	r0, [r7, #4]
 80010c8:	6039      	str	r1, [r7, #0]
	 int next_x = player.x + *speed_x;
 80010ca:	4b4c      	ldr	r3, [pc, #304]	@ (80011fc <ball_move+0x13c>)
 80010cc:	681b      	ldr	r3, [r3, #0]
 80010ce:	687a      	ldr	r2, [r7, #4]
 80010d0:	f9b2 2000 	ldrsh.w	r2, [r2]
 80010d4:	4413      	add	r3, r2
 80010d6:	613b      	str	r3, [r7, #16]
	 int next_y = player.y + *speed_y;
 80010d8:	4b48      	ldr	r3, [pc, #288]	@ (80011fc <ball_move+0x13c>)
 80010da:	685b      	ldr	r3, [r3, #4]
 80010dc:	683a      	ldr	r2, [r7, #0]
 80010de:	f9b2 2000 	ldrsh.w	r2, [r2]
 80010e2:	4413      	add	r3, r2
 80010e4:	60fb      	str	r3, [r7, #12]

	if(!check_inside_screen(next_x,next_y)){
 80010e6:	68f9      	ldr	r1, [r7, #12]
 80010e8:	6938      	ldr	r0, [r7, #16]
 80010ea:	f000 f8bf 	bl	800126c <check_inside_screen>
 80010ee:	4603      	mov	r3, r0
 80010f0:	f083 0301 	eor.w	r3, r3, #1
 80010f4:	b2db      	uxtb	r3, r3
 80010f6:	2b00      	cmp	r3, #0
 80010f8:	d02a      	beq.n	8001150 <ball_move+0x90>
			*speed_x*=-0.75;
 80010fa:	687b      	ldr	r3, [r7, #4]
 80010fc:	f9b3 3000 	ldrsh.w	r3, [r3]
 8001100:	4618      	mov	r0, r3
 8001102:	f7ff fa1f 	bl	8000544 <__aeabi_i2d>
 8001106:	f04f 0200 	mov.w	r2, #0
 800110a:	4b3d      	ldr	r3, [pc, #244]	@ (8001200 <ball_move+0x140>)
 800110c:	f7ff fa84 	bl	8000618 <__aeabi_dmul>
 8001110:	4602      	mov	r2, r0
 8001112:	460b      	mov	r3, r1
 8001114:	4610      	mov	r0, r2
 8001116:	4619      	mov	r1, r3
 8001118:	f7ff fd2e 	bl	8000b78 <__aeabi_d2iz>
 800111c:	4603      	mov	r3, r0
 800111e:	b21a      	sxth	r2, r3
 8001120:	687b      	ldr	r3, [r7, #4]
 8001122:	801a      	strh	r2, [r3, #0]
			*speed_y*=-0.75;
 8001124:	683b      	ldr	r3, [r7, #0]
 8001126:	f9b3 3000 	ldrsh.w	r3, [r3]
 800112a:	4618      	mov	r0, r3
 800112c:	f7ff fa0a 	bl	8000544 <__aeabi_i2d>
 8001130:	f04f 0200 	mov.w	r2, #0
 8001134:	4b32      	ldr	r3, [pc, #200]	@ (8001200 <ball_move+0x140>)
 8001136:	f7ff fa6f 	bl	8000618 <__aeabi_dmul>
 800113a:	4602      	mov	r2, r0
 800113c:	460b      	mov	r3, r1
 800113e:	4610      	mov	r0, r2
 8001140:	4619      	mov	r1, r3
 8001142:	f7ff fd19 	bl	8000b78 <__aeabi_d2iz>
 8001146:	4603      	mov	r3, r0
 8001148:	b21a      	sxth	r2, r3
 800114a:	683b      	ldr	r3, [r7, #0]
 800114c:	801a      	strh	r2, [r3, #0]
			return;
 800114e:	e051      	b.n	80011f4 <ball_move+0x134>
	}


	for (int i = 0; i < RECTS_AMOUNT; i++) {
 8001150:	2300      	movs	r3, #0
 8001152:	617b      	str	r3, [r7, #20]
 8001154:	e040      	b.n	80011d8 <ball_move+0x118>
		if (check_collision(rects[i],next_x,next_y)) {
 8001156:	492b      	ldr	r1, [pc, #172]	@ (8001204 <ball_move+0x144>)
 8001158:	697a      	ldr	r2, [r7, #20]
 800115a:	4613      	mov	r3, r2
 800115c:	009b      	lsls	r3, r3, #2
 800115e:	4413      	add	r3, r2
 8001160:	009b      	lsls	r3, r3, #2
 8001162:	440b      	add	r3, r1
 8001164:	68fa      	ldr	r2, [r7, #12]
 8001166:	9202      	str	r2, [sp, #8]
 8001168:	693a      	ldr	r2, [r7, #16]
 800116a:	9201      	str	r2, [sp, #4]
 800116c:	691a      	ldr	r2, [r3, #16]
 800116e:	9200      	str	r2, [sp, #0]
 8001170:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8001172:	f000 f849 	bl	8001208 <check_collision>
 8001176:	4603      	mov	r3, r0
 8001178:	2b00      	cmp	r3, #0
 800117a:	d02a      	beq.n	80011d2 <ball_move+0x112>
			*speed_x *= -0.75;
 800117c:	687b      	ldr	r3, [r7, #4]
 800117e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8001182:	4618      	mov	r0, r3
 8001184:	f7ff f9de 	bl	8000544 <__aeabi_i2d>
 8001188:	f04f 0200 	mov.w	r2, #0
 800118c:	4b1c      	ldr	r3, [pc, #112]	@ (8001200 <ball_move+0x140>)
 800118e:	f7ff fa43 	bl	8000618 <__aeabi_dmul>
 8001192:	4602      	mov	r2, r0
 8001194:	460b      	mov	r3, r1
 8001196:	4610      	mov	r0, r2
 8001198:	4619      	mov	r1, r3
 800119a:	f7ff fced 	bl	8000b78 <__aeabi_d2iz>
 800119e:	4603      	mov	r3, r0
 80011a0:	b21a      	sxth	r2, r3
 80011a2:	687b      	ldr	r3, [r7, #4]
 80011a4:	801a      	strh	r2, [r3, #0]
			*speed_y *= -0.75;
 80011a6:	683b      	ldr	r3, [r7, #0]
 80011a8:	f9b3 3000 	ldrsh.w	r3, [r3]
 80011ac:	4618      	mov	r0, r3
 80011ae:	f7ff f9c9 	bl	8000544 <__aeabi_i2d>
 80011b2:	f04f 0200 	mov.w	r2, #0
 80011b6:	4b12      	ldr	r3, [pc, #72]	@ (8001200 <ball_move+0x140>)
 80011b8:	f7ff fa2e 	bl	8000618 <__aeabi_dmul>
 80011bc:	4602      	mov	r2, r0
 80011be:	460b      	mov	r3, r1
 80011c0:	4610      	mov	r0, r2
 80011c2:	4619      	mov	r1, r3
 80011c4:	f7ff fcd8 	bl	8000b78 <__aeabi_d2iz>
 80011c8:	4603      	mov	r3, r0
 80011ca:	b21a      	sxth	r2, r3
 80011cc:	683b      	ldr	r3, [r7, #0]
 80011ce:	801a      	strh	r2, [r3, #0]
			return;
 80011d0:	e010      	b.n	80011f4 <ball_move+0x134>
	for (int i = 0; i < RECTS_AMOUNT; i++) {
 80011d2:	697b      	ldr	r3, [r7, #20]
 80011d4:	3301      	adds	r3, #1
 80011d6:	617b      	str	r3, [r7, #20]
 80011d8:	697b      	ldr	r3, [r7, #20]
 80011da:	2b09      	cmp	r3, #9
 80011dc:	ddbb      	ble.n	8001156 <ball_move+0x96>
		}
	}

	lcd_update_circle(*speed_x, *speed_y, 0);
 80011de:	687b      	ldr	r3, [r7, #4]
 80011e0:	f9b3 3000 	ldrsh.w	r3, [r3]
 80011e4:	4618      	mov	r0, r3
 80011e6:	683b      	ldr	r3, [r7, #0]
 80011e8:	f9b3 3000 	ldrsh.w	r3, [r3]
 80011ec:	2200      	movs	r2, #0
 80011ee:	4619      	mov	r1, r3
 80011f0:	f001 f9aa 	bl	8002548 <lcd_update_circle>
}
 80011f4:	3718      	adds	r7, #24
 80011f6:	46bd      	mov	sp, r7
 80011f8:	bd80      	pop	{r7, pc}
 80011fa:	bf00      	nop
 80011fc:	20025bc4 	.word	0x20025bc4
 8001200:	bfe80000 	.word	0xbfe80000
 8001204:	20025afc 	.word	0x20025afc

08001208 <check_collision>:



bool check_collision(Rectangle rec, int next_x, int next_y){
 8001208:	b084      	sub	sp, #16
 800120a:	b490      	push	{r4, r7}
 800120c:	af00      	add	r7, sp, #0
 800120e:	f107 0408 	add.w	r4, r7, #8
 8001212:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
	 if ((next_x < rec.x + rec.width + player.r) &&
 8001216:	68ba      	ldr	r2, [r7, #8]
 8001218:	693b      	ldr	r3, [r7, #16]
 800121a:	441a      	add	r2, r3
 800121c:	4b12      	ldr	r3, [pc, #72]	@ (8001268 <check_collision+0x60>)
 800121e:	689b      	ldr	r3, [r3, #8]
 8001220:	4413      	add	r3, r2
 8001222:	69fa      	ldr	r2, [r7, #28]
 8001224:	429a      	cmp	r2, r3
 8001226:	da18      	bge.n	800125a <check_collision+0x52>
		              (next_x > rec.x - player.r) &&
 8001228:	68ba      	ldr	r2, [r7, #8]
 800122a:	4b0f      	ldr	r3, [pc, #60]	@ (8001268 <check_collision+0x60>)
 800122c:	689b      	ldr	r3, [r3, #8]
 800122e:	1ad3      	subs	r3, r2, r3
	 if ((next_x < rec.x + rec.width + player.r) &&
 8001230:	69fa      	ldr	r2, [r7, #28]
 8001232:	429a      	cmp	r2, r3
 8001234:	dd11      	ble.n	800125a <check_collision+0x52>
		              (next_y > rec.y - player.r) &&
 8001236:	68fa      	ldr	r2, [r7, #12]
 8001238:	4b0b      	ldr	r3, [pc, #44]	@ (8001268 <check_collision+0x60>)
 800123a:	689b      	ldr	r3, [r3, #8]
 800123c:	1ad3      	subs	r3, r2, r3
		              (next_x > rec.x - player.r) &&
 800123e:	6a3a      	ldr	r2, [r7, #32]
 8001240:	429a      	cmp	r2, r3
 8001242:	dd0a      	ble.n	800125a <check_collision+0x52>
		              (next_y < rec.y + rec.height + player.r))return true;
 8001244:	68fa      	ldr	r2, [r7, #12]
 8001246:	697b      	ldr	r3, [r7, #20]
 8001248:	441a      	add	r2, r3
 800124a:	4b07      	ldr	r3, [pc, #28]	@ (8001268 <check_collision+0x60>)
 800124c:	689b      	ldr	r3, [r3, #8]
 800124e:	4413      	add	r3, r2
		              (next_y > rec.y - player.r) &&
 8001250:	6a3a      	ldr	r2, [r7, #32]
 8001252:	429a      	cmp	r2, r3
 8001254:	da01      	bge.n	800125a <check_collision+0x52>
		              (next_y < rec.y + rec.height + player.r))return true;
 8001256:	2301      	movs	r3, #1
 8001258:	e000      	b.n	800125c <check_collision+0x54>
	return false;
 800125a:	2300      	movs	r3, #0
}
 800125c:	4618      	mov	r0, r3
 800125e:	46bd      	mov	sp, r7
 8001260:	bc90      	pop	{r4, r7}
 8001262:	b004      	add	sp, #16
 8001264:	4770      	bx	lr
 8001266:	bf00      	nop
 8001268:	20025bc4 	.word	0x20025bc4

0800126c <check_inside_screen>:


bool check_inside_screen(int next_x, int next_y){
 800126c:	b480      	push	{r7}
 800126e:	b083      	sub	sp, #12
 8001270:	af00      	add	r7, sp, #0
 8001272:	6078      	str	r0, [r7, #4]
 8001274:	6039      	str	r1, [r7, #0]
	  if (next_x - player.r <= 0 || next_x + player.r >= LCD_WIDTH || next_y - player.r <= 0 || next_y + player.r >= LCD_HEIGHT) {
 8001276:	4b11      	ldr	r3, [pc, #68]	@ (80012bc <check_inside_screen+0x50>)
 8001278:	689b      	ldr	r3, [r3, #8]
 800127a:	687a      	ldr	r2, [r7, #4]
 800127c:	1ad3      	subs	r3, r2, r3
 800127e:	2b00      	cmp	r3, #0
 8001280:	dd12      	ble.n	80012a8 <check_inside_screen+0x3c>
 8001282:	4b0e      	ldr	r3, [pc, #56]	@ (80012bc <check_inside_screen+0x50>)
 8001284:	689a      	ldr	r2, [r3, #8]
 8001286:	687b      	ldr	r3, [r7, #4]
 8001288:	4413      	add	r3, r2
 800128a:	2bef      	cmp	r3, #239	@ 0xef
 800128c:	dc0c      	bgt.n	80012a8 <check_inside_screen+0x3c>
 800128e:	4b0b      	ldr	r3, [pc, #44]	@ (80012bc <check_inside_screen+0x50>)
 8001290:	689b      	ldr	r3, [r3, #8]
 8001292:	683a      	ldr	r2, [r7, #0]
 8001294:	1ad3      	subs	r3, r2, r3
 8001296:	2b00      	cmp	r3, #0
 8001298:	dd06      	ble.n	80012a8 <check_inside_screen+0x3c>
 800129a:	4b08      	ldr	r3, [pc, #32]	@ (80012bc <check_inside_screen+0x50>)
 800129c:	689a      	ldr	r2, [r3, #8]
 800129e:	683b      	ldr	r3, [r7, #0]
 80012a0:	4413      	add	r3, r2
 80012a2:	f5b3 7fa0 	cmp.w	r3, #320	@ 0x140
 80012a6:	db01      	blt.n	80012ac <check_inside_screen+0x40>
		   return false;
 80012a8:	2300      	movs	r3, #0
 80012aa:	e000      	b.n	80012ae <check_inside_screen+0x42>
		}
	return true;
 80012ac:	2301      	movs	r3, #1
}
 80012ae:	4618      	mov	r0, r3
 80012b0:	370c      	adds	r7, #12
 80012b2:	46bd      	mov	sp, r7
 80012b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80012b8:	4770      	bx	lr
 80012ba:	bf00      	nop
 80012bc:	20025bc4 	.word	0x20025bc4

080012c0 <MX_CRC_Init>:

CRC_HandleTypeDef hcrc;

/* CRC init function */
void MX_CRC_Init(void)
{
 80012c0:	b580      	push	{r7, lr}
 80012c2:	af00      	add	r7, sp, #0
  /* USER CODE END CRC_Init 0 */

  /* USER CODE BEGIN CRC_Init 1 */

  /* USER CODE END CRC_Init 1 */
  hcrc.Instance = CRC;
 80012c4:	4b06      	ldr	r3, [pc, #24]	@ (80012e0 <MX_CRC_Init+0x20>)
 80012c6:	4a07      	ldr	r2, [pc, #28]	@ (80012e4 <MX_CRC_Init+0x24>)
 80012c8:	601a      	str	r2, [r3, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 80012ca:	4805      	ldr	r0, [pc, #20]	@ (80012e0 <MX_CRC_Init+0x20>)
 80012cc:	f002 fb3c 	bl	8003948 <HAL_CRC_Init>
 80012d0:	4603      	mov	r3, r0
 80012d2:	2b00      	cmp	r3, #0
 80012d4:	d001      	beq.n	80012da <MX_CRC_Init+0x1a>
  {
    Error_Handler();
 80012d6:	f001 fdfd 	bl	8002ed4 <Error_Handler>
  }
  /* USER CODE BEGIN CRC_Init 2 */

  /* USER CODE END CRC_Init 2 */

}
 80012da:	bf00      	nop
 80012dc:	bd80      	pop	{r7, pc}
 80012de:	bf00      	nop
 80012e0:	200001fc 	.word	0x200001fc
 80012e4:	40023000 	.word	0x40023000

080012e8 <HAL_CRC_MspInit>:

void HAL_CRC_MspInit(CRC_HandleTypeDef* crcHandle)
{
 80012e8:	b480      	push	{r7}
 80012ea:	b085      	sub	sp, #20
 80012ec:	af00      	add	r7, sp, #0
 80012ee:	6078      	str	r0, [r7, #4]

  if(crcHandle->Instance==CRC)
 80012f0:	687b      	ldr	r3, [r7, #4]
 80012f2:	681b      	ldr	r3, [r3, #0]
 80012f4:	4a0b      	ldr	r2, [pc, #44]	@ (8001324 <HAL_CRC_MspInit+0x3c>)
 80012f6:	4293      	cmp	r3, r2
 80012f8:	d10d      	bne.n	8001316 <HAL_CRC_MspInit+0x2e>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* CRC clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 80012fa:	2300      	movs	r3, #0
 80012fc:	60fb      	str	r3, [r7, #12]
 80012fe:	4b0a      	ldr	r3, [pc, #40]	@ (8001328 <HAL_CRC_MspInit+0x40>)
 8001300:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001302:	4a09      	ldr	r2, [pc, #36]	@ (8001328 <HAL_CRC_MspInit+0x40>)
 8001304:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 8001308:	6313      	str	r3, [r2, #48]	@ 0x30
 800130a:	4b07      	ldr	r3, [pc, #28]	@ (8001328 <HAL_CRC_MspInit+0x40>)
 800130c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800130e:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8001312:	60fb      	str	r3, [r7, #12]
 8001314:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }
}
 8001316:	bf00      	nop
 8001318:	3714      	adds	r7, #20
 800131a:	46bd      	mov	sp, r7
 800131c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001320:	4770      	bx	lr
 8001322:	bf00      	nop
 8001324:	40023000 	.word	0x40023000
 8001328:	40023800 	.word	0x40023800

0800132c <MX_DMA_Init>:

/**
  * Enable DMA controller clock
  */
void MX_DMA_Init(void)
{
 800132c:	b580      	push	{r7, lr}
 800132e:	b082      	sub	sp, #8
 8001330:	af00      	add	r7, sp, #0

  /* DMA controller clock enable */
  __HAL_RCC_DMA2_CLK_ENABLE();
 8001332:	2300      	movs	r3, #0
 8001334:	607b      	str	r3, [r7, #4]
 8001336:	4b0c      	ldr	r3, [pc, #48]	@ (8001368 <MX_DMA_Init+0x3c>)
 8001338:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800133a:	4a0b      	ldr	r2, [pc, #44]	@ (8001368 <MX_DMA_Init+0x3c>)
 800133c:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 8001340:	6313      	str	r3, [r2, #48]	@ 0x30
 8001342:	4b09      	ldr	r3, [pc, #36]	@ (8001368 <MX_DMA_Init+0x3c>)
 8001344:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001346:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 800134a:	607b      	str	r3, [r7, #4]
 800134c:	687b      	ldr	r3, [r7, #4]

  /* DMA interrupt init */
  /* DMA2_Stream4_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA2_Stream4_IRQn, 5, 0);
 800134e:	2200      	movs	r2, #0
 8001350:	2105      	movs	r1, #5
 8001352:	203c      	movs	r0, #60	@ 0x3c
 8001354:	f002 face 	bl	80038f4 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA2_Stream4_IRQn);
 8001358:	203c      	movs	r0, #60	@ 0x3c
 800135a:	f002 fae7 	bl	800392c <HAL_NVIC_EnableIRQ>

}
 800135e:	bf00      	nop
 8001360:	3708      	adds	r7, #8
 8001362:	46bd      	mov	sp, r7
 8001364:	bd80      	pop	{r7, pc}
 8001366:	bf00      	nop
 8001368:	40023800 	.word	0x40023800

0800136c <MX_DMA2D_Init>:

DMA2D_HandleTypeDef hdma2d;

/* DMA2D init function */
void MX_DMA2D_Init(void)
{
 800136c:	b580      	push	{r7, lr}
 800136e:	af00      	add	r7, sp, #0
  /* USER CODE END DMA2D_Init 0 */

  /* USER CODE BEGIN DMA2D_Init 1 */

  /* USER CODE END DMA2D_Init 1 */
  hdma2d.Instance = DMA2D;
 8001370:	4b15      	ldr	r3, [pc, #84]	@ (80013c8 <MX_DMA2D_Init+0x5c>)
 8001372:	4a16      	ldr	r2, [pc, #88]	@ (80013cc <MX_DMA2D_Init+0x60>)
 8001374:	601a      	str	r2, [r3, #0]
  hdma2d.Init.Mode = DMA2D_M2M;
 8001376:	4b14      	ldr	r3, [pc, #80]	@ (80013c8 <MX_DMA2D_Init+0x5c>)
 8001378:	2200      	movs	r2, #0
 800137a:	605a      	str	r2, [r3, #4]
  hdma2d.Init.ColorMode = DMA2D_OUTPUT_ARGB8888;
 800137c:	4b12      	ldr	r3, [pc, #72]	@ (80013c8 <MX_DMA2D_Init+0x5c>)
 800137e:	2200      	movs	r2, #0
 8001380:	609a      	str	r2, [r3, #8]
  hdma2d.Init.OutputOffset = 0;
 8001382:	4b11      	ldr	r3, [pc, #68]	@ (80013c8 <MX_DMA2D_Init+0x5c>)
 8001384:	2200      	movs	r2, #0
 8001386:	60da      	str	r2, [r3, #12]
  hdma2d.LayerCfg[1].InputOffset = 0;
 8001388:	4b0f      	ldr	r3, [pc, #60]	@ (80013c8 <MX_DMA2D_Init+0x5c>)
 800138a:	2200      	movs	r2, #0
 800138c:	629a      	str	r2, [r3, #40]	@ 0x28
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_ARGB8888;
 800138e:	4b0e      	ldr	r3, [pc, #56]	@ (80013c8 <MX_DMA2D_Init+0x5c>)
 8001390:	2200      	movs	r2, #0
 8001392:	62da      	str	r2, [r3, #44]	@ 0x2c
  hdma2d.LayerCfg[1].AlphaMode = DMA2D_NO_MODIF_ALPHA;
 8001394:	4b0c      	ldr	r3, [pc, #48]	@ (80013c8 <MX_DMA2D_Init+0x5c>)
 8001396:	2200      	movs	r2, #0
 8001398:	631a      	str	r2, [r3, #48]	@ 0x30
  hdma2d.LayerCfg[1].InputAlpha = 0;
 800139a:	4b0b      	ldr	r3, [pc, #44]	@ (80013c8 <MX_DMA2D_Init+0x5c>)
 800139c:	2200      	movs	r2, #0
 800139e:	635a      	str	r2, [r3, #52]	@ 0x34
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 80013a0:	4809      	ldr	r0, [pc, #36]	@ (80013c8 <MX_DMA2D_Init+0x5c>)
 80013a2:	f002 fe5d 	bl	8004060 <HAL_DMA2D_Init>
 80013a6:	4603      	mov	r3, r0
 80013a8:	2b00      	cmp	r3, #0
 80013aa:	d001      	beq.n	80013b0 <MX_DMA2D_Init+0x44>
  {
    Error_Handler();
 80013ac:	f001 fd92 	bl	8002ed4 <Error_Handler>
  }
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 80013b0:	2101      	movs	r1, #1
 80013b2:	4805      	ldr	r0, [pc, #20]	@ (80013c8 <MX_DMA2D_Init+0x5c>)
 80013b4:	f002 ffae 	bl	8004314 <HAL_DMA2D_ConfigLayer>
 80013b8:	4603      	mov	r3, r0
 80013ba:	2b00      	cmp	r3, #0
 80013bc:	d001      	beq.n	80013c2 <MX_DMA2D_Init+0x56>
  {
    Error_Handler();
 80013be:	f001 fd89 	bl	8002ed4 <Error_Handler>
  }
  /* USER CODE BEGIN DMA2D_Init 2 */

  /* USER CODE END DMA2D_Init 2 */

}
 80013c2:	bf00      	nop
 80013c4:	bd80      	pop	{r7, pc}
 80013c6:	bf00      	nop
 80013c8:	20000204 	.word	0x20000204
 80013cc:	4002b000 	.word	0x4002b000

080013d0 <HAL_DMA2D_MspInit>:

void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* dma2dHandle)
{
 80013d0:	b580      	push	{r7, lr}
 80013d2:	b084      	sub	sp, #16
 80013d4:	af00      	add	r7, sp, #0
 80013d6:	6078      	str	r0, [r7, #4]

  if(dma2dHandle->Instance==DMA2D)
 80013d8:	687b      	ldr	r3, [r7, #4]
 80013da:	681b      	ldr	r3, [r3, #0]
 80013dc:	4a0e      	ldr	r2, [pc, #56]	@ (8001418 <HAL_DMA2D_MspInit+0x48>)
 80013de:	4293      	cmp	r3, r2
 80013e0:	d115      	bne.n	800140e <HAL_DMA2D_MspInit+0x3e>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* DMA2D clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 80013e2:	2300      	movs	r3, #0
 80013e4:	60fb      	str	r3, [r7, #12]
 80013e6:	4b0d      	ldr	r3, [pc, #52]	@ (800141c <HAL_DMA2D_MspInit+0x4c>)
 80013e8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80013ea:	4a0c      	ldr	r2, [pc, #48]	@ (800141c <HAL_DMA2D_MspInit+0x4c>)
 80013ec:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 80013f0:	6313      	str	r3, [r2, #48]	@ 0x30
 80013f2:	4b0a      	ldr	r3, [pc, #40]	@ (800141c <HAL_DMA2D_MspInit+0x4c>)
 80013f4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80013f6:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 80013fa:	60fb      	str	r3, [r7, #12]
 80013fc:	68fb      	ldr	r3, [r7, #12]

    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 80013fe:	2200      	movs	r2, #0
 8001400:	2105      	movs	r1, #5
 8001402:	205a      	movs	r0, #90	@ 0x5a
 8001404:	f002 fa76 	bl	80038f4 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001408:	205a      	movs	r0, #90	@ 0x5a
 800140a:	f002 fa8f 	bl	800392c <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }
}
 800140e:	bf00      	nop
 8001410:	3710      	adds	r7, #16
 8001412:	46bd      	mov	sp, r7
 8001414:	bd80      	pop	{r7, pc}
 8001416:	bf00      	nop
 8001418:	4002b000 	.word	0x4002b000
 800141c:	40023800 	.word	0x40023800

08001420 <MX_FMC_Init>:

SDRAM_HandleTypeDef hsdram1;

/* FMC initialization function */
void MX_FMC_Init(void)
{
 8001420:	b580      	push	{r7, lr}
 8001422:	b088      	sub	sp, #32
 8001424:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN FMC_Init 0 */

  /* USER CODE END FMC_Init 0 */

  FMC_SDRAM_TimingTypeDef SdramTiming = {0};
 8001426:	1d3b      	adds	r3, r7, #4
 8001428:	2200      	movs	r2, #0
 800142a:	601a      	str	r2, [r3, #0]
 800142c:	605a      	str	r2, [r3, #4]
 800142e:	609a      	str	r2, [r3, #8]
 8001430:	60da      	str	r2, [r3, #12]
 8001432:	611a      	str	r2, [r3, #16]
 8001434:	615a      	str	r2, [r3, #20]
 8001436:	619a      	str	r2, [r3, #24]

  /* USER CODE END FMC_Init 1 */

  /** Perform the SDRAM1 memory initialization sequence
  */
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8001438:	4b1f      	ldr	r3, [pc, #124]	@ (80014b8 <MX_FMC_Init+0x98>)
 800143a:	4a20      	ldr	r2, [pc, #128]	@ (80014bc <MX_FMC_Init+0x9c>)
 800143c:	601a      	str	r2, [r3, #0]
  /* hsdram1.Init */
  hsdram1.Init.SDBank = FMC_SDRAM_BANK2;
 800143e:	4b1e      	ldr	r3, [pc, #120]	@ (80014b8 <MX_FMC_Init+0x98>)
 8001440:	2201      	movs	r2, #1
 8001442:	605a      	str	r2, [r3, #4]
  hsdram1.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
 8001444:	4b1c      	ldr	r3, [pc, #112]	@ (80014b8 <MX_FMC_Init+0x98>)
 8001446:	2200      	movs	r2, #0
 8001448:	609a      	str	r2, [r3, #8]
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 800144a:	4b1b      	ldr	r3, [pc, #108]	@ (80014b8 <MX_FMC_Init+0x98>)
 800144c:	2204      	movs	r2, #4
 800144e:	60da      	str	r2, [r3, #12]
  hsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
 8001450:	4b19      	ldr	r3, [pc, #100]	@ (80014b8 <MX_FMC_Init+0x98>)
 8001452:	2210      	movs	r2, #16
 8001454:	611a      	str	r2, [r3, #16]
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8001456:	4b18      	ldr	r3, [pc, #96]	@ (80014b8 <MX_FMC_Init+0x98>)
 8001458:	2240      	movs	r2, #64	@ 0x40
 800145a:	615a      	str	r2, [r3, #20]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 800145c:	4b16      	ldr	r3, [pc, #88]	@ (80014b8 <MX_FMC_Init+0x98>)
 800145e:	f44f 72c0 	mov.w	r2, #384	@ 0x180
 8001462:	619a      	str	r2, [r3, #24]
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 8001464:	4b14      	ldr	r3, [pc, #80]	@ (80014b8 <MX_FMC_Init+0x98>)
 8001466:	2200      	movs	r2, #0
 8001468:	61da      	str	r2, [r3, #28]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 800146a:	4b13      	ldr	r3, [pc, #76]	@ (80014b8 <MX_FMC_Init+0x98>)
 800146c:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 8001470:	621a      	str	r2, [r3, #32]
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 8001472:	4b11      	ldr	r3, [pc, #68]	@ (80014b8 <MX_FMC_Init+0x98>)
 8001474:	2200      	movs	r2, #0
 8001476:	625a      	str	r2, [r3, #36]	@ 0x24
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8001478:	4b0f      	ldr	r3, [pc, #60]	@ (80014b8 <MX_FMC_Init+0x98>)
 800147a:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 800147e:	629a      	str	r2, [r3, #40]	@ 0x28
  /* SdramTiming */
  SdramTiming.LoadToActiveDelay = 2;
 8001480:	2302      	movs	r3, #2
 8001482:	607b      	str	r3, [r7, #4]
  SdramTiming.ExitSelfRefreshDelay = 7;
 8001484:	2307      	movs	r3, #7
 8001486:	60bb      	str	r3, [r7, #8]
  SdramTiming.SelfRefreshTime = 4;
 8001488:	2304      	movs	r3, #4
 800148a:	60fb      	str	r3, [r7, #12]
  SdramTiming.RowCycleDelay = 7;
 800148c:	2307      	movs	r3, #7
 800148e:	613b      	str	r3, [r7, #16]
  SdramTiming.WriteRecoveryTime = 3;
 8001490:	2303      	movs	r3, #3
 8001492:	617b      	str	r3, [r7, #20]
  SdramTiming.RPDelay = 2;
 8001494:	2302      	movs	r3, #2
 8001496:	61bb      	str	r3, [r7, #24]
  SdramTiming.RCDDelay = 2;
 8001498:	2302      	movs	r3, #2
 800149a:	61fb      	str	r3, [r7, #28]

  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 800149c:	1d3b      	adds	r3, r7, #4
 800149e:	4619      	mov	r1, r3
 80014a0:	4805      	ldr	r0, [pc, #20]	@ (80014b8 <MX_FMC_Init+0x98>)
 80014a2:	f006 fae7 	bl	8007a74 <HAL_SDRAM_Init>
 80014a6:	4603      	mov	r3, r0
 80014a8:	2b00      	cmp	r3, #0
 80014aa:	d001      	beq.n	80014b0 <MX_FMC_Init+0x90>
  {
    Error_Handler( );
 80014ac:	f001 fd12 	bl	8002ed4 <Error_Handler>
  }

  /* USER CODE BEGIN FMC_Init 2 */

  /* USER CODE END FMC_Init 2 */
}
 80014b0:	bf00      	nop
 80014b2:	3720      	adds	r7, #32
 80014b4:	46bd      	mov	sp, r7
 80014b6:	bd80      	pop	{r7, pc}
 80014b8:	20000244 	.word	0x20000244
 80014bc:	a0000140 	.word	0xa0000140

080014c0 <HAL_FMC_MspInit>:

static uint32_t FMC_Initialized = 0;

static void HAL_FMC_MspInit(void){
 80014c0:	b580      	push	{r7, lr}
 80014c2:	b086      	sub	sp, #24
 80014c4:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN FMC_MspInit 0 */

  /* USER CODE END FMC_MspInit 0 */
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80014c6:	1d3b      	adds	r3, r7, #4
 80014c8:	2200      	movs	r2, #0
 80014ca:	601a      	str	r2, [r3, #0]
 80014cc:	605a      	str	r2, [r3, #4]
 80014ce:	609a      	str	r2, [r3, #8]
 80014d0:	60da      	str	r2, [r3, #12]
 80014d2:	611a      	str	r2, [r3, #16]
  if (FMC_Initialized) {
 80014d4:	4b3b      	ldr	r3, [pc, #236]	@ (80015c4 <HAL_FMC_MspInit+0x104>)
 80014d6:	681b      	ldr	r3, [r3, #0]
 80014d8:	2b00      	cmp	r3, #0
 80014da:	d16f      	bne.n	80015bc <HAL_FMC_MspInit+0xfc>
    return;
  }
  FMC_Initialized = 1;
 80014dc:	4b39      	ldr	r3, [pc, #228]	@ (80015c4 <HAL_FMC_MspInit+0x104>)
 80014de:	2201      	movs	r2, #1
 80014e0:	601a      	str	r2, [r3, #0]

  /* Peripheral clock enable */
  __HAL_RCC_FMC_CLK_ENABLE();
 80014e2:	2300      	movs	r3, #0
 80014e4:	603b      	str	r3, [r7, #0]
 80014e6:	4b38      	ldr	r3, [pc, #224]	@ (80015c8 <HAL_FMC_MspInit+0x108>)
 80014e8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80014ea:	4a37      	ldr	r2, [pc, #220]	@ (80015c8 <HAL_FMC_MspInit+0x108>)
 80014ec:	f043 0301 	orr.w	r3, r3, #1
 80014f0:	6393      	str	r3, [r2, #56]	@ 0x38
 80014f2:	4b35      	ldr	r3, [pc, #212]	@ (80015c8 <HAL_FMC_MspInit+0x108>)
 80014f4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80014f6:	f003 0301 	and.w	r3, r3, #1
 80014fa:	603b      	str	r3, [r7, #0]
 80014fc:	683b      	ldr	r3, [r7, #0]
  PB6   ------> FMC_SDNE1
  PE0   ------> FMC_NBL0
  PE1   ------> FMC_NBL1
  */
  /* GPIO_InitStruct */
  GPIO_InitStruct.Pin = A0_Pin|A1_Pin|A2_Pin|A3_Pin
 80014fe:	f64f 033f 	movw	r3, #63551	@ 0xf83f
 8001502:	607b      	str	r3, [r7, #4]
                          |A4_Pin|A5_Pin|SDNRAS_Pin|A6_Pin
                          |A7_Pin|A8_Pin|A9_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001504:	2302      	movs	r3, #2
 8001506:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001508:	2300      	movs	r3, #0
 800150a:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800150c:	2303      	movs	r3, #3
 800150e:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001510:	230c      	movs	r3, #12
 8001512:	617b      	str	r3, [r7, #20]

  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001514:	1d3b      	adds	r3, r7, #4
 8001516:	4619      	mov	r1, r3
 8001518:	482c      	ldr	r0, [pc, #176]	@ (80015cc <HAL_FMC_MspInit+0x10c>)
 800151a:	f002 ff8d 	bl	8004438 <HAL_GPIO_Init>

  /* GPIO_InitStruct */
  GPIO_InitStruct.Pin = SDNWE_Pin;
 800151e:	2301      	movs	r3, #1
 8001520:	607b      	str	r3, [r7, #4]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001522:	2302      	movs	r3, #2
 8001524:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001526:	2300      	movs	r3, #0
 8001528:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800152a:	2303      	movs	r3, #3
 800152c:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800152e:	230c      	movs	r3, #12
 8001530:	617b      	str	r3, [r7, #20]

  HAL_GPIO_Init(SDNWE_GPIO_Port, &GPIO_InitStruct);
 8001532:	1d3b      	adds	r3, r7, #4
 8001534:	4619      	mov	r1, r3
 8001536:	4826      	ldr	r0, [pc, #152]	@ (80015d0 <HAL_FMC_MspInit+0x110>)
 8001538:	f002 ff7e 	bl	8004438 <HAL_GPIO_Init>

  /* GPIO_InitStruct */
  GPIO_InitStruct.Pin = A10_Pin|A11_Pin|BA0_Pin|BA1_Pin
 800153c:	f248 1333 	movw	r3, #33075	@ 0x8133
 8001540:	607b      	str	r3, [r7, #4]
                          |SDCLK_Pin|SDNCAS_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001542:	2302      	movs	r3, #2
 8001544:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001546:	2300      	movs	r3, #0
 8001548:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800154a:	2303      	movs	r3, #3
 800154c:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800154e:	230c      	movs	r3, #12
 8001550:	617b      	str	r3, [r7, #20]

  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001552:	1d3b      	adds	r3, r7, #4
 8001554:	4619      	mov	r1, r3
 8001556:	481f      	ldr	r0, [pc, #124]	@ (80015d4 <HAL_FMC_MspInit+0x114>)
 8001558:	f002 ff6e 	bl	8004438 <HAL_GPIO_Init>

  /* GPIO_InitStruct */
  GPIO_InitStruct.Pin = D4_Pin|D5_Pin|D6_Pin|D7_Pin
 800155c:	f64f 7383 	movw	r3, #65411	@ 0xff83
 8001560:	607b      	str	r3, [r7, #4]
                          |D8_Pin|D9_Pin|D10_Pin|D11_Pin
                          |D12_Pin|NBL0_Pin|NBL1_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001562:	2302      	movs	r3, #2
 8001564:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001566:	2300      	movs	r3, #0
 8001568:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800156a:	2303      	movs	r3, #3
 800156c:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800156e:	230c      	movs	r3, #12
 8001570:	617b      	str	r3, [r7, #20]

  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001572:	1d3b      	adds	r3, r7, #4
 8001574:	4619      	mov	r1, r3
 8001576:	4818      	ldr	r0, [pc, #96]	@ (80015d8 <HAL_FMC_MspInit+0x118>)
 8001578:	f002 ff5e 	bl	8004438 <HAL_GPIO_Init>

  /* GPIO_InitStruct */
  GPIO_InitStruct.Pin = D13_Pin|D14_Pin|D15_Pin|D0_Pin
 800157c:	f24c 7303 	movw	r3, #50947	@ 0xc703
 8001580:	607b      	str	r3, [r7, #4]
                          |D1_Pin|D2_Pin|D3_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001582:	2302      	movs	r3, #2
 8001584:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001586:	2300      	movs	r3, #0
 8001588:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800158a:	2303      	movs	r3, #3
 800158c:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800158e:	230c      	movs	r3, #12
 8001590:	617b      	str	r3, [r7, #20]

  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001592:	1d3b      	adds	r3, r7, #4
 8001594:	4619      	mov	r1, r3
 8001596:	4811      	ldr	r0, [pc, #68]	@ (80015dc <HAL_FMC_MspInit+0x11c>)
 8001598:	f002 ff4e 	bl	8004438 <HAL_GPIO_Init>

  /* GPIO_InitStruct */
  GPIO_InitStruct.Pin = SDCKE1_Pin|SDNE1_Pin;
 800159c:	2360      	movs	r3, #96	@ 0x60
 800159e:	607b      	str	r3, [r7, #4]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80015a0:	2302      	movs	r3, #2
 80015a2:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80015a4:	2300      	movs	r3, #0
 80015a6:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80015a8:	2303      	movs	r3, #3
 80015aa:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80015ac:	230c      	movs	r3, #12
 80015ae:	617b      	str	r3, [r7, #20]

  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80015b0:	1d3b      	adds	r3, r7, #4
 80015b2:	4619      	mov	r1, r3
 80015b4:	480a      	ldr	r0, [pc, #40]	@ (80015e0 <HAL_FMC_MspInit+0x120>)
 80015b6:	f002 ff3f 	bl	8004438 <HAL_GPIO_Init>
 80015ba:	e000      	b.n	80015be <HAL_FMC_MspInit+0xfe>
    return;
 80015bc:	bf00      	nop

  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}
 80015be:	3718      	adds	r7, #24
 80015c0:	46bd      	mov	sp, r7
 80015c2:	bd80      	pop	{r7, pc}
 80015c4:	20000278 	.word	0x20000278
 80015c8:	40023800 	.word	0x40023800
 80015cc:	40021400 	.word	0x40021400
 80015d0:	40020800 	.word	0x40020800
 80015d4:	40021800 	.word	0x40021800
 80015d8:	40021000 	.word	0x40021000
 80015dc:	40020c00 	.word	0x40020c00
 80015e0:	40020400 	.word	0x40020400

080015e4 <HAL_SDRAM_MspInit>:

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* sdramHandle){
 80015e4:	b580      	push	{r7, lr}
 80015e6:	b082      	sub	sp, #8
 80015e8:	af00      	add	r7, sp, #0
 80015ea:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN SDRAM_MspInit 0 */

  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
 80015ec:	f7ff ff68 	bl	80014c0 <HAL_FMC_MspInit>
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 80015f0:	bf00      	nop
 80015f2:	3708      	adds	r7, #8
 80015f4:	46bd      	mov	sp, r7
 80015f6:	bd80      	pop	{r7, pc}

080015f8 <MX_GPIO_Init>:
        * Output
        * EVENT_OUT
        * EXTI
*/
void MX_GPIO_Init(void)
{
 80015f8:	b580      	push	{r7, lr}
 80015fa:	b08e      	sub	sp, #56	@ 0x38
 80015fc:	af00      	add	r7, sp, #0

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80015fe:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8001602:	2200      	movs	r2, #0
 8001604:	601a      	str	r2, [r3, #0]
 8001606:	605a      	str	r2, [r3, #4]
 8001608:	609a      	str	r2, [r3, #8]
 800160a:	60da      	str	r2, [r3, #12]
 800160c:	611a      	str	r2, [r3, #16]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 800160e:	2300      	movs	r3, #0
 8001610:	623b      	str	r3, [r7, #32]
 8001612:	4b88      	ldr	r3, [pc, #544]	@ (8001834 <MX_GPIO_Init+0x23c>)
 8001614:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001616:	4a87      	ldr	r2, [pc, #540]	@ (8001834 <MX_GPIO_Init+0x23c>)
 8001618:	f043 0304 	orr.w	r3, r3, #4
 800161c:	6313      	str	r3, [r2, #48]	@ 0x30
 800161e:	4b85      	ldr	r3, [pc, #532]	@ (8001834 <MX_GPIO_Init+0x23c>)
 8001620:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001622:	f003 0304 	and.w	r3, r3, #4
 8001626:	623b      	str	r3, [r7, #32]
 8001628:	6a3b      	ldr	r3, [r7, #32]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 800162a:	2300      	movs	r3, #0
 800162c:	61fb      	str	r3, [r7, #28]
 800162e:	4b81      	ldr	r3, [pc, #516]	@ (8001834 <MX_GPIO_Init+0x23c>)
 8001630:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001632:	4a80      	ldr	r2, [pc, #512]	@ (8001834 <MX_GPIO_Init+0x23c>)
 8001634:	f043 0320 	orr.w	r3, r3, #32
 8001638:	6313      	str	r3, [r2, #48]	@ 0x30
 800163a:	4b7e      	ldr	r3, [pc, #504]	@ (8001834 <MX_GPIO_Init+0x23c>)
 800163c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800163e:	f003 0320 	and.w	r3, r3, #32
 8001642:	61fb      	str	r3, [r7, #28]
 8001644:	69fb      	ldr	r3, [r7, #28]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8001646:	2300      	movs	r3, #0
 8001648:	61bb      	str	r3, [r7, #24]
 800164a:	4b7a      	ldr	r3, [pc, #488]	@ (8001834 <MX_GPIO_Init+0x23c>)
 800164c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800164e:	4a79      	ldr	r2, [pc, #484]	@ (8001834 <MX_GPIO_Init+0x23c>)
 8001650:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8001654:	6313      	str	r3, [r2, #48]	@ 0x30
 8001656:	4b77      	ldr	r3, [pc, #476]	@ (8001834 <MX_GPIO_Init+0x23c>)
 8001658:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800165a:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800165e:	61bb      	str	r3, [r7, #24]
 8001660:	69bb      	ldr	r3, [r7, #24]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8001662:	2300      	movs	r3, #0
 8001664:	617b      	str	r3, [r7, #20]
 8001666:	4b73      	ldr	r3, [pc, #460]	@ (8001834 <MX_GPIO_Init+0x23c>)
 8001668:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800166a:	4a72      	ldr	r2, [pc, #456]	@ (8001834 <MX_GPIO_Init+0x23c>)
 800166c:	f043 0301 	orr.w	r3, r3, #1
 8001670:	6313      	str	r3, [r2, #48]	@ 0x30
 8001672:	4b70      	ldr	r3, [pc, #448]	@ (8001834 <MX_GPIO_Init+0x23c>)
 8001674:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001676:	f003 0301 	and.w	r3, r3, #1
 800167a:	617b      	str	r3, [r7, #20]
 800167c:	697b      	ldr	r3, [r7, #20]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 800167e:	2300      	movs	r3, #0
 8001680:	613b      	str	r3, [r7, #16]
 8001682:	4b6c      	ldr	r3, [pc, #432]	@ (8001834 <MX_GPIO_Init+0x23c>)
 8001684:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001686:	4a6b      	ldr	r2, [pc, #428]	@ (8001834 <MX_GPIO_Init+0x23c>)
 8001688:	f043 0302 	orr.w	r3, r3, #2
 800168c:	6313      	str	r3, [r2, #48]	@ 0x30
 800168e:	4b69      	ldr	r3, [pc, #420]	@ (8001834 <MX_GPIO_Init+0x23c>)
 8001690:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001692:	f003 0302 	and.w	r3, r3, #2
 8001696:	613b      	str	r3, [r7, #16]
 8001698:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 800169a:	2300      	movs	r3, #0
 800169c:	60fb      	str	r3, [r7, #12]
 800169e:	4b65      	ldr	r3, [pc, #404]	@ (8001834 <MX_GPIO_Init+0x23c>)
 80016a0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80016a2:	4a64      	ldr	r2, [pc, #400]	@ (8001834 <MX_GPIO_Init+0x23c>)
 80016a4:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80016a8:	6313      	str	r3, [r2, #48]	@ 0x30
 80016aa:	4b62      	ldr	r3, [pc, #392]	@ (8001834 <MX_GPIO_Init+0x23c>)
 80016ac:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80016ae:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80016b2:	60fb      	str	r3, [r7, #12]
 80016b4:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80016b6:	2300      	movs	r3, #0
 80016b8:	60bb      	str	r3, [r7, #8]
 80016ba:	4b5e      	ldr	r3, [pc, #376]	@ (8001834 <MX_GPIO_Init+0x23c>)
 80016bc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80016be:	4a5d      	ldr	r2, [pc, #372]	@ (8001834 <MX_GPIO_Init+0x23c>)
 80016c0:	f043 0310 	orr.w	r3, r3, #16
 80016c4:	6313      	str	r3, [r2, #48]	@ 0x30
 80016c6:	4b5b      	ldr	r3, [pc, #364]	@ (8001834 <MX_GPIO_Init+0x23c>)
 80016c8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80016ca:	f003 0310 	and.w	r3, r3, #16
 80016ce:	60bb      	str	r3, [r7, #8]
 80016d0:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80016d2:	2300      	movs	r3, #0
 80016d4:	607b      	str	r3, [r7, #4]
 80016d6:	4b57      	ldr	r3, [pc, #348]	@ (8001834 <MX_GPIO_Init+0x23c>)
 80016d8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80016da:	4a56      	ldr	r2, [pc, #344]	@ (8001834 <MX_GPIO_Init+0x23c>)
 80016dc:	f043 0308 	orr.w	r3, r3, #8
 80016e0:	6313      	str	r3, [r2, #48]	@ 0x30
 80016e2:	4b54      	ldr	r3, [pc, #336]	@ (8001834 <MX_GPIO_Init+0x23c>)
 80016e4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80016e6:	f003 0308 	and.w	r3, r3, #8
 80016ea:	607b      	str	r3, [r7, #4]
 80016ec:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOC, NCS_MEMS_SPI_Pin|CSX_Pin|OTG_FS_PSO_Pin, GPIO_PIN_RESET);
 80016ee:	2200      	movs	r2, #0
 80016f0:	2116      	movs	r1, #22
 80016f2:	4851      	ldr	r0, [pc, #324]	@ (8001838 <MX_GPIO_Init+0x240>)
 80016f4:	f003 f84c 	bl	8004790 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(ACP_RST_GPIO_Port, ACP_RST_Pin, GPIO_PIN_RESET);
 80016f8:	2200      	movs	r2, #0
 80016fa:	2180      	movs	r1, #128	@ 0x80
 80016fc:	484f      	ldr	r0, [pc, #316]	@ (800183c <MX_GPIO_Init+0x244>)
 80016fe:	f003 f847 	bl	8004790 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOD, RDX_Pin|WRX_DCX_Pin, GPIO_PIN_RESET);
 8001702:	2200      	movs	r2, #0
 8001704:	f44f 5140 	mov.w	r1, #12288	@ 0x3000
 8001708:	484d      	ldr	r0, [pc, #308]	@ (8001840 <MX_GPIO_Init+0x248>)
 800170a:	f003 f841 	bl	8004790 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOG, LD3_Pin|LD4_Pin, GPIO_PIN_RESET);
 800170e:	2200      	movs	r2, #0
 8001710:	f44f 41c0 	mov.w	r1, #24576	@ 0x6000
 8001714:	484b      	ldr	r0, [pc, #300]	@ (8001844 <MX_GPIO_Init+0x24c>)
 8001716:	f003 f83b 	bl	8004790 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : NCS_MEMS_SPI_Pin */
  GPIO_InitStruct.Pin = NCS_MEMS_SPI_Pin;
 800171a:	2302      	movs	r3, #2
 800171c:	627b      	str	r3, [r7, #36]	@ 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800171e:	2301      	movs	r3, #1
 8001720:	62bb      	str	r3, [r7, #40]	@ 0x28
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8001722:	2301      	movs	r3, #1
 8001724:	62fb      	str	r3, [r7, #44]	@ 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001726:	2300      	movs	r3, #0
 8001728:	633b      	str	r3, [r7, #48]	@ 0x30
  HAL_GPIO_Init(NCS_MEMS_SPI_GPIO_Port, &GPIO_InitStruct);
 800172a:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 800172e:	4619      	mov	r1, r3
 8001730:	4841      	ldr	r0, [pc, #260]	@ (8001838 <MX_GPIO_Init+0x240>)
 8001732:	f002 fe81 	bl	8004438 <HAL_GPIO_Init>

  /*Configure GPIO pins : CSX_Pin OTG_FS_PSO_Pin */
  GPIO_InitStruct.Pin = CSX_Pin|OTG_FS_PSO_Pin;
 8001736:	2314      	movs	r3, #20
 8001738:	627b      	str	r3, [r7, #36]	@ 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800173a:	2301      	movs	r3, #1
 800173c:	62bb      	str	r3, [r7, #40]	@ 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800173e:	2300      	movs	r3, #0
 8001740:	62fb      	str	r3, [r7, #44]	@ 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001742:	2300      	movs	r3, #0
 8001744:	633b      	str	r3, [r7, #48]	@ 0x30
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001746:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 800174a:	4619      	mov	r1, r3
 800174c:	483a      	ldr	r0, [pc, #232]	@ (8001838 <MX_GPIO_Init+0x240>)
 800174e:	f002 fe73 	bl	8004438 <HAL_GPIO_Init>

  /*Configure GPIO pin : B2_Pin */
  GPIO_InitStruct.Pin = B2_Pin;
 8001752:	2301      	movs	r3, #1
 8001754:	627b      	str	r3, [r7, #36]	@ 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001756:	2300      	movs	r3, #0
 8001758:	62bb      	str	r3, [r7, #40]	@ 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800175a:	2300      	movs	r3, #0
 800175c:	62fb      	str	r3, [r7, #44]	@ 0x2c
  HAL_GPIO_Init(B2_GPIO_Port, &GPIO_InitStruct);
 800175e:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8001762:	4619      	mov	r1, r3
 8001764:	4835      	ldr	r0, [pc, #212]	@ (800183c <MX_GPIO_Init+0x244>)
 8001766:	f002 fe67 	bl	8004438 <HAL_GPIO_Init>

  /*Configure GPIO pins : MEMS_INT1_Pin MEMS_INT2_Pin TP_INT1_Pin */
  GPIO_InitStruct.Pin = MEMS_INT1_Pin|MEMS_INT2_Pin|TP_INT1_Pin;
 800176a:	f248 0306 	movw	r3, #32774	@ 0x8006
 800176e:	627b      	str	r3, [r7, #36]	@ 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_EVT_RISING;
 8001770:	f44f 1390 	mov.w	r3, #1179648	@ 0x120000
 8001774:	62bb      	str	r3, [r7, #40]	@ 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001776:	2300      	movs	r3, #0
 8001778:	62fb      	str	r3, [r7, #44]	@ 0x2c
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800177a:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 800177e:	4619      	mov	r1, r3
 8001780:	482e      	ldr	r0, [pc, #184]	@ (800183c <MX_GPIO_Init+0x244>)
 8001782:	f002 fe59 	bl	8004438 <HAL_GPIO_Init>

  /*Configure GPIO pin : ACP_RST_Pin */
  GPIO_InitStruct.Pin = ACP_RST_Pin;
 8001786:	2380      	movs	r3, #128	@ 0x80
 8001788:	627b      	str	r3, [r7, #36]	@ 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800178a:	2301      	movs	r3, #1
 800178c:	62bb      	str	r3, [r7, #40]	@ 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800178e:	2300      	movs	r3, #0
 8001790:	62fb      	str	r3, [r7, #44]	@ 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001792:	2300      	movs	r3, #0
 8001794:	633b      	str	r3, [r7, #48]	@ 0x30
  HAL_GPIO_Init(ACP_RST_GPIO_Port, &GPIO_InitStruct);
 8001796:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 800179a:	4619      	mov	r1, r3
 800179c:	4827      	ldr	r0, [pc, #156]	@ (800183c <MX_GPIO_Init+0x244>)
 800179e:	f002 fe4b 	bl	8004438 <HAL_GPIO_Init>

  /*Configure GPIO pin : OTG_FS_OC_Pin */
  GPIO_InitStruct.Pin = OTG_FS_OC_Pin;
 80017a2:	2320      	movs	r3, #32
 80017a4:	627b      	str	r3, [r7, #36]	@ 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_EVT_RISING;
 80017a6:	f44f 1390 	mov.w	r3, #1179648	@ 0x120000
 80017aa:	62bb      	str	r3, [r7, #40]	@ 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80017ac:	2300      	movs	r3, #0
 80017ae:	62fb      	str	r3, [r7, #44]	@ 0x2c
  HAL_GPIO_Init(OTG_FS_OC_GPIO_Port, &GPIO_InitStruct);
 80017b0:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 80017b4:	4619      	mov	r1, r3
 80017b6:	4820      	ldr	r0, [pc, #128]	@ (8001838 <MX_GPIO_Init+0x240>)
 80017b8:	f002 fe3e 	bl	8004438 <HAL_GPIO_Init>

  /*Configure GPIO pin : BOOT1_Pin */
  GPIO_InitStruct.Pin = BOOT1_Pin;
 80017bc:	2304      	movs	r3, #4
 80017be:	627b      	str	r3, [r7, #36]	@ 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 80017c0:	2300      	movs	r3, #0
 80017c2:	62bb      	str	r3, [r7, #40]	@ 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80017c4:	2300      	movs	r3, #0
 80017c6:	62fb      	str	r3, [r7, #44]	@ 0x2c
  HAL_GPIO_Init(BOOT1_GPIO_Port, &GPIO_InitStruct);
 80017c8:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 80017cc:	4619      	mov	r1, r3
 80017ce:	481e      	ldr	r0, [pc, #120]	@ (8001848 <MX_GPIO_Init+0x250>)
 80017d0:	f002 fe32 	bl	8004438 <HAL_GPIO_Init>

  /*Configure GPIO pin : TE_Pin */
  GPIO_InitStruct.Pin = TE_Pin;
 80017d4:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 80017d8:	627b      	str	r3, [r7, #36]	@ 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 80017da:	2300      	movs	r3, #0
 80017dc:	62bb      	str	r3, [r7, #40]	@ 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80017de:	2300      	movs	r3, #0
 80017e0:	62fb      	str	r3, [r7, #44]	@ 0x2c
  HAL_GPIO_Init(TE_GPIO_Port, &GPIO_InitStruct);
 80017e2:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 80017e6:	4619      	mov	r1, r3
 80017e8:	4815      	ldr	r0, [pc, #84]	@ (8001840 <MX_GPIO_Init+0x248>)
 80017ea:	f002 fe25 	bl	8004438 <HAL_GPIO_Init>

  /*Configure GPIO pins : RDX_Pin WRX_DCX_Pin */
  GPIO_InitStruct.Pin = RDX_Pin|WRX_DCX_Pin;
 80017ee:	f44f 5340 	mov.w	r3, #12288	@ 0x3000
 80017f2:	627b      	str	r3, [r7, #36]	@ 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80017f4:	2301      	movs	r3, #1
 80017f6:	62bb      	str	r3, [r7, #40]	@ 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80017f8:	2300      	movs	r3, #0
 80017fa:	62fb      	str	r3, [r7, #44]	@ 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80017fc:	2300      	movs	r3, #0
 80017fe:	633b      	str	r3, [r7, #48]	@ 0x30
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001800:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8001804:	4619      	mov	r1, r3
 8001806:	480e      	ldr	r0, [pc, #56]	@ (8001840 <MX_GPIO_Init+0x248>)
 8001808:	f002 fe16 	bl	8004438 <HAL_GPIO_Init>

  /*Configure GPIO pins : LD3_Pin LD4_Pin */
  GPIO_InitStruct.Pin = LD3_Pin|LD4_Pin;
 800180c:	f44f 43c0 	mov.w	r3, #24576	@ 0x6000
 8001810:	627b      	str	r3, [r7, #36]	@ 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001812:	2301      	movs	r3, #1
 8001814:	62bb      	str	r3, [r7, #40]	@ 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001816:	2300      	movs	r3, #0
 8001818:	62fb      	str	r3, [r7, #44]	@ 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800181a:	2300      	movs	r3, #0
 800181c:	633b      	str	r3, [r7, #48]	@ 0x30
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800181e:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8001822:	4619      	mov	r1, r3
 8001824:	4807      	ldr	r0, [pc, #28]	@ (8001844 <MX_GPIO_Init+0x24c>)
 8001826:	f002 fe07 	bl	8004438 <HAL_GPIO_Init>

}
 800182a:	bf00      	nop
 800182c:	3738      	adds	r7, #56	@ 0x38
 800182e:	46bd      	mov	sp, r7
 8001830:	bd80      	pop	{r7, pc}
 8001832:	bf00      	nop
 8001834:	40023800 	.word	0x40023800
 8001838:	40020800 	.word	0x40020800
 800183c:	40020000 	.word	0x40020000
 8001840:	40020c00 	.word	0x40020c00
 8001844:	40021800 	.word	0x40021800
 8001848:	40020400 	.word	0x40020400

0800184c <_write>:
static int16_t x_data[MOVING_AVERAGE_WINDOW];
static int16_t y_data[MOVING_AVERAGE_WINDOW];
static int16_t z_data[MOVING_AVERAGE_WINDOW];
static uint8_t data_index = 0;

ssize_t _write(int file, const char *data, size_t len) {
 800184c:	b580      	push	{r7, lr}
 800184e:	b084      	sub	sp, #16
 8001850:	af00      	add	r7, sp, #0
 8001852:	60f8      	str	r0, [r7, #12]
 8001854:	60b9      	str	r1, [r7, #8]
 8001856:	607a      	str	r2, [r7, #4]
	HAL_UART_Transmit(&huart1, (uint8_t*) data, len, HAL_MAX_DELAY); // Wysyłanie danych przez UART
 8001858:	687b      	ldr	r3, [r7, #4]
 800185a:	b29a      	uxth	r2, r3
 800185c:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 8001860:	68b9      	ldr	r1, [r7, #8]
 8001862:	4804      	ldr	r0, [pc, #16]	@ (8001874 <_write+0x28>)
 8001864:	f007 fd1a 	bl	800929c <HAL_UART_Transmit>
	return len;
 8001868:	687b      	ldr	r3, [r7, #4]
}
 800186a:	4618      	mov	r0, r3
 800186c:	3710      	adds	r7, #16
 800186e:	46bd      	mov	sp, r7
 8001870:	bd80      	pop	{r7, pc}
 8001872:	bf00      	nop
 8001874:	20025e2c 	.word	0x20025e2c

08001878 <gyro_init>:

void gyro_init(void) {
 8001878:	b580      	push	{r7, lr}
 800187a:	b082      	sub	sp, #8
 800187c:	af00      	add	r7, sp, #0
	uint8_t configData[2] = { CTRL_REG1, 0x0F }; // PD=1, Zen=1, Yen=1, Xen=1;
 800187e:	f44f 6372 	mov.w	r3, #3872	@ 0xf20
 8001882:	80bb      	strh	r3, [r7, #4]

	while (!spi5_acquire())
 8001884:	bf00      	nop
 8001886:	f001 fb2b 	bl	8002ee0 <spi5_acquire>
 800188a:	4603      	mov	r3, r0
 800188c:	f083 0301 	eor.w	r3, r3, #1
 8001890:	b2db      	uxtb	r3, r3
 8001892:	2b00      	cmp	r3, #0
 8001894:	d116      	bne.n	80018c4 <gyro_init+0x4c>
		return;

	GYRO_CS_LOW();
 8001896:	2200      	movs	r2, #0
 8001898:	2102      	movs	r1, #2
 800189a:	480c      	ldr	r0, [pc, #48]	@ (80018cc <gyro_init+0x54>)
 800189c:	f002 ff78 	bl	8004790 <HAL_GPIO_WritePin>
	HAL_SPI_Transmit(&hspi5, configData, 2, 100);
 80018a0:	1d39      	adds	r1, r7, #4
 80018a2:	2364      	movs	r3, #100	@ 0x64
 80018a4:	2202      	movs	r2, #2
 80018a6:	480a      	ldr	r0, [pc, #40]	@ (80018d0 <gyro_init+0x58>)
 80018a8:	f006 f9a1 	bl	8007bee <HAL_SPI_Transmit>
	GYRO_CS_HIGH();
 80018ac:	2201      	movs	r2, #1
 80018ae:	2102      	movs	r1, #2
 80018b0:	4806      	ldr	r0, [pc, #24]	@ (80018cc <gyro_init+0x54>)
 80018b2:	f002 ff6d 	bl	8004790 <HAL_GPIO_WritePin>

	spi5_release();
 80018b6:	f001 fb27 	bl	8002f08 <spi5_release>

	gyro_set_sensitivity();
 80018ba:	f000 f80b 	bl	80018d4 <gyro_set_sensitivity>

	// Weryfikacja połączenia
	gyro_ReadWhoAmI();
 80018be:	f000 f8bb 	bl	8001a38 <gyro_ReadWhoAmI>
 80018c2:	e000      	b.n	80018c6 <gyro_init+0x4e>
		return;
 80018c4:	bf00      	nop
}
 80018c6:	3708      	adds	r7, #8
 80018c8:	46bd      	mov	sp, r7
 80018ca:	bd80      	pop	{r7, pc}
 80018cc:	40020800 	.word	0x40020800
 80018d0:	20025c98 	.word	0x20025c98

080018d4 <gyro_set_sensitivity>:

void gyro_set_sensitivity() {
 80018d4:	b580      	push	{r7, lr}
 80018d6:	b082      	sub	sp, #8
 80018d8:	af00      	add	r7, sp, #0
	uint8_t configData[2] = { CTRL_REG4, SENSITIVITY };
 80018da:	f243 0323 	movw	r3, #12323	@ 0x3023
 80018de:	80bb      	strh	r3, [r7, #4]

	while (!spi5_acquire())
 80018e0:	bf00      	nop
 80018e2:	f001 fafd 	bl	8002ee0 <spi5_acquire>
 80018e6:	4603      	mov	r3, r0
 80018e8:	f083 0301 	eor.w	r3, r3, #1
 80018ec:	b2db      	uxtb	r3, r3
 80018ee:	2b00      	cmp	r3, #0
 80018f0:	d112      	bne.n	8001918 <gyro_set_sensitivity+0x44>
		return;

	GYRO_CS_LOW();
 80018f2:	2200      	movs	r2, #0
 80018f4:	2102      	movs	r1, #2
 80018f6:	480a      	ldr	r0, [pc, #40]	@ (8001920 <gyro_set_sensitivity+0x4c>)
 80018f8:	f002 ff4a 	bl	8004790 <HAL_GPIO_WritePin>
	HAL_SPI_Transmit(&hspi5, configData, 2, 100);
 80018fc:	1d39      	adds	r1, r7, #4
 80018fe:	2364      	movs	r3, #100	@ 0x64
 8001900:	2202      	movs	r2, #2
 8001902:	4808      	ldr	r0, [pc, #32]	@ (8001924 <gyro_set_sensitivity+0x50>)
 8001904:	f006 f973 	bl	8007bee <HAL_SPI_Transmit>
	GYRO_CS_HIGH();
 8001908:	2201      	movs	r2, #1
 800190a:	2102      	movs	r1, #2
 800190c:	4804      	ldr	r0, [pc, #16]	@ (8001920 <gyro_set_sensitivity+0x4c>)
 800190e:	f002 ff3f 	bl	8004790 <HAL_GPIO_WritePin>

	spi5_release();
 8001912:	f001 faf9 	bl	8002f08 <spi5_release>
 8001916:	e000      	b.n	800191a <gyro_set_sensitivity+0x46>
		return;
 8001918:	bf00      	nop
}
 800191a:	3708      	adds	r7, #8
 800191c:	46bd      	mov	sp, r7
 800191e:	bd80      	pop	{r7, pc}
 8001920:	40020800 	.word	0x40020800
 8001924:	20025c98 	.word	0x20025c98

08001928 <gyro_get_filtered_data>:

void gyro_get_filtered_data(Gyro_Int_Data *gyro_data) {
 8001928:	b580      	push	{r7, lr}
 800192a:	b088      	sub	sp, #32
 800192c:	af00      	add	r7, sp, #0
 800192e:	6078      	str	r0, [r7, #4]

	int32_t x_sum = 0, y_sum = 0, z_sum = 0;
 8001930:	2300      	movs	r3, #0
 8001932:	61fb      	str	r3, [r7, #28]
 8001934:	2300      	movs	r3, #0
 8001936:	61bb      	str	r3, [r7, #24]
 8001938:	2300      	movs	r3, #0
 800193a:	617b      	str	r3, [r7, #20]
	Gyro_Int_Data raw_data;
	data_index = 0;
 800193c:	4b39      	ldr	r3, [pc, #228]	@ (8001a24 <gyro_get_filtered_data+0xfc>)
 800193e:	2200      	movs	r2, #0
 8001940:	701a      	strb	r2, [r3, #0]

	gyro_get_data(&raw_data);
 8001942:	f107 030c 	add.w	r3, r7, #12
 8001946:	4618      	mov	r0, r3
 8001948:	f000 f8bc 	bl	8001ac4 <gyro_get_data>

	// Aktualizacja bufora
	x_data[data_index] = raw_data.x;
 800194c:	4b35      	ldr	r3, [pc, #212]	@ (8001a24 <gyro_get_filtered_data+0xfc>)
 800194e:	781b      	ldrb	r3, [r3, #0]
 8001950:	461a      	mov	r2, r3
 8001952:	f9b7 100c 	ldrsh.w	r1, [r7, #12]
 8001956:	4b34      	ldr	r3, [pc, #208]	@ (8001a28 <gyro_get_filtered_data+0x100>)
 8001958:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
	y_data[data_index] = raw_data.y;
 800195c:	4b31      	ldr	r3, [pc, #196]	@ (8001a24 <gyro_get_filtered_data+0xfc>)
 800195e:	781b      	ldrb	r3, [r3, #0]
 8001960:	461a      	mov	r2, r3
 8001962:	f9b7 100e 	ldrsh.w	r1, [r7, #14]
 8001966:	4b31      	ldr	r3, [pc, #196]	@ (8001a2c <gyro_get_filtered_data+0x104>)
 8001968:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
	z_data[data_index] = raw_data.z;
 800196c:	4b2d      	ldr	r3, [pc, #180]	@ (8001a24 <gyro_get_filtered_data+0xfc>)
 800196e:	781b      	ldrb	r3, [r3, #0]
 8001970:	461a      	mov	r2, r3
 8001972:	f9b7 1010 	ldrsh.w	r1, [r7, #16]
 8001976:	4b2e      	ldr	r3, [pc, #184]	@ (8001a30 <gyro_get_filtered_data+0x108>)
 8001978:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]

	//Średnia
	for (uint8_t i = 0; i < MOVING_AVERAGE_WINDOW; i++) {
 800197c:	2300      	movs	r3, #0
 800197e:	74fb      	strb	r3, [r7, #19]
 8001980:	e01a      	b.n	80019b8 <gyro_get_filtered_data+0x90>
		x_sum += x_data[i];
 8001982:	7cfb      	ldrb	r3, [r7, #19]
 8001984:	4a28      	ldr	r2, [pc, #160]	@ (8001a28 <gyro_get_filtered_data+0x100>)
 8001986:	f932 3013 	ldrsh.w	r3, [r2, r3, lsl #1]
 800198a:	461a      	mov	r2, r3
 800198c:	69fb      	ldr	r3, [r7, #28]
 800198e:	4413      	add	r3, r2
 8001990:	61fb      	str	r3, [r7, #28]
		y_sum += y_data[i];
 8001992:	7cfb      	ldrb	r3, [r7, #19]
 8001994:	4a25      	ldr	r2, [pc, #148]	@ (8001a2c <gyro_get_filtered_data+0x104>)
 8001996:	f932 3013 	ldrsh.w	r3, [r2, r3, lsl #1]
 800199a:	461a      	mov	r2, r3
 800199c:	69bb      	ldr	r3, [r7, #24]
 800199e:	4413      	add	r3, r2
 80019a0:	61bb      	str	r3, [r7, #24]
		z_sum += z_data[i];
 80019a2:	7cfb      	ldrb	r3, [r7, #19]
 80019a4:	4a22      	ldr	r2, [pc, #136]	@ (8001a30 <gyro_get_filtered_data+0x108>)
 80019a6:	f932 3013 	ldrsh.w	r3, [r2, r3, lsl #1]
 80019aa:	461a      	mov	r2, r3
 80019ac:	697b      	ldr	r3, [r7, #20]
 80019ae:	4413      	add	r3, r2
 80019b0:	617b      	str	r3, [r7, #20]
	for (uint8_t i = 0; i < MOVING_AVERAGE_WINDOW; i++) {
 80019b2:	7cfb      	ldrb	r3, [r7, #19]
 80019b4:	3301      	adds	r3, #1
 80019b6:	74fb      	strb	r3, [r7, #19]
 80019b8:	7cfb      	ldrb	r3, [r7, #19]
 80019ba:	2b04      	cmp	r3, #4
 80019bc:	d9e1      	bls.n	8001982 <gyro_get_filtered_data+0x5a>
	}

	gyro_data->x = x_sum / MOVING_AVERAGE_WINDOW;
 80019be:	69fb      	ldr	r3, [r7, #28]
 80019c0:	4a1c      	ldr	r2, [pc, #112]	@ (8001a34 <gyro_get_filtered_data+0x10c>)
 80019c2:	fb82 1203 	smull	r1, r2, r2, r3
 80019c6:	1052      	asrs	r2, r2, #1
 80019c8:	17db      	asrs	r3, r3, #31
 80019ca:	1ad3      	subs	r3, r2, r3
 80019cc:	b21a      	sxth	r2, r3
 80019ce:	687b      	ldr	r3, [r7, #4]
 80019d0:	801a      	strh	r2, [r3, #0]
	gyro_data->y = y_sum / MOVING_AVERAGE_WINDOW;
 80019d2:	69bb      	ldr	r3, [r7, #24]
 80019d4:	4a17      	ldr	r2, [pc, #92]	@ (8001a34 <gyro_get_filtered_data+0x10c>)
 80019d6:	fb82 1203 	smull	r1, r2, r2, r3
 80019da:	1052      	asrs	r2, r2, #1
 80019dc:	17db      	asrs	r3, r3, #31
 80019de:	1ad3      	subs	r3, r2, r3
 80019e0:	b21a      	sxth	r2, r3
 80019e2:	687b      	ldr	r3, [r7, #4]
 80019e4:	805a      	strh	r2, [r3, #2]
	gyro_data->z = z_sum / MOVING_AVERAGE_WINDOW;
 80019e6:	697b      	ldr	r3, [r7, #20]
 80019e8:	4a12      	ldr	r2, [pc, #72]	@ (8001a34 <gyro_get_filtered_data+0x10c>)
 80019ea:	fb82 1203 	smull	r1, r2, r2, r3
 80019ee:	1052      	asrs	r2, r2, #1
 80019f0:	17db      	asrs	r3, r3, #31
 80019f2:	1ad3      	subs	r3, r2, r3
 80019f4:	b21a      	sxth	r2, r3
 80019f6:	687b      	ldr	r3, [r7, #4]
 80019f8:	809a      	strh	r2, [r3, #4]

	// Aktualizuj indeks
	data_index = (data_index + 1) % MOVING_AVERAGE_WINDOW;
 80019fa:	4b0a      	ldr	r3, [pc, #40]	@ (8001a24 <gyro_get_filtered_data+0xfc>)
 80019fc:	781b      	ldrb	r3, [r3, #0]
 80019fe:	1c5a      	adds	r2, r3, #1
 8001a00:	4b0c      	ldr	r3, [pc, #48]	@ (8001a34 <gyro_get_filtered_data+0x10c>)
 8001a02:	fb83 1302 	smull	r1, r3, r3, r2
 8001a06:	1059      	asrs	r1, r3, #1
 8001a08:	17d3      	asrs	r3, r2, #31
 8001a0a:	1ac9      	subs	r1, r1, r3
 8001a0c:	460b      	mov	r3, r1
 8001a0e:	009b      	lsls	r3, r3, #2
 8001a10:	440b      	add	r3, r1
 8001a12:	1ad1      	subs	r1, r2, r3
 8001a14:	b2ca      	uxtb	r2, r1
 8001a16:	4b03      	ldr	r3, [pc, #12]	@ (8001a24 <gyro_get_filtered_data+0xfc>)
 8001a18:	701a      	strb	r2, [r3, #0]
}
 8001a1a:	bf00      	nop
 8001a1c:	3720      	adds	r7, #32
 8001a1e:	46bd      	mov	sp, r7
 8001a20:	bd80      	pop	{r7, pc}
 8001a22:	bf00      	nop
 8001a24:	2000029e 	.word	0x2000029e
 8001a28:	2000027c 	.word	0x2000027c
 8001a2c:	20000288 	.word	0x20000288
 8001a30:	20000294 	.word	0x20000294
 8001a34:	66666667 	.word	0x66666667

08001a38 <gyro_ReadWhoAmI>:

void gyro_ReadWhoAmI(void) {
 8001a38:	b580      	push	{r7, lr}
 8001a3a:	b082      	sub	sp, #8
 8001a3c:	af00      	add	r7, sp, #0
	uint8_t tx = WHO_AM_I | 0x80;
 8001a3e:	238f      	movs	r3, #143	@ 0x8f
 8001a40:	71fb      	strb	r3, [r7, #7]
	uint8_t rx = 0;
 8001a42:	2300      	movs	r3, #0
 8001a44:	71bb      	strb	r3, [r7, #6]

	if (!spi5_acquire())
 8001a46:	f001 fa4b 	bl	8002ee0 <spi5_acquire>
 8001a4a:	4603      	mov	r3, r0
 8001a4c:	f083 0301 	eor.w	r3, r3, #1
 8001a50:	b2db      	uxtb	r3, r3
 8001a52:	2b00      	cmp	r3, #0
 8001a54:	d129      	bne.n	8001aaa <gyro_ReadWhoAmI+0x72>
		return;

	GYRO_CS_LOW();
 8001a56:	2200      	movs	r2, #0
 8001a58:	2102      	movs	r1, #2
 8001a5a:	4816      	ldr	r0, [pc, #88]	@ (8001ab4 <gyro_ReadWhoAmI+0x7c>)
 8001a5c:	f002 fe98 	bl	8004790 <HAL_GPIO_WritePin>
	HAL_SPI_Transmit(&hspi5, &tx, 1, 10);
 8001a60:	1df9      	adds	r1, r7, #7
 8001a62:	230a      	movs	r3, #10
 8001a64:	2201      	movs	r2, #1
 8001a66:	4814      	ldr	r0, [pc, #80]	@ (8001ab8 <gyro_ReadWhoAmI+0x80>)
 8001a68:	f006 f8c1 	bl	8007bee <HAL_SPI_Transmit>
	HAL_SPI_Receive(&hspi5, &rx, 1, 10);
 8001a6c:	1db9      	adds	r1, r7, #6
 8001a6e:	230a      	movs	r3, #10
 8001a70:	2201      	movs	r2, #1
 8001a72:	4811      	ldr	r0, [pc, #68]	@ (8001ab8 <gyro_ReadWhoAmI+0x80>)
 8001a74:	f006 f9ff 	bl	8007e76 <HAL_SPI_Receive>
	GYRO_CS_HIGH();
 8001a78:	2201      	movs	r2, #1
 8001a7a:	2102      	movs	r1, #2
 8001a7c:	480d      	ldr	r0, [pc, #52]	@ (8001ab4 <gyro_ReadWhoAmI+0x7c>)
 8001a7e:	f002 fe87 	bl	8004790 <HAL_GPIO_WritePin>

	spi5_release();
 8001a82:	f001 fa41 	bl	8002f08 <spi5_release>

	if ((rx != 0xD3) || (rx != 0xD3)) {
 8001a86:	79bb      	ldrb	r3, [r7, #6]
 8001a88:	2bd3      	cmp	r3, #211	@ 0xd3
 8001a8a:	d102      	bne.n	8001a92 <gyro_ReadWhoAmI+0x5a>
 8001a8c:	79bb      	ldrb	r3, [r7, #6]
 8001a8e:	2bd3      	cmp	r3, #211	@ 0xd3
 8001a90:	d005      	beq.n	8001a9e <gyro_ReadWhoAmI+0x66>
		printf("WHO_AM_I error: 0x%02X (expected 0xD3 or 0xD4)\r\n", rx);
 8001a92:	79bb      	ldrb	r3, [r7, #6]
 8001a94:	4619      	mov	r1, r3
 8001a96:	4809      	ldr	r0, [pc, #36]	@ (8001abc <gyro_ReadWhoAmI+0x84>)
 8001a98:	f00a fb40 	bl	800c11c <iprintf>
 8001a9c:	e006      	b.n	8001aac <gyro_ReadWhoAmI+0x74>
	}
	else {
		printf("WHO_AM_I OK: 0x%02X\r\n", rx);
 8001a9e:	79bb      	ldrb	r3, [r7, #6]
 8001aa0:	4619      	mov	r1, r3
 8001aa2:	4807      	ldr	r0, [pc, #28]	@ (8001ac0 <gyro_ReadWhoAmI+0x88>)
 8001aa4:	f00a fb3a 	bl	800c11c <iprintf>
 8001aa8:	e000      	b.n	8001aac <gyro_ReadWhoAmI+0x74>
		return;
 8001aaa:	bf00      	nop
	}
}
 8001aac:	3708      	adds	r7, #8
 8001aae:	46bd      	mov	sp, r7
 8001ab0:	bd80      	pop	{r7, pc}
 8001ab2:	bf00      	nop
 8001ab4:	40020800 	.word	0x40020800
 8001ab8:	20025c98 	.word	0x20025c98
 8001abc:	0800df80 	.word	0x0800df80
 8001ac0:	0800dfb4 	.word	0x0800dfb4

08001ac4 <gyro_get_data>:

void gyro_get_data(Gyro_Int_Data *gyro_data) {
 8001ac4:	b580      	push	{r7, lr}
 8001ac6:	b084      	sub	sp, #16
 8001ac8:	af00      	add	r7, sp, #0
 8001aca:	6078      	str	r0, [r7, #4]

	uint8_t tx = OUT_X_L | 0x80 | 0x40;
 8001acc:	23e8      	movs	r3, #232	@ 0xe8
 8001ace:	73fb      	strb	r3, [r7, #15]
	uint8_t rx[6];
	if (gyro_is_data_ready()==false) {
 8001ad0:	f000 f856 	bl	8001b80 <gyro_is_data_ready>
 8001ad4:	4603      	mov	r3, r0
 8001ad6:	f083 0301 	eor.w	r3, r3, #1
 8001ada:	b2db      	uxtb	r3, r3
 8001adc:	2b00      	cmp	r3, #0
 8001ade:	d003      	beq.n	8001ae8 <gyro_get_data+0x24>
		printf("Data not ready\r\n");
 8001ae0:	4824      	ldr	r0, [pc, #144]	@ (8001b74 <gyro_get_data+0xb0>)
 8001ae2:	f00a fb83 	bl	800c1ec <puts>
		return;
 8001ae6:	e041      	b.n	8001b6c <gyro_get_data+0xa8>
	}

	if (!spi5_acquire())
 8001ae8:	f001 f9fa 	bl	8002ee0 <spi5_acquire>
 8001aec:	4603      	mov	r3, r0
 8001aee:	f083 0301 	eor.w	r3, r3, #1
 8001af2:	b2db      	uxtb	r3, r3
 8001af4:	2b00      	cmp	r3, #0
 8001af6:	d138      	bne.n	8001b6a <gyro_get_data+0xa6>
		return;

	GYRO_CS_LOW();
 8001af8:	2200      	movs	r2, #0
 8001afa:	2102      	movs	r1, #2
 8001afc:	481e      	ldr	r0, [pc, #120]	@ (8001b78 <gyro_get_data+0xb4>)
 8001afe:	f002 fe47 	bl	8004790 <HAL_GPIO_WritePin>
	HAL_SPI_Transmit(&hspi5, &tx, 1, 10);
 8001b02:	f107 010f 	add.w	r1, r7, #15
 8001b06:	230a      	movs	r3, #10
 8001b08:	2201      	movs	r2, #1
 8001b0a:	481c      	ldr	r0, [pc, #112]	@ (8001b7c <gyro_get_data+0xb8>)
 8001b0c:	f006 f86f 	bl	8007bee <HAL_SPI_Transmit>
	HAL_SPI_Receive(&hspi5, rx, 6, 10);
 8001b10:	f107 0108 	add.w	r1, r7, #8
 8001b14:	230a      	movs	r3, #10
 8001b16:	2206      	movs	r2, #6
 8001b18:	4818      	ldr	r0, [pc, #96]	@ (8001b7c <gyro_get_data+0xb8>)
 8001b1a:	f006 f9ac 	bl	8007e76 <HAL_SPI_Receive>
	GYRO_CS_HIGH();
 8001b1e:	2201      	movs	r2, #1
 8001b20:	2102      	movs	r1, #2
 8001b22:	4815      	ldr	r0, [pc, #84]	@ (8001b78 <gyro_get_data+0xb4>)
 8001b24:	f002 fe34 	bl	8004790 <HAL_GPIO_WritePin>

	spi5_release();
 8001b28:	f001 f9ee 	bl	8002f08 <spi5_release>

	gyro_data->x = (int16_t) (rx[1] << 8 | rx[0]);
 8001b2c:	7a7b      	ldrb	r3, [r7, #9]
 8001b2e:	b21b      	sxth	r3, r3
 8001b30:	021b      	lsls	r3, r3, #8
 8001b32:	b21a      	sxth	r2, r3
 8001b34:	7a3b      	ldrb	r3, [r7, #8]
 8001b36:	b21b      	sxth	r3, r3
 8001b38:	4313      	orrs	r3, r2
 8001b3a:	b21a      	sxth	r2, r3
 8001b3c:	687b      	ldr	r3, [r7, #4]
 8001b3e:	801a      	strh	r2, [r3, #0]
	gyro_data->y = (int16_t) (rx[3] << 8 | rx[2]);
 8001b40:	7afb      	ldrb	r3, [r7, #11]
 8001b42:	b21b      	sxth	r3, r3
 8001b44:	021b      	lsls	r3, r3, #8
 8001b46:	b21a      	sxth	r2, r3
 8001b48:	7abb      	ldrb	r3, [r7, #10]
 8001b4a:	b21b      	sxth	r3, r3
 8001b4c:	4313      	orrs	r3, r2
 8001b4e:	b21a      	sxth	r2, r3
 8001b50:	687b      	ldr	r3, [r7, #4]
 8001b52:	805a      	strh	r2, [r3, #2]
	gyro_data->z = (int16_t) (rx[5] << 8 | rx[4]);
 8001b54:	7b7b      	ldrb	r3, [r7, #13]
 8001b56:	b21b      	sxth	r3, r3
 8001b58:	021b      	lsls	r3, r3, #8
 8001b5a:	b21a      	sxth	r2, r3
 8001b5c:	7b3b      	ldrb	r3, [r7, #12]
 8001b5e:	b21b      	sxth	r3, r3
 8001b60:	4313      	orrs	r3, r2
 8001b62:	b21a      	sxth	r2, r3
 8001b64:	687b      	ldr	r3, [r7, #4]
 8001b66:	809a      	strh	r2, [r3, #4]
 8001b68:	e000      	b.n	8001b6c <gyro_get_data+0xa8>
		return;
 8001b6a:	bf00      	nop

}
 8001b6c:	3710      	adds	r7, #16
 8001b6e:	46bd      	mov	sp, r7
 8001b70:	bd80      	pop	{r7, pc}
 8001b72:	bf00      	nop
 8001b74:	0800dfcc 	.word	0x0800dfcc
 8001b78:	40020800 	.word	0x40020800
 8001b7c:	20025c98 	.word	0x20025c98

08001b80 <gyro_is_data_ready>:

bool gyro_is_data_ready(void) {
 8001b80:	b580      	push	{r7, lr}
 8001b82:	b082      	sub	sp, #8
 8001b84:	af00      	add	r7, sp, #0
	uint8_t tx = STATUS_REG | 0x80;
 8001b86:	23a7      	movs	r3, #167	@ 0xa7
 8001b88:	71fb      	strb	r3, [r7, #7]
	uint8_t rx = 0;
 8001b8a:	2300      	movs	r3, #0
 8001b8c:	71bb      	strb	r3, [r7, #6]

	if (!spi5_acquire())
 8001b8e:	f001 f9a7 	bl	8002ee0 <spi5_acquire>
 8001b92:	4603      	mov	r3, r0
 8001b94:	f083 0301 	eor.w	r3, r3, #1
 8001b98:	b2db      	uxtb	r3, r3
 8001b9a:	2b00      	cmp	r3, #0
 8001b9c:	d001      	beq.n	8001ba2 <gyro_is_data_ready+0x22>
		return false;
 8001b9e:	2300      	movs	r3, #0
 8001ba0:	e01f      	b.n	8001be2 <gyro_is_data_ready+0x62>

	GYRO_CS_LOW();
 8001ba2:	2200      	movs	r2, #0
 8001ba4:	2102      	movs	r1, #2
 8001ba6:	4811      	ldr	r0, [pc, #68]	@ (8001bec <gyro_is_data_ready+0x6c>)
 8001ba8:	f002 fdf2 	bl	8004790 <HAL_GPIO_WritePin>
	HAL_SPI_Transmit(&hspi5, &tx, 1, 10);
 8001bac:	1df9      	adds	r1, r7, #7
 8001bae:	230a      	movs	r3, #10
 8001bb0:	2201      	movs	r2, #1
 8001bb2:	480f      	ldr	r0, [pc, #60]	@ (8001bf0 <gyro_is_data_ready+0x70>)
 8001bb4:	f006 f81b 	bl	8007bee <HAL_SPI_Transmit>
	HAL_SPI_Receive(&hspi5, &rx, 1, 10);
 8001bb8:	1db9      	adds	r1, r7, #6
 8001bba:	230a      	movs	r3, #10
 8001bbc:	2201      	movs	r2, #1
 8001bbe:	480c      	ldr	r0, [pc, #48]	@ (8001bf0 <gyro_is_data_ready+0x70>)
 8001bc0:	f006 f959 	bl	8007e76 <HAL_SPI_Receive>
	GYRO_CS_HIGH();
 8001bc4:	2201      	movs	r2, #1
 8001bc6:	2102      	movs	r1, #2
 8001bc8:	4808      	ldr	r0, [pc, #32]	@ (8001bec <gyro_is_data_ready+0x6c>)
 8001bca:	f002 fde1 	bl	8004790 <HAL_GPIO_WritePin>

	spi5_release();
 8001bce:	f001 f99b 	bl	8002f08 <spi5_release>

	return (rx & 0x08);
 8001bd2:	79bb      	ldrb	r3, [r7, #6]
 8001bd4:	f003 0308 	and.w	r3, r3, #8
 8001bd8:	2b00      	cmp	r3, #0
 8001bda:	bf14      	ite	ne
 8001bdc:	2301      	movne	r3, #1
 8001bde:	2300      	moveq	r3, #0
 8001be0:	b2db      	uxtb	r3, r3
}
 8001be2:	4618      	mov	r0, r3
 8001be4:	3708      	adds	r7, #8
 8001be6:	46bd      	mov	sp, r7
 8001be8:	bd80      	pop	{r7, pc}
 8001bea:	bf00      	nop
 8001bec:	40020800 	.word	0x40020800
 8001bf0:	20025c98 	.word	0x20025c98

08001bf4 <gyro_calculate_offset>:

void gyro_calculate_offset(Gyro_Int_Data *offset) {
 8001bf4:	b580      	push	{r7, lr}
 8001bf6:	b088      	sub	sp, #32
 8001bf8:	af00      	add	r7, sp, #0
 8001bfa:	6078      	str	r0, [r7, #4]
	int32_t sum_x = 0, sum_y = 0, sum_z = 0;
 8001bfc:	2300      	movs	r3, #0
 8001bfe:	61fb      	str	r3, [r7, #28]
 8001c00:	2300      	movs	r3, #0
 8001c02:	61bb      	str	r3, [r7, #24]
 8001c04:	2300      	movs	r3, #0
 8001c06:	617b      	str	r3, [r7, #20]
	const uint16_t samples = 500;
 8001c08:	f44f 73fa 	mov.w	r3, #500	@ 0x1f4
 8001c0c:	823b      	strh	r3, [r7, #16]
	Gyro_Int_Data raw_data;

	printf("Starting calibration...\r\n");
 8001c0e:	482e      	ldr	r0, [pc, #184]	@ (8001cc8 <gyro_calculate_offset+0xd4>)
 8001c10:	f00a faec 	bl	800c1ec <puts>

	for (uint16_t i = 0; i < samples; i++) {
 8001c14:	2300      	movs	r3, #0
 8001c16:	827b      	strh	r3, [r7, #18]
 8001c18:	e02b      	b.n	8001c72 <gyro_calculate_offset+0x7e>
		gyro_get_data(&raw_data);
 8001c1a:	f107 0308 	add.w	r3, r7, #8
 8001c1e:	4618      	mov	r0, r3
 8001c20:	f7ff ff50 	bl	8001ac4 <gyro_get_data>
		sum_x += raw_data.x;
 8001c24:	f9b7 3008 	ldrsh.w	r3, [r7, #8]
 8001c28:	461a      	mov	r2, r3
 8001c2a:	69fb      	ldr	r3, [r7, #28]
 8001c2c:	4413      	add	r3, r2
 8001c2e:	61fb      	str	r3, [r7, #28]
		sum_y += raw_data.y;
 8001c30:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 8001c34:	461a      	mov	r2, r3
 8001c36:	69bb      	ldr	r3, [r7, #24]
 8001c38:	4413      	add	r3, r2
 8001c3a:	61bb      	str	r3, [r7, #24]
		sum_z += raw_data.z;
 8001c3c:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8001c40:	461a      	mov	r2, r3
 8001c42:	697b      	ldr	r3, [r7, #20]
 8001c44:	4413      	add	r3, r2
 8001c46:	617b      	str	r3, [r7, #20]
		HAL_Delay(10);
 8001c48:	200a      	movs	r0, #10
 8001c4a:	f001 fd77 	bl	800373c <HAL_Delay>

		if (i % 100 == 0)
 8001c4e:	8a7b      	ldrh	r3, [r7, #18]
 8001c50:	4a1e      	ldr	r2, [pc, #120]	@ (8001ccc <gyro_calculate_offset+0xd8>)
 8001c52:	fba2 1203 	umull	r1, r2, r2, r3
 8001c56:	0952      	lsrs	r2, r2, #5
 8001c58:	2164      	movs	r1, #100	@ 0x64
 8001c5a:	fb01 f202 	mul.w	r2, r1, r2
 8001c5e:	1a9b      	subs	r3, r3, r2
 8001c60:	b29b      	uxth	r3, r3
 8001c62:	2b00      	cmp	r3, #0
 8001c64:	d102      	bne.n	8001c6c <gyro_calculate_offset+0x78>
			printf(".\r\n");
 8001c66:	481a      	ldr	r0, [pc, #104]	@ (8001cd0 <gyro_calculate_offset+0xdc>)
 8001c68:	f00a fac0 	bl	800c1ec <puts>
	for (uint16_t i = 0; i < samples; i++) {
 8001c6c:	8a7b      	ldrh	r3, [r7, #18]
 8001c6e:	3301      	adds	r3, #1
 8001c70:	827b      	strh	r3, [r7, #18]
 8001c72:	8a7a      	ldrh	r2, [r7, #18]
 8001c74:	8a3b      	ldrh	r3, [r7, #16]
 8001c76:	429a      	cmp	r2, r3
 8001c78:	d3cf      	bcc.n	8001c1a <gyro_calculate_offset+0x26>
	}

	offset->x = sum_x / samples;
 8001c7a:	8a3b      	ldrh	r3, [r7, #16]
 8001c7c:	69fa      	ldr	r2, [r7, #28]
 8001c7e:	fb92 f3f3 	sdiv	r3, r2, r3
 8001c82:	b21a      	sxth	r2, r3
 8001c84:	687b      	ldr	r3, [r7, #4]
 8001c86:	801a      	strh	r2, [r3, #0]
	offset->y = sum_y / samples;
 8001c88:	8a3b      	ldrh	r3, [r7, #16]
 8001c8a:	69ba      	ldr	r2, [r7, #24]
 8001c8c:	fb92 f3f3 	sdiv	r3, r2, r3
 8001c90:	b21a      	sxth	r2, r3
 8001c92:	687b      	ldr	r3, [r7, #4]
 8001c94:	805a      	strh	r2, [r3, #2]
	offset->z = sum_z / samples;
 8001c96:	8a3b      	ldrh	r3, [r7, #16]
 8001c98:	697a      	ldr	r2, [r7, #20]
 8001c9a:	fb92 f3f3 	sdiv	r3, r2, r3
 8001c9e:	b21a      	sxth	r2, r3
 8001ca0:	687b      	ldr	r3, [r7, #4]
 8001ca2:	809a      	strh	r2, [r3, #4]

	printf("\nCalibration complete. Offsets: X=%d, Y=%d, Z=%d\r\n", offset->x,
 8001ca4:	687b      	ldr	r3, [r7, #4]
 8001ca6:	f9b3 3000 	ldrsh.w	r3, [r3]
 8001caa:	4619      	mov	r1, r3
			offset->y, offset->z);
 8001cac:	687b      	ldr	r3, [r7, #4]
 8001cae:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
	printf("\nCalibration complete. Offsets: X=%d, Y=%d, Z=%d\r\n", offset->x,
 8001cb2:	461a      	mov	r2, r3
			offset->y, offset->z);
 8001cb4:	687b      	ldr	r3, [r7, #4]
 8001cb6:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
	printf("\nCalibration complete. Offsets: X=%d, Y=%d, Z=%d\r\n", offset->x,
 8001cba:	4806      	ldr	r0, [pc, #24]	@ (8001cd4 <gyro_calculate_offset+0xe0>)
 8001cbc:	f00a fa2e 	bl	800c11c <iprintf>
}
 8001cc0:	bf00      	nop
 8001cc2:	3720      	adds	r7, #32
 8001cc4:	46bd      	mov	sp, r7
 8001cc6:	bd80      	pop	{r7, pc}
 8001cc8:	0800dfdc 	.word	0x0800dfdc
 8001ccc:	51eb851f 	.word	0x51eb851f
 8001cd0:	0800dff8 	.word	0x0800dff8
 8001cd4:	0800dffc 	.word	0x0800dffc

08001cd8 <gyro_compensate_and_scale>:

void gyro_compensate_and_scale(Gyro_Int_Data *gyro_data, Gyro_Int_Data *offset, Gyro_Int_Data *gyro_calibrated_dat) {
 8001cd8:	b580      	push	{r7, lr}
 8001cda:	b086      	sub	sp, #24
 8001cdc:	af00      	add	r7, sp, #0
 8001cde:	60f8      	str	r0, [r7, #12]
 8001ce0:	60b9      	str	r1, [r7, #8]
 8001ce2:	607a      	str	r2, [r7, #4]

	// uwzględenienie kalibracji
	gyro_data->x -= offset->x;
 8001ce4:	68fb      	ldr	r3, [r7, #12]
 8001ce6:	f9b3 3000 	ldrsh.w	r3, [r3]
 8001cea:	b29a      	uxth	r2, r3
 8001cec:	68bb      	ldr	r3, [r7, #8]
 8001cee:	f9b3 3000 	ldrsh.w	r3, [r3]
 8001cf2:	b29b      	uxth	r3, r3
 8001cf4:	1ad3      	subs	r3, r2, r3
 8001cf6:	b29b      	uxth	r3, r3
 8001cf8:	b21a      	sxth	r2, r3
 8001cfa:	68fb      	ldr	r3, [r7, #12]
 8001cfc:	801a      	strh	r2, [r3, #0]
	gyro_data->y -= offset->y;
 8001cfe:	68fb      	ldr	r3, [r7, #12]
 8001d00:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8001d04:	b29a      	uxth	r2, r3
 8001d06:	68bb      	ldr	r3, [r7, #8]
 8001d08:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8001d0c:	b29b      	uxth	r3, r3
 8001d0e:	1ad3      	subs	r3, r2, r3
 8001d10:	b29b      	uxth	r3, r3
 8001d12:	b21a      	sxth	r2, r3
 8001d14:	68fb      	ldr	r3, [r7, #12]
 8001d16:	805a      	strh	r2, [r3, #2]
	gyro_data->z -= offset->z;
 8001d18:	68fb      	ldr	r3, [r7, #12]
 8001d1a:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 8001d1e:	b29a      	uxth	r2, r3
 8001d20:	68bb      	ldr	r3, [r7, #8]
 8001d22:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 8001d26:	b29b      	uxth	r3, r3
 8001d28:	1ad3      	subs	r3, r2, r3
 8001d2a:	b29b      	uxth	r3, r3
 8001d2c:	b21a      	sxth	r2, r3
 8001d2e:	68fb      	ldr	r3, [r7, #12]
 8001d30:	809a      	strh	r2, [r3, #4]

	float scale = 1.0f;
 8001d32:	f04f 537e 	mov.w	r3, #1065353216	@ 0x3f800000
 8001d36:	617b      	str	r3, [r7, #20]

	if (SENSITIVITY == 0x30)
		scale = 2000.0f / 32768.0f;
 8001d38:	4b24      	ldr	r3, [pc, #144]	@ (8001dcc <gyro_compensate_and_scale+0xf4>)
 8001d3a:	617b      	str	r3, [r7, #20]

	if (SENSITIVITY == 0x00)
		scale = 250.0f / 32768.0f;

	// Konwersja do dps (dla skali 2000dps)
	gyro_calibrated_dat->x = gyro_data->x * scale;
 8001d3c:	68fb      	ldr	r3, [r7, #12]
 8001d3e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8001d42:	ee07 3a90 	vmov	s15, r3
 8001d46:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8001d4a:	edd7 7a05 	vldr	s15, [r7, #20]
 8001d4e:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001d52:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8001d56:	ee17 3a90 	vmov	r3, s15
 8001d5a:	b21a      	sxth	r2, r3
 8001d5c:	687b      	ldr	r3, [r7, #4]
 8001d5e:	801a      	strh	r2, [r3, #0]
	gyro_calibrated_dat->y = gyro_data->y * scale;
 8001d60:	68fb      	ldr	r3, [r7, #12]
 8001d62:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8001d66:	ee07 3a90 	vmov	s15, r3
 8001d6a:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8001d6e:	edd7 7a05 	vldr	s15, [r7, #20]
 8001d72:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001d76:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8001d7a:	ee17 3a90 	vmov	r3, s15
 8001d7e:	b21a      	sxth	r2, r3
 8001d80:	687b      	ldr	r3, [r7, #4]
 8001d82:	805a      	strh	r2, [r3, #2]
	gyro_calibrated_dat->z = gyro_data->z * scale;
 8001d84:	68fb      	ldr	r3, [r7, #12]
 8001d86:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 8001d8a:	ee07 3a90 	vmov	s15, r3
 8001d8e:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8001d92:	edd7 7a05 	vldr	s15, [r7, #20]
 8001d96:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001d9a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8001d9e:	ee17 3a90 	vmov	r3, s15
 8001da2:	b21a      	sxth	r2, r3
 8001da4:	687b      	ldr	r3, [r7, #4]
 8001da6:	809a      	strh	r2, [r3, #4]

	printf("X: %d dps, Y: %d dps, Z: %d dps\r\n", gyro_calibrated_dat->x, gyro_calibrated_dat->y, gyro_calibrated_dat->z);
 8001da8:	687b      	ldr	r3, [r7, #4]
 8001daa:	f9b3 3000 	ldrsh.w	r3, [r3]
 8001dae:	4619      	mov	r1, r3
 8001db0:	687b      	ldr	r3, [r7, #4]
 8001db2:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8001db6:	461a      	mov	r2, r3
 8001db8:	687b      	ldr	r3, [r7, #4]
 8001dba:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 8001dbe:	4804      	ldr	r0, [pc, #16]	@ (8001dd0 <gyro_compensate_and_scale+0xf8>)
 8001dc0:	f00a f9ac 	bl	800c11c <iprintf>
}
 8001dc4:	bf00      	nop
 8001dc6:	3718      	adds	r7, #24
 8001dc8:	46bd      	mov	sp, r7
 8001dca:	bd80      	pop	{r7, pc}
 8001dcc:	3d7a0000 	.word	0x3d7a0000
 8001dd0:	0800e030 	.word	0x0800e030

08001dd4 <MX_I2C3_Init>:

I2C_HandleTypeDef hi2c3;

/* I2C3 init function */
void MX_I2C3_Init(void)
{
 8001dd4:	b580      	push	{r7, lr}
 8001dd6:	af00      	add	r7, sp, #0
  /* USER CODE END I2C3_Init 0 */

  /* USER CODE BEGIN I2C3_Init 1 */

  /* USER CODE END I2C3_Init 1 */
  hi2c3.Instance = I2C3;
 8001dd8:	4b1b      	ldr	r3, [pc, #108]	@ (8001e48 <MX_I2C3_Init+0x74>)
 8001dda:	4a1c      	ldr	r2, [pc, #112]	@ (8001e4c <MX_I2C3_Init+0x78>)
 8001ddc:	601a      	str	r2, [r3, #0]
  hi2c3.Init.ClockSpeed = 100000;
 8001dde:	4b1a      	ldr	r3, [pc, #104]	@ (8001e48 <MX_I2C3_Init+0x74>)
 8001de0:	4a1b      	ldr	r2, [pc, #108]	@ (8001e50 <MX_I2C3_Init+0x7c>)
 8001de2:	605a      	str	r2, [r3, #4]
  hi2c3.Init.DutyCycle = I2C_DUTYCYCLE_2;
 8001de4:	4b18      	ldr	r3, [pc, #96]	@ (8001e48 <MX_I2C3_Init+0x74>)
 8001de6:	2200      	movs	r2, #0
 8001de8:	609a      	str	r2, [r3, #8]
  hi2c3.Init.OwnAddress1 = 0;
 8001dea:	4b17      	ldr	r3, [pc, #92]	@ (8001e48 <MX_I2C3_Init+0x74>)
 8001dec:	2200      	movs	r2, #0
 8001dee:	60da      	str	r2, [r3, #12]
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8001df0:	4b15      	ldr	r3, [pc, #84]	@ (8001e48 <MX_I2C3_Init+0x74>)
 8001df2:	f44f 4280 	mov.w	r2, #16384	@ 0x4000
 8001df6:	611a      	str	r2, [r3, #16]
  hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8001df8:	4b13      	ldr	r3, [pc, #76]	@ (8001e48 <MX_I2C3_Init+0x74>)
 8001dfa:	2200      	movs	r2, #0
 8001dfc:	615a      	str	r2, [r3, #20]
  hi2c3.Init.OwnAddress2 = 0;
 8001dfe:	4b12      	ldr	r3, [pc, #72]	@ (8001e48 <MX_I2C3_Init+0x74>)
 8001e00:	2200      	movs	r2, #0
 8001e02:	619a      	str	r2, [r3, #24]
  hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8001e04:	4b10      	ldr	r3, [pc, #64]	@ (8001e48 <MX_I2C3_Init+0x74>)
 8001e06:	2200      	movs	r2, #0
 8001e08:	61da      	str	r2, [r3, #28]
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8001e0a:	4b0f      	ldr	r3, [pc, #60]	@ (8001e48 <MX_I2C3_Init+0x74>)
 8001e0c:	2200      	movs	r2, #0
 8001e0e:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8001e10:	480d      	ldr	r0, [pc, #52]	@ (8001e48 <MX_I2C3_Init+0x74>)
 8001e12:	f004 fa7d 	bl	8006310 <HAL_I2C_Init>
 8001e16:	4603      	mov	r3, r0
 8001e18:	2b00      	cmp	r3, #0
 8001e1a:	d001      	beq.n	8001e20 <MX_I2C3_Init+0x4c>
  {
    Error_Handler();
 8001e1c:	f001 f85a 	bl	8002ed4 <Error_Handler>
  }

  /** Configure Analogue filter
  */
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 8001e20:	2100      	movs	r1, #0
 8001e22:	4809      	ldr	r0, [pc, #36]	@ (8001e48 <MX_I2C3_Init+0x74>)
 8001e24:	f004 fbb8 	bl	8006598 <HAL_I2CEx_ConfigAnalogFilter>
 8001e28:	4603      	mov	r3, r0
 8001e2a:	2b00      	cmp	r3, #0
 8001e2c:	d001      	beq.n	8001e32 <MX_I2C3_Init+0x5e>
  {
    Error_Handler();
 8001e2e:	f001 f851 	bl	8002ed4 <Error_Handler>
  }

  /** Configure Digital filter
  */
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 8001e32:	2100      	movs	r1, #0
 8001e34:	4804      	ldr	r0, [pc, #16]	@ (8001e48 <MX_I2C3_Init+0x74>)
 8001e36:	f004 fbeb 	bl	8006610 <HAL_I2CEx_ConfigDigitalFilter>
 8001e3a:	4603      	mov	r3, r0
 8001e3c:	2b00      	cmp	r3, #0
 8001e3e:	d001      	beq.n	8001e44 <MX_I2C3_Init+0x70>
  {
    Error_Handler();
 8001e40:	f001 f848 	bl	8002ed4 <Error_Handler>
  }
  /* USER CODE BEGIN I2C3_Init 2 */

  /* USER CODE END I2C3_Init 2 */

}
 8001e44:	bf00      	nop
 8001e46:	bd80      	pop	{r7, pc}
 8001e48:	200002a0 	.word	0x200002a0
 8001e4c:	40005c00 	.word	0x40005c00
 8001e50:	000186a0 	.word	0x000186a0

08001e54 <HAL_I2C_MspInit>:

void HAL_I2C_MspInit(I2C_HandleTypeDef* i2cHandle)
{
 8001e54:	b580      	push	{r7, lr}
 8001e56:	b08a      	sub	sp, #40	@ 0x28
 8001e58:	af00      	add	r7, sp, #0
 8001e5a:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001e5c:	f107 0314 	add.w	r3, r7, #20
 8001e60:	2200      	movs	r2, #0
 8001e62:	601a      	str	r2, [r3, #0]
 8001e64:	605a      	str	r2, [r3, #4]
 8001e66:	609a      	str	r2, [r3, #8]
 8001e68:	60da      	str	r2, [r3, #12]
 8001e6a:	611a      	str	r2, [r3, #16]
  if(i2cHandle->Instance==I2C3)
 8001e6c:	687b      	ldr	r3, [r7, #4]
 8001e6e:	681b      	ldr	r3, [r3, #0]
 8001e70:	4a29      	ldr	r2, [pc, #164]	@ (8001f18 <HAL_I2C_MspInit+0xc4>)
 8001e72:	4293      	cmp	r3, r2
 8001e74:	d14b      	bne.n	8001f0e <HAL_I2C_MspInit+0xba>
  {
  /* USER CODE BEGIN I2C3_MspInit 0 */

  /* USER CODE END I2C3_MspInit 0 */

    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001e76:	2300      	movs	r3, #0
 8001e78:	613b      	str	r3, [r7, #16]
 8001e7a:	4b28      	ldr	r3, [pc, #160]	@ (8001f1c <HAL_I2C_MspInit+0xc8>)
 8001e7c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001e7e:	4a27      	ldr	r2, [pc, #156]	@ (8001f1c <HAL_I2C_MspInit+0xc8>)
 8001e80:	f043 0304 	orr.w	r3, r3, #4
 8001e84:	6313      	str	r3, [r2, #48]	@ 0x30
 8001e86:	4b25      	ldr	r3, [pc, #148]	@ (8001f1c <HAL_I2C_MspInit+0xc8>)
 8001e88:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001e8a:	f003 0304 	and.w	r3, r3, #4
 8001e8e:	613b      	str	r3, [r7, #16]
 8001e90:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001e92:	2300      	movs	r3, #0
 8001e94:	60fb      	str	r3, [r7, #12]
 8001e96:	4b21      	ldr	r3, [pc, #132]	@ (8001f1c <HAL_I2C_MspInit+0xc8>)
 8001e98:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001e9a:	4a20      	ldr	r2, [pc, #128]	@ (8001f1c <HAL_I2C_MspInit+0xc8>)
 8001e9c:	f043 0301 	orr.w	r3, r3, #1
 8001ea0:	6313      	str	r3, [r2, #48]	@ 0x30
 8001ea2:	4b1e      	ldr	r3, [pc, #120]	@ (8001f1c <HAL_I2C_MspInit+0xc8>)
 8001ea4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001ea6:	f003 0301 	and.w	r3, r3, #1
 8001eaa:	60fb      	str	r3, [r7, #12]
 8001eac:	68fb      	ldr	r3, [r7, #12]
    /**I2C3 GPIO Configuration
    PC9     ------> I2C3_SDA
    PA8     ------> I2C3_SCL
    */
    GPIO_InitStruct.Pin = I2C3_SDA_Pin;
 8001eae:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8001eb2:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001eb4:	2312      	movs	r3, #18
 8001eb6:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_PULLUP;
 8001eb8:	2301      	movs	r3, #1
 8001eba:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001ebc:	2300      	movs	r3, #0
 8001ebe:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001ec0:	2304      	movs	r3, #4
 8001ec2:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(I2C3_SDA_GPIO_Port, &GPIO_InitStruct);
 8001ec4:	f107 0314 	add.w	r3, r7, #20
 8001ec8:	4619      	mov	r1, r3
 8001eca:	4815      	ldr	r0, [pc, #84]	@ (8001f20 <HAL_I2C_MspInit+0xcc>)
 8001ecc:	f002 fab4 	bl	8004438 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = I2C3_SCL_Pin;
 8001ed0:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8001ed4:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001ed6:	2312      	movs	r3, #18
 8001ed8:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_PULLUP;
 8001eda:	2301      	movs	r3, #1
 8001edc:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001ede:	2300      	movs	r3, #0
 8001ee0:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001ee2:	2304      	movs	r3, #4
 8001ee4:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(I2C3_SCL_GPIO_Port, &GPIO_InitStruct);
 8001ee6:	f107 0314 	add.w	r3, r7, #20
 8001eea:	4619      	mov	r1, r3
 8001eec:	480d      	ldr	r0, [pc, #52]	@ (8001f24 <HAL_I2C_MspInit+0xd0>)
 8001eee:	f002 faa3 	bl	8004438 <HAL_GPIO_Init>

    /* I2C3 clock enable */
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001ef2:	2300      	movs	r3, #0
 8001ef4:	60bb      	str	r3, [r7, #8]
 8001ef6:	4b09      	ldr	r3, [pc, #36]	@ (8001f1c <HAL_I2C_MspInit+0xc8>)
 8001ef8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001efa:	4a08      	ldr	r2, [pc, #32]	@ (8001f1c <HAL_I2C_MspInit+0xc8>)
 8001efc:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 8001f00:	6413      	str	r3, [r2, #64]	@ 0x40
 8001f02:	4b06      	ldr	r3, [pc, #24]	@ (8001f1c <HAL_I2C_MspInit+0xc8>)
 8001f04:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001f06:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8001f0a:	60bb      	str	r3, [r7, #8]
 8001f0c:	68bb      	ldr	r3, [r7, #8]
  /* USER CODE BEGIN I2C3_MspInit 1 */

  /* USER CODE END I2C3_MspInit 1 */
  }
}
 8001f0e:	bf00      	nop
 8001f10:	3728      	adds	r7, #40	@ 0x28
 8001f12:	46bd      	mov	sp, r7
 8001f14:	bd80      	pop	{r7, pc}
 8001f16:	bf00      	nop
 8001f18:	40005c00 	.word	0x40005c00
 8001f1c:	40023800 	.word	0x40023800
 8001f20:	40020800 	.word	0x40020800
 8001f24:	40020000 	.word	0x40020000

08001f28 <lcd_cmd>:
		CMD(COLMOD), 0x05, // chosen 16-bit, R5, G6, B5
		CMD(MAC), 0x48, //in documentation this means BGR but it turned out to be RGB, also it set (0,0) to up left corner
		CMD(POS_GAMMA_COR), 0x1F, 0x1A, 0x18, 0x0A, 0x0F, 0x06, 0x45, 0x87, 0x32, 0x0A, 0x07, 0x02, 0x07, 0x05, 0x00,
		CMD(NEG_GAMMA_COR), 0x00, 0x25, 0x27, 0x05, 0x10, 0x09, 0x3A, 0x56, 0x4C, 0x05, 0x0D, 0x0C, 0x2E, 0x2F, 0x0F,
};
static void lcd_cmd(uint8_t cmd){
 8001f28:	b580      	push	{r7, lr}
 8001f2a:	b082      	sub	sp, #8
 8001f2c:	af00      	add	r7, sp, #0
 8001f2e:	4603      	mov	r3, r0
 8001f30:	71fb      	strb	r3, [r7, #7]

	if (!spi5_acquire()) return;  // SPI jest zajęte, zwróć
 8001f32:	f000 ffd5 	bl	8002ee0 <spi5_acquire>
 8001f36:	4603      	mov	r3, r0
 8001f38:	f083 0301 	eor.w	r3, r3, #1
 8001f3c:	b2db      	uxtb	r3, r3
 8001f3e:	2b00      	cmp	r3, #0
 8001f40:	d119      	bne.n	8001f76 <lcd_cmd+0x4e>

	HAL_GPIO_WritePin(WRX_DCX_GPIO_Port, WRX_DCX_Pin, GPIO_PIN_RESET); //teraz komendy
 8001f42:	2200      	movs	r2, #0
 8001f44:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8001f48:	480d      	ldr	r0, [pc, #52]	@ (8001f80 <lcd_cmd+0x58>)
 8001f4a:	f002 fc21 	bl	8004790 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(CSX_GPIO_Port, CSX_Pin, GPIO_PIN_RESET);
 8001f4e:	2200      	movs	r2, #0
 8001f50:	2104      	movs	r1, #4
 8001f52:	480c      	ldr	r0, [pc, #48]	@ (8001f84 <lcd_cmd+0x5c>)
 8001f54:	f002 fc1c 	bl	8004790 <HAL_GPIO_WritePin>
	HAL_SPI_Transmit(&hspi5, &cmd, 1, HAL_MAX_DELAY);
 8001f58:	1df9      	adds	r1, r7, #7
 8001f5a:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 8001f5e:	2201      	movs	r2, #1
 8001f60:	4809      	ldr	r0, [pc, #36]	@ (8001f88 <lcd_cmd+0x60>)
 8001f62:	f005 fe44 	bl	8007bee <HAL_SPI_Transmit>
	HAL_GPIO_WritePin(CSX_GPIO_Port, CSX_Pin, GPIO_PIN_SET);
 8001f66:	2201      	movs	r2, #1
 8001f68:	2104      	movs	r1, #4
 8001f6a:	4806      	ldr	r0, [pc, #24]	@ (8001f84 <lcd_cmd+0x5c>)
 8001f6c:	f002 fc10 	bl	8004790 <HAL_GPIO_WritePin>

	spi5_release();
 8001f70:	f000 ffca 	bl	8002f08 <spi5_release>
 8001f74:	e000      	b.n	8001f78 <lcd_cmd+0x50>
	if (!spi5_acquire()) return;  // SPI jest zajęte, zwróć
 8001f76:	bf00      	nop

}
 8001f78:	3708      	adds	r7, #8
 8001f7a:	46bd      	mov	sp, r7
 8001f7c:	bd80      	pop	{r7, pc}
 8001f7e:	bf00      	nop
 8001f80:	40020c00 	.word	0x40020c00
 8001f84:	40020800 	.word	0x40020800
 8001f88:	20025c98 	.word	0x20025c98

08001f8c <lcd_data>:
static void lcd_data(uint8_t data){
 8001f8c:	b580      	push	{r7, lr}
 8001f8e:	b082      	sub	sp, #8
 8001f90:	af00      	add	r7, sp, #0
 8001f92:	4603      	mov	r3, r0
 8001f94:	71fb      	strb	r3, [r7, #7]
	HAL_GPIO_WritePin(WRX_DCX_GPIO_Port, WRX_DCX_Pin, GPIO_PIN_SET); //teraz dane
 8001f96:	2201      	movs	r2, #1
 8001f98:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8001f9c:	480b      	ldr	r0, [pc, #44]	@ (8001fcc <lcd_data+0x40>)
 8001f9e:	f002 fbf7 	bl	8004790 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(CSX_GPIO_Port, CSX_Pin, GPIO_PIN_RESET);
 8001fa2:	2200      	movs	r2, #0
 8001fa4:	2104      	movs	r1, #4
 8001fa6:	480a      	ldr	r0, [pc, #40]	@ (8001fd0 <lcd_data+0x44>)
 8001fa8:	f002 fbf2 	bl	8004790 <HAL_GPIO_WritePin>
	HAL_SPI_Transmit(&hspi5, &data, 1, HAL_MAX_DELAY);
 8001fac:	1df9      	adds	r1, r7, #7
 8001fae:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 8001fb2:	2201      	movs	r2, #1
 8001fb4:	4807      	ldr	r0, [pc, #28]	@ (8001fd4 <lcd_data+0x48>)
 8001fb6:	f005 fe1a 	bl	8007bee <HAL_SPI_Transmit>
	HAL_GPIO_WritePin(CSX_GPIO_Port, CSX_Pin, GPIO_PIN_SET);
 8001fba:	2201      	movs	r2, #1
 8001fbc:	2104      	movs	r1, #4
 8001fbe:	4804      	ldr	r0, [pc, #16]	@ (8001fd0 <lcd_data+0x44>)
 8001fc0:	f002 fbe6 	bl	8004790 <HAL_GPIO_WritePin>
}
 8001fc4:	bf00      	nop
 8001fc6:	3708      	adds	r7, #8
 8001fc8:	46bd      	mov	sp, r7
 8001fca:	bd80      	pop	{r7, pc}
 8001fcc:	40020c00 	.word	0x40020c00
 8001fd0:	40020800 	.word	0x40020800
 8001fd4:	20025c98 	.word	0x20025c98

08001fd8 <lcd_data16>:
static void lcd_data16(uint16_t value){
 8001fd8:	b580      	push	{r7, lr}
 8001fda:	b082      	sub	sp, #8
 8001fdc:	af00      	add	r7, sp, #0
 8001fde:	4603      	mov	r3, r0
 8001fe0:	80fb      	strh	r3, [r7, #6]
	lcd_data(value >> 8);
 8001fe2:	88fb      	ldrh	r3, [r7, #6]
 8001fe4:	0a1b      	lsrs	r3, r3, #8
 8001fe6:	b29b      	uxth	r3, r3
 8001fe8:	b2db      	uxtb	r3, r3
 8001fea:	4618      	mov	r0, r3
 8001fec:	f7ff ffce 	bl	8001f8c <lcd_data>
	lcd_data(value);
 8001ff0:	88fb      	ldrh	r3, [r7, #6]
 8001ff2:	b2db      	uxtb	r3, r3
 8001ff4:	4618      	mov	r0, r3
 8001ff6:	f7ff ffc9 	bl	8001f8c <lcd_data>
}
 8001ffa:	bf00      	nop
 8001ffc:	3708      	adds	r7, #8
 8001ffe:	46bd      	mov	sp, r7
 8002000:	bd80      	pop	{r7, pc}

08002002 <lcd_send>:
static void lcd_send(uint16_t value){
 8002002:	b580      	push	{r7, lr}
 8002004:	b082      	sub	sp, #8
 8002006:	af00      	add	r7, sp, #0
 8002008:	4603      	mov	r3, r0
 800200a:	80fb      	strh	r3, [r7, #6]
	if (value & 0x100) {
 800200c:	88fb      	ldrh	r3, [r7, #6]
 800200e:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8002012:	2b00      	cmp	r3, #0
 8002014:	d005      	beq.n	8002022 <lcd_send+0x20>
		lcd_cmd(value);
 8002016:	88fb      	ldrh	r3, [r7, #6]
 8002018:	b2db      	uxtb	r3, r3
 800201a:	4618      	mov	r0, r3
 800201c:	f7ff ff84 	bl	8001f28 <lcd_cmd>
	} else {
		lcd_data(value);
	}
}
 8002020:	e004      	b.n	800202c <lcd_send+0x2a>
		lcd_data(value);
 8002022:	88fb      	ldrh	r3, [r7, #6]
 8002024:	b2db      	uxtb	r3, r3
 8002026:	4618      	mov	r0, r3
 8002028:	f7ff ffb0 	bl	8001f8c <lcd_data>
}
 800202c:	bf00      	nop
 800202e:	3708      	adds	r7, #8
 8002030:	46bd      	mov	sp, r7
 8002032:	bd80      	pop	{r7, pc}

08002034 <lcd_init>:
void lcd_init(void){
 8002034:	b580      	push	{r7, lr}
 8002036:	b082      	sub	sp, #8
 8002038:	af00      	add	r7, sp, #0
  chunk_size = (LCD_HEIGHT * LCD_WIDTH) / how_many_chunks;
 800203a:	4b23      	ldr	r3, [pc, #140]	@ (80020c8 <lcd_init+0x94>)
 800203c:	881b      	ldrh	r3, [r3, #0]
 800203e:	461a      	mov	r2, r3
 8002040:	f44f 3396 	mov.w	r3, #76800	@ 0x12c00
 8002044:	fb93 f3f2 	sdiv	r3, r3, r2
 8002048:	b29a      	uxth	r2, r3
 800204a:	4b20      	ldr	r3, [pc, #128]	@ (80020cc <lcd_init+0x98>)
 800204c:	801a      	strh	r2, [r3, #0]
  y_per_chunk = LCD_HEIGHT / how_many_chunks;
 800204e:	4b1e      	ldr	r3, [pc, #120]	@ (80020c8 <lcd_init+0x94>)
 8002050:	881b      	ldrh	r3, [r3, #0]
 8002052:	461a      	mov	r2, r3
 8002054:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 8002058:	fb93 f3f2 	sdiv	r3, r3, r2
 800205c:	b29a      	uxth	r2, r3
 800205e:	4b1c      	ldr	r3, [pc, #112]	@ (80020d0 <lcd_init+0x9c>)
 8002060:	801a      	strh	r2, [r3, #0]

  int i;
  HAL_GPIO_WritePin(RDX_GPIO_Port, RDX_Pin, GPIO_PIN_RESET);
 8002062:	2200      	movs	r2, #0
 8002064:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 8002068:	481a      	ldr	r0, [pc, #104]	@ (80020d4 <lcd_init+0xa0>)
 800206a:	f002 fb91 	bl	8004790 <HAL_GPIO_WritePin>
  HAL_Delay(100); // w nocie 10 mikro sec
 800206e:	2064      	movs	r0, #100	@ 0x64
 8002070:	f001 fb64 	bl	800373c <HAL_Delay>
  HAL_GPIO_WritePin(RDX_GPIO_Port, RDX_Pin, GPIO_PIN_SET);
 8002074:	2201      	movs	r2, #1
 8002076:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 800207a:	4816      	ldr	r0, [pc, #88]	@ (80020d4 <lcd_init+0xa0>)
 800207c:	f002 fb88 	bl	8004790 <HAL_GPIO_WritePin>
  HAL_Delay(100);
 8002080:	2064      	movs	r0, #100	@ 0x64
 8002082:	f001 fb5b 	bl	800373c <HAL_Delay>
  for (i = 0; i < sizeof(init_table) / sizeof(uint16_t); i++) {
 8002086:	2300      	movs	r3, #0
 8002088:	607b      	str	r3, [r7, #4]
 800208a:	e009      	b.n	80020a0 <lcd_init+0x6c>
    lcd_send(init_table[i]);
 800208c:	4a12      	ldr	r2, [pc, #72]	@ (80020d8 <lcd_init+0xa4>)
 800208e:	687b      	ldr	r3, [r7, #4]
 8002090:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8002094:	4618      	mov	r0, r3
 8002096:	f7ff ffb4 	bl	8002002 <lcd_send>
  for (i = 0; i < sizeof(init_table) / sizeof(uint16_t); i++) {
 800209a:	687b      	ldr	r3, [r7, #4]
 800209c:	3301      	adds	r3, #1
 800209e:	607b      	str	r3, [r7, #4]
 80020a0:	687b      	ldr	r3, [r7, #4]
 80020a2:	2b35      	cmp	r3, #53	@ 0x35
 80020a4:	d9f2      	bls.n	800208c <lcd_init+0x58>
  }
  HAL_Delay(200);
 80020a6:	20c8      	movs	r0, #200	@ 0xc8
 80020a8:	f001 fb48 	bl	800373c <HAL_Delay>
  lcd_cmd(SLEEP_OUT);
 80020ac:	2011      	movs	r0, #17
 80020ae:	f7ff ff3b 	bl	8001f28 <lcd_cmd>
  HAL_Delay(120);
 80020b2:	2078      	movs	r0, #120	@ 0x78
 80020b4:	f001 fb42 	bl	800373c <HAL_Delay>
  lcd_cmd(DISPLAY_ON);
 80020b8:	2029      	movs	r0, #41	@ 0x29
 80020ba:	f7ff ff35 	bl	8001f28 <lcd_cmd>
}
 80020be:	bf00      	nop
 80020c0:	3708      	adds	r7, #8
 80020c2:	46bd      	mov	sp, r7
 80020c4:	bd80      	pop	{r7, pc}
 80020c6:	bf00      	nop
 80020c8:	20000002 	.word	0x20000002
 80020cc:	20025af6 	.word	0x20025af6
 80020d0:	20025af8 	.word	0x20025af8
 80020d4:	40020c00 	.word	0x40020c00
 80020d8:	0800e054 	.word	0x0800e054

080020dc <lcd_set_window>:

static void lcd_set_window(int x, int y, int width, int height){
 80020dc:	b580      	push	{r7, lr}
 80020de:	b084      	sub	sp, #16
 80020e0:	af00      	add	r7, sp, #0
 80020e2:	60f8      	str	r0, [r7, #12]
 80020e4:	60b9      	str	r1, [r7, #8]
 80020e6:	607a      	str	r2, [r7, #4]
 80020e8:	603b      	str	r3, [r7, #0]
	lcd_cmd(COL_ADR_SET);
 80020ea:	202a      	movs	r0, #42	@ 0x2a
 80020ec:	f7ff ff1c 	bl	8001f28 <lcd_cmd>
	lcd_data16(x);
 80020f0:	68fb      	ldr	r3, [r7, #12]
 80020f2:	b29b      	uxth	r3, r3
 80020f4:	4618      	mov	r0, r3
 80020f6:	f7ff ff6f 	bl	8001fd8 <lcd_data16>
	lcd_data16(x+width-1);
 80020fa:	68fb      	ldr	r3, [r7, #12]
 80020fc:	b29a      	uxth	r2, r3
 80020fe:	687b      	ldr	r3, [r7, #4]
 8002100:	b29b      	uxth	r3, r3
 8002102:	4413      	add	r3, r2
 8002104:	b29b      	uxth	r3, r3
 8002106:	3b01      	subs	r3, #1
 8002108:	b29b      	uxth	r3, r3
 800210a:	4618      	mov	r0, r3
 800210c:	f7ff ff64 	bl	8001fd8 <lcd_data16>
	lcd_cmd(PAGE_ADR_SET);
 8002110:	202b      	movs	r0, #43	@ 0x2b
 8002112:	f7ff ff09 	bl	8001f28 <lcd_cmd>
	lcd_data16(y);
 8002116:	68bb      	ldr	r3, [r7, #8]
 8002118:	b29b      	uxth	r3, r3
 800211a:	4618      	mov	r0, r3
 800211c:	f7ff ff5c 	bl	8001fd8 <lcd_data16>
	lcd_data16(y+height-1);
 8002120:	68bb      	ldr	r3, [r7, #8]
 8002122:	b29a      	uxth	r2, r3
 8002124:	683b      	ldr	r3, [r7, #0]
 8002126:	b29b      	uxth	r3, r3
 8002128:	4413      	add	r3, r2
 800212a:	b29b      	uxth	r3, r3
 800212c:	3b01      	subs	r3, #1
 800212e:	b29b      	uxth	r3, r3
 8002130:	4618      	mov	r0, r3
 8002132:	f7ff ff51 	bl	8001fd8 <lcd_data16>
}
 8002136:	bf00      	nop
 8002138:	3710      	adds	r7, #16
 800213a:	46bd      	mov	sp, r7
 800213c:	bd80      	pop	{r7, pc}
	...

08002140 <lcd_set_rectangle>:
void lcd_set_rectangle(uint16_t idx,int x,int y,int width,int height,uint16_t color){
 8002140:	b480      	push	{r7}
 8002142:	b085      	sub	sp, #20
 8002144:	af00      	add	r7, sp, #0
 8002146:	60b9      	str	r1, [r7, #8]
 8002148:	607a      	str	r2, [r7, #4]
 800214a:	603b      	str	r3, [r7, #0]
 800214c:	4603      	mov	r3, r0
 800214e:	81fb      	strh	r3, [r7, #14]
	rects[idx].x = x;
 8002150:	89fa      	ldrh	r2, [r7, #14]
 8002152:	491b      	ldr	r1, [pc, #108]	@ (80021c0 <lcd_set_rectangle+0x80>)
 8002154:	4613      	mov	r3, r2
 8002156:	009b      	lsls	r3, r3, #2
 8002158:	4413      	add	r3, r2
 800215a:	009b      	lsls	r3, r3, #2
 800215c:	440b      	add	r3, r1
 800215e:	68ba      	ldr	r2, [r7, #8]
 8002160:	601a      	str	r2, [r3, #0]
	rects[idx].y = y;
 8002162:	89fa      	ldrh	r2, [r7, #14]
 8002164:	4916      	ldr	r1, [pc, #88]	@ (80021c0 <lcd_set_rectangle+0x80>)
 8002166:	4613      	mov	r3, r2
 8002168:	009b      	lsls	r3, r3, #2
 800216a:	4413      	add	r3, r2
 800216c:	009b      	lsls	r3, r3, #2
 800216e:	440b      	add	r3, r1
 8002170:	3304      	adds	r3, #4
 8002172:	687a      	ldr	r2, [r7, #4]
 8002174:	601a      	str	r2, [r3, #0]
	rects[idx].width = width;
 8002176:	89fa      	ldrh	r2, [r7, #14]
 8002178:	4911      	ldr	r1, [pc, #68]	@ (80021c0 <lcd_set_rectangle+0x80>)
 800217a:	4613      	mov	r3, r2
 800217c:	009b      	lsls	r3, r3, #2
 800217e:	4413      	add	r3, r2
 8002180:	009b      	lsls	r3, r3, #2
 8002182:	440b      	add	r3, r1
 8002184:	3308      	adds	r3, #8
 8002186:	683a      	ldr	r2, [r7, #0]
 8002188:	601a      	str	r2, [r3, #0]
	rects[idx].height = height;
 800218a:	89fa      	ldrh	r2, [r7, #14]
 800218c:	490c      	ldr	r1, [pc, #48]	@ (80021c0 <lcd_set_rectangle+0x80>)
 800218e:	4613      	mov	r3, r2
 8002190:	009b      	lsls	r3, r3, #2
 8002192:	4413      	add	r3, r2
 8002194:	009b      	lsls	r3, r3, #2
 8002196:	440b      	add	r3, r1
 8002198:	330c      	adds	r3, #12
 800219a:	69ba      	ldr	r2, [r7, #24]
 800219c:	601a      	str	r2, [r3, #0]
	rects[idx].color = color;
 800219e:	89fa      	ldrh	r2, [r7, #14]
 80021a0:	4907      	ldr	r1, [pc, #28]	@ (80021c0 <lcd_set_rectangle+0x80>)
 80021a2:	4613      	mov	r3, r2
 80021a4:	009b      	lsls	r3, r3, #2
 80021a6:	4413      	add	r3, r2
 80021a8:	009b      	lsls	r3, r3, #2
 80021aa:	440b      	add	r3, r1
 80021ac:	3310      	adds	r3, #16
 80021ae:	8bba      	ldrh	r2, [r7, #28]
 80021b0:	801a      	strh	r2, [r3, #0]
}
 80021b2:	bf00      	nop
 80021b4:	3714      	adds	r7, #20
 80021b6:	46bd      	mov	sp, r7
 80021b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80021bc:	4770      	bx	lr
 80021be:	bf00      	nop
 80021c0:	20025afc 	.word	0x20025afc

080021c4 <lcd_set_circle>:
void lcd_set_circle(int x,int y,int radius,uint16_t color){
 80021c4:	b480      	push	{r7}
 80021c6:	b085      	sub	sp, #20
 80021c8:	af00      	add	r7, sp, #0
 80021ca:	60f8      	str	r0, [r7, #12]
 80021cc:	60b9      	str	r1, [r7, #8]
 80021ce:	607a      	str	r2, [r7, #4]
 80021d0:	807b      	strh	r3, [r7, #2]
	player.x = x;
 80021d2:	4a09      	ldr	r2, [pc, #36]	@ (80021f8 <lcd_set_circle+0x34>)
 80021d4:	68fb      	ldr	r3, [r7, #12]
 80021d6:	6013      	str	r3, [r2, #0]
	player.y = y;
 80021d8:	4a07      	ldr	r2, [pc, #28]	@ (80021f8 <lcd_set_circle+0x34>)
 80021da:	68bb      	ldr	r3, [r7, #8]
 80021dc:	6053      	str	r3, [r2, #4]
	player.r = radius;
 80021de:	4a06      	ldr	r2, [pc, #24]	@ (80021f8 <lcd_set_circle+0x34>)
 80021e0:	687b      	ldr	r3, [r7, #4]
 80021e2:	6093      	str	r3, [r2, #8]
	player.color = color;
 80021e4:	4a04      	ldr	r2, [pc, #16]	@ (80021f8 <lcd_set_circle+0x34>)
 80021e6:	887b      	ldrh	r3, [r7, #2]
 80021e8:	8193      	strh	r3, [r2, #12]
}
 80021ea:	bf00      	nop
 80021ec:	3714      	adds	r7, #20
 80021ee:	46bd      	mov	sp, r7
 80021f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80021f4:	4770      	bx	lr
 80021f6:	bf00      	nop
 80021f8:	20025bc4 	.word	0x20025bc4

080021fc <send_circle>:
static void send_circle(uint16_t circle_color){
 80021fc:	b580      	push	{r7, lr}
 80021fe:	b084      	sub	sp, #16
 8002200:	af00      	add	r7, sp, #0
 8002202:	4603      	mov	r3, r0
 8002204:	80fb      	strh	r3, [r7, #6]
	lcd_set_window(player.x - player.r, player.y-player.r, 2*player.r,2*player.r);
 8002206:	4b36      	ldr	r3, [pc, #216]	@ (80022e0 <send_circle+0xe4>)
 8002208:	681a      	ldr	r2, [r3, #0]
 800220a:	4b35      	ldr	r3, [pc, #212]	@ (80022e0 <send_circle+0xe4>)
 800220c:	689b      	ldr	r3, [r3, #8]
 800220e:	1ad0      	subs	r0, r2, r3
 8002210:	4b33      	ldr	r3, [pc, #204]	@ (80022e0 <send_circle+0xe4>)
 8002212:	685a      	ldr	r2, [r3, #4]
 8002214:	4b32      	ldr	r3, [pc, #200]	@ (80022e0 <send_circle+0xe4>)
 8002216:	689b      	ldr	r3, [r3, #8]
 8002218:	1ad1      	subs	r1, r2, r3
 800221a:	4b31      	ldr	r3, [pc, #196]	@ (80022e0 <send_circle+0xe4>)
 800221c:	689b      	ldr	r3, [r3, #8]
 800221e:	005a      	lsls	r2, r3, #1
 8002220:	4b2f      	ldr	r3, [pc, #188]	@ (80022e0 <send_circle+0xe4>)
 8002222:	689b      	ldr	r3, [r3, #8]
 8002224:	005b      	lsls	r3, r3, #1
 8002226:	f7ff ff59 	bl	80020dc <lcd_set_window>
	lcd_cmd(MEM_WRITE);
 800222a:	202c      	movs	r0, #44	@ 0x2c
 800222c:	f7ff fe7c 	bl	8001f28 <lcd_cmd>
	if(!spi5_acquire())return;
 8002230:	f000 fe56 	bl	8002ee0 <spi5_acquire>
 8002234:	4603      	mov	r3, r0
 8002236:	f083 0301 	eor.w	r3, r3, #1
 800223a:	b2db      	uxtb	r3, r3
 800223c:	2b00      	cmp	r3, #0
 800223e:	d14b      	bne.n	80022d8 <send_circle+0xdc>
	for(int y=player.y-player.r;y<player.y+player.r;y++){
 8002240:	4b27      	ldr	r3, [pc, #156]	@ (80022e0 <send_circle+0xe4>)
 8002242:	685a      	ldr	r2, [r3, #4]
 8002244:	4b26      	ldr	r3, [pc, #152]	@ (80022e0 <send_circle+0xe4>)
 8002246:	689b      	ldr	r3, [r3, #8]
 8002248:	1ad3      	subs	r3, r2, r3
 800224a:	60fb      	str	r3, [r7, #12]
 800224c:	e039      	b.n	80022c2 <send_circle+0xc6>
		for(int x=player.x-player.r;x<player.x+player.r;x++){
 800224e:	4b24      	ldr	r3, [pc, #144]	@ (80022e0 <send_circle+0xe4>)
 8002250:	681a      	ldr	r2, [r3, #0]
 8002252:	4b23      	ldr	r3, [pc, #140]	@ (80022e0 <send_circle+0xe4>)
 8002254:	689b      	ldr	r3, [r3, #8]
 8002256:	1ad3      	subs	r3, r2, r3
 8002258:	60bb      	str	r3, [r7, #8]
 800225a:	e027      	b.n	80022ac <send_circle+0xb0>
			if( ( (x-player.x)*(x-player.x)+(y-player.y)*(y-player.y)) <= (player.r*player.r)){
 800225c:	4b20      	ldr	r3, [pc, #128]	@ (80022e0 <send_circle+0xe4>)
 800225e:	681b      	ldr	r3, [r3, #0]
 8002260:	68ba      	ldr	r2, [r7, #8]
 8002262:	1ad3      	subs	r3, r2, r3
 8002264:	4a1e      	ldr	r2, [pc, #120]	@ (80022e0 <send_circle+0xe4>)
 8002266:	6812      	ldr	r2, [r2, #0]
 8002268:	68b9      	ldr	r1, [r7, #8]
 800226a:	1a8a      	subs	r2, r1, r2
 800226c:	fb03 f202 	mul.w	r2, r3, r2
 8002270:	4b1b      	ldr	r3, [pc, #108]	@ (80022e0 <send_circle+0xe4>)
 8002272:	685b      	ldr	r3, [r3, #4]
 8002274:	68f9      	ldr	r1, [r7, #12]
 8002276:	1acb      	subs	r3, r1, r3
 8002278:	4919      	ldr	r1, [pc, #100]	@ (80022e0 <send_circle+0xe4>)
 800227a:	6849      	ldr	r1, [r1, #4]
 800227c:	68f8      	ldr	r0, [r7, #12]
 800227e:	1a41      	subs	r1, r0, r1
 8002280:	fb01 f303 	mul.w	r3, r1, r3
 8002284:	441a      	add	r2, r3
 8002286:	4b16      	ldr	r3, [pc, #88]	@ (80022e0 <send_circle+0xe4>)
 8002288:	689b      	ldr	r3, [r3, #8]
 800228a:	4915      	ldr	r1, [pc, #84]	@ (80022e0 <send_circle+0xe4>)
 800228c:	6889      	ldr	r1, [r1, #8]
 800228e:	fb01 f303 	mul.w	r3, r1, r3
 8002292:	429a      	cmp	r2, r3
 8002294:	dc04      	bgt.n	80022a0 <send_circle+0xa4>
				lcd_data16(circle_color);
 8002296:	88fb      	ldrh	r3, [r7, #6]
 8002298:	4618      	mov	r0, r3
 800229a:	f7ff fe9d 	bl	8001fd8 <lcd_data16>
 800229e:	e002      	b.n	80022a6 <send_circle+0xaa>
			} else{
				lcd_data16(BACKGROUND); // zle
 80022a0:	201f      	movs	r0, #31
 80022a2:	f7ff fe99 	bl	8001fd8 <lcd_data16>
		for(int x=player.x-player.r;x<player.x+player.r;x++){
 80022a6:	68bb      	ldr	r3, [r7, #8]
 80022a8:	3301      	adds	r3, #1
 80022aa:	60bb      	str	r3, [r7, #8]
 80022ac:	4b0c      	ldr	r3, [pc, #48]	@ (80022e0 <send_circle+0xe4>)
 80022ae:	681a      	ldr	r2, [r3, #0]
 80022b0:	4b0b      	ldr	r3, [pc, #44]	@ (80022e0 <send_circle+0xe4>)
 80022b2:	689b      	ldr	r3, [r3, #8]
 80022b4:	4413      	add	r3, r2
 80022b6:	68ba      	ldr	r2, [r7, #8]
 80022b8:	429a      	cmp	r2, r3
 80022ba:	dbcf      	blt.n	800225c <send_circle+0x60>
	for(int y=player.y-player.r;y<player.y+player.r;y++){
 80022bc:	68fb      	ldr	r3, [r7, #12]
 80022be:	3301      	adds	r3, #1
 80022c0:	60fb      	str	r3, [r7, #12]
 80022c2:	4b07      	ldr	r3, [pc, #28]	@ (80022e0 <send_circle+0xe4>)
 80022c4:	685a      	ldr	r2, [r3, #4]
 80022c6:	4b06      	ldr	r3, [pc, #24]	@ (80022e0 <send_circle+0xe4>)
 80022c8:	689b      	ldr	r3, [r3, #8]
 80022ca:	4413      	add	r3, r2
 80022cc:	68fa      	ldr	r2, [r7, #12]
 80022ce:	429a      	cmp	r2, r3
 80022d0:	dbbd      	blt.n	800224e <send_circle+0x52>
			}
		}
	}
	spi5_release();
 80022d2:	f000 fe19 	bl	8002f08 <spi5_release>
 80022d6:	e000      	b.n	80022da <send_circle+0xde>
	if(!spi5_acquire())return;
 80022d8:	bf00      	nop
}
 80022da:	3710      	adds	r7, #16
 80022dc:	46bd      	mov	sp, r7
 80022de:	bd80      	pop	{r7, pc}
 80022e0:	20025bc4 	.word	0x20025bc4

080022e4 <clear_former_horizontal>:
//
//	HAL_SPI_Transmit_DMA(&hspi5, (uint8_t*)circle_buffer, 2*4*player.r*player.r);
//
//	spi5_release();
//}
static void clear_former_horizontal(Circle former){
 80022e4:	b590      	push	{r4, r7, lr}
 80022e6:	b08b      	sub	sp, #44	@ 0x2c
 80022e8:	af00      	add	r7, sp, #0
 80022ea:	463c      	mov	r4, r7
 80022ec:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
	int min_y,max_y;

	if(former.y-former.r < player.y - player.r){
 80022f0:	687a      	ldr	r2, [r7, #4]
 80022f2:	68bb      	ldr	r3, [r7, #8]
 80022f4:	1ad2      	subs	r2, r2, r3
 80022f6:	4b29      	ldr	r3, [pc, #164]	@ (800239c <clear_former_horizontal+0xb8>)
 80022f8:	6859      	ldr	r1, [r3, #4]
 80022fa:	4b28      	ldr	r3, [pc, #160]	@ (800239c <clear_former_horizontal+0xb8>)
 80022fc:	689b      	ldr	r3, [r3, #8]
 80022fe:	1acb      	subs	r3, r1, r3
 8002300:	429a      	cmp	r2, r3
 8002302:	da0a      	bge.n	800231a <clear_former_horizontal+0x36>
		min_y = former.y-former.r;
 8002304:	687a      	ldr	r2, [r7, #4]
 8002306:	68bb      	ldr	r3, [r7, #8]
 8002308:	1ad3      	subs	r3, r2, r3
 800230a:	627b      	str	r3, [r7, #36]	@ 0x24
		max_y = player.y-player.r;
 800230c:	4b23      	ldr	r3, [pc, #140]	@ (800239c <clear_former_horizontal+0xb8>)
 800230e:	685a      	ldr	r2, [r3, #4]
 8002310:	4b22      	ldr	r3, [pc, #136]	@ (800239c <clear_former_horizontal+0xb8>)
 8002312:	689b      	ldr	r3, [r3, #8]
 8002314:	1ad3      	subs	r3, r2, r3
 8002316:	623b      	str	r3, [r7, #32]
 8002318:	e009      	b.n	800232e <clear_former_horizontal+0x4a>
	} else{
		min_y = player.y+player.r;
 800231a:	4b20      	ldr	r3, [pc, #128]	@ (800239c <clear_former_horizontal+0xb8>)
 800231c:	685a      	ldr	r2, [r3, #4]
 800231e:	4b1f      	ldr	r3, [pc, #124]	@ (800239c <clear_former_horizontal+0xb8>)
 8002320:	689b      	ldr	r3, [r3, #8]
 8002322:	4413      	add	r3, r2
 8002324:	627b      	str	r3, [r7, #36]	@ 0x24
		max_y = former.y+former.r;
 8002326:	687a      	ldr	r2, [r7, #4]
 8002328:	68bb      	ldr	r3, [r7, #8]
 800232a:	4413      	add	r3, r2
 800232c:	623b      	str	r3, [r7, #32]
	}

	int height = max_y-min_y;
 800232e:	6a3a      	ldr	r2, [r7, #32]
 8002330:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8002332:	1ad3      	subs	r3, r2, r3
 8002334:	61fb      	str	r3, [r7, #28]
	int d_wh = 2*former.r;
 8002336:	68bb      	ldr	r3, [r7, #8]
 8002338:	005b      	lsls	r3, r3, #1
 800233a:	617b      	str	r3, [r7, #20]
	if(height>d_wh)height=d_wh;
 800233c:	69fa      	ldr	r2, [r7, #28]
 800233e:	697b      	ldr	r3, [r7, #20]
 8002340:	429a      	cmp	r2, r3
 8002342:	dd01      	ble.n	8002348 <clear_former_horizontal+0x64>
 8002344:	697b      	ldr	r3, [r7, #20]
 8002346:	61fb      	str	r3, [r7, #28]

	lcd_set_window(former.x-former.r, min_y, d_wh, height);
 8002348:	683a      	ldr	r2, [r7, #0]
 800234a:	68bb      	ldr	r3, [r7, #8]
 800234c:	1ad0      	subs	r0, r2, r3
 800234e:	69fb      	ldr	r3, [r7, #28]
 8002350:	697a      	ldr	r2, [r7, #20]
 8002352:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 8002354:	f7ff fec2 	bl	80020dc <lcd_set_window>
	lcd_cmd(MEM_WRITE);
 8002358:	202c      	movs	r0, #44	@ 0x2c
 800235a:	f7ff fde5 	bl	8001f28 <lcd_cmd>
	if(!spi5_acquire()){return;}
 800235e:	f000 fdbf 	bl	8002ee0 <spi5_acquire>
 8002362:	4603      	mov	r3, r0
 8002364:	f083 0301 	eor.w	r3, r3, #1
 8002368:	b2db      	uxtb	r3, r3
 800236a:	2b00      	cmp	r3, #0
 800236c:	d112      	bne.n	8002394 <clear_former_horizontal+0xb0>
	for(int i=0;i<d_wh*height;i++){
 800236e:	2300      	movs	r3, #0
 8002370:	61bb      	str	r3, [r7, #24]
 8002372:	e005      	b.n	8002380 <clear_former_horizontal+0x9c>
		lcd_data16(BACKGROUND);
 8002374:	201f      	movs	r0, #31
 8002376:	f7ff fe2f 	bl	8001fd8 <lcd_data16>
	for(int i=0;i<d_wh*height;i++){
 800237a:	69bb      	ldr	r3, [r7, #24]
 800237c:	3301      	adds	r3, #1
 800237e:	61bb      	str	r3, [r7, #24]
 8002380:	697b      	ldr	r3, [r7, #20]
 8002382:	69fa      	ldr	r2, [r7, #28]
 8002384:	fb02 f303 	mul.w	r3, r2, r3
 8002388:	69ba      	ldr	r2, [r7, #24]
 800238a:	429a      	cmp	r2, r3
 800238c:	dbf2      	blt.n	8002374 <clear_former_horizontal+0x90>
	}
	spi5_release();
 800238e:	f000 fdbb 	bl	8002f08 <spi5_release>
 8002392:	e000      	b.n	8002396 <clear_former_horizontal+0xb2>
	if(!spi5_acquire()){return;}
 8002394:	bf00      	nop
}
 8002396:	372c      	adds	r7, #44	@ 0x2c
 8002398:	46bd      	mov	sp, r7
 800239a:	bd90      	pop	{r4, r7, pc}
 800239c:	20025bc4 	.word	0x20025bc4

080023a0 <clear_former_vertical>:
static void clear_former_vertical(Circle former){
 80023a0:	b590      	push	{r4, r7, lr}
 80023a2:	b08b      	sub	sp, #44	@ 0x2c
 80023a4:	af00      	add	r7, sp, #0
 80023a6:	463c      	mov	r4, r7
 80023a8:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
	int min_x,max_x;

	if(former.x-former.r < player.x - player.r){
 80023ac:	683a      	ldr	r2, [r7, #0]
 80023ae:	68bb      	ldr	r3, [r7, #8]
 80023b0:	1ad2      	subs	r2, r2, r3
 80023b2:	4b2a      	ldr	r3, [pc, #168]	@ (800245c <clear_former_vertical+0xbc>)
 80023b4:	6819      	ldr	r1, [r3, #0]
 80023b6:	4b29      	ldr	r3, [pc, #164]	@ (800245c <clear_former_vertical+0xbc>)
 80023b8:	689b      	ldr	r3, [r3, #8]
 80023ba:	1acb      	subs	r3, r1, r3
 80023bc:	429a      	cmp	r2, r3
 80023be:	da0a      	bge.n	80023d6 <clear_former_vertical+0x36>
		min_x = former.x-former.r;
 80023c0:	683a      	ldr	r2, [r7, #0]
 80023c2:	68bb      	ldr	r3, [r7, #8]
 80023c4:	1ad3      	subs	r3, r2, r3
 80023c6:	627b      	str	r3, [r7, #36]	@ 0x24
		max_x = player.x-player.r;
 80023c8:	4b24      	ldr	r3, [pc, #144]	@ (800245c <clear_former_vertical+0xbc>)
 80023ca:	681a      	ldr	r2, [r3, #0]
 80023cc:	4b23      	ldr	r3, [pc, #140]	@ (800245c <clear_former_vertical+0xbc>)
 80023ce:	689b      	ldr	r3, [r3, #8]
 80023d0:	1ad3      	subs	r3, r2, r3
 80023d2:	623b      	str	r3, [r7, #32]
 80023d4:	e009      	b.n	80023ea <clear_former_vertical+0x4a>
	} else{
		min_x = player.x+player.r;
 80023d6:	4b21      	ldr	r3, [pc, #132]	@ (800245c <clear_former_vertical+0xbc>)
 80023d8:	681a      	ldr	r2, [r3, #0]
 80023da:	4b20      	ldr	r3, [pc, #128]	@ (800245c <clear_former_vertical+0xbc>)
 80023dc:	689b      	ldr	r3, [r3, #8]
 80023de:	4413      	add	r3, r2
 80023e0:	627b      	str	r3, [r7, #36]	@ 0x24
		max_x = former.x+former.r;
 80023e2:	683a      	ldr	r2, [r7, #0]
 80023e4:	68bb      	ldr	r3, [r7, #8]
 80023e6:	4413      	add	r3, r2
 80023e8:	623b      	str	r3, [r7, #32]
	}

	int width = max_x-min_x;
 80023ea:	6a3a      	ldr	r2, [r7, #32]
 80023ec:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80023ee:	1ad3      	subs	r3, r2, r3
 80023f0:	61fb      	str	r3, [r7, #28]
	int d_wh = 2*former.r;
 80023f2:	68bb      	ldr	r3, [r7, #8]
 80023f4:	005b      	lsls	r3, r3, #1
 80023f6:	617b      	str	r3, [r7, #20]
	if(width>d_wh)width=2*d_wh;
 80023f8:	69fa      	ldr	r2, [r7, #28]
 80023fa:	697b      	ldr	r3, [r7, #20]
 80023fc:	429a      	cmp	r2, r3
 80023fe:	dd02      	ble.n	8002406 <clear_former_vertical+0x66>
 8002400:	697b      	ldr	r3, [r7, #20]
 8002402:	005b      	lsls	r3, r3, #1
 8002404:	61fb      	str	r3, [r7, #28]

	lcd_set_window(min_x, former.y-former.r, width, d_wh);
 8002406:	687a      	ldr	r2, [r7, #4]
 8002408:	68bb      	ldr	r3, [r7, #8]
 800240a:	1ad1      	subs	r1, r2, r3
 800240c:	697b      	ldr	r3, [r7, #20]
 800240e:	69fa      	ldr	r2, [r7, #28]
 8002410:	6a78      	ldr	r0, [r7, #36]	@ 0x24
 8002412:	f7ff fe63 	bl	80020dc <lcd_set_window>
	lcd_cmd(MEM_WRITE);
 8002416:	202c      	movs	r0, #44	@ 0x2c
 8002418:	f7ff fd86 	bl	8001f28 <lcd_cmd>
	if(!spi5_acquire()){return;}
 800241c:	f000 fd60 	bl	8002ee0 <spi5_acquire>
 8002420:	4603      	mov	r3, r0
 8002422:	f083 0301 	eor.w	r3, r3, #1
 8002426:	b2db      	uxtb	r3, r3
 8002428:	2b00      	cmp	r3, #0
 800242a:	d112      	bne.n	8002452 <clear_former_vertical+0xb2>
	for(int i=0;i<d_wh*width;i++){
 800242c:	2300      	movs	r3, #0
 800242e:	61bb      	str	r3, [r7, #24]
 8002430:	e005      	b.n	800243e <clear_former_vertical+0x9e>
		lcd_data16(BACKGROUND);
 8002432:	201f      	movs	r0, #31
 8002434:	f7ff fdd0 	bl	8001fd8 <lcd_data16>
	for(int i=0;i<d_wh*width;i++){
 8002438:	69bb      	ldr	r3, [r7, #24]
 800243a:	3301      	adds	r3, #1
 800243c:	61bb      	str	r3, [r7, #24]
 800243e:	697b      	ldr	r3, [r7, #20]
 8002440:	69fa      	ldr	r2, [r7, #28]
 8002442:	fb02 f303 	mul.w	r3, r2, r3
 8002446:	69ba      	ldr	r2, [r7, #24]
 8002448:	429a      	cmp	r2, r3
 800244a:	dbf2      	blt.n	8002432 <clear_former_vertical+0x92>
	}
	spi5_release();
 800244c:	f000 fd5c 	bl	8002f08 <spi5_release>
 8002450:	e000      	b.n	8002454 <clear_former_vertical+0xb4>
	if(!spi5_acquire()){return;}
 8002452:	bf00      	nop
}
 8002454:	372c      	adds	r7, #44	@ 0x2c
 8002456:	46bd      	mov	sp, r7
 8002458:	bd90      	pop	{r4, r7, pc}
 800245a:	bf00      	nop
 800245c:	20025bc4 	.word	0x20025bc4

08002460 <clear_former_circle>:
static void clear_former_circle(Circle former){
 8002460:	b590      	push	{r4, r7, lr}
 8002462:	b085      	sub	sp, #20
 8002464:	af00      	add	r7, sp, #0
 8002466:	463c      	mov	r4, r7
 8002468:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
	clear_former_horizontal(former);
 800246c:	463b      	mov	r3, r7
 800246e:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8002470:	f7ff ff38 	bl	80022e4 <clear_former_horizontal>
	clear_former_vertical(former);
 8002474:	463b      	mov	r3, r7
 8002476:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8002478:	f7ff ff92 	bl	80023a0 <clear_former_vertical>
}
 800247c:	bf00      	nop
 800247e:	3714      	adds	r7, #20
 8002480:	46bd      	mov	sp, r7
 8002482:	bd90      	pop	{r4, r7, pc}

08002484 <lcd_delta_circle>:
void lcd_delta_circle(int dx,int dy,int dradius){
 8002484:	b480      	push	{r7}
 8002486:	b085      	sub	sp, #20
 8002488:	af00      	add	r7, sp, #0
 800248a:	60f8      	str	r0, [r7, #12]
 800248c:	60b9      	str	r1, [r7, #8]
 800248e:	607a      	str	r2, [r7, #4]
	player.x += dx;
 8002490:	4b2c      	ldr	r3, [pc, #176]	@ (8002544 <lcd_delta_circle+0xc0>)
 8002492:	681a      	ldr	r2, [r3, #0]
 8002494:	68fb      	ldr	r3, [r7, #12]
 8002496:	4413      	add	r3, r2
 8002498:	4a2a      	ldr	r2, [pc, #168]	@ (8002544 <lcd_delta_circle+0xc0>)
 800249a:	6013      	str	r3, [r2, #0]
	player.y += dy;
 800249c:	4b29      	ldr	r3, [pc, #164]	@ (8002544 <lcd_delta_circle+0xc0>)
 800249e:	685a      	ldr	r2, [r3, #4]
 80024a0:	68bb      	ldr	r3, [r7, #8]
 80024a2:	4413      	add	r3, r2
 80024a4:	4a27      	ldr	r2, [pc, #156]	@ (8002544 <lcd_delta_circle+0xc0>)
 80024a6:	6053      	str	r3, [r2, #4]
	player.r += dradius;
 80024a8:	4b26      	ldr	r3, [pc, #152]	@ (8002544 <lcd_delta_circle+0xc0>)
 80024aa:	689a      	ldr	r2, [r3, #8]
 80024ac:	687b      	ldr	r3, [r7, #4]
 80024ae:	4413      	add	r3, r2
 80024b0:	4a24      	ldr	r2, [pc, #144]	@ (8002544 <lcd_delta_circle+0xc0>)
 80024b2:	6093      	str	r3, [r2, #8]

	if(player.r<0 || player.r > LCD_WIDTH/6 || player.r>LCD_HEIGHT/6)player.r = 5;
 80024b4:	4b23      	ldr	r3, [pc, #140]	@ (8002544 <lcd_delta_circle+0xc0>)
 80024b6:	689b      	ldr	r3, [r3, #8]
 80024b8:	2b00      	cmp	r3, #0
 80024ba:	db07      	blt.n	80024cc <lcd_delta_circle+0x48>
 80024bc:	4b21      	ldr	r3, [pc, #132]	@ (8002544 <lcd_delta_circle+0xc0>)
 80024be:	689b      	ldr	r3, [r3, #8]
 80024c0:	2b28      	cmp	r3, #40	@ 0x28
 80024c2:	dc03      	bgt.n	80024cc <lcd_delta_circle+0x48>
 80024c4:	4b1f      	ldr	r3, [pc, #124]	@ (8002544 <lcd_delta_circle+0xc0>)
 80024c6:	689b      	ldr	r3, [r3, #8]
 80024c8:	2b35      	cmp	r3, #53	@ 0x35
 80024ca:	dd02      	ble.n	80024d2 <lcd_delta_circle+0x4e>
 80024cc:	4b1d      	ldr	r3, [pc, #116]	@ (8002544 <lcd_delta_circle+0xc0>)
 80024ce:	2205      	movs	r2, #5
 80024d0:	609a      	str	r2, [r3, #8]

	if (player.x-player.r < 0) player.x = player.r;
 80024d2:	4b1c      	ldr	r3, [pc, #112]	@ (8002544 <lcd_delta_circle+0xc0>)
 80024d4:	681a      	ldr	r2, [r3, #0]
 80024d6:	4b1b      	ldr	r3, [pc, #108]	@ (8002544 <lcd_delta_circle+0xc0>)
 80024d8:	689b      	ldr	r3, [r3, #8]
 80024da:	1ad3      	subs	r3, r2, r3
 80024dc:	2b00      	cmp	r3, #0
 80024de:	da04      	bge.n	80024ea <lcd_delta_circle+0x66>
 80024e0:	4b18      	ldr	r3, [pc, #96]	@ (8002544 <lcd_delta_circle+0xc0>)
 80024e2:	689b      	ldr	r3, [r3, #8]
 80024e4:	4a17      	ldr	r2, [pc, #92]	@ (8002544 <lcd_delta_circle+0xc0>)
 80024e6:	6013      	str	r3, [r2, #0]
 80024e8:	e00c      	b.n	8002504 <lcd_delta_circle+0x80>
	else if (player.x+player.r > LCD_WIDTH) player.x = LCD_WIDTH-player.r;
 80024ea:	4b16      	ldr	r3, [pc, #88]	@ (8002544 <lcd_delta_circle+0xc0>)
 80024ec:	681a      	ldr	r2, [r3, #0]
 80024ee:	4b15      	ldr	r3, [pc, #84]	@ (8002544 <lcd_delta_circle+0xc0>)
 80024f0:	689b      	ldr	r3, [r3, #8]
 80024f2:	4413      	add	r3, r2
 80024f4:	2bf0      	cmp	r3, #240	@ 0xf0
 80024f6:	dd05      	ble.n	8002504 <lcd_delta_circle+0x80>
 80024f8:	4b12      	ldr	r3, [pc, #72]	@ (8002544 <lcd_delta_circle+0xc0>)
 80024fa:	689b      	ldr	r3, [r3, #8]
 80024fc:	f1c3 03f0 	rsb	r3, r3, #240	@ 0xf0
 8002500:	4a10      	ldr	r2, [pc, #64]	@ (8002544 <lcd_delta_circle+0xc0>)
 8002502:	6013      	str	r3, [r2, #0]
	if (player.y-player.r < 0) player.y = player.r;
 8002504:	4b0f      	ldr	r3, [pc, #60]	@ (8002544 <lcd_delta_circle+0xc0>)
 8002506:	685a      	ldr	r2, [r3, #4]
 8002508:	4b0e      	ldr	r3, [pc, #56]	@ (8002544 <lcd_delta_circle+0xc0>)
 800250a:	689b      	ldr	r3, [r3, #8]
 800250c:	1ad3      	subs	r3, r2, r3
 800250e:	2b00      	cmp	r3, #0
 8002510:	da04      	bge.n	800251c <lcd_delta_circle+0x98>
 8002512:	4b0c      	ldr	r3, [pc, #48]	@ (8002544 <lcd_delta_circle+0xc0>)
 8002514:	689b      	ldr	r3, [r3, #8]
 8002516:	4a0b      	ldr	r2, [pc, #44]	@ (8002544 <lcd_delta_circle+0xc0>)
 8002518:	6053      	str	r3, [r2, #4]
	else if (player.y+player.r > LCD_HEIGHT) player.y = LCD_HEIGHT-player.r;
}
 800251a:	e00d      	b.n	8002538 <lcd_delta_circle+0xb4>
	else if (player.y+player.r > LCD_HEIGHT) player.y = LCD_HEIGHT-player.r;
 800251c:	4b09      	ldr	r3, [pc, #36]	@ (8002544 <lcd_delta_circle+0xc0>)
 800251e:	685a      	ldr	r2, [r3, #4]
 8002520:	4b08      	ldr	r3, [pc, #32]	@ (8002544 <lcd_delta_circle+0xc0>)
 8002522:	689b      	ldr	r3, [r3, #8]
 8002524:	4413      	add	r3, r2
 8002526:	f5b3 7fa0 	cmp.w	r3, #320	@ 0x140
 800252a:	dd05      	ble.n	8002538 <lcd_delta_circle+0xb4>
 800252c:	4b05      	ldr	r3, [pc, #20]	@ (8002544 <lcd_delta_circle+0xc0>)
 800252e:	689b      	ldr	r3, [r3, #8]
 8002530:	f5c3 73a0 	rsb	r3, r3, #320	@ 0x140
 8002534:	4a03      	ldr	r2, [pc, #12]	@ (8002544 <lcd_delta_circle+0xc0>)
 8002536:	6053      	str	r3, [r2, #4]
}
 8002538:	bf00      	nop
 800253a:	3714      	adds	r7, #20
 800253c:	46bd      	mov	sp, r7
 800253e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002542:	4770      	bx	lr
 8002544:	20025bc4 	.word	0x20025bc4

08002548 <lcd_update_circle>:
void lcd_update_circle(int dx,int dy,int dradius){
 8002548:	b590      	push	{r4, r7, lr}
 800254a:	b089      	sub	sp, #36	@ 0x24
 800254c:	af00      	add	r7, sp, #0
 800254e:	60f8      	str	r0, [r7, #12]
 8002550:	60b9      	str	r1, [r7, #8]
 8002552:	607a      	str	r2, [r7, #4]
	Circle former = player;
 8002554:	4b0f      	ldr	r3, [pc, #60]	@ (8002594 <lcd_update_circle+0x4c>)
 8002556:	f107 0410 	add.w	r4, r7, #16
 800255a:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 800255c:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
	lcd_delta_circle(dx, dy, dradius);
 8002560:	687a      	ldr	r2, [r7, #4]
 8002562:	68b9      	ldr	r1, [r7, #8]
 8002564:	68f8      	ldr	r0, [r7, #12]
 8002566:	f7ff ff8d 	bl	8002484 <lcd_delta_circle>
	if(dx!=0 ||  dy!=0)clear_former_circle(former);
 800256a:	68fb      	ldr	r3, [r7, #12]
 800256c:	2b00      	cmp	r3, #0
 800256e:	d102      	bne.n	8002576 <lcd_update_circle+0x2e>
 8002570:	68bb      	ldr	r3, [r7, #8]
 8002572:	2b00      	cmp	r3, #0
 8002574:	d004      	beq.n	8002580 <lcd_update_circle+0x38>
 8002576:	f107 0310 	add.w	r3, r7, #16
 800257a:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 800257c:	f7ff ff70 	bl	8002460 <clear_former_circle>
	send_circle(player.color);
 8002580:	4b04      	ldr	r3, [pc, #16]	@ (8002594 <lcd_update_circle+0x4c>)
 8002582:	899b      	ldrh	r3, [r3, #12]
 8002584:	b29b      	uxth	r3, r3
 8002586:	4618      	mov	r0, r3
 8002588:	f7ff fe38 	bl	80021fc <send_circle>
	//	send_circle_buffer();
}
 800258c:	bf00      	nop
 800258e:	3724      	adds	r7, #36	@ 0x24
 8002590:	46bd      	mov	sp, r7
 8002592:	bd90      	pop	{r4, r7, pc}
 8002594:	20025bc4 	.word	0x20025bc4

08002598 <lcd_put_pixel>:
void lcd_put_pixel(int x, int y, uint16_t color){
 8002598:	b480      	push	{r7}
 800259a:	b087      	sub	sp, #28
 800259c:	af00      	add	r7, sp, #0
 800259e:	60f8      	str	r0, [r7, #12]
 80025a0:	60b9      	str	r1, [r7, #8]
 80025a2:	4613      	mov	r3, r2
 80025a4:	80fb      	strh	r3, [r7, #6]
	screen_buffer[ (LCD_WIDTH*y) + x] = __REV16(color); //to make send most significant bit first
 80025a6:	88fb      	ldrh	r3, [r7, #6]
 80025a8:	617b      	str	r3, [r7, #20]
 */
__STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
{
  uint32_t result;

  __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 80025aa:	697b      	ldr	r3, [r7, #20]
 80025ac:	ba5b      	rev16	r3, r3
 80025ae:	613b      	str	r3, [r7, #16]
  return result;
 80025b0:	6939      	ldr	r1, [r7, #16]
 80025b2:	68ba      	ldr	r2, [r7, #8]
 80025b4:	4613      	mov	r3, r2
 80025b6:	011b      	lsls	r3, r3, #4
 80025b8:	1a9b      	subs	r3, r3, r2
 80025ba:	011b      	lsls	r3, r3, #4
 80025bc:	461a      	mov	r2, r3
 80025be:	68fb      	ldr	r3, [r7, #12]
 80025c0:	4413      	add	r3, r2
 80025c2:	b289      	uxth	r1, r1
 80025c4:	4a04      	ldr	r2, [pc, #16]	@ (80025d8 <lcd_put_pixel+0x40>)
 80025c6:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
}
 80025ca:	bf00      	nop
 80025cc:	371c      	adds	r7, #28
 80025ce:	46bd      	mov	sp, r7
 80025d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80025d4:	4770      	bx	lr
 80025d6:	bf00      	nop
 80025d8:	200002f4 	.word	0x200002f4

080025dc <lcd_put_rect_to_buffer>:
static void lcd_put_rect_to_buffer(Rectangle rect){
 80025dc:	b084      	sub	sp, #16
 80025de:	b580      	push	{r7, lr}
 80025e0:	b082      	sub	sp, #8
 80025e2:	af00      	add	r7, sp, #0
 80025e4:	f107 0c10 	add.w	ip, r7, #16
 80025e8:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
	for(int y=rect.y;y<rect.y+rect.height;y++){
 80025ec:	697b      	ldr	r3, [r7, #20]
 80025ee:	607b      	str	r3, [r7, #4]
 80025f0:	e021      	b.n	8002636 <lcd_put_rect_to_buffer+0x5a>
		for(int x=rect.x;x<rect.x+rect.width;x++){
 80025f2:	693b      	ldr	r3, [r7, #16]
 80025f4:	603b      	str	r3, [r7, #0]
 80025f6:	e015      	b.n	8002624 <lcd_put_rect_to_buffer+0x48>
			if(x>=0 && x<LCD_WIDTH && y>=0 && y<LCD_HEIGHT){
 80025f8:	683b      	ldr	r3, [r7, #0]
 80025fa:	2b00      	cmp	r3, #0
 80025fc:	db0f      	blt.n	800261e <lcd_put_rect_to_buffer+0x42>
 80025fe:	683b      	ldr	r3, [r7, #0]
 8002600:	2bef      	cmp	r3, #239	@ 0xef
 8002602:	dc0c      	bgt.n	800261e <lcd_put_rect_to_buffer+0x42>
 8002604:	687b      	ldr	r3, [r7, #4]
 8002606:	2b00      	cmp	r3, #0
 8002608:	db09      	blt.n	800261e <lcd_put_rect_to_buffer+0x42>
 800260a:	687b      	ldr	r3, [r7, #4]
 800260c:	f5b3 7fa0 	cmp.w	r3, #320	@ 0x140
 8002610:	da05      	bge.n	800261e <lcd_put_rect_to_buffer+0x42>
				lcd_put_pixel(x, y, rect.color);
 8002612:	8c3b      	ldrh	r3, [r7, #32]
 8002614:	461a      	mov	r2, r3
 8002616:	6879      	ldr	r1, [r7, #4]
 8002618:	6838      	ldr	r0, [r7, #0]
 800261a:	f7ff ffbd 	bl	8002598 <lcd_put_pixel>
		for(int x=rect.x;x<rect.x+rect.width;x++){
 800261e:	683b      	ldr	r3, [r7, #0]
 8002620:	3301      	adds	r3, #1
 8002622:	603b      	str	r3, [r7, #0]
 8002624:	693a      	ldr	r2, [r7, #16]
 8002626:	69bb      	ldr	r3, [r7, #24]
 8002628:	4413      	add	r3, r2
 800262a:	683a      	ldr	r2, [r7, #0]
 800262c:	429a      	cmp	r2, r3
 800262e:	dbe3      	blt.n	80025f8 <lcd_put_rect_to_buffer+0x1c>
	for(int y=rect.y;y<rect.y+rect.height;y++){
 8002630:	687b      	ldr	r3, [r7, #4]
 8002632:	3301      	adds	r3, #1
 8002634:	607b      	str	r3, [r7, #4]
 8002636:	697a      	ldr	r2, [r7, #20]
 8002638:	69fb      	ldr	r3, [r7, #28]
 800263a:	4413      	add	r3, r2
 800263c:	687a      	ldr	r2, [r7, #4]
 800263e:	429a      	cmp	r2, r3
 8002640:	dbd7      	blt.n	80025f2 <lcd_put_rect_to_buffer+0x16>
			}
		}
	}
}
 8002642:	bf00      	nop
 8002644:	bf00      	nop
 8002646:	3708      	adds	r7, #8
 8002648:	46bd      	mov	sp, r7
 800264a:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 800264e:	b004      	add	sp, #16
 8002650:	4770      	bx	lr

08002652 <lcd_put_circ_to_buffer>:
static void lcd_put_circ_to_buffer(Circle circle){
 8002652:	b590      	push	{r4, r7, lr}
 8002654:	b087      	sub	sp, #28
 8002656:	af00      	add	r7, sp, #0
 8002658:	463c      	mov	r4, r7
 800265a:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
	for(int y=circle.y-circle.r;y<circle.y+circle.r;y++){
 800265e:	687a      	ldr	r2, [r7, #4]
 8002660:	68bb      	ldr	r3, [r7, #8]
 8002662:	1ad3      	subs	r3, r2, r3
 8002664:	617b      	str	r3, [r7, #20]
 8002666:	e03a      	b.n	80026de <lcd_put_circ_to_buffer+0x8c>
		for(int x=circle.x-circle.r;x<circle.x+circle.r;x++){
 8002668:	683a      	ldr	r2, [r7, #0]
 800266a:	68bb      	ldr	r3, [r7, #8]
 800266c:	1ad3      	subs	r3, r2, r3
 800266e:	613b      	str	r3, [r7, #16]
 8002670:	e02c      	b.n	80026cc <lcd_put_circ_to_buffer+0x7a>
			if(x>=0 && x<LCD_WIDTH && y>=0 && y<LCD_HEIGHT){
 8002672:	693b      	ldr	r3, [r7, #16]
 8002674:	2b00      	cmp	r3, #0
 8002676:	db26      	blt.n	80026c6 <lcd_put_circ_to_buffer+0x74>
 8002678:	693b      	ldr	r3, [r7, #16]
 800267a:	2bef      	cmp	r3, #239	@ 0xef
 800267c:	dc23      	bgt.n	80026c6 <lcd_put_circ_to_buffer+0x74>
 800267e:	697b      	ldr	r3, [r7, #20]
 8002680:	2b00      	cmp	r3, #0
 8002682:	db20      	blt.n	80026c6 <lcd_put_circ_to_buffer+0x74>
 8002684:	697b      	ldr	r3, [r7, #20]
 8002686:	f5b3 7fa0 	cmp.w	r3, #320	@ 0x140
 800268a:	da1c      	bge.n	80026c6 <lcd_put_circ_to_buffer+0x74>
				if( ( (x-circle.x)*(x-circle.x)+(y-circle.y)*(y-circle.y)) <= (circle.r*circle.r)){
 800268c:	683b      	ldr	r3, [r7, #0]
 800268e:	693a      	ldr	r2, [r7, #16]
 8002690:	1ad3      	subs	r3, r2, r3
 8002692:	683a      	ldr	r2, [r7, #0]
 8002694:	6939      	ldr	r1, [r7, #16]
 8002696:	1a8a      	subs	r2, r1, r2
 8002698:	fb03 f202 	mul.w	r2, r3, r2
 800269c:	687b      	ldr	r3, [r7, #4]
 800269e:	6979      	ldr	r1, [r7, #20]
 80026a0:	1acb      	subs	r3, r1, r3
 80026a2:	6879      	ldr	r1, [r7, #4]
 80026a4:	6978      	ldr	r0, [r7, #20]
 80026a6:	1a41      	subs	r1, r0, r1
 80026a8:	fb01 f303 	mul.w	r3, r1, r3
 80026ac:	441a      	add	r2, r3
 80026ae:	68bb      	ldr	r3, [r7, #8]
 80026b0:	68b9      	ldr	r1, [r7, #8]
 80026b2:	fb01 f303 	mul.w	r3, r1, r3
 80026b6:	429a      	cmp	r2, r3
 80026b8:	dc05      	bgt.n	80026c6 <lcd_put_circ_to_buffer+0x74>
					lcd_put_pixel(x, y, circle.color);
 80026ba:	89bb      	ldrh	r3, [r7, #12]
 80026bc:	461a      	mov	r2, r3
 80026be:	6979      	ldr	r1, [r7, #20]
 80026c0:	6938      	ldr	r0, [r7, #16]
 80026c2:	f7ff ff69 	bl	8002598 <lcd_put_pixel>
		for(int x=circle.x-circle.r;x<circle.x+circle.r;x++){
 80026c6:	693b      	ldr	r3, [r7, #16]
 80026c8:	3301      	adds	r3, #1
 80026ca:	613b      	str	r3, [r7, #16]
 80026cc:	683a      	ldr	r2, [r7, #0]
 80026ce:	68bb      	ldr	r3, [r7, #8]
 80026d0:	4413      	add	r3, r2
 80026d2:	693a      	ldr	r2, [r7, #16]
 80026d4:	429a      	cmp	r2, r3
 80026d6:	dbcc      	blt.n	8002672 <lcd_put_circ_to_buffer+0x20>
	for(int y=circle.y-circle.r;y<circle.y+circle.r;y++){
 80026d8:	697b      	ldr	r3, [r7, #20]
 80026da:	3301      	adds	r3, #1
 80026dc:	617b      	str	r3, [r7, #20]
 80026de:	687a      	ldr	r2, [r7, #4]
 80026e0:	68bb      	ldr	r3, [r7, #8]
 80026e2:	4413      	add	r3, r2
 80026e4:	697a      	ldr	r2, [r7, #20]
 80026e6:	429a      	cmp	r2, r3
 80026e8:	dbbe      	blt.n	8002668 <lcd_put_circ_to_buffer+0x16>
				}
			}
		}
	}
}
 80026ea:	bf00      	nop
 80026ec:	bf00      	nop
 80026ee:	371c      	adds	r7, #28
 80026f0:	46bd      	mov	sp, r7
 80026f2:	bd90      	pop	{r4, r7, pc}

080026f4 <put_figures_to_buffer>:
static void put_figures_to_buffer(void){
 80026f4:	b580      	push	{r7, lr}
 80026f6:	b086      	sub	sp, #24
 80026f8:	af02      	add	r7, sp, #8
	for(int i=0; i<LCD_WIDTH*LCD_HEIGHT;i++) {
 80026fa:	2300      	movs	r3, #0
 80026fc:	60fb      	str	r3, [r7, #12]
 80026fe:	e00d      	b.n	800271c <put_figures_to_buffer+0x28>
 8002700:	231f      	movs	r3, #31
 8002702:	607b      	str	r3, [r7, #4]
  __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 8002704:	687b      	ldr	r3, [r7, #4]
 8002706:	ba5b      	rev16	r3, r3
 8002708:	603b      	str	r3, [r7, #0]
  return result;
 800270a:	683b      	ldr	r3, [r7, #0]
		screen_buffer[i] = __REV16(BLUE);
 800270c:	b299      	uxth	r1, r3
 800270e:	4a14      	ldr	r2, [pc, #80]	@ (8002760 <put_figures_to_buffer+0x6c>)
 8002710:	68fb      	ldr	r3, [r7, #12]
 8002712:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
	for(int i=0; i<LCD_WIDTH*LCD_HEIGHT;i++) {
 8002716:	68fb      	ldr	r3, [r7, #12]
 8002718:	3301      	adds	r3, #1
 800271a:	60fb      	str	r3, [r7, #12]
 800271c:	68fb      	ldr	r3, [r7, #12]
 800271e:	f5b3 3f96 	cmp.w	r3, #76800	@ 0x12c00
 8002722:	dbed      	blt.n	8002700 <put_figures_to_buffer+0xc>
	}

	for(int i=0;i<RECTS_AMOUNT;i++){
 8002724:	2300      	movs	r3, #0
 8002726:	60bb      	str	r3, [r7, #8]
 8002728:	e00e      	b.n	8002748 <put_figures_to_buffer+0x54>
		lcd_put_rect_to_buffer(rects[i]);
 800272a:	490e      	ldr	r1, [pc, #56]	@ (8002764 <put_figures_to_buffer+0x70>)
 800272c:	68ba      	ldr	r2, [r7, #8]
 800272e:	4613      	mov	r3, r2
 8002730:	009b      	lsls	r3, r3, #2
 8002732:	4413      	add	r3, r2
 8002734:	009b      	lsls	r3, r3, #2
 8002736:	440b      	add	r3, r1
 8002738:	691a      	ldr	r2, [r3, #16]
 800273a:	9200      	str	r2, [sp, #0]
 800273c:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 800273e:	f7ff ff4d 	bl	80025dc <lcd_put_rect_to_buffer>
	for(int i=0;i<RECTS_AMOUNT;i++){
 8002742:	68bb      	ldr	r3, [r7, #8]
 8002744:	3301      	adds	r3, #1
 8002746:	60bb      	str	r3, [r7, #8]
 8002748:	68bb      	ldr	r3, [r7, #8]
 800274a:	2b09      	cmp	r3, #9
 800274c:	dded      	ble.n	800272a <put_figures_to_buffer+0x36>
	}
	lcd_put_circ_to_buffer(player);
 800274e:	4b06      	ldr	r3, [pc, #24]	@ (8002768 <put_figures_to_buffer+0x74>)
 8002750:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8002752:	f7ff ff7e 	bl	8002652 <lcd_put_circ_to_buffer>
}
 8002756:	bf00      	nop
 8002758:	3710      	adds	r7, #16
 800275a:	46bd      	mov	sp, r7
 800275c:	bd80      	pop	{r7, pc}
 800275e:	bf00      	nop
 8002760:	200002f4 	.word	0x200002f4
 8002764:	20025afc 	.word	0x20025afc
 8002768:	20025bc4 	.word	0x20025bc4

0800276c <lcd_update>:
//				circle_buffer[(2*player.r*y) + x] = __REV16(BACKGROUND);
//			}
//		}
//	}
//}
void lcd_update(void){
 800276c:	b580      	push	{r7, lr}
 800276e:	af00      	add	r7, sp, #0
	put_figures_to_buffer();
 8002770:	f7ff ffc0 	bl	80026f4 <put_figures_to_buffer>
//	fill_circle_buffer();

	current_chunk = 0;
 8002774:	4b20      	ldr	r3, [pc, #128]	@ (80027f8 <lcd_update+0x8c>)
 8002776:	2200      	movs	r2, #0
 8002778:	801a      	strh	r2, [r3, #0]
	lcd_set_window(0, current_chunk*y_per_chunk, LCD_WIDTH, LCD_HEIGHT/how_many_chunks);
 800277a:	4b1f      	ldr	r3, [pc, #124]	@ (80027f8 <lcd_update+0x8c>)
 800277c:	881b      	ldrh	r3, [r3, #0]
 800277e:	461a      	mov	r2, r3
 8002780:	4b1e      	ldr	r3, [pc, #120]	@ (80027fc <lcd_update+0x90>)
 8002782:	881b      	ldrh	r3, [r3, #0]
 8002784:	fb03 f102 	mul.w	r1, r3, r2
 8002788:	4b1d      	ldr	r3, [pc, #116]	@ (8002800 <lcd_update+0x94>)
 800278a:	881b      	ldrh	r3, [r3, #0]
 800278c:	461a      	mov	r2, r3
 800278e:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 8002792:	fb93 f3f2 	sdiv	r3, r3, r2
 8002796:	22f0      	movs	r2, #240	@ 0xf0
 8002798:	2000      	movs	r0, #0
 800279a:	f7ff fc9f 	bl	80020dc <lcd_set_window>
	lcd_cmd(MEM_WRITE);
 800279e:	202c      	movs	r0, #44	@ 0x2c
 80027a0:	f7ff fbc2 	bl	8001f28 <lcd_cmd>
	HAL_GPIO_WritePin(WRX_DCX_GPIO_Port, WRX_DCX_Pin, GPIO_PIN_SET);
 80027a4:	2201      	movs	r2, #1
 80027a6:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 80027aa:	4816      	ldr	r0, [pc, #88]	@ (8002804 <lcd_update+0x98>)
 80027ac:	f001 fff0 	bl	8004790 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(CSX_GPIO_Port, CSX_Pin, GPIO_PIN_RESET);
 80027b0:	2200      	movs	r2, #0
 80027b2:	2104      	movs	r1, #4
 80027b4:	4814      	ldr	r0, [pc, #80]	@ (8002808 <lcd_update+0x9c>)
 80027b6:	f001 ffeb 	bl	8004790 <HAL_GPIO_WritePin>

	if (!spi5_acquire()) return;
 80027ba:	f000 fb91 	bl	8002ee0 <spi5_acquire>
 80027be:	4603      	mov	r3, r0
 80027c0:	f083 0301 	eor.w	r3, r3, #1
 80027c4:	b2db      	uxtb	r3, r3
 80027c6:	2b00      	cmp	r3, #0
 80027c8:	d114      	bne.n	80027f4 <lcd_update+0x88>

	HAL_SPI_Transmit_DMA(&hspi5, (uint8_t*)(screen_buffer + (current_chunk * chunk_size)), 2*chunk_size);
 80027ca:	4b0b      	ldr	r3, [pc, #44]	@ (80027f8 <lcd_update+0x8c>)
 80027cc:	881b      	ldrh	r3, [r3, #0]
 80027ce:	461a      	mov	r2, r3
 80027d0:	4b0e      	ldr	r3, [pc, #56]	@ (800280c <lcd_update+0xa0>)
 80027d2:	881b      	ldrh	r3, [r3, #0]
 80027d4:	fb02 f303 	mul.w	r3, r2, r3
 80027d8:	005b      	lsls	r3, r3, #1
 80027da:	4a0d      	ldr	r2, [pc, #52]	@ (8002810 <lcd_update+0xa4>)
 80027dc:	1899      	adds	r1, r3, r2
 80027de:	4b0b      	ldr	r3, [pc, #44]	@ (800280c <lcd_update+0xa0>)
 80027e0:	881b      	ldrh	r3, [r3, #0]
 80027e2:	005b      	lsls	r3, r3, #1
 80027e4:	b29b      	uxth	r3, r3
 80027e6:	461a      	mov	r2, r3
 80027e8:	480a      	ldr	r0, [pc, #40]	@ (8002814 <lcd_update+0xa8>)
 80027ea:	f005 fe07 	bl	80083fc <HAL_SPI_Transmit_DMA>

	spi5_release();
 80027ee:	f000 fb8b 	bl	8002f08 <spi5_release>
 80027f2:	e000      	b.n	80027f6 <lcd_update+0x8a>
	if (!spi5_acquire()) return;
 80027f4:	bf00      	nop
}
 80027f6:	bd80      	pop	{r7, pc}
 80027f8:	20025af4 	.word	0x20025af4
 80027fc:	20025af8 	.word	0x20025af8
 8002800:	20000002 	.word	0x20000002
 8002804:	40020c00 	.word	0x40020c00
 8002808:	40020800 	.word	0x40020800
 800280c:	20025af6 	.word	0x20025af6
 8002810:	200002f4 	.word	0x200002f4
 8002814:	20025c98 	.word	0x20025c98

08002818 <lcd_transfer_done>:
void lcd_transfer_done(void){
 8002818:	b580      	push	{r7, lr}
 800281a:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(CSX_GPIO_Port, CSX_Pin, GPIO_PIN_SET);
 800281c:	2201      	movs	r2, #1
 800281e:	2104      	movs	r1, #4
 8002820:	4802      	ldr	r0, [pc, #8]	@ (800282c <lcd_transfer_done+0x14>)
 8002822:	f001 ffb5 	bl	8004790 <HAL_GPIO_WritePin>
}
 8002826:	bf00      	nop
 8002828:	bd80      	pop	{r7, pc}
 800282a:	bf00      	nop
 800282c:	40020800 	.word	0x40020800

08002830 <send_next_chunk>:
bool lcd_is_busy(void){
	if (HAL_SPI_GetState(&hspi5) == HAL_SPI_STATE_BUSY) return true;
	else return false;
}
static void send_next_chunk(void){
 8002830:	b580      	push	{r7, lr}
 8002832:	af00      	add	r7, sp, #0
	lcd_set_window(0, current_chunk*y_per_chunk, LCD_WIDTH, LCD_HEIGHT/how_many_chunks);
 8002834:	4b20      	ldr	r3, [pc, #128]	@ (80028b8 <send_next_chunk+0x88>)
 8002836:	881b      	ldrh	r3, [r3, #0]
 8002838:	461a      	mov	r2, r3
 800283a:	4b20      	ldr	r3, [pc, #128]	@ (80028bc <send_next_chunk+0x8c>)
 800283c:	881b      	ldrh	r3, [r3, #0]
 800283e:	fb03 f102 	mul.w	r1, r3, r2
 8002842:	4b1f      	ldr	r3, [pc, #124]	@ (80028c0 <send_next_chunk+0x90>)
 8002844:	881b      	ldrh	r3, [r3, #0]
 8002846:	461a      	mov	r2, r3
 8002848:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 800284c:	fb93 f3f2 	sdiv	r3, r3, r2
 8002850:	22f0      	movs	r2, #240	@ 0xf0
 8002852:	2000      	movs	r0, #0
 8002854:	f7ff fc42 	bl	80020dc <lcd_set_window>
	lcd_cmd(MEM_WRITE);
 8002858:	202c      	movs	r0, #44	@ 0x2c
 800285a:	f7ff fb65 	bl	8001f28 <lcd_cmd>
	HAL_GPIO_WritePin(WRX_DCX_GPIO_Port, WRX_DCX_Pin, GPIO_PIN_SET);
 800285e:	2201      	movs	r2, #1
 8002860:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8002864:	4817      	ldr	r0, [pc, #92]	@ (80028c4 <send_next_chunk+0x94>)
 8002866:	f001 ff93 	bl	8004790 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(CSX_GPIO_Port, CSX_Pin, GPIO_PIN_RESET);
 800286a:	2200      	movs	r2, #0
 800286c:	2104      	movs	r1, #4
 800286e:	4816      	ldr	r0, [pc, #88]	@ (80028c8 <send_next_chunk+0x98>)
 8002870:	f001 ff8e 	bl	8004790 <HAL_GPIO_WritePin>
	lcd_ready = false;
 8002874:	4b15      	ldr	r3, [pc, #84]	@ (80028cc <send_next_chunk+0x9c>)
 8002876:	2200      	movs	r2, #0
 8002878:	701a      	strb	r2, [r3, #0]
	if (!spi5_acquire()) return;
 800287a:	f000 fb31 	bl	8002ee0 <spi5_acquire>
 800287e:	4603      	mov	r3, r0
 8002880:	f083 0301 	eor.w	r3, r3, #1
 8002884:	b2db      	uxtb	r3, r3
 8002886:	2b00      	cmp	r3, #0
 8002888:	d114      	bne.n	80028b4 <send_next_chunk+0x84>
	HAL_SPI_Transmit_DMA(&hspi5, (uint8_t*)(screen_buffer + (current_chunk * chunk_size)), 2*chunk_size);
 800288a:	4b0b      	ldr	r3, [pc, #44]	@ (80028b8 <send_next_chunk+0x88>)
 800288c:	881b      	ldrh	r3, [r3, #0]
 800288e:	461a      	mov	r2, r3
 8002890:	4b0f      	ldr	r3, [pc, #60]	@ (80028d0 <send_next_chunk+0xa0>)
 8002892:	881b      	ldrh	r3, [r3, #0]
 8002894:	fb02 f303 	mul.w	r3, r2, r3
 8002898:	005b      	lsls	r3, r3, #1
 800289a:	4a0e      	ldr	r2, [pc, #56]	@ (80028d4 <send_next_chunk+0xa4>)
 800289c:	1899      	adds	r1, r3, r2
 800289e:	4b0c      	ldr	r3, [pc, #48]	@ (80028d0 <send_next_chunk+0xa0>)
 80028a0:	881b      	ldrh	r3, [r3, #0]
 80028a2:	005b      	lsls	r3, r3, #1
 80028a4:	b29b      	uxth	r3, r3
 80028a6:	461a      	mov	r2, r3
 80028a8:	480b      	ldr	r0, [pc, #44]	@ (80028d8 <send_next_chunk+0xa8>)
 80028aa:	f005 fda7 	bl	80083fc <HAL_SPI_Transmit_DMA>

	spi5_release();
 80028ae:	f000 fb2b 	bl	8002f08 <spi5_release>
 80028b2:	e000      	b.n	80028b6 <send_next_chunk+0x86>
	if (!spi5_acquire()) return;
 80028b4:	bf00      	nop
}
 80028b6:	bd80      	pop	{r7, pc}
 80028b8:	20025af4 	.word	0x20025af4
 80028bc:	20025af8 	.word	0x20025af8
 80028c0:	20000002 	.word	0x20000002
 80028c4:	40020c00 	.word	0x40020c00
 80028c8:	40020800 	.word	0x40020800
 80028cc:	20000004 	.word	0x20000004
 80028d0:	20025af6 	.word	0x20025af6
 80028d4:	200002f4 	.word	0x200002f4
 80028d8:	20025c98 	.word	0x20025c98

080028dc <go_for_next_chunk>:
void go_for_next_chunk(void){
 80028dc:	b580      	push	{r7, lr}
 80028de:	af00      	add	r7, sp, #0
	current_chunk++;
 80028e0:	4b0a      	ldr	r3, [pc, #40]	@ (800290c <go_for_next_chunk+0x30>)
 80028e2:	881b      	ldrh	r3, [r3, #0]
 80028e4:	3301      	adds	r3, #1
 80028e6:	b29a      	uxth	r2, r3
 80028e8:	4b08      	ldr	r3, [pc, #32]	@ (800290c <go_for_next_chunk+0x30>)
 80028ea:	801a      	strh	r2, [r3, #0]
	if (current_chunk < how_many_chunks) {
 80028ec:	4b07      	ldr	r3, [pc, #28]	@ (800290c <go_for_next_chunk+0x30>)
 80028ee:	881a      	ldrh	r2, [r3, #0]
 80028f0:	4b07      	ldr	r3, [pc, #28]	@ (8002910 <go_for_next_chunk+0x34>)
 80028f2:	881b      	ldrh	r3, [r3, #0]
 80028f4:	429a      	cmp	r2, r3
 80028f6:	d202      	bcs.n	80028fe <go_for_next_chunk+0x22>
		send_next_chunk();
 80028f8:	f7ff ff9a 	bl	8002830 <send_next_chunk>
	}
	else {
		lcd_ready=true;
		lcd_transfer_done();
	}
}
 80028fc:	e004      	b.n	8002908 <go_for_next_chunk+0x2c>
		lcd_ready=true;
 80028fe:	4b05      	ldr	r3, [pc, #20]	@ (8002914 <go_for_next_chunk+0x38>)
 8002900:	2201      	movs	r2, #1
 8002902:	701a      	strb	r2, [r3, #0]
		lcd_transfer_done();
 8002904:	f7ff ff88 	bl	8002818 <lcd_transfer_done>
}
 8002908:	bf00      	nop
 800290a:	bd80      	pop	{r7, pc}
 800290c:	20025af4 	.word	0x20025af4
 8002910:	20000002 	.word	0x20000002
 8002914:	20000004 	.word	0x20000004

08002918 <MX_LTDC_Init>:

LTDC_HandleTypeDef hltdc;

/* LTDC init function */
void MX_LTDC_Init(void)
{
 8002918:	b580      	push	{r7, lr}
 800291a:	b08e      	sub	sp, #56	@ 0x38
 800291c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN LTDC_Init 0 */

  /* USER CODE END LTDC_Init 0 */

  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 800291e:	1d3b      	adds	r3, r7, #4
 8002920:	2234      	movs	r2, #52	@ 0x34
 8002922:	2100      	movs	r1, #0
 8002924:	4618      	mov	r0, r3
 8002926:	f009 fd41 	bl	800c3ac <memset>

  /* USER CODE BEGIN LTDC_Init 1 */

  /* USER CODE END LTDC_Init 1 */
  hltdc.Instance = LTDC;
 800292a:	4b39      	ldr	r3, [pc, #228]	@ (8002a10 <MX_LTDC_Init+0xf8>)
 800292c:	4a39      	ldr	r2, [pc, #228]	@ (8002a14 <MX_LTDC_Init+0xfc>)
 800292e:	601a      	str	r2, [r3, #0]
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 8002930:	4b37      	ldr	r3, [pc, #220]	@ (8002a10 <MX_LTDC_Init+0xf8>)
 8002932:	2200      	movs	r2, #0
 8002934:	605a      	str	r2, [r3, #4]
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
 8002936:	4b36      	ldr	r3, [pc, #216]	@ (8002a10 <MX_LTDC_Init+0xf8>)
 8002938:	2200      	movs	r2, #0
 800293a:	609a      	str	r2, [r3, #8]
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 800293c:	4b34      	ldr	r3, [pc, #208]	@ (8002a10 <MX_LTDC_Init+0xf8>)
 800293e:	2200      	movs	r2, #0
 8002940:	60da      	str	r2, [r3, #12]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 8002942:	4b33      	ldr	r3, [pc, #204]	@ (8002a10 <MX_LTDC_Init+0xf8>)
 8002944:	2200      	movs	r2, #0
 8002946:	611a      	str	r2, [r3, #16]
  hltdc.Init.HorizontalSync = 9;
 8002948:	4b31      	ldr	r3, [pc, #196]	@ (8002a10 <MX_LTDC_Init+0xf8>)
 800294a:	2209      	movs	r2, #9
 800294c:	615a      	str	r2, [r3, #20]
  hltdc.Init.VerticalSync = 1;
 800294e:	4b30      	ldr	r3, [pc, #192]	@ (8002a10 <MX_LTDC_Init+0xf8>)
 8002950:	2201      	movs	r2, #1
 8002952:	619a      	str	r2, [r3, #24]
  hltdc.Init.AccumulatedHBP = 29;
 8002954:	4b2e      	ldr	r3, [pc, #184]	@ (8002a10 <MX_LTDC_Init+0xf8>)
 8002956:	221d      	movs	r2, #29
 8002958:	61da      	str	r2, [r3, #28]
  hltdc.Init.AccumulatedVBP = 3;
 800295a:	4b2d      	ldr	r3, [pc, #180]	@ (8002a10 <MX_LTDC_Init+0xf8>)
 800295c:	2203      	movs	r2, #3
 800295e:	621a      	str	r2, [r3, #32]
  hltdc.Init.AccumulatedActiveW = 269;
 8002960:	4b2b      	ldr	r3, [pc, #172]	@ (8002a10 <MX_LTDC_Init+0xf8>)
 8002962:	f240 120d 	movw	r2, #269	@ 0x10d
 8002966:	625a      	str	r2, [r3, #36]	@ 0x24
  hltdc.Init.AccumulatedActiveH = 323;
 8002968:	4b29      	ldr	r3, [pc, #164]	@ (8002a10 <MX_LTDC_Init+0xf8>)
 800296a:	f240 1243 	movw	r2, #323	@ 0x143
 800296e:	629a      	str	r2, [r3, #40]	@ 0x28
  hltdc.Init.TotalWidth = 279;
 8002970:	4b27      	ldr	r3, [pc, #156]	@ (8002a10 <MX_LTDC_Init+0xf8>)
 8002972:	f240 1217 	movw	r2, #279	@ 0x117
 8002976:	62da      	str	r2, [r3, #44]	@ 0x2c
  hltdc.Init.TotalHeigh = 327;
 8002978:	4b25      	ldr	r3, [pc, #148]	@ (8002a10 <MX_LTDC_Init+0xf8>)
 800297a:	f240 1247 	movw	r2, #327	@ 0x147
 800297e:	631a      	str	r2, [r3, #48]	@ 0x30
  hltdc.Init.Backcolor.Blue = 0;
 8002980:	4b23      	ldr	r3, [pc, #140]	@ (8002a10 <MX_LTDC_Init+0xf8>)
 8002982:	2200      	movs	r2, #0
 8002984:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
  hltdc.Init.Backcolor.Green = 0;
 8002988:	4b21      	ldr	r3, [pc, #132]	@ (8002a10 <MX_LTDC_Init+0xf8>)
 800298a:	2200      	movs	r2, #0
 800298c:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
  hltdc.Init.Backcolor.Red = 0;
 8002990:	4b1f      	ldr	r3, [pc, #124]	@ (8002a10 <MX_LTDC_Init+0xf8>)
 8002992:	2200      	movs	r2, #0
 8002994:	f883 2036 	strb.w	r2, [r3, #54]	@ 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8002998:	481d      	ldr	r0, [pc, #116]	@ (8002a10 <MX_LTDC_Init+0xf8>)
 800299a:	f003 fe79 	bl	8006690 <HAL_LTDC_Init>
 800299e:	4603      	mov	r3, r0
 80029a0:	2b00      	cmp	r3, #0
 80029a2:	d001      	beq.n	80029a8 <MX_LTDC_Init+0x90>
  {
    Error_Handler();
 80029a4:	f000 fa96 	bl	8002ed4 <Error_Handler>
  }
  pLayerCfg.WindowX0 = 0;
 80029a8:	2300      	movs	r3, #0
 80029aa:	607b      	str	r3, [r7, #4]
  pLayerCfg.WindowX1 = 240;
 80029ac:	23f0      	movs	r3, #240	@ 0xf0
 80029ae:	60bb      	str	r3, [r7, #8]
  pLayerCfg.WindowY0 = 0;
 80029b0:	2300      	movs	r3, #0
 80029b2:	60fb      	str	r3, [r7, #12]
  pLayerCfg.WindowY1 = 320;
 80029b4:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 80029b8:	613b      	str	r3, [r7, #16]
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 80029ba:	2302      	movs	r3, #2
 80029bc:	617b      	str	r3, [r7, #20]
  pLayerCfg.Alpha = 255;
 80029be:	23ff      	movs	r3, #255	@ 0xff
 80029c0:	61bb      	str	r3, [r7, #24]
  pLayerCfg.Alpha0 = 0;
 80029c2:	2300      	movs	r3, #0
 80029c4:	61fb      	str	r3, [r7, #28]
  pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_PAxCA;
 80029c6:	f44f 63c0 	mov.w	r3, #1536	@ 0x600
 80029ca:	623b      	str	r3, [r7, #32]
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_PAxCA;
 80029cc:	2307      	movs	r3, #7
 80029ce:	627b      	str	r3, [r7, #36]	@ 0x24
  pLayerCfg.FBStartAdress = 0xD0000000;
 80029d0:	f04f 4350 	mov.w	r3, #3489660928	@ 0xd0000000
 80029d4:	62bb      	str	r3, [r7, #40]	@ 0x28
  pLayerCfg.ImageWidth = 240;
 80029d6:	23f0      	movs	r3, #240	@ 0xf0
 80029d8:	62fb      	str	r3, [r7, #44]	@ 0x2c
  pLayerCfg.ImageHeight = 320;
 80029da:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 80029de:	633b      	str	r3, [r7, #48]	@ 0x30
  pLayerCfg.Backcolor.Blue = 0;
 80029e0:	2300      	movs	r3, #0
 80029e2:	f887 3034 	strb.w	r3, [r7, #52]	@ 0x34
  pLayerCfg.Backcolor.Green = 0;
 80029e6:	2300      	movs	r3, #0
 80029e8:	f887 3035 	strb.w	r3, [r7, #53]	@ 0x35
  pLayerCfg.Backcolor.Red = 0;
 80029ec:	2300      	movs	r3, #0
 80029ee:	f887 3036 	strb.w	r3, [r7, #54]	@ 0x36
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 80029f2:	1d3b      	adds	r3, r7, #4
 80029f4:	2200      	movs	r2, #0
 80029f6:	4619      	mov	r1, r3
 80029f8:	4805      	ldr	r0, [pc, #20]	@ (8002a10 <MX_LTDC_Init+0xf8>)
 80029fa:	f003 ffdb 	bl	80069b4 <HAL_LTDC_ConfigLayer>
 80029fe:	4603      	mov	r3, r0
 8002a00:	2b00      	cmp	r3, #0
 8002a02:	d001      	beq.n	8002a08 <MX_LTDC_Init+0xf0>
  {
    Error_Handler();
 8002a04:	f000 fa66 	bl	8002ed4 <Error_Handler>
  }
  /* USER CODE BEGIN LTDC_Init 2 */

  /* USER CODE END LTDC_Init 2 */

}
 8002a08:	bf00      	nop
 8002a0a:	3738      	adds	r7, #56	@ 0x38
 8002a0c:	46bd      	mov	sp, r7
 8002a0e:	bd80      	pop	{r7, pc}
 8002a10:	20025bd4 	.word	0x20025bd4
 8002a14:	40016800 	.word	0x40016800

08002a18 <HAL_LTDC_MspInit>:

void HAL_LTDC_MspInit(LTDC_HandleTypeDef* ltdcHandle)
{
 8002a18:	b580      	push	{r7, lr}
 8002a1a:	b09a      	sub	sp, #104	@ 0x68
 8002a1c:	af00      	add	r7, sp, #0
 8002a1e:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002a20:	f107 0354 	add.w	r3, r7, #84	@ 0x54
 8002a24:	2200      	movs	r2, #0
 8002a26:	601a      	str	r2, [r3, #0]
 8002a28:	605a      	str	r2, [r3, #4]
 8002a2a:	609a      	str	r2, [r3, #8]
 8002a2c:	60da      	str	r2, [r3, #12]
 8002a2e:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8002a30:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8002a34:	2230      	movs	r2, #48	@ 0x30
 8002a36:	2100      	movs	r1, #0
 8002a38:	4618      	mov	r0, r3
 8002a3a:	f009 fcb7 	bl	800c3ac <memset>
  if(ltdcHandle->Instance==LTDC)
 8002a3e:	687b      	ldr	r3, [r7, #4]
 8002a40:	681b      	ldr	r3, [r3, #0]
 8002a42:	4a85      	ldr	r2, [pc, #532]	@ (8002c58 <HAL_LTDC_MspInit+0x240>)
 8002a44:	4293      	cmp	r3, r2
 8002a46:	f040 8102 	bne.w	8002c4e <HAL_LTDC_MspInit+0x236>

  /* USER CODE END LTDC_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8002a4a:	2308      	movs	r3, #8
 8002a4c:	627b      	str	r3, [r7, #36]	@ 0x24
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 50;
 8002a4e:	2332      	movs	r3, #50	@ 0x32
 8002a50:	637b      	str	r3, [r7, #52]	@ 0x34
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 2;
 8002a52:	2302      	movs	r3, #2
 8002a54:	63fb      	str	r3, [r7, #60]	@ 0x3c
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_2;
 8002a56:	2300      	movs	r3, #0
 8002a58:	64bb      	str	r3, [r7, #72]	@ 0x48
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8002a5a:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8002a5e:	4618      	mov	r0, r3
 8002a60:	f004 fe48 	bl	80076f4 <HAL_RCCEx_PeriphCLKConfig>
 8002a64:	4603      	mov	r3, r0
 8002a66:	2b00      	cmp	r3, #0
 8002a68:	d001      	beq.n	8002a6e <HAL_LTDC_MspInit+0x56>
    {
      Error_Handler();
 8002a6a:	f000 fa33 	bl	8002ed4 <Error_Handler>
    }

    /* LTDC clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 8002a6e:	2300      	movs	r3, #0
 8002a70:	623b      	str	r3, [r7, #32]
 8002a72:	4b7a      	ldr	r3, [pc, #488]	@ (8002c5c <HAL_LTDC_MspInit+0x244>)
 8002a74:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002a76:	4a79      	ldr	r2, [pc, #484]	@ (8002c5c <HAL_LTDC_MspInit+0x244>)
 8002a78:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 8002a7c:	6453      	str	r3, [r2, #68]	@ 0x44
 8002a7e:	4b77      	ldr	r3, [pc, #476]	@ (8002c5c <HAL_LTDC_MspInit+0x244>)
 8002a80:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002a82:	f003 6380 	and.w	r3, r3, #67108864	@ 0x4000000
 8002a86:	623b      	str	r3, [r7, #32]
 8002a88:	6a3b      	ldr	r3, [r7, #32]

    __HAL_RCC_GPIOF_CLK_ENABLE();
 8002a8a:	2300      	movs	r3, #0
 8002a8c:	61fb      	str	r3, [r7, #28]
 8002a8e:	4b73      	ldr	r3, [pc, #460]	@ (8002c5c <HAL_LTDC_MspInit+0x244>)
 8002a90:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002a92:	4a72      	ldr	r2, [pc, #456]	@ (8002c5c <HAL_LTDC_MspInit+0x244>)
 8002a94:	f043 0320 	orr.w	r3, r3, #32
 8002a98:	6313      	str	r3, [r2, #48]	@ 0x30
 8002a9a:	4b70      	ldr	r3, [pc, #448]	@ (8002c5c <HAL_LTDC_MspInit+0x244>)
 8002a9c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002a9e:	f003 0320 	and.w	r3, r3, #32
 8002aa2:	61fb      	str	r3, [r7, #28]
 8002aa4:	69fb      	ldr	r3, [r7, #28]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002aa6:	2300      	movs	r3, #0
 8002aa8:	61bb      	str	r3, [r7, #24]
 8002aaa:	4b6c      	ldr	r3, [pc, #432]	@ (8002c5c <HAL_LTDC_MspInit+0x244>)
 8002aac:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002aae:	4a6b      	ldr	r2, [pc, #428]	@ (8002c5c <HAL_LTDC_MspInit+0x244>)
 8002ab0:	f043 0301 	orr.w	r3, r3, #1
 8002ab4:	6313      	str	r3, [r2, #48]	@ 0x30
 8002ab6:	4b69      	ldr	r3, [pc, #420]	@ (8002c5c <HAL_LTDC_MspInit+0x244>)
 8002ab8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002aba:	f003 0301 	and.w	r3, r3, #1
 8002abe:	61bb      	str	r3, [r7, #24]
 8002ac0:	69bb      	ldr	r3, [r7, #24]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8002ac2:	2300      	movs	r3, #0
 8002ac4:	617b      	str	r3, [r7, #20]
 8002ac6:	4b65      	ldr	r3, [pc, #404]	@ (8002c5c <HAL_LTDC_MspInit+0x244>)
 8002ac8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002aca:	4a64      	ldr	r2, [pc, #400]	@ (8002c5c <HAL_LTDC_MspInit+0x244>)
 8002acc:	f043 0302 	orr.w	r3, r3, #2
 8002ad0:	6313      	str	r3, [r2, #48]	@ 0x30
 8002ad2:	4b62      	ldr	r3, [pc, #392]	@ (8002c5c <HAL_LTDC_MspInit+0x244>)
 8002ad4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002ad6:	f003 0302 	and.w	r3, r3, #2
 8002ada:	617b      	str	r3, [r7, #20]
 8002adc:	697b      	ldr	r3, [r7, #20]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8002ade:	2300      	movs	r3, #0
 8002ae0:	613b      	str	r3, [r7, #16]
 8002ae2:	4b5e      	ldr	r3, [pc, #376]	@ (8002c5c <HAL_LTDC_MspInit+0x244>)
 8002ae4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002ae6:	4a5d      	ldr	r2, [pc, #372]	@ (8002c5c <HAL_LTDC_MspInit+0x244>)
 8002ae8:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8002aec:	6313      	str	r3, [r2, #48]	@ 0x30
 8002aee:	4b5b      	ldr	r3, [pc, #364]	@ (8002c5c <HAL_LTDC_MspInit+0x244>)
 8002af0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002af2:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8002af6:	613b      	str	r3, [r7, #16]
 8002af8:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8002afa:	2300      	movs	r3, #0
 8002afc:	60fb      	str	r3, [r7, #12]
 8002afe:	4b57      	ldr	r3, [pc, #348]	@ (8002c5c <HAL_LTDC_MspInit+0x244>)
 8002b00:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002b02:	4a56      	ldr	r2, [pc, #344]	@ (8002c5c <HAL_LTDC_MspInit+0x244>)
 8002b04:	f043 0304 	orr.w	r3, r3, #4
 8002b08:	6313      	str	r3, [r2, #48]	@ 0x30
 8002b0a:	4b54      	ldr	r3, [pc, #336]	@ (8002c5c <HAL_LTDC_MspInit+0x244>)
 8002b0c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002b0e:	f003 0304 	and.w	r3, r3, #4
 8002b12:	60fb      	str	r3, [r7, #12]
 8002b14:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8002b16:	2300      	movs	r3, #0
 8002b18:	60bb      	str	r3, [r7, #8]
 8002b1a:	4b50      	ldr	r3, [pc, #320]	@ (8002c5c <HAL_LTDC_MspInit+0x244>)
 8002b1c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002b1e:	4a4f      	ldr	r2, [pc, #316]	@ (8002c5c <HAL_LTDC_MspInit+0x244>)
 8002b20:	f043 0308 	orr.w	r3, r3, #8
 8002b24:	6313      	str	r3, [r2, #48]	@ 0x30
 8002b26:	4b4d      	ldr	r3, [pc, #308]	@ (8002c5c <HAL_LTDC_MspInit+0x244>)
 8002b28:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002b2a:	f003 0308 	and.w	r3, r3, #8
 8002b2e:	60bb      	str	r3, [r7, #8]
 8002b30:	68bb      	ldr	r3, [r7, #8]
    PG11     ------> LTDC_B3
    PG12     ------> LTDC_B4
    PB8     ------> LTDC_B6
    PB9     ------> LTDC_B7
    */
    GPIO_InitStruct.Pin = ENABLE_Pin;
 8002b32:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8002b36:	657b      	str	r3, [r7, #84]	@ 0x54
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002b38:	2302      	movs	r3, #2
 8002b3a:	65bb      	str	r3, [r7, #88]	@ 0x58
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002b3c:	2300      	movs	r3, #0
 8002b3e:	65fb      	str	r3, [r7, #92]	@ 0x5c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002b40:	2300      	movs	r3, #0
 8002b42:	663b      	str	r3, [r7, #96]	@ 0x60
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002b44:	230e      	movs	r3, #14
 8002b46:	667b      	str	r3, [r7, #100]	@ 0x64
    HAL_GPIO_Init(ENABLE_GPIO_Port, &GPIO_InitStruct);
 8002b48:	f107 0354 	add.w	r3, r7, #84	@ 0x54
 8002b4c:	4619      	mov	r1, r3
 8002b4e:	4844      	ldr	r0, [pc, #272]	@ (8002c60 <HAL_LTDC_MspInit+0x248>)
 8002b50:	f001 fc72 	bl	8004438 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = B5_Pin|VSYNC_Pin|G2_Pin|R4_Pin
 8002b54:	f641 0358 	movw	r3, #6232	@ 0x1858
 8002b58:	657b      	str	r3, [r7, #84]	@ 0x54
                          |R5_Pin;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002b5a:	2302      	movs	r3, #2
 8002b5c:	65bb      	str	r3, [r7, #88]	@ 0x58
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002b5e:	2300      	movs	r3, #0
 8002b60:	65fb      	str	r3, [r7, #92]	@ 0x5c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002b62:	2300      	movs	r3, #0
 8002b64:	663b      	str	r3, [r7, #96]	@ 0x60
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002b66:	230e      	movs	r3, #14
 8002b68:	667b      	str	r3, [r7, #100]	@ 0x64
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002b6a:	f107 0354 	add.w	r3, r7, #84	@ 0x54
 8002b6e:	4619      	mov	r1, r3
 8002b70:	483c      	ldr	r0, [pc, #240]	@ (8002c64 <HAL_LTDC_MspInit+0x24c>)
 8002b72:	f001 fc61 	bl	8004438 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = R3_Pin|R6_Pin;
 8002b76:	2303      	movs	r3, #3
 8002b78:	657b      	str	r3, [r7, #84]	@ 0x54
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002b7a:	2302      	movs	r3, #2
 8002b7c:	65bb      	str	r3, [r7, #88]	@ 0x58
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002b7e:	2300      	movs	r3, #0
 8002b80:	65fb      	str	r3, [r7, #92]	@ 0x5c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002b82:	2300      	movs	r3, #0
 8002b84:	663b      	str	r3, [r7, #96]	@ 0x60
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8002b86:	2309      	movs	r3, #9
 8002b88:	667b      	str	r3, [r7, #100]	@ 0x64
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002b8a:	f107 0354 	add.w	r3, r7, #84	@ 0x54
 8002b8e:	4619      	mov	r1, r3
 8002b90:	4835      	ldr	r0, [pc, #212]	@ (8002c68 <HAL_LTDC_MspInit+0x250>)
 8002b92:	f001 fc51 	bl	8004438 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = G4_Pin|G5_Pin|B6_Pin|B7_Pin;
 8002b96:	f44f 6370 	mov.w	r3, #3840	@ 0xf00
 8002b9a:	657b      	str	r3, [r7, #84]	@ 0x54
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002b9c:	2302      	movs	r3, #2
 8002b9e:	65bb      	str	r3, [r7, #88]	@ 0x58
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002ba0:	2300      	movs	r3, #0
 8002ba2:	65fb      	str	r3, [r7, #92]	@ 0x5c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002ba4:	2300      	movs	r3, #0
 8002ba6:	663b      	str	r3, [r7, #96]	@ 0x60
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002ba8:	230e      	movs	r3, #14
 8002baa:	667b      	str	r3, [r7, #100]	@ 0x64
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002bac:	f107 0354 	add.w	r3, r7, #84	@ 0x54
 8002bb0:	4619      	mov	r1, r3
 8002bb2:	482d      	ldr	r0, [pc, #180]	@ (8002c68 <HAL_LTDC_MspInit+0x250>)
 8002bb4:	f001 fc40 	bl	8004438 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = R7_Pin|DOTCLK_Pin|B3_Pin;
 8002bb8:	f44f 630c 	mov.w	r3, #2240	@ 0x8c0
 8002bbc:	657b      	str	r3, [r7, #84]	@ 0x54
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002bbe:	2302      	movs	r3, #2
 8002bc0:	65bb      	str	r3, [r7, #88]	@ 0x58
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002bc2:	2300      	movs	r3, #0
 8002bc4:	65fb      	str	r3, [r7, #92]	@ 0x5c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002bc6:	2300      	movs	r3, #0
 8002bc8:	663b      	str	r3, [r7, #96]	@ 0x60
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002bca:	230e      	movs	r3, #14
 8002bcc:	667b      	str	r3, [r7, #100]	@ 0x64
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002bce:	f107 0354 	add.w	r3, r7, #84	@ 0x54
 8002bd2:	4619      	mov	r1, r3
 8002bd4:	4825      	ldr	r0, [pc, #148]	@ (8002c6c <HAL_LTDC_MspInit+0x254>)
 8002bd6:	f001 fc2f 	bl	8004438 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = HSYNC_Pin|G6_Pin|R2_Pin;
 8002bda:	f44f 6398 	mov.w	r3, #1216	@ 0x4c0
 8002bde:	657b      	str	r3, [r7, #84]	@ 0x54
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002be0:	2302      	movs	r3, #2
 8002be2:	65bb      	str	r3, [r7, #88]	@ 0x58
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002be4:	2300      	movs	r3, #0
 8002be6:	65fb      	str	r3, [r7, #92]	@ 0x5c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002be8:	2300      	movs	r3, #0
 8002bea:	663b      	str	r3, [r7, #96]	@ 0x60
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002bec:	230e      	movs	r3, #14
 8002bee:	667b      	str	r3, [r7, #100]	@ 0x64
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002bf0:	f107 0354 	add.w	r3, r7, #84	@ 0x54
 8002bf4:	4619      	mov	r1, r3
 8002bf6:	481e      	ldr	r0, [pc, #120]	@ (8002c70 <HAL_LTDC_MspInit+0x258>)
 8002bf8:	f001 fc1e 	bl	8004438 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = G7_Pin|B2D6_Pin;
 8002bfc:	2348      	movs	r3, #72	@ 0x48
 8002bfe:	657b      	str	r3, [r7, #84]	@ 0x54
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002c00:	2302      	movs	r3, #2
 8002c02:	65bb      	str	r3, [r7, #88]	@ 0x58
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002c04:	2300      	movs	r3, #0
 8002c06:	65fb      	str	r3, [r7, #92]	@ 0x5c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002c08:	2300      	movs	r3, #0
 8002c0a:	663b      	str	r3, [r7, #96]	@ 0x60
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002c0c:	230e      	movs	r3, #14
 8002c0e:	667b      	str	r3, [r7, #100]	@ 0x64
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002c10:	f107 0354 	add.w	r3, r7, #84	@ 0x54
 8002c14:	4619      	mov	r1, r3
 8002c16:	4817      	ldr	r0, [pc, #92]	@ (8002c74 <HAL_LTDC_MspInit+0x25c>)
 8002c18:	f001 fc0e 	bl	8004438 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = G3_Pin|B4_Pin;
 8002c1c:	f44f 53a0 	mov.w	r3, #5120	@ 0x1400
 8002c20:	657b      	str	r3, [r7, #84]	@ 0x54
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002c22:	2302      	movs	r3, #2
 8002c24:	65bb      	str	r3, [r7, #88]	@ 0x58
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002c26:	2300      	movs	r3, #0
 8002c28:	65fb      	str	r3, [r7, #92]	@ 0x5c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002c2a:	2300      	movs	r3, #0
 8002c2c:	663b      	str	r3, [r7, #96]	@ 0x60
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8002c2e:	2309      	movs	r3, #9
 8002c30:	667b      	str	r3, [r7, #100]	@ 0x64
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002c32:	f107 0354 	add.w	r3, r7, #84	@ 0x54
 8002c36:	4619      	mov	r1, r3
 8002c38:	480c      	ldr	r0, [pc, #48]	@ (8002c6c <HAL_LTDC_MspInit+0x254>)
 8002c3a:	f001 fbfd 	bl	8004438 <HAL_GPIO_Init>

    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8002c3e:	2200      	movs	r2, #0
 8002c40:	2105      	movs	r1, #5
 8002c42:	2058      	movs	r0, #88	@ 0x58
 8002c44:	f000 fe56 	bl	80038f4 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8002c48:	2058      	movs	r0, #88	@ 0x58
 8002c4a:	f000 fe6f 	bl	800392c <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }
}
 8002c4e:	bf00      	nop
 8002c50:	3768      	adds	r7, #104	@ 0x68
 8002c52:	46bd      	mov	sp, r7
 8002c54:	bd80      	pop	{r7, pc}
 8002c56:	bf00      	nop
 8002c58:	40016800 	.word	0x40016800
 8002c5c:	40023800 	.word	0x40023800
 8002c60:	40021400 	.word	0x40021400
 8002c64:	40020000 	.word	0x40020000
 8002c68:	40020400 	.word	0x40020400
 8002c6c:	40021800 	.word	0x40021800
 8002c70:	40020800 	.word	0x40020800
 8002c74:	40020c00 	.word	0x40020c00

08002c78 <HAL_SPI_TxCpltCallback>:
	} else {
		clicked = 0;
	}
}

void HAL_SPI_TxCpltCallback(SPI_HandleTypeDef *hspi) {
 8002c78:	b580      	push	{r7, lr}
 8002c7a:	b082      	sub	sp, #8
 8002c7c:	af00      	add	r7, sp, #0
 8002c7e:	6078      	str	r0, [r7, #4]
	if (hspi == &hspi5) {
 8002c80:	687b      	ldr	r3, [r7, #4]
 8002c82:	4a04      	ldr	r2, [pc, #16]	@ (8002c94 <HAL_SPI_TxCpltCallback+0x1c>)
 8002c84:	4293      	cmp	r3, r2
 8002c86:	d101      	bne.n	8002c8c <HAL_SPI_TxCpltCallback+0x14>
		go_for_next_chunk();
 8002c88:	f7ff fe28 	bl	80028dc <go_for_next_chunk>
	}
}
 8002c8c:	bf00      	nop
 8002c8e:	3708      	adds	r7, #8
 8002c90:	46bd      	mov	sp, r7
 8002c92:	bd80      	pop	{r7, pc}
 8002c94:	20025c98 	.word	0x20025c98

08002c98 <set_new_figs>:
void set_new_figs(void) {
 8002c98:	b580      	push	{r7, lr}
 8002c9a:	b082      	sub	sp, #8
 8002c9c:	af02      	add	r7, sp, #8
	lcd_set_rectangle(0, 100, 0, 50, 100, RED);
 8002c9e:	f44f 4378 	mov.w	r3, #63488	@ 0xf800
 8002ca2:	9301      	str	r3, [sp, #4]
 8002ca4:	2364      	movs	r3, #100	@ 0x64
 8002ca6:	9300      	str	r3, [sp, #0]
 8002ca8:	2332      	movs	r3, #50	@ 0x32
 8002caa:	2200      	movs	r2, #0
 8002cac:	2164      	movs	r1, #100	@ 0x64
 8002cae:	2000      	movs	r0, #0
 8002cb0:	f7ff fa46 	bl	8002140 <lcd_set_rectangle>
	lcd_set_rectangle(1, 150, 190, 60, 15, YELLOW);
 8002cb4:	f64f 73e0 	movw	r3, #65504	@ 0xffe0
 8002cb8:	9301      	str	r3, [sp, #4]
 8002cba:	230f      	movs	r3, #15
 8002cbc:	9300      	str	r3, [sp, #0]
 8002cbe:	233c      	movs	r3, #60	@ 0x3c
 8002cc0:	22be      	movs	r2, #190	@ 0xbe
 8002cc2:	2196      	movs	r1, #150	@ 0x96
 8002cc4:	2001      	movs	r0, #1
 8002cc6:	f7ff fa3b 	bl	8002140 <lcd_set_rectangle>
	lcd_set_rectangle(2, 0, 250, 200, 30, RED);
 8002cca:	f44f 4378 	mov.w	r3, #63488	@ 0xf800
 8002cce:	9301      	str	r3, [sp, #4]
 8002cd0:	231e      	movs	r3, #30
 8002cd2:	9300      	str	r3, [sp, #0]
 8002cd4:	23c8      	movs	r3, #200	@ 0xc8
 8002cd6:	22fa      	movs	r2, #250	@ 0xfa
 8002cd8:	2100      	movs	r1, #0
 8002cda:	2002      	movs	r0, #2
 8002cdc:	f7ff fa30 	bl	8002140 <lcd_set_rectangle>
	lcd_set_circle(LCD_WIDTH/2, LCD_HEIGHT/2, 10, GREEN);
 8002ce0:	f44f 63fc 	mov.w	r3, #2016	@ 0x7e0
 8002ce4:	220a      	movs	r2, #10
 8002ce6:	21a0      	movs	r1, #160	@ 0xa0
 8002ce8:	2078      	movs	r0, #120	@ 0x78
 8002cea:	f7ff fa6b 	bl	80021c4 <lcd_set_circle>
}
 8002cee:	bf00      	nop
 8002cf0:	46bd      	mov	sp, r7
 8002cf2:	bd80      	pop	{r7, pc}

08002cf4 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8002cf4:	b580      	push	{r7, lr}
 8002cf6:	b082      	sub	sp, #8
 8002cf8:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8002cfa:	f000 fcdd 	bl	80036b8 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8002cfe:	f000 f84b 	bl	8002d98 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8002d02:	f7fe fc79 	bl	80015f8 <MX_GPIO_Init>
  MX_DMA_Init();
 8002d06:	f7fe fb11 	bl	800132c <MX_DMA_Init>
  MX_CRC_Init();
 8002d0a:	f7fe fad9 	bl	80012c0 <MX_CRC_Init>
  MX_DMA2D_Init();
 8002d0e:	f7fe fb2d 	bl	800136c <MX_DMA2D_Init>
  MX_FMC_Init();
 8002d12:	f7fe fb85 	bl	8001420 <MX_FMC_Init>
  MX_I2C3_Init();
 8002d16:	f7ff f85d 	bl	8001dd4 <MX_I2C3_Init>
  MX_LTDC_Init();
 8002d1a:	f7ff fdfd 	bl	8002918 <MX_LTDC_Init>
  MX_SPI5_Init();
 8002d1e:	f000 f8ff 	bl	8002f20 <MX_SPI5_Init>
  MX_TIM1_Init();
 8002d22:	f000 fb69 	bl	80033f8 <MX_TIM1_Init>
  MX_USART1_UART_Init();
 8002d26:	f000 fc2b 	bl	8003580 <MX_USART1_UART_Init>
  MX_TIM7_Init();
 8002d2a:	f000 fbb5 	bl	8003498 <MX_TIM7_Init>
  /* USER CODE BEGIN 2 */
	lcd_init();
 8002d2e:	f7ff f981 	bl	8002034 <lcd_init>
	for (int y = 0; y < LCD_HEIGHT; y++) {
 8002d32:	2300      	movs	r3, #0
 8002d34:	607b      	str	r3, [r7, #4]
 8002d36:	e010      	b.n	8002d5a <main+0x66>
		for (int x = 0; x < LCD_WIDTH; x++) {
 8002d38:	2300      	movs	r3, #0
 8002d3a:	603b      	str	r3, [r7, #0]
 8002d3c:	e007      	b.n	8002d4e <main+0x5a>
			lcd_put_pixel(x, y, BLUE);
 8002d3e:	221f      	movs	r2, #31
 8002d40:	6879      	ldr	r1, [r7, #4]
 8002d42:	6838      	ldr	r0, [r7, #0]
 8002d44:	f7ff fc28 	bl	8002598 <lcd_put_pixel>
		for (int x = 0; x < LCD_WIDTH; x++) {
 8002d48:	683b      	ldr	r3, [r7, #0]
 8002d4a:	3301      	adds	r3, #1
 8002d4c:	603b      	str	r3, [r7, #0]
 8002d4e:	683b      	ldr	r3, [r7, #0]
 8002d50:	2bef      	cmp	r3, #239	@ 0xef
 8002d52:	ddf4      	ble.n	8002d3e <main+0x4a>
	for (int y = 0; y < LCD_HEIGHT; y++) {
 8002d54:	687b      	ldr	r3, [r7, #4]
 8002d56:	3301      	adds	r3, #1
 8002d58:	607b      	str	r3, [r7, #4]
 8002d5a:	687b      	ldr	r3, [r7, #4]
 8002d5c:	f5b3 7fa0 	cmp.w	r3, #320	@ 0x140
 8002d60:	dbea      	blt.n	8002d38 <main+0x44>
		}
	}
	set_new_figs();
 8002d62:	f7ff ff99 	bl	8002c98 <set_new_figs>
	lcd_update();
 8002d66:	f7ff fd01 	bl	800276c <lcd_update>


	HAL_Delay(300); //żeby LCD skończył swoje przesyłanie
 8002d6a:	f44f 7096 	mov.w	r0, #300	@ 0x12c
 8002d6e:	f000 fce5 	bl	800373c <HAL_Delay>
	gyro_init();
 8002d72:	f7fe fd81 	bl	8001878 <gyro_init>
	gyro_calculate_offset(&gyro_offset_s);
 8002d76:	4806      	ldr	r0, [pc, #24]	@ (8002d90 <main+0x9c>)
 8002d78:	f7fe ff3c 	bl	8001bf4 <gyro_calculate_offset>
	HAL_Delay(300);
 8002d7c:	f44f 7096 	mov.w	r0, #300	@ 0x12c
 8002d80:	f000 fcdc 	bl	800373c <HAL_Delay>
	HAL_TIM_Base_Start_IT(&htim7);
 8002d84:	4803      	ldr	r0, [pc, #12]	@ (8002d94 <main+0xa0>)
 8002d86:	f005 fe13 	bl	80089b0 <HAL_TIM_Base_Start_IT>
  /* We should never get here as control is now taken by the scheduler */

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */

	while (1) {
 8002d8a:	bf00      	nop
 8002d8c:	e7fd      	b.n	8002d8a <main+0x96>
 8002d8e:	bf00      	nop
 8002d90:	20025c8c 	.word	0x20025c8c
 8002d94:	20025de4 	.word	0x20025de4

08002d98 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8002d98:	b580      	push	{r7, lr}
 8002d9a:	b094      	sub	sp, #80	@ 0x50
 8002d9c:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8002d9e:	f107 0320 	add.w	r3, r7, #32
 8002da2:	2230      	movs	r2, #48	@ 0x30
 8002da4:	2100      	movs	r1, #0
 8002da6:	4618      	mov	r0, r3
 8002da8:	f009 fb00 	bl	800c3ac <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8002dac:	f107 030c 	add.w	r3, r7, #12
 8002db0:	2200      	movs	r2, #0
 8002db2:	601a      	str	r2, [r3, #0]
 8002db4:	605a      	str	r2, [r3, #4]
 8002db6:	609a      	str	r2, [r3, #8]
 8002db8:	60da      	str	r2, [r3, #12]
 8002dba:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8002dbc:	2300      	movs	r3, #0
 8002dbe:	60bb      	str	r3, [r7, #8]
 8002dc0:	4b28      	ldr	r3, [pc, #160]	@ (8002e64 <SystemClock_Config+0xcc>)
 8002dc2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002dc4:	4a27      	ldr	r2, [pc, #156]	@ (8002e64 <SystemClock_Config+0xcc>)
 8002dc6:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8002dca:	6413      	str	r3, [r2, #64]	@ 0x40
 8002dcc:	4b25      	ldr	r3, [pc, #148]	@ (8002e64 <SystemClock_Config+0xcc>)
 8002dce:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002dd0:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8002dd4:	60bb      	str	r3, [r7, #8]
 8002dd6:	68bb      	ldr	r3, [r7, #8]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 8002dd8:	2300      	movs	r3, #0
 8002dda:	607b      	str	r3, [r7, #4]
 8002ddc:	4b22      	ldr	r3, [pc, #136]	@ (8002e68 <SystemClock_Config+0xd0>)
 8002dde:	681b      	ldr	r3, [r3, #0]
 8002de0:	f423 4340 	bic.w	r3, r3, #49152	@ 0xc000
 8002de4:	4a20      	ldr	r2, [pc, #128]	@ (8002e68 <SystemClock_Config+0xd0>)
 8002de6:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8002dea:	6013      	str	r3, [r2, #0]
 8002dec:	4b1e      	ldr	r3, [pc, #120]	@ (8002e68 <SystemClock_Config+0xd0>)
 8002dee:	681b      	ldr	r3, [r3, #0]
 8002df0:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
 8002df4:	607b      	str	r3, [r7, #4]
 8002df6:	687b      	ldr	r3, [r7, #4]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8002df8:	2301      	movs	r3, #1
 8002dfa:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8002dfc:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 8002e00:	627b      	str	r3, [r7, #36]	@ 0x24
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8002e02:	2302      	movs	r3, #2
 8002e04:	63bb      	str	r3, [r7, #56]	@ 0x38
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8002e06:	f44f 0380 	mov.w	r3, #4194304	@ 0x400000
 8002e0a:	63fb      	str	r3, [r7, #60]	@ 0x3c
  RCC_OscInitStruct.PLL.PLLM = 4;
 8002e0c:	2304      	movs	r3, #4
 8002e0e:	643b      	str	r3, [r7, #64]	@ 0x40
  RCC_OscInitStruct.PLL.PLLN = 72;
 8002e10:	2348      	movs	r3, #72	@ 0x48
 8002e12:	647b      	str	r3, [r7, #68]	@ 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8002e14:	2302      	movs	r3, #2
 8002e16:	64bb      	str	r3, [r7, #72]	@ 0x48
  RCC_OscInitStruct.PLL.PLLQ = 3;
 8002e18:	2303      	movs	r3, #3
 8002e1a:	64fb      	str	r3, [r7, #76]	@ 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8002e1c:	f107 0320 	add.w	r3, r7, #32
 8002e20:	4618      	mov	r0, r3
 8002e22:	f003 ff9d 	bl	8006d60 <HAL_RCC_OscConfig>
 8002e26:	4603      	mov	r3, r0
 8002e28:	2b00      	cmp	r3, #0
 8002e2a:	d001      	beq.n	8002e30 <SystemClock_Config+0x98>
  {
    Error_Handler();
 8002e2c:	f000 f852 	bl	8002ed4 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8002e30:	230f      	movs	r3, #15
 8002e32:	60fb      	str	r3, [r7, #12]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8002e34:	2302      	movs	r3, #2
 8002e36:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8002e38:	2300      	movs	r3, #0
 8002e3a:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 8002e3c:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8002e40:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8002e42:	2300      	movs	r3, #0
 8002e44:	61fb      	str	r3, [r7, #28]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 8002e46:	f107 030c 	add.w	r3, r7, #12
 8002e4a:	2102      	movs	r1, #2
 8002e4c:	4618      	mov	r0, r3
 8002e4e:	f004 f9ff 	bl	8007250 <HAL_RCC_ClockConfig>
 8002e52:	4603      	mov	r3, r0
 8002e54:	2b00      	cmp	r3, #0
 8002e56:	d001      	beq.n	8002e5c <SystemClock_Config+0xc4>
  {
    Error_Handler();
 8002e58:	f000 f83c 	bl	8002ed4 <Error_Handler>
  }
}
 8002e5c:	bf00      	nop
 8002e5e:	3750      	adds	r7, #80	@ 0x50
 8002e60:	46bd      	mov	sp, r7
 8002e62:	bd80      	pop	{r7, pc}
 8002e64:	40023800 	.word	0x40023800
 8002e68:	40007000 	.word	0x40007000

08002e6c <HAL_TIM_PeriodElapsedCallback>:
  * a global variable "uwTick" used as application time base.
  * @param  htim : TIM handle
  * @retval None
  */
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
 8002e6c:	b580      	push	{r7, lr}
 8002e6e:	b082      	sub	sp, #8
 8002e70:	af00      	add	r7, sp, #0
 8002e72:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6)
 8002e74:	687b      	ldr	r3, [r7, #4]
 8002e76:	681b      	ldr	r3, [r3, #0]
 8002e78:	4a0f      	ldr	r2, [pc, #60]	@ (8002eb8 <HAL_TIM_PeriodElapsedCallback+0x4c>)
 8002e7a:	4293      	cmp	r3, r2
 8002e7c:	d102      	bne.n	8002e84 <HAL_TIM_PeriodElapsedCallback+0x18>
  {
    HAL_IncTick();
 8002e7e:	f000 fc3d 	bl	80036fc <HAL_IncTick>

	 ball_set_speed(&speed_x,&speed_y);
	 ball_move(&speed_x,&speed_y);
  }
  /* USER CODE END Callback 1 */
}
 8002e82:	e014      	b.n	8002eae <HAL_TIM_PeriodElapsedCallback+0x42>
  else if(htim->Instance == TIM7) {
 8002e84:	687b      	ldr	r3, [r7, #4]
 8002e86:	681b      	ldr	r3, [r3, #0]
 8002e88:	4a0c      	ldr	r2, [pc, #48]	@ (8002ebc <HAL_TIM_PeriodElapsedCallback+0x50>)
 8002e8a:	4293      	cmp	r3, r2
 8002e8c:	d10f      	bne.n	8002eae <HAL_TIM_PeriodElapsedCallback+0x42>
	 gyro_get_filtered_data(&gyro_raw_data_s);
 8002e8e:	480c      	ldr	r0, [pc, #48]	@ (8002ec0 <HAL_TIM_PeriodElapsedCallback+0x54>)
 8002e90:	f7fe fd4a 	bl	8001928 <gyro_get_filtered_data>
	 gyro_compensate_and_scale(&gyro_raw_data_s, &gyro_offset_s, &gyro_scaled_data_s);
 8002e94:	4a0b      	ldr	r2, [pc, #44]	@ (8002ec4 <HAL_TIM_PeriodElapsedCallback+0x58>)
 8002e96:	490c      	ldr	r1, [pc, #48]	@ (8002ec8 <HAL_TIM_PeriodElapsedCallback+0x5c>)
 8002e98:	4809      	ldr	r0, [pc, #36]	@ (8002ec0 <HAL_TIM_PeriodElapsedCallback+0x54>)
 8002e9a:	f7fe ff1d 	bl	8001cd8 <gyro_compensate_and_scale>
	 ball_set_speed(&speed_x,&speed_y);
 8002e9e:	490b      	ldr	r1, [pc, #44]	@ (8002ecc <HAL_TIM_PeriodElapsedCallback+0x60>)
 8002ea0:	480b      	ldr	r0, [pc, #44]	@ (8002ed0 <HAL_TIM_PeriodElapsedCallback+0x64>)
 8002ea2:	f7fe f829 	bl	8000ef8 <ball_set_speed>
	 ball_move(&speed_x,&speed_y);
 8002ea6:	4909      	ldr	r1, [pc, #36]	@ (8002ecc <HAL_TIM_PeriodElapsedCallback+0x60>)
 8002ea8:	4809      	ldr	r0, [pc, #36]	@ (8002ed0 <HAL_TIM_PeriodElapsedCallback+0x64>)
 8002eaa:	f7fe f909 	bl	80010c0 <ball_move>
}
 8002eae:	bf00      	nop
 8002eb0:	3708      	adds	r7, #8
 8002eb2:	46bd      	mov	sp, r7
 8002eb4:	bd80      	pop	{r7, pc}
 8002eb6:	bf00      	nop
 8002eb8:	40001000 	.word	0x40001000
 8002ebc:	40001400 	.word	0x40001400
 8002ec0:	20025c7c 	.word	0x20025c7c
 8002ec4:	20025c84 	.word	0x20025c84
 8002ec8:	20025c8c 	.word	0x20025c8c
 8002ecc:	20025c94 	.word	0x20025c94
 8002ed0:	20025c92 	.word	0x20025c92

08002ed4 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8002ed4:	b480      	push	{r7}
 8002ed6:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8002ed8:	b672      	cpsid	i
}
 8002eda:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
	/* User can add his own implementation to report the HAL error return state */
	__disable_irq();
	while (1) {
 8002edc:	bf00      	nop
 8002ede:	e7fd      	b.n	8002edc <Error_Handler+0x8>

08002ee0 <spi5_acquire>:
/* USER CODE BEGIN 0 */


static volatile bool spi5_busy = false;  //flaga informująca czy SPI5 jest zajęte

bool spi5_acquire(void) {  //zajmij SPI, gdy jest wolne
 8002ee0:	b480      	push	{r7}
 8002ee2:	af00      	add	r7, sp, #0

	if (spi5_busy) return false;
 8002ee4:	4b07      	ldr	r3, [pc, #28]	@ (8002f04 <spi5_acquire+0x24>)
 8002ee6:	781b      	ldrb	r3, [r3, #0]
 8002ee8:	b2db      	uxtb	r3, r3
 8002eea:	2b00      	cmp	r3, #0
 8002eec:	d001      	beq.n	8002ef2 <spi5_acquire+0x12>
 8002eee:	2300      	movs	r3, #0
 8002ef0:	e003      	b.n	8002efa <spi5_acquire+0x1a>

    spi5_busy = true;
 8002ef2:	4b04      	ldr	r3, [pc, #16]	@ (8002f04 <spi5_acquire+0x24>)
 8002ef4:	2201      	movs	r2, #1
 8002ef6:	701a      	strb	r2, [r3, #0]
    return true;
 8002ef8:	2301      	movs	r3, #1
}
 8002efa:	4618      	mov	r0, r3
 8002efc:	46bd      	mov	sp, r7
 8002efe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002f02:	4770      	bx	lr
 8002f04:	20025c96 	.word	0x20025c96

08002f08 <spi5_release>:

void spi5_release(void) { //zwolnij SPI
 8002f08:	b480      	push	{r7}
 8002f0a:	af00      	add	r7, sp, #0
    spi5_busy = false;
 8002f0c:	4b03      	ldr	r3, [pc, #12]	@ (8002f1c <spi5_release+0x14>)
 8002f0e:	2200      	movs	r2, #0
 8002f10:	701a      	strb	r2, [r3, #0]
}
 8002f12:	bf00      	nop
 8002f14:	46bd      	mov	sp, r7
 8002f16:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002f1a:	4770      	bx	lr
 8002f1c:	20025c96 	.word	0x20025c96

08002f20 <MX_SPI5_Init>:
SPI_HandleTypeDef hspi5;
DMA_HandleTypeDef hdma_spi5_tx;

/* SPI5 init function */
void MX_SPI5_Init(void)
{
 8002f20:	b580      	push	{r7, lr}
 8002f22:	af00      	add	r7, sp, #0
  /* USER CODE END SPI5_Init 0 */

  /* USER CODE BEGIN SPI5_Init 1 */

  /* USER CODE END SPI5_Init 1 */
  hspi5.Instance = SPI5;
 8002f24:	4b17      	ldr	r3, [pc, #92]	@ (8002f84 <MX_SPI5_Init+0x64>)
 8002f26:	4a18      	ldr	r2, [pc, #96]	@ (8002f88 <MX_SPI5_Init+0x68>)
 8002f28:	601a      	str	r2, [r3, #0]
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8002f2a:	4b16      	ldr	r3, [pc, #88]	@ (8002f84 <MX_SPI5_Init+0x64>)
 8002f2c:	f44f 7282 	mov.w	r2, #260	@ 0x104
 8002f30:	605a      	str	r2, [r3, #4]
  hspi5.Init.Direction = SPI_DIRECTION_2LINES;
 8002f32:	4b14      	ldr	r3, [pc, #80]	@ (8002f84 <MX_SPI5_Init+0x64>)
 8002f34:	2200      	movs	r2, #0
 8002f36:	609a      	str	r2, [r3, #8]
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 8002f38:	4b12      	ldr	r3, [pc, #72]	@ (8002f84 <MX_SPI5_Init+0x64>)
 8002f3a:	2200      	movs	r2, #0
 8002f3c:	60da      	str	r2, [r3, #12]
  hspi5.Init.CLKPolarity = SPI_POLARITY_LOW;
 8002f3e:	4b11      	ldr	r3, [pc, #68]	@ (8002f84 <MX_SPI5_Init+0x64>)
 8002f40:	2200      	movs	r2, #0
 8002f42:	611a      	str	r2, [r3, #16]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 8002f44:	4b0f      	ldr	r3, [pc, #60]	@ (8002f84 <MX_SPI5_Init+0x64>)
 8002f46:	2200      	movs	r2, #0
 8002f48:	615a      	str	r2, [r3, #20]
  hspi5.Init.NSS = SPI_NSS_SOFT;
 8002f4a:	4b0e      	ldr	r3, [pc, #56]	@ (8002f84 <MX_SPI5_Init+0x64>)
 8002f4c:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8002f50:	619a      	str	r2, [r3, #24]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8002f52:	4b0c      	ldr	r3, [pc, #48]	@ (8002f84 <MX_SPI5_Init+0x64>)
 8002f54:	2218      	movs	r2, #24
 8002f56:	61da      	str	r2, [r3, #28]
  hspi5.Init.FirstBit = SPI_FIRSTBIT_MSB;
 8002f58:	4b0a      	ldr	r3, [pc, #40]	@ (8002f84 <MX_SPI5_Init+0x64>)
 8002f5a:	2200      	movs	r2, #0
 8002f5c:	621a      	str	r2, [r3, #32]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 8002f5e:	4b09      	ldr	r3, [pc, #36]	@ (8002f84 <MX_SPI5_Init+0x64>)
 8002f60:	2200      	movs	r2, #0
 8002f62:	625a      	str	r2, [r3, #36]	@ 0x24
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8002f64:	4b07      	ldr	r3, [pc, #28]	@ (8002f84 <MX_SPI5_Init+0x64>)
 8002f66:	2200      	movs	r2, #0
 8002f68:	629a      	str	r2, [r3, #40]	@ 0x28
  hspi5.Init.CRCPolynomial = 10;
 8002f6a:	4b06      	ldr	r3, [pc, #24]	@ (8002f84 <MX_SPI5_Init+0x64>)
 8002f6c:	220a      	movs	r2, #10
 8002f6e:	62da      	str	r2, [r3, #44]	@ 0x2c
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 8002f70:	4804      	ldr	r0, [pc, #16]	@ (8002f84 <MX_SPI5_Init+0x64>)
 8002f72:	f004 fdb3 	bl	8007adc <HAL_SPI_Init>
 8002f76:	4603      	mov	r3, r0
 8002f78:	2b00      	cmp	r3, #0
 8002f7a:	d001      	beq.n	8002f80 <MX_SPI5_Init+0x60>
  {
    Error_Handler();
 8002f7c:	f7ff ffaa 	bl	8002ed4 <Error_Handler>
  }
  /* USER CODE BEGIN SPI5_Init 2 */

  /* USER CODE END SPI5_Init 2 */

}
 8002f80:	bf00      	nop
 8002f82:	bd80      	pop	{r7, pc}
 8002f84:	20025c98 	.word	0x20025c98
 8002f88:	40015000 	.word	0x40015000

08002f8c <HAL_SPI_MspInit>:

void HAL_SPI_MspInit(SPI_HandleTypeDef* spiHandle)
{
 8002f8c:	b580      	push	{r7, lr}
 8002f8e:	b08a      	sub	sp, #40	@ 0x28
 8002f90:	af00      	add	r7, sp, #0
 8002f92:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002f94:	f107 0314 	add.w	r3, r7, #20
 8002f98:	2200      	movs	r2, #0
 8002f9a:	601a      	str	r2, [r3, #0]
 8002f9c:	605a      	str	r2, [r3, #4]
 8002f9e:	609a      	str	r2, [r3, #8]
 8002fa0:	60da      	str	r2, [r3, #12]
 8002fa2:	611a      	str	r2, [r3, #16]
  if(spiHandle->Instance==SPI5)
 8002fa4:	687b      	ldr	r3, [r7, #4]
 8002fa6:	681b      	ldr	r3, [r3, #0]
 8002fa8:	4a30      	ldr	r2, [pc, #192]	@ (800306c <HAL_SPI_MspInit+0xe0>)
 8002faa:	4293      	cmp	r3, r2
 8002fac:	d15a      	bne.n	8003064 <HAL_SPI_MspInit+0xd8>
  {
  /* USER CODE BEGIN SPI5_MspInit 0 */

  /* USER CODE END SPI5_MspInit 0 */
    /* SPI5 clock enable */
    __HAL_RCC_SPI5_CLK_ENABLE();
 8002fae:	2300      	movs	r3, #0
 8002fb0:	613b      	str	r3, [r7, #16]
 8002fb2:	4b2f      	ldr	r3, [pc, #188]	@ (8003070 <HAL_SPI_MspInit+0xe4>)
 8002fb4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002fb6:	4a2e      	ldr	r2, [pc, #184]	@ (8003070 <HAL_SPI_MspInit+0xe4>)
 8002fb8:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8002fbc:	6453      	str	r3, [r2, #68]	@ 0x44
 8002fbe:	4b2c      	ldr	r3, [pc, #176]	@ (8003070 <HAL_SPI_MspInit+0xe4>)
 8002fc0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002fc2:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8002fc6:	613b      	str	r3, [r7, #16]
 8002fc8:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOF_CLK_ENABLE();
 8002fca:	2300      	movs	r3, #0
 8002fcc:	60fb      	str	r3, [r7, #12]
 8002fce:	4b28      	ldr	r3, [pc, #160]	@ (8003070 <HAL_SPI_MspInit+0xe4>)
 8002fd0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002fd2:	4a27      	ldr	r2, [pc, #156]	@ (8003070 <HAL_SPI_MspInit+0xe4>)
 8002fd4:	f043 0320 	orr.w	r3, r3, #32
 8002fd8:	6313      	str	r3, [r2, #48]	@ 0x30
 8002fda:	4b25      	ldr	r3, [pc, #148]	@ (8003070 <HAL_SPI_MspInit+0xe4>)
 8002fdc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002fde:	f003 0320 	and.w	r3, r3, #32
 8002fe2:	60fb      	str	r3, [r7, #12]
 8002fe4:	68fb      	ldr	r3, [r7, #12]
    /**SPI5 GPIO Configuration
    PF7     ------> SPI5_SCK
    PF8     ------> SPI5_MISO
    PF9     ------> SPI5_MOSI
    */
    GPIO_InitStruct.Pin = SPI5_SCK_Pin|SPI5_MISO_Pin|SPI5_MOSI_Pin;
 8002fe6:	f44f 7360 	mov.w	r3, #896	@ 0x380
 8002fea:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002fec:	2302      	movs	r3, #2
 8002fee:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002ff0:	2300      	movs	r3, #0
 8002ff2:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002ff4:	2300      	movs	r3, #0
 8002ff6:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8002ff8:	2305      	movs	r3, #5
 8002ffa:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002ffc:	f107 0314 	add.w	r3, r7, #20
 8003000:	4619      	mov	r1, r3
 8003002:	481c      	ldr	r0, [pc, #112]	@ (8003074 <HAL_SPI_MspInit+0xe8>)
 8003004:	f001 fa18 	bl	8004438 <HAL_GPIO_Init>

    /* SPI5 DMA Init */
    /* SPI5_TX Init */
    hdma_spi5_tx.Instance = DMA2_Stream4;
 8003008:	4b1b      	ldr	r3, [pc, #108]	@ (8003078 <HAL_SPI_MspInit+0xec>)
 800300a:	4a1c      	ldr	r2, [pc, #112]	@ (800307c <HAL_SPI_MspInit+0xf0>)
 800300c:	601a      	str	r2, [r3, #0]
    hdma_spi5_tx.Init.Channel = DMA_CHANNEL_2;
 800300e:	4b1a      	ldr	r3, [pc, #104]	@ (8003078 <HAL_SPI_MspInit+0xec>)
 8003010:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 8003014:	605a      	str	r2, [r3, #4]
    hdma_spi5_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 8003016:	4b18      	ldr	r3, [pc, #96]	@ (8003078 <HAL_SPI_MspInit+0xec>)
 8003018:	2240      	movs	r2, #64	@ 0x40
 800301a:	609a      	str	r2, [r3, #8]
    hdma_spi5_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 800301c:	4b16      	ldr	r3, [pc, #88]	@ (8003078 <HAL_SPI_MspInit+0xec>)
 800301e:	2200      	movs	r2, #0
 8003020:	60da      	str	r2, [r3, #12]
    hdma_spi5_tx.Init.MemInc = DMA_MINC_ENABLE;
 8003022:	4b15      	ldr	r3, [pc, #84]	@ (8003078 <HAL_SPI_MspInit+0xec>)
 8003024:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 8003028:	611a      	str	r2, [r3, #16]
    hdma_spi5_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 800302a:	4b13      	ldr	r3, [pc, #76]	@ (8003078 <HAL_SPI_MspInit+0xec>)
 800302c:	2200      	movs	r2, #0
 800302e:	615a      	str	r2, [r3, #20]
    hdma_spi5_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 8003030:	4b11      	ldr	r3, [pc, #68]	@ (8003078 <HAL_SPI_MspInit+0xec>)
 8003032:	2200      	movs	r2, #0
 8003034:	619a      	str	r2, [r3, #24]
    hdma_spi5_tx.Init.Mode = DMA_NORMAL;
 8003036:	4b10      	ldr	r3, [pc, #64]	@ (8003078 <HAL_SPI_MspInit+0xec>)
 8003038:	2200      	movs	r2, #0
 800303a:	61da      	str	r2, [r3, #28]
    hdma_spi5_tx.Init.Priority = DMA_PRIORITY_LOW;
 800303c:	4b0e      	ldr	r3, [pc, #56]	@ (8003078 <HAL_SPI_MspInit+0xec>)
 800303e:	2200      	movs	r2, #0
 8003040:	621a      	str	r2, [r3, #32]
    hdma_spi5_tx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 8003042:	4b0d      	ldr	r3, [pc, #52]	@ (8003078 <HAL_SPI_MspInit+0xec>)
 8003044:	2200      	movs	r2, #0
 8003046:	625a      	str	r2, [r3, #36]	@ 0x24
    if (HAL_DMA_Init(&hdma_spi5_tx) != HAL_OK)
 8003048:	480b      	ldr	r0, [pc, #44]	@ (8003078 <HAL_SPI_MspInit+0xec>)
 800304a:	f000 fc99 	bl	8003980 <HAL_DMA_Init>
 800304e:	4603      	mov	r3, r0
 8003050:	2b00      	cmp	r3, #0
 8003052:	d001      	beq.n	8003058 <HAL_SPI_MspInit+0xcc>
    {
      Error_Handler();
 8003054:	f7ff ff3e 	bl	8002ed4 <Error_Handler>
    }

    __HAL_LINKDMA(spiHandle,hdmatx,hdma_spi5_tx);
 8003058:	687b      	ldr	r3, [r7, #4]
 800305a:	4a07      	ldr	r2, [pc, #28]	@ (8003078 <HAL_SPI_MspInit+0xec>)
 800305c:	649a      	str	r2, [r3, #72]	@ 0x48
 800305e:	4a06      	ldr	r2, [pc, #24]	@ (8003078 <HAL_SPI_MspInit+0xec>)
 8003060:	687b      	ldr	r3, [r7, #4]
 8003062:	6393      	str	r3, [r2, #56]	@ 0x38

  /* USER CODE BEGIN SPI5_MspInit 1 */

  /* USER CODE END SPI5_MspInit 1 */
  }
}
 8003064:	bf00      	nop
 8003066:	3728      	adds	r7, #40	@ 0x28
 8003068:	46bd      	mov	sp, r7
 800306a:	bd80      	pop	{r7, pc}
 800306c:	40015000 	.word	0x40015000
 8003070:	40023800 	.word	0x40023800
 8003074:	40021400 	.word	0x40021400
 8003078:	20025cf0 	.word	0x20025cf0
 800307c:	40026470 	.word	0x40026470

08003080 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8003080:	b580      	push	{r7, lr}
 8003082:	b082      	sub	sp, #8
 8003084:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8003086:	2300      	movs	r3, #0
 8003088:	607b      	str	r3, [r7, #4]
 800308a:	4b12      	ldr	r3, [pc, #72]	@ (80030d4 <HAL_MspInit+0x54>)
 800308c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800308e:	4a11      	ldr	r2, [pc, #68]	@ (80030d4 <HAL_MspInit+0x54>)
 8003090:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8003094:	6453      	str	r3, [r2, #68]	@ 0x44
 8003096:	4b0f      	ldr	r3, [pc, #60]	@ (80030d4 <HAL_MspInit+0x54>)
 8003098:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800309a:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 800309e:	607b      	str	r3, [r7, #4]
 80030a0:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 80030a2:	2300      	movs	r3, #0
 80030a4:	603b      	str	r3, [r7, #0]
 80030a6:	4b0b      	ldr	r3, [pc, #44]	@ (80030d4 <HAL_MspInit+0x54>)
 80030a8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80030aa:	4a0a      	ldr	r2, [pc, #40]	@ (80030d4 <HAL_MspInit+0x54>)
 80030ac:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80030b0:	6413      	str	r3, [r2, #64]	@ 0x40
 80030b2:	4b08      	ldr	r3, [pc, #32]	@ (80030d4 <HAL_MspInit+0x54>)
 80030b4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80030b6:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80030ba:	603b      	str	r3, [r7, #0]
 80030bc:	683b      	ldr	r3, [r7, #0]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 80030be:	2200      	movs	r2, #0
 80030c0:	210f      	movs	r1, #15
 80030c2:	f06f 0001 	mvn.w	r0, #1
 80030c6:	f000 fc15 	bl	80038f4 <HAL_NVIC_SetPriority>

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80030ca:	bf00      	nop
 80030cc:	3708      	adds	r7, #8
 80030ce:	46bd      	mov	sp, r7
 80030d0:	bd80      	pop	{r7, pc}
 80030d2:	bf00      	nop
 80030d4:	40023800 	.word	0x40023800

080030d8 <HAL_InitTick>:
 80030d8:	b580      	push	{r7, lr}
 80030da:	b08e      	sub	sp, #56	@ 0x38
 80030dc:	af00      	add	r7, sp, #0
 80030de:	6078      	str	r0, [r7, #4]
 80030e0:	2300      	movs	r3, #0
 80030e2:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80030e4:	2300      	movs	r3, #0
 80030e6:	62bb      	str	r3, [r7, #40]	@ 0x28
 80030e8:	2300      	movs	r3, #0
 80030ea:	60fb      	str	r3, [r7, #12]
 80030ec:	4b33      	ldr	r3, [pc, #204]	@ (80031bc <HAL_InitTick+0xe4>)
 80030ee:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80030f0:	4a32      	ldr	r2, [pc, #200]	@ (80031bc <HAL_InitTick+0xe4>)
 80030f2:	f043 0310 	orr.w	r3, r3, #16
 80030f6:	6413      	str	r3, [r2, #64]	@ 0x40
 80030f8:	4b30      	ldr	r3, [pc, #192]	@ (80031bc <HAL_InitTick+0xe4>)
 80030fa:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80030fc:	f003 0310 	and.w	r3, r3, #16
 8003100:	60fb      	str	r3, [r7, #12]
 8003102:	68fb      	ldr	r3, [r7, #12]
 8003104:	f107 0210 	add.w	r2, r7, #16
 8003108:	f107 0314 	add.w	r3, r7, #20
 800310c:	4611      	mov	r1, r2
 800310e:	4618      	mov	r0, r3
 8003110:	f004 fabe 	bl	8007690 <HAL_RCC_GetClockConfig>
 8003114:	6a3b      	ldr	r3, [r7, #32]
 8003116:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8003118:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800311a:	2b00      	cmp	r3, #0
 800311c:	d103      	bne.n	8003126 <HAL_InitTick+0x4e>
 800311e:	f004 fa8f 	bl	8007640 <HAL_RCC_GetPCLK1Freq>
 8003122:	6378      	str	r0, [r7, #52]	@ 0x34
 8003124:	e004      	b.n	8003130 <HAL_InitTick+0x58>
 8003126:	f004 fa8b 	bl	8007640 <HAL_RCC_GetPCLK1Freq>
 800312a:	4603      	mov	r3, r0
 800312c:	005b      	lsls	r3, r3, #1
 800312e:	637b      	str	r3, [r7, #52]	@ 0x34
 8003130:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8003132:	4a23      	ldr	r2, [pc, #140]	@ (80031c0 <HAL_InitTick+0xe8>)
 8003134:	fba2 2303 	umull	r2, r3, r2, r3
 8003138:	0c9b      	lsrs	r3, r3, #18
 800313a:	3b01      	subs	r3, #1
 800313c:	62bb      	str	r3, [r7, #40]	@ 0x28
 800313e:	4b21      	ldr	r3, [pc, #132]	@ (80031c4 <HAL_InitTick+0xec>)
 8003140:	4a21      	ldr	r2, [pc, #132]	@ (80031c8 <HAL_InitTick+0xf0>)
 8003142:	601a      	str	r2, [r3, #0]
 8003144:	4b1f      	ldr	r3, [pc, #124]	@ (80031c4 <HAL_InitTick+0xec>)
 8003146:	f240 32e7 	movw	r2, #999	@ 0x3e7
 800314a:	60da      	str	r2, [r3, #12]
 800314c:	4a1d      	ldr	r2, [pc, #116]	@ (80031c4 <HAL_InitTick+0xec>)
 800314e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8003150:	6053      	str	r3, [r2, #4]
 8003152:	4b1c      	ldr	r3, [pc, #112]	@ (80031c4 <HAL_InitTick+0xec>)
 8003154:	2200      	movs	r2, #0
 8003156:	611a      	str	r2, [r3, #16]
 8003158:	4b1a      	ldr	r3, [pc, #104]	@ (80031c4 <HAL_InitTick+0xec>)
 800315a:	2200      	movs	r2, #0
 800315c:	609a      	str	r2, [r3, #8]
 800315e:	4b19      	ldr	r3, [pc, #100]	@ (80031c4 <HAL_InitTick+0xec>)
 8003160:	2200      	movs	r2, #0
 8003162:	619a      	str	r2, [r3, #24]
 8003164:	4817      	ldr	r0, [pc, #92]	@ (80031c4 <HAL_InitTick+0xec>)
 8003166:	f005 fbd3 	bl	8008910 <HAL_TIM_Base_Init>
 800316a:	4603      	mov	r3, r0
 800316c:	f887 3033 	strb.w	r3, [r7, #51]	@ 0x33
 8003170:	f897 3033 	ldrb.w	r3, [r7, #51]	@ 0x33
 8003174:	2b00      	cmp	r3, #0
 8003176:	d11b      	bne.n	80031b0 <HAL_InitTick+0xd8>
 8003178:	4812      	ldr	r0, [pc, #72]	@ (80031c4 <HAL_InitTick+0xec>)
 800317a:	f005 fc19 	bl	80089b0 <HAL_TIM_Base_Start_IT>
 800317e:	4603      	mov	r3, r0
 8003180:	f887 3033 	strb.w	r3, [r7, #51]	@ 0x33
 8003184:	f897 3033 	ldrb.w	r3, [r7, #51]	@ 0x33
 8003188:	2b00      	cmp	r3, #0
 800318a:	d111      	bne.n	80031b0 <HAL_InitTick+0xd8>
 800318c:	2036      	movs	r0, #54	@ 0x36
 800318e:	f000 fbcd 	bl	800392c <HAL_NVIC_EnableIRQ>
 8003192:	687b      	ldr	r3, [r7, #4]
 8003194:	2b0f      	cmp	r3, #15
 8003196:	d808      	bhi.n	80031aa <HAL_InitTick+0xd2>
 8003198:	2200      	movs	r2, #0
 800319a:	6879      	ldr	r1, [r7, #4]
 800319c:	2036      	movs	r0, #54	@ 0x36
 800319e:	f000 fba9 	bl	80038f4 <HAL_NVIC_SetPriority>
 80031a2:	4a0a      	ldr	r2, [pc, #40]	@ (80031cc <HAL_InitTick+0xf4>)
 80031a4:	687b      	ldr	r3, [r7, #4]
 80031a6:	6013      	str	r3, [r2, #0]
 80031a8:	e002      	b.n	80031b0 <HAL_InitTick+0xd8>
 80031aa:	2301      	movs	r3, #1
 80031ac:	f887 3033 	strb.w	r3, [r7, #51]	@ 0x33
 80031b0:	f897 3033 	ldrb.w	r3, [r7, #51]	@ 0x33
 80031b4:	4618      	mov	r0, r3
 80031b6:	3738      	adds	r7, #56	@ 0x38
 80031b8:	46bd      	mov	sp, r7
 80031ba:	bd80      	pop	{r7, pc}
 80031bc:	40023800 	.word	0x40023800
 80031c0:	431bde83 	.word	0x431bde83
 80031c4:	20025d50 	.word	0x20025d50
 80031c8:	40001000 	.word	0x40001000
 80031cc:	2000000c 	.word	0x2000000c

080031d0 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 80031d0:	b480      	push	{r7}
 80031d2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 80031d4:	bf00      	nop
 80031d6:	e7fd      	b.n	80031d4 <NMI_Handler+0x4>

080031d8 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 80031d8:	b480      	push	{r7}
 80031da:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 80031dc:	bf00      	nop
 80031de:	e7fd      	b.n	80031dc <HardFault_Handler+0x4>

080031e0 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 80031e0:	b480      	push	{r7}
 80031e2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 80031e4:	bf00      	nop
 80031e6:	e7fd      	b.n	80031e4 <MemManage_Handler+0x4>

080031e8 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 80031e8:	b480      	push	{r7}
 80031ea:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 80031ec:	bf00      	nop
 80031ee:	e7fd      	b.n	80031ec <BusFault_Handler+0x4>

080031f0 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 80031f0:	b480      	push	{r7}
 80031f2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 80031f4:	bf00      	nop
 80031f6:	e7fd      	b.n	80031f4 <UsageFault_Handler+0x4>

080031f8 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 80031f8:	b480      	push	{r7}
 80031fa:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 80031fc:	bf00      	nop
 80031fe:	46bd      	mov	sp, r7
 8003200:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003204:	4770      	bx	lr
	...

08003208 <TIM6_DAC_IRQHandler>:

/**
  * @brief This function handles TIM6 global interrupt, DAC1 and DAC2 underrun error interrupts.
  */
void TIM6_DAC_IRQHandler(void)
{
 8003208:	b580      	push	{r7, lr}
 800320a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 800320c:	4802      	ldr	r0, [pc, #8]	@ (8003218 <TIM6_DAC_IRQHandler+0x10>)
 800320e:	f005 fc3f 	bl	8008a90 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM6_DAC_IRQn 1 */

  /* USER CODE END TIM6_DAC_IRQn 1 */
}
 8003212:	bf00      	nop
 8003214:	bd80      	pop	{r7, pc}
 8003216:	bf00      	nop
 8003218:	20025d50 	.word	0x20025d50

0800321c <TIM7_IRQHandler>:

/**
  * @brief This function handles TIM7 global interrupt.
  */
void TIM7_IRQHandler(void)
{
 800321c:	b580      	push	{r7, lr}
 800321e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM7_IRQn 0 */

  /* USER CODE END TIM7_IRQn 0 */
  HAL_TIM_IRQHandler(&htim7);
 8003220:	4802      	ldr	r0, [pc, #8]	@ (800322c <TIM7_IRQHandler+0x10>)
 8003222:	f005 fc35 	bl	8008a90 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM7_IRQn 1 */

  /* USER CODE END TIM7_IRQn 1 */
}
 8003226:	bf00      	nop
 8003228:	bd80      	pop	{r7, pc}
 800322a:	bf00      	nop
 800322c:	20025de4 	.word	0x20025de4

08003230 <DMA2_Stream4_IRQHandler>:

/**
  * @brief This function handles DMA2 stream4 global interrupt.
  */
void DMA2_Stream4_IRQHandler(void)
{
 8003230:	b580      	push	{r7, lr}
 8003232:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA2_Stream4_IRQn 0 */

  /* USER CODE END DMA2_Stream4_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_spi5_tx);
 8003234:	4802      	ldr	r0, [pc, #8]	@ (8003240 <DMA2_Stream4_IRQHandler+0x10>)
 8003236:	f000 fca9 	bl	8003b8c <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA2_Stream4_IRQn 1 */

  /* USER CODE END DMA2_Stream4_IRQn 1 */
}
 800323a:	bf00      	nop
 800323c:	bd80      	pop	{r7, pc}
 800323e:	bf00      	nop
 8003240:	20025cf0 	.word	0x20025cf0

08003244 <OTG_HS_IRQHandler>:

/**
  * @brief This function handles USB On The Go HS global interrupt.
  */
void OTG_HS_IRQHandler(void)
{
 8003244:	b580      	push	{r7, lr}
 8003246:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN OTG_HS_IRQn 0 */

  /* USER CODE END OTG_HS_IRQn 0 */
  HAL_HCD_IRQHandler(&hhcd_USB_OTG_HS);
 8003248:	4802      	ldr	r0, [pc, #8]	@ (8003254 <OTG_HS_IRQHandler+0x10>)
 800324a:	f001 faba 	bl	80047c2 <HAL_HCD_IRQHandler>
  /* USER CODE BEGIN OTG_HS_IRQn 1 */

  /* USER CODE END OTG_HS_IRQn 1 */
}
 800324e:	bf00      	nop
 8003250:	bd80      	pop	{r7, pc}
 8003252:	bf00      	nop
 8003254:	20025f64 	.word	0x20025f64

08003258 <LTDC_IRQHandler>:

/**
  * @brief This function handles LTDC global interrupt.
  */
void LTDC_IRQHandler(void)
{
 8003258:	b580      	push	{r7, lr}
 800325a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 800325c:	4802      	ldr	r0, [pc, #8]	@ (8003268 <LTDC_IRQHandler+0x10>)
 800325e:	f003 fae7 	bl	8006830 <HAL_LTDC_IRQHandler>
  /* USER CODE BEGIN LTDC_IRQn 1 */

  /* USER CODE END LTDC_IRQn 1 */
}
 8003262:	bf00      	nop
 8003264:	bd80      	pop	{r7, pc}
 8003266:	bf00      	nop
 8003268:	20025bd4 	.word	0x20025bd4

0800326c <DMA2D_IRQHandler>:

/**
  * @brief This function handles DMA2D global interrupt.
  */
void DMA2D_IRQHandler(void)
{
 800326c:	b580      	push	{r7, lr}
 800326e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 8003270:	4802      	ldr	r0, [pc, #8]	@ (800327c <DMA2D_IRQHandler+0x10>)
 8003272:	f000 ff3e 	bl	80040f2 <HAL_DMA2D_IRQHandler>
  /* USER CODE BEGIN DMA2D_IRQn 1 */

  /* USER CODE END DMA2D_IRQn 1 */
}
 8003276:	bf00      	nop
 8003278:	bd80      	pop	{r7, pc}
 800327a:	bf00      	nop
 800327c:	20000204 	.word	0x20000204

08003280 <_getpid>:
 8003280:	b480      	push	{r7}
 8003282:	af00      	add	r7, sp, #0
 8003284:	2301      	movs	r3, #1
 8003286:	4618      	mov	r0, r3
 8003288:	46bd      	mov	sp, r7
 800328a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800328e:	4770      	bx	lr

08003290 <_kill>:
 8003290:	b580      	push	{r7, lr}
 8003292:	b082      	sub	sp, #8
 8003294:	af00      	add	r7, sp, #0
 8003296:	6078      	str	r0, [r7, #4]
 8003298:	6039      	str	r1, [r7, #0]
 800329a:	f009 f8e9 	bl	800c470 <__errno>
 800329e:	4603      	mov	r3, r0
 80032a0:	2216      	movs	r2, #22
 80032a2:	601a      	str	r2, [r3, #0]
 80032a4:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 80032a8:	4618      	mov	r0, r3
 80032aa:	3708      	adds	r7, #8
 80032ac:	46bd      	mov	sp, r7
 80032ae:	bd80      	pop	{r7, pc}

080032b0 <_exit>:
 80032b0:	b580      	push	{r7, lr}
 80032b2:	b082      	sub	sp, #8
 80032b4:	af00      	add	r7, sp, #0
 80032b6:	6078      	str	r0, [r7, #4]
 80032b8:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
 80032bc:	6878      	ldr	r0, [r7, #4]
 80032be:	f7ff ffe7 	bl	8003290 <_kill>
 80032c2:	bf00      	nop
 80032c4:	e7fd      	b.n	80032c2 <_exit+0x12>

080032c6 <_read>:
 80032c6:	b580      	push	{r7, lr}
 80032c8:	b086      	sub	sp, #24
 80032ca:	af00      	add	r7, sp, #0
 80032cc:	60f8      	str	r0, [r7, #12]
 80032ce:	60b9      	str	r1, [r7, #8]
 80032d0:	607a      	str	r2, [r7, #4]
 80032d2:	2300      	movs	r3, #0
 80032d4:	617b      	str	r3, [r7, #20]
 80032d6:	e00a      	b.n	80032ee <_read+0x28>
 80032d8:	f3af 8000 	nop.w
 80032dc:	4601      	mov	r1, r0
 80032de:	68bb      	ldr	r3, [r7, #8]
 80032e0:	1c5a      	adds	r2, r3, #1
 80032e2:	60ba      	str	r2, [r7, #8]
 80032e4:	b2ca      	uxtb	r2, r1
 80032e6:	701a      	strb	r2, [r3, #0]
 80032e8:	697b      	ldr	r3, [r7, #20]
 80032ea:	3301      	adds	r3, #1
 80032ec:	617b      	str	r3, [r7, #20]
 80032ee:	697a      	ldr	r2, [r7, #20]
 80032f0:	687b      	ldr	r3, [r7, #4]
 80032f2:	429a      	cmp	r2, r3
 80032f4:	dbf0      	blt.n	80032d8 <_read+0x12>
 80032f6:	687b      	ldr	r3, [r7, #4]
 80032f8:	4618      	mov	r0, r3
 80032fa:	3718      	adds	r7, #24
 80032fc:	46bd      	mov	sp, r7
 80032fe:	bd80      	pop	{r7, pc}

08003300 <_close>:
 8003300:	b480      	push	{r7}
 8003302:	b083      	sub	sp, #12
 8003304:	af00      	add	r7, sp, #0
 8003306:	6078      	str	r0, [r7, #4]
 8003308:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 800330c:	4618      	mov	r0, r3
 800330e:	370c      	adds	r7, #12
 8003310:	46bd      	mov	sp, r7
 8003312:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003316:	4770      	bx	lr

08003318 <_fstat>:
 8003318:	b480      	push	{r7}
 800331a:	b083      	sub	sp, #12
 800331c:	af00      	add	r7, sp, #0
 800331e:	6078      	str	r0, [r7, #4]
 8003320:	6039      	str	r1, [r7, #0]
 8003322:	683b      	ldr	r3, [r7, #0]
 8003324:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8003328:	605a      	str	r2, [r3, #4]
 800332a:	2300      	movs	r3, #0
 800332c:	4618      	mov	r0, r3
 800332e:	370c      	adds	r7, #12
 8003330:	46bd      	mov	sp, r7
 8003332:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003336:	4770      	bx	lr

08003338 <_isatty>:
 8003338:	b480      	push	{r7}
 800333a:	b083      	sub	sp, #12
 800333c:	af00      	add	r7, sp, #0
 800333e:	6078      	str	r0, [r7, #4]
 8003340:	2301      	movs	r3, #1
 8003342:	4618      	mov	r0, r3
 8003344:	370c      	adds	r7, #12
 8003346:	46bd      	mov	sp, r7
 8003348:	f85d 7b04 	ldr.w	r7, [sp], #4
 800334c:	4770      	bx	lr

0800334e <_lseek>:
 800334e:	b480      	push	{r7}
 8003350:	b085      	sub	sp, #20
 8003352:	af00      	add	r7, sp, #0
 8003354:	60f8      	str	r0, [r7, #12]
 8003356:	60b9      	str	r1, [r7, #8]
 8003358:	607a      	str	r2, [r7, #4]
 800335a:	2300      	movs	r3, #0
 800335c:	4618      	mov	r0, r3
 800335e:	3714      	adds	r7, #20
 8003360:	46bd      	mov	sp, r7
 8003362:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003366:	4770      	bx	lr

08003368 <_sbrk>:
 8003368:	b580      	push	{r7, lr}
 800336a:	b086      	sub	sp, #24
 800336c:	af00      	add	r7, sp, #0
 800336e:	6078      	str	r0, [r7, #4]
 8003370:	4a14      	ldr	r2, [pc, #80]	@ (80033c4 <_sbrk+0x5c>)
 8003372:	4b15      	ldr	r3, [pc, #84]	@ (80033c8 <_sbrk+0x60>)
 8003374:	1ad3      	subs	r3, r2, r3
 8003376:	617b      	str	r3, [r7, #20]
 8003378:	697b      	ldr	r3, [r7, #20]
 800337a:	613b      	str	r3, [r7, #16]
 800337c:	4b13      	ldr	r3, [pc, #76]	@ (80033cc <_sbrk+0x64>)
 800337e:	681b      	ldr	r3, [r3, #0]
 8003380:	2b00      	cmp	r3, #0
 8003382:	d102      	bne.n	800338a <_sbrk+0x22>
 8003384:	4b11      	ldr	r3, [pc, #68]	@ (80033cc <_sbrk+0x64>)
 8003386:	4a12      	ldr	r2, [pc, #72]	@ (80033d0 <_sbrk+0x68>)
 8003388:	601a      	str	r2, [r3, #0]
 800338a:	4b10      	ldr	r3, [pc, #64]	@ (80033cc <_sbrk+0x64>)
 800338c:	681a      	ldr	r2, [r3, #0]
 800338e:	687b      	ldr	r3, [r7, #4]
 8003390:	4413      	add	r3, r2
 8003392:	693a      	ldr	r2, [r7, #16]
 8003394:	429a      	cmp	r2, r3
 8003396:	d207      	bcs.n	80033a8 <_sbrk+0x40>
 8003398:	f009 f86a 	bl	800c470 <__errno>
 800339c:	4603      	mov	r3, r0
 800339e:	220c      	movs	r2, #12
 80033a0:	601a      	str	r2, [r3, #0]
 80033a2:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 80033a6:	e009      	b.n	80033bc <_sbrk+0x54>
 80033a8:	4b08      	ldr	r3, [pc, #32]	@ (80033cc <_sbrk+0x64>)
 80033aa:	681b      	ldr	r3, [r3, #0]
 80033ac:	60fb      	str	r3, [r7, #12]
 80033ae:	4b07      	ldr	r3, [pc, #28]	@ (80033cc <_sbrk+0x64>)
 80033b0:	681a      	ldr	r2, [r3, #0]
 80033b2:	687b      	ldr	r3, [r7, #4]
 80033b4:	4413      	add	r3, r2
 80033b6:	4a05      	ldr	r2, [pc, #20]	@ (80033cc <_sbrk+0x64>)
 80033b8:	6013      	str	r3, [r2, #0]
 80033ba:	68fb      	ldr	r3, [r7, #12]
 80033bc:	4618      	mov	r0, r3
 80033be:	3718      	adds	r7, #24
 80033c0:	46bd      	mov	sp, r7
 80033c2:	bd80      	pop	{r7, pc}
 80033c4:	20030000 	.word	0x20030000
 80033c8:	00000400 	.word	0x00000400
 80033cc:	20025d98 	.word	0x20025d98
 80033d0:	20026490 	.word	0x20026490

080033d4 <SystemInit>:
 80033d4:	b480      	push	{r7}
 80033d6:	af00      	add	r7, sp, #0
 80033d8:	4b06      	ldr	r3, [pc, #24]	@ (80033f4 <SystemInit+0x20>)
 80033da:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80033de:	4a05      	ldr	r2, [pc, #20]	@ (80033f4 <SystemInit+0x20>)
 80033e0:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 80033e4:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
 80033e8:	bf00      	nop
 80033ea:	46bd      	mov	sp, r7
 80033ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80033f0:	4770      	bx	lr
 80033f2:	bf00      	nop
 80033f4:	e000ed00 	.word	0xe000ed00

080033f8 <MX_TIM1_Init>:
TIM_HandleTypeDef htim1;
TIM_HandleTypeDef htim7;

/* TIM1 init function */
void MX_TIM1_Init(void)
{
 80033f8:	b580      	push	{r7, lr}
 80033fa:	b086      	sub	sp, #24
 80033fc:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM1_Init 0 */

  /* USER CODE END TIM1_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80033fe:	f107 0308 	add.w	r3, r7, #8
 8003402:	2200      	movs	r2, #0
 8003404:	601a      	str	r2, [r3, #0]
 8003406:	605a      	str	r2, [r3, #4]
 8003408:	609a      	str	r2, [r3, #8]
 800340a:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 800340c:	463b      	mov	r3, r7
 800340e:	2200      	movs	r2, #0
 8003410:	601a      	str	r2, [r3, #0]
 8003412:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM1_Init 1 */

  /* USER CODE END TIM1_Init 1 */
  htim1.Instance = TIM1;
 8003414:	4b1e      	ldr	r3, [pc, #120]	@ (8003490 <MX_TIM1_Init+0x98>)
 8003416:	4a1f      	ldr	r2, [pc, #124]	@ (8003494 <MX_TIM1_Init+0x9c>)
 8003418:	601a      	str	r2, [r3, #0]
  htim1.Init.Prescaler = 0;
 800341a:	4b1d      	ldr	r3, [pc, #116]	@ (8003490 <MX_TIM1_Init+0x98>)
 800341c:	2200      	movs	r2, #0
 800341e:	605a      	str	r2, [r3, #4]
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 8003420:	4b1b      	ldr	r3, [pc, #108]	@ (8003490 <MX_TIM1_Init+0x98>)
 8003422:	2200      	movs	r2, #0
 8003424:	609a      	str	r2, [r3, #8]
  htim1.Init.Period = 65535;
 8003426:	4b1a      	ldr	r3, [pc, #104]	@ (8003490 <MX_TIM1_Init+0x98>)
 8003428:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800342c:	60da      	str	r2, [r3, #12]
  htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800342e:	4b18      	ldr	r3, [pc, #96]	@ (8003490 <MX_TIM1_Init+0x98>)
 8003430:	2200      	movs	r2, #0
 8003432:	611a      	str	r2, [r3, #16]
  htim1.Init.RepetitionCounter = 0;
 8003434:	4b16      	ldr	r3, [pc, #88]	@ (8003490 <MX_TIM1_Init+0x98>)
 8003436:	2200      	movs	r2, #0
 8003438:	615a      	str	r2, [r3, #20]
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800343a:	4b15      	ldr	r3, [pc, #84]	@ (8003490 <MX_TIM1_Init+0x98>)
 800343c:	2200      	movs	r2, #0
 800343e:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 8003440:	4813      	ldr	r0, [pc, #76]	@ (8003490 <MX_TIM1_Init+0x98>)
 8003442:	f005 fa65 	bl	8008910 <HAL_TIM_Base_Init>
 8003446:	4603      	mov	r3, r0
 8003448:	2b00      	cmp	r3, #0
 800344a:	d001      	beq.n	8003450 <MX_TIM1_Init+0x58>
  {
    Error_Handler();
 800344c:	f7ff fd42 	bl	8002ed4 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8003450:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8003454:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 8003456:	f107 0308 	add.w	r3, r7, #8
 800345a:	4619      	mov	r1, r3
 800345c:	480c      	ldr	r0, [pc, #48]	@ (8003490 <MX_TIM1_Init+0x98>)
 800345e:	f005 fc07 	bl	8008c70 <HAL_TIM_ConfigClockSource>
 8003462:	4603      	mov	r3, r0
 8003464:	2b00      	cmp	r3, #0
 8003466:	d001      	beq.n	800346c <MX_TIM1_Init+0x74>
  {
    Error_Handler();
 8003468:	f7ff fd34 	bl	8002ed4 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 800346c:	2300      	movs	r3, #0
 800346e:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8003470:	2300      	movs	r3, #0
 8003472:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 8003474:	463b      	mov	r3, r7
 8003476:	4619      	mov	r1, r3
 8003478:	4805      	ldr	r0, [pc, #20]	@ (8003490 <MX_TIM1_Init+0x98>)
 800347a:	f005 fe2f 	bl	80090dc <HAL_TIMEx_MasterConfigSynchronization>
 800347e:	4603      	mov	r3, r0
 8003480:	2b00      	cmp	r3, #0
 8003482:	d001      	beq.n	8003488 <MX_TIM1_Init+0x90>
  {
    Error_Handler();
 8003484:	f7ff fd26 	bl	8002ed4 <Error_Handler>
  }
  /* USER CODE BEGIN TIM1_Init 2 */

  /* USER CODE END TIM1_Init 2 */

}
 8003488:	bf00      	nop
 800348a:	3718      	adds	r7, #24
 800348c:	46bd      	mov	sp, r7
 800348e:	bd80      	pop	{r7, pc}
 8003490:	20025d9c 	.word	0x20025d9c
 8003494:	40010000 	.word	0x40010000

08003498 <MX_TIM7_Init>:
/* TIM7 init function */
void MX_TIM7_Init(void)
{
 8003498:	b580      	push	{r7, lr}
 800349a:	b082      	sub	sp, #8
 800349c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM7_Init 0 */

  /* USER CODE END TIM7_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
 800349e:	463b      	mov	r3, r7
 80034a0:	2200      	movs	r2, #0
 80034a2:	601a      	str	r2, [r3, #0]
 80034a4:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM7_Init 1 */

  /* USER CODE END TIM7_Init 1 */
  htim7.Instance = TIM7;
 80034a6:	4b15      	ldr	r3, [pc, #84]	@ (80034fc <MX_TIM7_Init+0x64>)
 80034a8:	4a15      	ldr	r2, [pc, #84]	@ (8003500 <MX_TIM7_Init+0x68>)
 80034aa:	601a      	str	r2, [r3, #0]
  htim7.Init.Prescaler = TIM7_PRESCALER;
 80034ac:	4b13      	ldr	r3, [pc, #76]	@ (80034fc <MX_TIM7_Init+0x64>)
 80034ae:	f240 22cf 	movw	r2, #719	@ 0x2cf
 80034b2:	605a      	str	r2, [r3, #4]
  htim7.Init.CounterMode = TIM_COUNTERMODE_UP;
 80034b4:	4b11      	ldr	r3, [pc, #68]	@ (80034fc <MX_TIM7_Init+0x64>)
 80034b6:	2200      	movs	r2, #0
 80034b8:	609a      	str	r2, [r3, #8]
  htim7.Init.Period = TIM7_PERIOD;
 80034ba:	4b10      	ldr	r3, [pc, #64]	@ (80034fc <MX_TIM7_Init+0x64>)
 80034bc:	f240 72cf 	movw	r2, #1999	@ 0x7cf
 80034c0:	60da      	str	r2, [r3, #12]
  htim7.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80034c2:	4b0e      	ldr	r3, [pc, #56]	@ (80034fc <MX_TIM7_Init+0x64>)
 80034c4:	2200      	movs	r2, #0
 80034c6:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
 80034c8:	480c      	ldr	r0, [pc, #48]	@ (80034fc <MX_TIM7_Init+0x64>)
 80034ca:	f005 fa21 	bl	8008910 <HAL_TIM_Base_Init>
 80034ce:	4603      	mov	r3, r0
 80034d0:	2b00      	cmp	r3, #0
 80034d2:	d001      	beq.n	80034d8 <MX_TIM7_Init+0x40>
  {
    Error_Handler();
 80034d4:	f7ff fcfe 	bl	8002ed4 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80034d8:	2300      	movs	r3, #0
 80034da:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80034dc:	2300      	movs	r3, #0
 80034de:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
 80034e0:	463b      	mov	r3, r7
 80034e2:	4619      	mov	r1, r3
 80034e4:	4805      	ldr	r0, [pc, #20]	@ (80034fc <MX_TIM7_Init+0x64>)
 80034e6:	f005 fdf9 	bl	80090dc <HAL_TIMEx_MasterConfigSynchronization>
 80034ea:	4603      	mov	r3, r0
 80034ec:	2b00      	cmp	r3, #0
 80034ee:	d001      	beq.n	80034f4 <MX_TIM7_Init+0x5c>
  {
    Error_Handler();
 80034f0:	f7ff fcf0 	bl	8002ed4 <Error_Handler>
  }
  /* USER CODE BEGIN TIM7_Init 2 */

  /* USER CODE END TIM7_Init 2 */

}
 80034f4:	bf00      	nop
 80034f6:	3708      	adds	r7, #8
 80034f8:	46bd      	mov	sp, r7
 80034fa:	bd80      	pop	{r7, pc}
 80034fc:	20025de4 	.word	0x20025de4
 8003500:	40001400 	.word	0x40001400

08003504 <HAL_TIM_Base_MspInit>:

void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* tim_baseHandle)
{
 8003504:	b580      	push	{r7, lr}
 8003506:	b084      	sub	sp, #16
 8003508:	af00      	add	r7, sp, #0
 800350a:	6078      	str	r0, [r7, #4]

  if(tim_baseHandle->Instance==TIM1)
 800350c:	687b      	ldr	r3, [r7, #4]
 800350e:	681b      	ldr	r3, [r3, #0]
 8003510:	4a18      	ldr	r2, [pc, #96]	@ (8003574 <HAL_TIM_Base_MspInit+0x70>)
 8003512:	4293      	cmp	r3, r2
 8003514:	d10e      	bne.n	8003534 <HAL_TIM_Base_MspInit+0x30>
  {
  /* USER CODE BEGIN TIM1_MspInit 0 */

  /* USER CODE END TIM1_MspInit 0 */
    /* TIM1 clock enable */
    __HAL_RCC_TIM1_CLK_ENABLE();
 8003516:	2300      	movs	r3, #0
 8003518:	60fb      	str	r3, [r7, #12]
 800351a:	4b17      	ldr	r3, [pc, #92]	@ (8003578 <HAL_TIM_Base_MspInit+0x74>)
 800351c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800351e:	4a16      	ldr	r2, [pc, #88]	@ (8003578 <HAL_TIM_Base_MspInit+0x74>)
 8003520:	f043 0301 	orr.w	r3, r3, #1
 8003524:	6453      	str	r3, [r2, #68]	@ 0x44
 8003526:	4b14      	ldr	r3, [pc, #80]	@ (8003578 <HAL_TIM_Base_MspInit+0x74>)
 8003528:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800352a:	f003 0301 	and.w	r3, r3, #1
 800352e:	60fb      	str	r3, [r7, #12]
 8003530:	68fb      	ldr	r3, [r7, #12]
    HAL_NVIC_EnableIRQ(TIM7_IRQn);
  /* USER CODE BEGIN TIM7_MspInit 1 */

  /* USER CODE END TIM7_MspInit 1 */
  }
}
 8003532:	e01a      	b.n	800356a <HAL_TIM_Base_MspInit+0x66>
  else if(tim_baseHandle->Instance==TIM7)
 8003534:	687b      	ldr	r3, [r7, #4]
 8003536:	681b      	ldr	r3, [r3, #0]
 8003538:	4a10      	ldr	r2, [pc, #64]	@ (800357c <HAL_TIM_Base_MspInit+0x78>)
 800353a:	4293      	cmp	r3, r2
 800353c:	d115      	bne.n	800356a <HAL_TIM_Base_MspInit+0x66>
    __HAL_RCC_TIM7_CLK_ENABLE();
 800353e:	2300      	movs	r3, #0
 8003540:	60bb      	str	r3, [r7, #8]
 8003542:	4b0d      	ldr	r3, [pc, #52]	@ (8003578 <HAL_TIM_Base_MspInit+0x74>)
 8003544:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003546:	4a0c      	ldr	r2, [pc, #48]	@ (8003578 <HAL_TIM_Base_MspInit+0x74>)
 8003548:	f043 0320 	orr.w	r3, r3, #32
 800354c:	6413      	str	r3, [r2, #64]	@ 0x40
 800354e:	4b0a      	ldr	r3, [pc, #40]	@ (8003578 <HAL_TIM_Base_MspInit+0x74>)
 8003550:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003552:	f003 0320 	and.w	r3, r3, #32
 8003556:	60bb      	str	r3, [r7, #8]
 8003558:	68bb      	ldr	r3, [r7, #8]
    HAL_NVIC_SetPriority(TIM7_IRQn, 5, 0);
 800355a:	2200      	movs	r2, #0
 800355c:	2105      	movs	r1, #5
 800355e:	2037      	movs	r0, #55	@ 0x37
 8003560:	f000 f9c8 	bl	80038f4 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM7_IRQn);
 8003564:	2037      	movs	r0, #55	@ 0x37
 8003566:	f000 f9e1 	bl	800392c <HAL_NVIC_EnableIRQ>
}
 800356a:	bf00      	nop
 800356c:	3710      	adds	r7, #16
 800356e:	46bd      	mov	sp, r7
 8003570:	bd80      	pop	{r7, pc}
 8003572:	bf00      	nop
 8003574:	40010000 	.word	0x40010000
 8003578:	40023800 	.word	0x40023800
 800357c:	40001400 	.word	0x40001400

08003580 <MX_USART1_UART_Init>:
UART_HandleTypeDef huart1;

/* USART1 init function */

void MX_USART1_UART_Init(void)
{
 8003580:	b580      	push	{r7, lr}
 8003582:	af00      	add	r7, sp, #0
  /* USER CODE END USART1_Init 0 */

  /* USER CODE BEGIN USART1_Init 1 */

  /* USER CODE END USART1_Init 1 */
  huart1.Instance = USART1;
 8003584:	4b11      	ldr	r3, [pc, #68]	@ (80035cc <MX_USART1_UART_Init+0x4c>)
 8003586:	4a12      	ldr	r2, [pc, #72]	@ (80035d0 <MX_USART1_UART_Init+0x50>)
 8003588:	601a      	str	r2, [r3, #0]
  huart1.Init.BaudRate = 115200;
 800358a:	4b10      	ldr	r3, [pc, #64]	@ (80035cc <MX_USART1_UART_Init+0x4c>)
 800358c:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 8003590:	605a      	str	r2, [r3, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 8003592:	4b0e      	ldr	r3, [pc, #56]	@ (80035cc <MX_USART1_UART_Init+0x4c>)
 8003594:	2200      	movs	r2, #0
 8003596:	609a      	str	r2, [r3, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 8003598:	4b0c      	ldr	r3, [pc, #48]	@ (80035cc <MX_USART1_UART_Init+0x4c>)
 800359a:	2200      	movs	r2, #0
 800359c:	60da      	str	r2, [r3, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 800359e:	4b0b      	ldr	r3, [pc, #44]	@ (80035cc <MX_USART1_UART_Init+0x4c>)
 80035a0:	2200      	movs	r2, #0
 80035a2:	611a      	str	r2, [r3, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 80035a4:	4b09      	ldr	r3, [pc, #36]	@ (80035cc <MX_USART1_UART_Init+0x4c>)
 80035a6:	220c      	movs	r2, #12
 80035a8:	615a      	str	r2, [r3, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80035aa:	4b08      	ldr	r3, [pc, #32]	@ (80035cc <MX_USART1_UART_Init+0x4c>)
 80035ac:	2200      	movs	r2, #0
 80035ae:	619a      	str	r2, [r3, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 80035b0:	4b06      	ldr	r3, [pc, #24]	@ (80035cc <MX_USART1_UART_Init+0x4c>)
 80035b2:	2200      	movs	r2, #0
 80035b4:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart1) != HAL_OK)
 80035b6:	4805      	ldr	r0, [pc, #20]	@ (80035cc <MX_USART1_UART_Init+0x4c>)
 80035b8:	f005 fe20 	bl	80091fc <HAL_UART_Init>
 80035bc:	4603      	mov	r3, r0
 80035be:	2b00      	cmp	r3, #0
 80035c0:	d001      	beq.n	80035c6 <MX_USART1_UART_Init+0x46>
  {
    Error_Handler();
 80035c2:	f7ff fc87 	bl	8002ed4 <Error_Handler>
  }
  /* USER CODE BEGIN USART1_Init 2 */

  /* USER CODE END USART1_Init 2 */

}
 80035c6:	bf00      	nop
 80035c8:	bd80      	pop	{r7, pc}
 80035ca:	bf00      	nop
 80035cc:	20025e2c 	.word	0x20025e2c
 80035d0:	40011000 	.word	0x40011000

080035d4 <HAL_UART_MspInit>:

void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
{
 80035d4:	b580      	push	{r7, lr}
 80035d6:	b08a      	sub	sp, #40	@ 0x28
 80035d8:	af00      	add	r7, sp, #0
 80035da:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80035dc:	f107 0314 	add.w	r3, r7, #20
 80035e0:	2200      	movs	r2, #0
 80035e2:	601a      	str	r2, [r3, #0]
 80035e4:	605a      	str	r2, [r3, #4]
 80035e6:	609a      	str	r2, [r3, #8]
 80035e8:	60da      	str	r2, [r3, #12]
 80035ea:	611a      	str	r2, [r3, #16]
  if(uartHandle->Instance==USART1)
 80035ec:	687b      	ldr	r3, [r7, #4]
 80035ee:	681b      	ldr	r3, [r3, #0]
 80035f0:	4a19      	ldr	r2, [pc, #100]	@ (8003658 <HAL_UART_MspInit+0x84>)
 80035f2:	4293      	cmp	r3, r2
 80035f4:	d12c      	bne.n	8003650 <HAL_UART_MspInit+0x7c>
  {
  /* USER CODE BEGIN USART1_MspInit 0 */

  /* USER CODE END USART1_MspInit 0 */
    /* USART1 clock enable */
    __HAL_RCC_USART1_CLK_ENABLE();
 80035f6:	2300      	movs	r3, #0
 80035f8:	613b      	str	r3, [r7, #16]
 80035fa:	4b18      	ldr	r3, [pc, #96]	@ (800365c <HAL_UART_MspInit+0x88>)
 80035fc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80035fe:	4a17      	ldr	r2, [pc, #92]	@ (800365c <HAL_UART_MspInit+0x88>)
 8003600:	f043 0310 	orr.w	r3, r3, #16
 8003604:	6453      	str	r3, [r2, #68]	@ 0x44
 8003606:	4b15      	ldr	r3, [pc, #84]	@ (800365c <HAL_UART_MspInit+0x88>)
 8003608:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800360a:	f003 0310 	and.w	r3, r3, #16
 800360e:	613b      	str	r3, [r7, #16]
 8003610:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8003612:	2300      	movs	r3, #0
 8003614:	60fb      	str	r3, [r7, #12]
 8003616:	4b11      	ldr	r3, [pc, #68]	@ (800365c <HAL_UART_MspInit+0x88>)
 8003618:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800361a:	4a10      	ldr	r2, [pc, #64]	@ (800365c <HAL_UART_MspInit+0x88>)
 800361c:	f043 0301 	orr.w	r3, r3, #1
 8003620:	6313      	str	r3, [r2, #48]	@ 0x30
 8003622:	4b0e      	ldr	r3, [pc, #56]	@ (800365c <HAL_UART_MspInit+0x88>)
 8003624:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003626:	f003 0301 	and.w	r3, r3, #1
 800362a:	60fb      	str	r3, [r7, #12]
 800362c:	68fb      	ldr	r3, [r7, #12]
    /**USART1 GPIO Configuration
    PA9     ------> USART1_TX
    PA10     ------> USART1_RX
    */
    GPIO_InitStruct.Pin = STLINK_RX_Pin|STLINK_TX_Pin;
 800362e:	f44f 63c0 	mov.w	r3, #1536	@ 0x600
 8003632:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8003634:	2302      	movs	r3, #2
 8003636:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003638:	2300      	movs	r3, #0
 800363a:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800363c:	2303      	movs	r3, #3
 800363e:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 8003640:	2307      	movs	r3, #7
 8003642:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8003644:	f107 0314 	add.w	r3, r7, #20
 8003648:	4619      	mov	r1, r3
 800364a:	4805      	ldr	r0, [pc, #20]	@ (8003660 <HAL_UART_MspInit+0x8c>)
 800364c:	f000 fef4 	bl	8004438 <HAL_GPIO_Init>

  /* USER CODE BEGIN USART1_MspInit 1 */

  /* USER CODE END USART1_MspInit 1 */
  }
}
 8003650:	bf00      	nop
 8003652:	3728      	adds	r7, #40	@ 0x28
 8003654:	46bd      	mov	sp, r7
 8003656:	bd80      	pop	{r7, pc}
 8003658:	40011000 	.word	0x40011000
 800365c:	40023800 	.word	0x40023800
 8003660:	40020000 	.word	0x40020000

08003664 <Reset_Handler>:
 8003664:	f8df d034 	ldr.w	sp, [pc, #52]	@ 800369c <LoopFillZerobss+0xe>
 8003668:	f7ff feb4 	bl	80033d4 <SystemInit>
 800366c:	480c      	ldr	r0, [pc, #48]	@ (80036a0 <LoopFillZerobss+0x12>)
 800366e:	490d      	ldr	r1, [pc, #52]	@ (80036a4 <LoopFillZerobss+0x16>)
 8003670:	4a0d      	ldr	r2, [pc, #52]	@ (80036a8 <LoopFillZerobss+0x1a>)
 8003672:	2300      	movs	r3, #0
 8003674:	e002      	b.n	800367c <LoopCopyDataInit>

08003676 <CopyDataInit>:
 8003676:	58d4      	ldr	r4, [r2, r3]
 8003678:	50c4      	str	r4, [r0, r3]
 800367a:	3304      	adds	r3, #4

0800367c <LoopCopyDataInit>:
 800367c:	18c4      	adds	r4, r0, r3
 800367e:	428c      	cmp	r4, r1
 8003680:	d3f9      	bcc.n	8003676 <CopyDataInit>
 8003682:	4a0a      	ldr	r2, [pc, #40]	@ (80036ac <LoopFillZerobss+0x1e>)
 8003684:	4c0a      	ldr	r4, [pc, #40]	@ (80036b0 <LoopFillZerobss+0x22>)
 8003686:	2300      	movs	r3, #0
 8003688:	e001      	b.n	800368e <LoopFillZerobss>

0800368a <FillZerobss>:
 800368a:	6013      	str	r3, [r2, #0]
 800368c:	3204      	adds	r2, #4

0800368e <LoopFillZerobss>:
 800368e:	42a2      	cmp	r2, r4
 8003690:	d3fb      	bcc.n	800368a <FillZerobss>
 8003692:	f008 fef3 	bl	800c47c <__libc_init_array>
 8003696:	f7ff fb2d 	bl	8002cf4 <main>
 800369a:	4770      	bx	lr
 800369c:	20030000 	.word	0x20030000
 80036a0:	20000000 	.word	0x20000000
 80036a4:	200001e0 	.word	0x200001e0
 80036a8:	0800e464 	.word	0x0800e464
 80036ac:	200001e0 	.word	0x200001e0
 80036b0:	20026490 	.word	0x20026490

080036b4 <ADC_IRQHandler>:
 80036b4:	e7fe      	b.n	80036b4 <ADC_IRQHandler>
	...

080036b8 <HAL_Init>:
 80036b8:	b580      	push	{r7, lr}
 80036ba:	af00      	add	r7, sp, #0
 80036bc:	4b0e      	ldr	r3, [pc, #56]	@ (80036f8 <HAL_Init+0x40>)
 80036be:	681b      	ldr	r3, [r3, #0]
 80036c0:	4a0d      	ldr	r2, [pc, #52]	@ (80036f8 <HAL_Init+0x40>)
 80036c2:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 80036c6:	6013      	str	r3, [r2, #0]
 80036c8:	4b0b      	ldr	r3, [pc, #44]	@ (80036f8 <HAL_Init+0x40>)
 80036ca:	681b      	ldr	r3, [r3, #0]
 80036cc:	4a0a      	ldr	r2, [pc, #40]	@ (80036f8 <HAL_Init+0x40>)
 80036ce:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 80036d2:	6013      	str	r3, [r2, #0]
 80036d4:	4b08      	ldr	r3, [pc, #32]	@ (80036f8 <HAL_Init+0x40>)
 80036d6:	681b      	ldr	r3, [r3, #0]
 80036d8:	4a07      	ldr	r2, [pc, #28]	@ (80036f8 <HAL_Init+0x40>)
 80036da:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80036de:	6013      	str	r3, [r2, #0]
 80036e0:	2003      	movs	r0, #3
 80036e2:	f000 f8fc 	bl	80038de <HAL_NVIC_SetPriorityGrouping>
 80036e6:	200f      	movs	r0, #15
 80036e8:	f7ff fcf6 	bl	80030d8 <HAL_InitTick>
 80036ec:	f7ff fcc8 	bl	8003080 <HAL_MspInit>
 80036f0:	2300      	movs	r3, #0
 80036f2:	4618      	mov	r0, r3
 80036f4:	bd80      	pop	{r7, pc}
 80036f6:	bf00      	nop
 80036f8:	40023c00 	.word	0x40023c00

080036fc <HAL_IncTick>:
 80036fc:	b480      	push	{r7}
 80036fe:	af00      	add	r7, sp, #0
 8003700:	4b06      	ldr	r3, [pc, #24]	@ (800371c <HAL_IncTick+0x20>)
 8003702:	781b      	ldrb	r3, [r3, #0]
 8003704:	461a      	mov	r2, r3
 8003706:	4b06      	ldr	r3, [pc, #24]	@ (8003720 <HAL_IncTick+0x24>)
 8003708:	681b      	ldr	r3, [r3, #0]
 800370a:	4413      	add	r3, r2
 800370c:	4a04      	ldr	r2, [pc, #16]	@ (8003720 <HAL_IncTick+0x24>)
 800370e:	6013      	str	r3, [r2, #0]
 8003710:	bf00      	nop
 8003712:	46bd      	mov	sp, r7
 8003714:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003718:	4770      	bx	lr
 800371a:	bf00      	nop
 800371c:	20000010 	.word	0x20000010
 8003720:	20025e74 	.word	0x20025e74

08003724 <HAL_GetTick>:
 8003724:	b480      	push	{r7}
 8003726:	af00      	add	r7, sp, #0
 8003728:	4b03      	ldr	r3, [pc, #12]	@ (8003738 <HAL_GetTick+0x14>)
 800372a:	681b      	ldr	r3, [r3, #0]
 800372c:	4618      	mov	r0, r3
 800372e:	46bd      	mov	sp, r7
 8003730:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003734:	4770      	bx	lr
 8003736:	bf00      	nop
 8003738:	20025e74 	.word	0x20025e74

0800373c <HAL_Delay>:
 800373c:	b580      	push	{r7, lr}
 800373e:	b084      	sub	sp, #16
 8003740:	af00      	add	r7, sp, #0
 8003742:	6078      	str	r0, [r7, #4]
 8003744:	f7ff ffee 	bl	8003724 <HAL_GetTick>
 8003748:	60b8      	str	r0, [r7, #8]
 800374a:	687b      	ldr	r3, [r7, #4]
 800374c:	60fb      	str	r3, [r7, #12]
 800374e:	68fb      	ldr	r3, [r7, #12]
 8003750:	f1b3 3fff 	cmp.w	r3, #4294967295	@ 0xffffffff
 8003754:	d005      	beq.n	8003762 <HAL_Delay+0x26>
 8003756:	4b0a      	ldr	r3, [pc, #40]	@ (8003780 <HAL_Delay+0x44>)
 8003758:	781b      	ldrb	r3, [r3, #0]
 800375a:	461a      	mov	r2, r3
 800375c:	68fb      	ldr	r3, [r7, #12]
 800375e:	4413      	add	r3, r2
 8003760:	60fb      	str	r3, [r7, #12]
 8003762:	bf00      	nop
 8003764:	f7ff ffde 	bl	8003724 <HAL_GetTick>
 8003768:	4602      	mov	r2, r0
 800376a:	68bb      	ldr	r3, [r7, #8]
 800376c:	1ad3      	subs	r3, r2, r3
 800376e:	68fa      	ldr	r2, [r7, #12]
 8003770:	429a      	cmp	r2, r3
 8003772:	d8f7      	bhi.n	8003764 <HAL_Delay+0x28>
 8003774:	bf00      	nop
 8003776:	bf00      	nop
 8003778:	3710      	adds	r7, #16
 800377a:	46bd      	mov	sp, r7
 800377c:	bd80      	pop	{r7, pc}
 800377e:	bf00      	nop
 8003780:	20000010 	.word	0x20000010

08003784 <__NVIC_SetPriorityGrouping>:
 8003784:	b480      	push	{r7}
 8003786:	b085      	sub	sp, #20
 8003788:	af00      	add	r7, sp, #0
 800378a:	6078      	str	r0, [r7, #4]
 800378c:	687b      	ldr	r3, [r7, #4]
 800378e:	f003 0307 	and.w	r3, r3, #7
 8003792:	60fb      	str	r3, [r7, #12]
 8003794:	4b0c      	ldr	r3, [pc, #48]	@ (80037c8 <__NVIC_SetPriorityGrouping+0x44>)
 8003796:	68db      	ldr	r3, [r3, #12]
 8003798:	60bb      	str	r3, [r7, #8]
 800379a:	68ba      	ldr	r2, [r7, #8]
 800379c:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 80037a0:	4013      	ands	r3, r2
 80037a2:	60bb      	str	r3, [r7, #8]
 80037a4:	68fb      	ldr	r3, [r7, #12]
 80037a6:	021a      	lsls	r2, r3, #8
 80037a8:	68bb      	ldr	r3, [r7, #8]
 80037aa:	4313      	orrs	r3, r2
 80037ac:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 80037b0:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 80037b4:	60bb      	str	r3, [r7, #8]
 80037b6:	4a04      	ldr	r2, [pc, #16]	@ (80037c8 <__NVIC_SetPriorityGrouping+0x44>)
 80037b8:	68bb      	ldr	r3, [r7, #8]
 80037ba:	60d3      	str	r3, [r2, #12]
 80037bc:	bf00      	nop
 80037be:	3714      	adds	r7, #20
 80037c0:	46bd      	mov	sp, r7
 80037c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80037c6:	4770      	bx	lr
 80037c8:	e000ed00 	.word	0xe000ed00

080037cc <__NVIC_GetPriorityGrouping>:
 80037cc:	b480      	push	{r7}
 80037ce:	af00      	add	r7, sp, #0
 80037d0:	4b04      	ldr	r3, [pc, #16]	@ (80037e4 <__NVIC_GetPriorityGrouping+0x18>)
 80037d2:	68db      	ldr	r3, [r3, #12]
 80037d4:	0a1b      	lsrs	r3, r3, #8
 80037d6:	f003 0307 	and.w	r3, r3, #7
 80037da:	4618      	mov	r0, r3
 80037dc:	46bd      	mov	sp, r7
 80037de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80037e2:	4770      	bx	lr
 80037e4:	e000ed00 	.word	0xe000ed00

080037e8 <__NVIC_EnableIRQ>:
 80037e8:	b480      	push	{r7}
 80037ea:	b083      	sub	sp, #12
 80037ec:	af00      	add	r7, sp, #0
 80037ee:	4603      	mov	r3, r0
 80037f0:	71fb      	strb	r3, [r7, #7]
 80037f2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80037f6:	2b00      	cmp	r3, #0
 80037f8:	db0b      	blt.n	8003812 <__NVIC_EnableIRQ+0x2a>
 80037fa:	79fb      	ldrb	r3, [r7, #7]
 80037fc:	f003 021f 	and.w	r2, r3, #31
 8003800:	4907      	ldr	r1, [pc, #28]	@ (8003820 <__NVIC_EnableIRQ+0x38>)
 8003802:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003806:	095b      	lsrs	r3, r3, #5
 8003808:	2001      	movs	r0, #1
 800380a:	fa00 f202 	lsl.w	r2, r0, r2
 800380e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8003812:	bf00      	nop
 8003814:	370c      	adds	r7, #12
 8003816:	46bd      	mov	sp, r7
 8003818:	f85d 7b04 	ldr.w	r7, [sp], #4
 800381c:	4770      	bx	lr
 800381e:	bf00      	nop
 8003820:	e000e100 	.word	0xe000e100

08003824 <__NVIC_SetPriority>:
 8003824:	b480      	push	{r7}
 8003826:	b083      	sub	sp, #12
 8003828:	af00      	add	r7, sp, #0
 800382a:	4603      	mov	r3, r0
 800382c:	6039      	str	r1, [r7, #0]
 800382e:	71fb      	strb	r3, [r7, #7]
 8003830:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003834:	2b00      	cmp	r3, #0
 8003836:	db0a      	blt.n	800384e <__NVIC_SetPriority+0x2a>
 8003838:	683b      	ldr	r3, [r7, #0]
 800383a:	b2da      	uxtb	r2, r3
 800383c:	490c      	ldr	r1, [pc, #48]	@ (8003870 <__NVIC_SetPriority+0x4c>)
 800383e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003842:	0112      	lsls	r2, r2, #4
 8003844:	b2d2      	uxtb	r2, r2
 8003846:	440b      	add	r3, r1
 8003848:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 800384c:	e00a      	b.n	8003864 <__NVIC_SetPriority+0x40>
 800384e:	683b      	ldr	r3, [r7, #0]
 8003850:	b2da      	uxtb	r2, r3
 8003852:	4908      	ldr	r1, [pc, #32]	@ (8003874 <__NVIC_SetPriority+0x50>)
 8003854:	79fb      	ldrb	r3, [r7, #7]
 8003856:	f003 030f 	and.w	r3, r3, #15
 800385a:	3b04      	subs	r3, #4
 800385c:	0112      	lsls	r2, r2, #4
 800385e:	b2d2      	uxtb	r2, r2
 8003860:	440b      	add	r3, r1
 8003862:	761a      	strb	r2, [r3, #24]
 8003864:	bf00      	nop
 8003866:	370c      	adds	r7, #12
 8003868:	46bd      	mov	sp, r7
 800386a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800386e:	4770      	bx	lr
 8003870:	e000e100 	.word	0xe000e100
 8003874:	e000ed00 	.word	0xe000ed00

08003878 <NVIC_EncodePriority>:
 8003878:	b480      	push	{r7}
 800387a:	b089      	sub	sp, #36	@ 0x24
 800387c:	af00      	add	r7, sp, #0
 800387e:	60f8      	str	r0, [r7, #12]
 8003880:	60b9      	str	r1, [r7, #8]
 8003882:	607a      	str	r2, [r7, #4]
 8003884:	68fb      	ldr	r3, [r7, #12]
 8003886:	f003 0307 	and.w	r3, r3, #7
 800388a:	61fb      	str	r3, [r7, #28]
 800388c:	69fb      	ldr	r3, [r7, #28]
 800388e:	f1c3 0307 	rsb	r3, r3, #7
 8003892:	2b04      	cmp	r3, #4
 8003894:	bf28      	it	cs
 8003896:	2304      	movcs	r3, #4
 8003898:	61bb      	str	r3, [r7, #24]
 800389a:	69fb      	ldr	r3, [r7, #28]
 800389c:	3304      	adds	r3, #4
 800389e:	2b06      	cmp	r3, #6
 80038a0:	d902      	bls.n	80038a8 <NVIC_EncodePriority+0x30>
 80038a2:	69fb      	ldr	r3, [r7, #28]
 80038a4:	3b03      	subs	r3, #3
 80038a6:	e000      	b.n	80038aa <NVIC_EncodePriority+0x32>
 80038a8:	2300      	movs	r3, #0
 80038aa:	617b      	str	r3, [r7, #20]
 80038ac:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 80038b0:	69bb      	ldr	r3, [r7, #24]
 80038b2:	fa02 f303 	lsl.w	r3, r2, r3
 80038b6:	43da      	mvns	r2, r3
 80038b8:	68bb      	ldr	r3, [r7, #8]
 80038ba:	401a      	ands	r2, r3
 80038bc:	697b      	ldr	r3, [r7, #20]
 80038be:	409a      	lsls	r2, r3
 80038c0:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
 80038c4:	697b      	ldr	r3, [r7, #20]
 80038c6:	fa01 f303 	lsl.w	r3, r1, r3
 80038ca:	43d9      	mvns	r1, r3
 80038cc:	687b      	ldr	r3, [r7, #4]
 80038ce:	400b      	ands	r3, r1
 80038d0:	4313      	orrs	r3, r2
 80038d2:	4618      	mov	r0, r3
 80038d4:	3724      	adds	r7, #36	@ 0x24
 80038d6:	46bd      	mov	sp, r7
 80038d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80038dc:	4770      	bx	lr

080038de <HAL_NVIC_SetPriorityGrouping>:
 80038de:	b580      	push	{r7, lr}
 80038e0:	b082      	sub	sp, #8
 80038e2:	af00      	add	r7, sp, #0
 80038e4:	6078      	str	r0, [r7, #4]
 80038e6:	6878      	ldr	r0, [r7, #4]
 80038e8:	f7ff ff4c 	bl	8003784 <__NVIC_SetPriorityGrouping>
 80038ec:	bf00      	nop
 80038ee:	3708      	adds	r7, #8
 80038f0:	46bd      	mov	sp, r7
 80038f2:	bd80      	pop	{r7, pc}

080038f4 <HAL_NVIC_SetPriority>:
 80038f4:	b580      	push	{r7, lr}
 80038f6:	b086      	sub	sp, #24
 80038f8:	af00      	add	r7, sp, #0
 80038fa:	4603      	mov	r3, r0
 80038fc:	60b9      	str	r1, [r7, #8]
 80038fe:	607a      	str	r2, [r7, #4]
 8003900:	73fb      	strb	r3, [r7, #15]
 8003902:	2300      	movs	r3, #0
 8003904:	617b      	str	r3, [r7, #20]
 8003906:	f7ff ff61 	bl	80037cc <__NVIC_GetPriorityGrouping>
 800390a:	6178      	str	r0, [r7, #20]
 800390c:	687a      	ldr	r2, [r7, #4]
 800390e:	68b9      	ldr	r1, [r7, #8]
 8003910:	6978      	ldr	r0, [r7, #20]
 8003912:	f7ff ffb1 	bl	8003878 <NVIC_EncodePriority>
 8003916:	4602      	mov	r2, r0
 8003918:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800391c:	4611      	mov	r1, r2
 800391e:	4618      	mov	r0, r3
 8003920:	f7ff ff80 	bl	8003824 <__NVIC_SetPriority>
 8003924:	bf00      	nop
 8003926:	3718      	adds	r7, #24
 8003928:	46bd      	mov	sp, r7
 800392a:	bd80      	pop	{r7, pc}

0800392c <HAL_NVIC_EnableIRQ>:
 800392c:	b580      	push	{r7, lr}
 800392e:	b082      	sub	sp, #8
 8003930:	af00      	add	r7, sp, #0
 8003932:	4603      	mov	r3, r0
 8003934:	71fb      	strb	r3, [r7, #7]
 8003936:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800393a:	4618      	mov	r0, r3
 800393c:	f7ff ff54 	bl	80037e8 <__NVIC_EnableIRQ>
 8003940:	bf00      	nop
 8003942:	3708      	adds	r7, #8
 8003944:	46bd      	mov	sp, r7
 8003946:	bd80      	pop	{r7, pc}

08003948 <HAL_CRC_Init>:
 8003948:	b580      	push	{r7, lr}
 800394a:	b082      	sub	sp, #8
 800394c:	af00      	add	r7, sp, #0
 800394e:	6078      	str	r0, [r7, #4]
 8003950:	687b      	ldr	r3, [r7, #4]
 8003952:	2b00      	cmp	r3, #0
 8003954:	d101      	bne.n	800395a <HAL_CRC_Init+0x12>
 8003956:	2301      	movs	r3, #1
 8003958:	e00e      	b.n	8003978 <HAL_CRC_Init+0x30>
 800395a:	687b      	ldr	r3, [r7, #4]
 800395c:	795b      	ldrb	r3, [r3, #5]
 800395e:	b2db      	uxtb	r3, r3
 8003960:	2b00      	cmp	r3, #0
 8003962:	d105      	bne.n	8003970 <HAL_CRC_Init+0x28>
 8003964:	687b      	ldr	r3, [r7, #4]
 8003966:	2200      	movs	r2, #0
 8003968:	711a      	strb	r2, [r3, #4]
 800396a:	6878      	ldr	r0, [r7, #4]
 800396c:	f7fd fcbc 	bl	80012e8 <HAL_CRC_MspInit>
 8003970:	687b      	ldr	r3, [r7, #4]
 8003972:	2201      	movs	r2, #1
 8003974:	715a      	strb	r2, [r3, #5]
 8003976:	2300      	movs	r3, #0
 8003978:	4618      	mov	r0, r3
 800397a:	3708      	adds	r7, #8
 800397c:	46bd      	mov	sp, r7
 800397e:	bd80      	pop	{r7, pc}

08003980 <HAL_DMA_Init>:
 8003980:	b580      	push	{r7, lr}
 8003982:	b086      	sub	sp, #24
 8003984:	af00      	add	r7, sp, #0
 8003986:	6078      	str	r0, [r7, #4]
 8003988:	2300      	movs	r3, #0
 800398a:	617b      	str	r3, [r7, #20]
 800398c:	f7ff feca 	bl	8003724 <HAL_GetTick>
 8003990:	6138      	str	r0, [r7, #16]
 8003992:	687b      	ldr	r3, [r7, #4]
 8003994:	2b00      	cmp	r3, #0
 8003996:	d101      	bne.n	800399c <HAL_DMA_Init+0x1c>
 8003998:	2301      	movs	r3, #1
 800399a:	e099      	b.n	8003ad0 <HAL_DMA_Init+0x150>
 800399c:	687b      	ldr	r3, [r7, #4]
 800399e:	2202      	movs	r2, #2
 80039a0:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 80039a4:	687b      	ldr	r3, [r7, #4]
 80039a6:	2200      	movs	r2, #0
 80039a8:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 80039ac:	687b      	ldr	r3, [r7, #4]
 80039ae:	681b      	ldr	r3, [r3, #0]
 80039b0:	681a      	ldr	r2, [r3, #0]
 80039b2:	687b      	ldr	r3, [r7, #4]
 80039b4:	681b      	ldr	r3, [r3, #0]
 80039b6:	f022 0201 	bic.w	r2, r2, #1
 80039ba:	601a      	str	r2, [r3, #0]
 80039bc:	e00f      	b.n	80039de <HAL_DMA_Init+0x5e>
 80039be:	f7ff feb1 	bl	8003724 <HAL_GetTick>
 80039c2:	4602      	mov	r2, r0
 80039c4:	693b      	ldr	r3, [r7, #16]
 80039c6:	1ad3      	subs	r3, r2, r3
 80039c8:	2b05      	cmp	r3, #5
 80039ca:	d908      	bls.n	80039de <HAL_DMA_Init+0x5e>
 80039cc:	687b      	ldr	r3, [r7, #4]
 80039ce:	2220      	movs	r2, #32
 80039d0:	655a      	str	r2, [r3, #84]	@ 0x54
 80039d2:	687b      	ldr	r3, [r7, #4]
 80039d4:	2203      	movs	r2, #3
 80039d6:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 80039da:	2303      	movs	r3, #3
 80039dc:	e078      	b.n	8003ad0 <HAL_DMA_Init+0x150>
 80039de:	687b      	ldr	r3, [r7, #4]
 80039e0:	681b      	ldr	r3, [r3, #0]
 80039e2:	681b      	ldr	r3, [r3, #0]
 80039e4:	f003 0301 	and.w	r3, r3, #1
 80039e8:	2b00      	cmp	r3, #0
 80039ea:	d1e8      	bne.n	80039be <HAL_DMA_Init+0x3e>
 80039ec:	687b      	ldr	r3, [r7, #4]
 80039ee:	681b      	ldr	r3, [r3, #0]
 80039f0:	681b      	ldr	r3, [r3, #0]
 80039f2:	617b      	str	r3, [r7, #20]
 80039f4:	697a      	ldr	r2, [r7, #20]
 80039f6:	4b38      	ldr	r3, [pc, #224]	@ (8003ad8 <HAL_DMA_Init+0x158>)
 80039f8:	4013      	ands	r3, r2
 80039fa:	617b      	str	r3, [r7, #20]
 80039fc:	687b      	ldr	r3, [r7, #4]
 80039fe:	685a      	ldr	r2, [r3, #4]
 8003a00:	687b      	ldr	r3, [r7, #4]
 8003a02:	689b      	ldr	r3, [r3, #8]
 8003a04:	431a      	orrs	r2, r3
 8003a06:	687b      	ldr	r3, [r7, #4]
 8003a08:	68db      	ldr	r3, [r3, #12]
 8003a0a:	431a      	orrs	r2, r3
 8003a0c:	687b      	ldr	r3, [r7, #4]
 8003a0e:	691b      	ldr	r3, [r3, #16]
 8003a10:	431a      	orrs	r2, r3
 8003a12:	687b      	ldr	r3, [r7, #4]
 8003a14:	695b      	ldr	r3, [r3, #20]
 8003a16:	431a      	orrs	r2, r3
 8003a18:	687b      	ldr	r3, [r7, #4]
 8003a1a:	699b      	ldr	r3, [r3, #24]
 8003a1c:	431a      	orrs	r2, r3
 8003a1e:	687b      	ldr	r3, [r7, #4]
 8003a20:	69db      	ldr	r3, [r3, #28]
 8003a22:	431a      	orrs	r2, r3
 8003a24:	687b      	ldr	r3, [r7, #4]
 8003a26:	6a1b      	ldr	r3, [r3, #32]
 8003a28:	4313      	orrs	r3, r2
 8003a2a:	697a      	ldr	r2, [r7, #20]
 8003a2c:	4313      	orrs	r3, r2
 8003a2e:	617b      	str	r3, [r7, #20]
 8003a30:	687b      	ldr	r3, [r7, #4]
 8003a32:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003a34:	2b04      	cmp	r3, #4
 8003a36:	d107      	bne.n	8003a48 <HAL_DMA_Init+0xc8>
 8003a38:	687b      	ldr	r3, [r7, #4]
 8003a3a:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8003a3c:	687b      	ldr	r3, [r7, #4]
 8003a3e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003a40:	4313      	orrs	r3, r2
 8003a42:	697a      	ldr	r2, [r7, #20]
 8003a44:	4313      	orrs	r3, r2
 8003a46:	617b      	str	r3, [r7, #20]
 8003a48:	687b      	ldr	r3, [r7, #4]
 8003a4a:	681b      	ldr	r3, [r3, #0]
 8003a4c:	697a      	ldr	r2, [r7, #20]
 8003a4e:	601a      	str	r2, [r3, #0]
 8003a50:	687b      	ldr	r3, [r7, #4]
 8003a52:	681b      	ldr	r3, [r3, #0]
 8003a54:	695b      	ldr	r3, [r3, #20]
 8003a56:	617b      	str	r3, [r7, #20]
 8003a58:	697b      	ldr	r3, [r7, #20]
 8003a5a:	f023 0307 	bic.w	r3, r3, #7
 8003a5e:	617b      	str	r3, [r7, #20]
 8003a60:	687b      	ldr	r3, [r7, #4]
 8003a62:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003a64:	697a      	ldr	r2, [r7, #20]
 8003a66:	4313      	orrs	r3, r2
 8003a68:	617b      	str	r3, [r7, #20]
 8003a6a:	687b      	ldr	r3, [r7, #4]
 8003a6c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003a6e:	2b04      	cmp	r3, #4
 8003a70:	d117      	bne.n	8003aa2 <HAL_DMA_Init+0x122>
 8003a72:	687b      	ldr	r3, [r7, #4]
 8003a74:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003a76:	697a      	ldr	r2, [r7, #20]
 8003a78:	4313      	orrs	r3, r2
 8003a7a:	617b      	str	r3, [r7, #20]
 8003a7c:	687b      	ldr	r3, [r7, #4]
 8003a7e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003a80:	2b00      	cmp	r3, #0
 8003a82:	d00e      	beq.n	8003aa2 <HAL_DMA_Init+0x122>
 8003a84:	6878      	ldr	r0, [r7, #4]
 8003a86:	f000 fa6f 	bl	8003f68 <DMA_CheckFifoParam>
 8003a8a:	4603      	mov	r3, r0
 8003a8c:	2b00      	cmp	r3, #0
 8003a8e:	d008      	beq.n	8003aa2 <HAL_DMA_Init+0x122>
 8003a90:	687b      	ldr	r3, [r7, #4]
 8003a92:	2240      	movs	r2, #64	@ 0x40
 8003a94:	655a      	str	r2, [r3, #84]	@ 0x54
 8003a96:	687b      	ldr	r3, [r7, #4]
 8003a98:	2201      	movs	r2, #1
 8003a9a:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8003a9e:	2301      	movs	r3, #1
 8003aa0:	e016      	b.n	8003ad0 <HAL_DMA_Init+0x150>
 8003aa2:	687b      	ldr	r3, [r7, #4]
 8003aa4:	681b      	ldr	r3, [r3, #0]
 8003aa6:	697a      	ldr	r2, [r7, #20]
 8003aa8:	615a      	str	r2, [r3, #20]
 8003aaa:	6878      	ldr	r0, [r7, #4]
 8003aac:	f000 fa26 	bl	8003efc <DMA_CalcBaseAndBitshift>
 8003ab0:	4603      	mov	r3, r0
 8003ab2:	60fb      	str	r3, [r7, #12]
 8003ab4:	687b      	ldr	r3, [r7, #4]
 8003ab6:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003ab8:	223f      	movs	r2, #63	@ 0x3f
 8003aba:	409a      	lsls	r2, r3
 8003abc:	68fb      	ldr	r3, [r7, #12]
 8003abe:	609a      	str	r2, [r3, #8]
 8003ac0:	687b      	ldr	r3, [r7, #4]
 8003ac2:	2200      	movs	r2, #0
 8003ac4:	655a      	str	r2, [r3, #84]	@ 0x54
 8003ac6:	687b      	ldr	r3, [r7, #4]
 8003ac8:	2201      	movs	r2, #1
 8003aca:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8003ace:	2300      	movs	r3, #0
 8003ad0:	4618      	mov	r0, r3
 8003ad2:	3718      	adds	r7, #24
 8003ad4:	46bd      	mov	sp, r7
 8003ad6:	bd80      	pop	{r7, pc}
 8003ad8:	f010803f 	.word	0xf010803f

08003adc <HAL_DMA_Start_IT>:
 8003adc:	b580      	push	{r7, lr}
 8003ade:	b086      	sub	sp, #24
 8003ae0:	af00      	add	r7, sp, #0
 8003ae2:	60f8      	str	r0, [r7, #12]
 8003ae4:	60b9      	str	r1, [r7, #8]
 8003ae6:	607a      	str	r2, [r7, #4]
 8003ae8:	603b      	str	r3, [r7, #0]
 8003aea:	2300      	movs	r3, #0
 8003aec:	75fb      	strb	r3, [r7, #23]
 8003aee:	68fb      	ldr	r3, [r7, #12]
 8003af0:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8003af2:	613b      	str	r3, [r7, #16]
 8003af4:	68fb      	ldr	r3, [r7, #12]
 8003af6:	f893 3034 	ldrb.w	r3, [r3, #52]	@ 0x34
 8003afa:	2b01      	cmp	r3, #1
 8003afc:	d101      	bne.n	8003b02 <HAL_DMA_Start_IT+0x26>
 8003afe:	2302      	movs	r3, #2
 8003b00:	e040      	b.n	8003b84 <HAL_DMA_Start_IT+0xa8>
 8003b02:	68fb      	ldr	r3, [r7, #12]
 8003b04:	2201      	movs	r2, #1
 8003b06:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8003b0a:	68fb      	ldr	r3, [r7, #12]
 8003b0c:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 8003b10:	b2db      	uxtb	r3, r3
 8003b12:	2b01      	cmp	r3, #1
 8003b14:	d12f      	bne.n	8003b76 <HAL_DMA_Start_IT+0x9a>
 8003b16:	68fb      	ldr	r3, [r7, #12]
 8003b18:	2202      	movs	r2, #2
 8003b1a:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8003b1e:	68fb      	ldr	r3, [r7, #12]
 8003b20:	2200      	movs	r2, #0
 8003b22:	655a      	str	r2, [r3, #84]	@ 0x54
 8003b24:	683b      	ldr	r3, [r7, #0]
 8003b26:	687a      	ldr	r2, [r7, #4]
 8003b28:	68b9      	ldr	r1, [r7, #8]
 8003b2a:	68f8      	ldr	r0, [r7, #12]
 8003b2c:	f000 f9b8 	bl	8003ea0 <DMA_SetConfig>
 8003b30:	68fb      	ldr	r3, [r7, #12]
 8003b32:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003b34:	223f      	movs	r2, #63	@ 0x3f
 8003b36:	409a      	lsls	r2, r3
 8003b38:	693b      	ldr	r3, [r7, #16]
 8003b3a:	609a      	str	r2, [r3, #8]
 8003b3c:	68fb      	ldr	r3, [r7, #12]
 8003b3e:	681b      	ldr	r3, [r3, #0]
 8003b40:	681a      	ldr	r2, [r3, #0]
 8003b42:	68fb      	ldr	r3, [r7, #12]
 8003b44:	681b      	ldr	r3, [r3, #0]
 8003b46:	f042 0216 	orr.w	r2, r2, #22
 8003b4a:	601a      	str	r2, [r3, #0]
 8003b4c:	68fb      	ldr	r3, [r7, #12]
 8003b4e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003b50:	2b00      	cmp	r3, #0
 8003b52:	d007      	beq.n	8003b64 <HAL_DMA_Start_IT+0x88>
 8003b54:	68fb      	ldr	r3, [r7, #12]
 8003b56:	681b      	ldr	r3, [r3, #0]
 8003b58:	681a      	ldr	r2, [r3, #0]
 8003b5a:	68fb      	ldr	r3, [r7, #12]
 8003b5c:	681b      	ldr	r3, [r3, #0]
 8003b5e:	f042 0208 	orr.w	r2, r2, #8
 8003b62:	601a      	str	r2, [r3, #0]
 8003b64:	68fb      	ldr	r3, [r7, #12]
 8003b66:	681b      	ldr	r3, [r3, #0]
 8003b68:	681a      	ldr	r2, [r3, #0]
 8003b6a:	68fb      	ldr	r3, [r7, #12]
 8003b6c:	681b      	ldr	r3, [r3, #0]
 8003b6e:	f042 0201 	orr.w	r2, r2, #1
 8003b72:	601a      	str	r2, [r3, #0]
 8003b74:	e005      	b.n	8003b82 <HAL_DMA_Start_IT+0xa6>
 8003b76:	68fb      	ldr	r3, [r7, #12]
 8003b78:	2200      	movs	r2, #0
 8003b7a:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8003b7e:	2302      	movs	r3, #2
 8003b80:	75fb      	strb	r3, [r7, #23]
 8003b82:	7dfb      	ldrb	r3, [r7, #23]
 8003b84:	4618      	mov	r0, r3
 8003b86:	3718      	adds	r7, #24
 8003b88:	46bd      	mov	sp, r7
 8003b8a:	bd80      	pop	{r7, pc}

08003b8c <HAL_DMA_IRQHandler>:
 8003b8c:	b580      	push	{r7, lr}
 8003b8e:	b086      	sub	sp, #24
 8003b90:	af00      	add	r7, sp, #0
 8003b92:	6078      	str	r0, [r7, #4]
 8003b94:	2300      	movs	r3, #0
 8003b96:	60bb      	str	r3, [r7, #8]
 8003b98:	4b8e      	ldr	r3, [pc, #568]	@ (8003dd4 <HAL_DMA_IRQHandler+0x248>)
 8003b9a:	681b      	ldr	r3, [r3, #0]
 8003b9c:	4a8e      	ldr	r2, [pc, #568]	@ (8003dd8 <HAL_DMA_IRQHandler+0x24c>)
 8003b9e:	fba2 2303 	umull	r2, r3, r2, r3
 8003ba2:	0a9b      	lsrs	r3, r3, #10
 8003ba4:	617b      	str	r3, [r7, #20]
 8003ba6:	687b      	ldr	r3, [r7, #4]
 8003ba8:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8003baa:	613b      	str	r3, [r7, #16]
 8003bac:	693b      	ldr	r3, [r7, #16]
 8003bae:	681b      	ldr	r3, [r3, #0]
 8003bb0:	60fb      	str	r3, [r7, #12]
 8003bb2:	687b      	ldr	r3, [r7, #4]
 8003bb4:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003bb6:	2208      	movs	r2, #8
 8003bb8:	409a      	lsls	r2, r3
 8003bba:	68fb      	ldr	r3, [r7, #12]
 8003bbc:	4013      	ands	r3, r2
 8003bbe:	2b00      	cmp	r3, #0
 8003bc0:	d01a      	beq.n	8003bf8 <HAL_DMA_IRQHandler+0x6c>
 8003bc2:	687b      	ldr	r3, [r7, #4]
 8003bc4:	681b      	ldr	r3, [r3, #0]
 8003bc6:	681b      	ldr	r3, [r3, #0]
 8003bc8:	f003 0304 	and.w	r3, r3, #4
 8003bcc:	2b00      	cmp	r3, #0
 8003bce:	d013      	beq.n	8003bf8 <HAL_DMA_IRQHandler+0x6c>
 8003bd0:	687b      	ldr	r3, [r7, #4]
 8003bd2:	681b      	ldr	r3, [r3, #0]
 8003bd4:	681a      	ldr	r2, [r3, #0]
 8003bd6:	687b      	ldr	r3, [r7, #4]
 8003bd8:	681b      	ldr	r3, [r3, #0]
 8003bda:	f022 0204 	bic.w	r2, r2, #4
 8003bde:	601a      	str	r2, [r3, #0]
 8003be0:	687b      	ldr	r3, [r7, #4]
 8003be2:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003be4:	2208      	movs	r2, #8
 8003be6:	409a      	lsls	r2, r3
 8003be8:	693b      	ldr	r3, [r7, #16]
 8003bea:	609a      	str	r2, [r3, #8]
 8003bec:	687b      	ldr	r3, [r7, #4]
 8003bee:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8003bf0:	f043 0201 	orr.w	r2, r3, #1
 8003bf4:	687b      	ldr	r3, [r7, #4]
 8003bf6:	655a      	str	r2, [r3, #84]	@ 0x54
 8003bf8:	687b      	ldr	r3, [r7, #4]
 8003bfa:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003bfc:	2201      	movs	r2, #1
 8003bfe:	409a      	lsls	r2, r3
 8003c00:	68fb      	ldr	r3, [r7, #12]
 8003c02:	4013      	ands	r3, r2
 8003c04:	2b00      	cmp	r3, #0
 8003c06:	d012      	beq.n	8003c2e <HAL_DMA_IRQHandler+0xa2>
 8003c08:	687b      	ldr	r3, [r7, #4]
 8003c0a:	681b      	ldr	r3, [r3, #0]
 8003c0c:	695b      	ldr	r3, [r3, #20]
 8003c0e:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8003c12:	2b00      	cmp	r3, #0
 8003c14:	d00b      	beq.n	8003c2e <HAL_DMA_IRQHandler+0xa2>
 8003c16:	687b      	ldr	r3, [r7, #4]
 8003c18:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003c1a:	2201      	movs	r2, #1
 8003c1c:	409a      	lsls	r2, r3
 8003c1e:	693b      	ldr	r3, [r7, #16]
 8003c20:	609a      	str	r2, [r3, #8]
 8003c22:	687b      	ldr	r3, [r7, #4]
 8003c24:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8003c26:	f043 0202 	orr.w	r2, r3, #2
 8003c2a:	687b      	ldr	r3, [r7, #4]
 8003c2c:	655a      	str	r2, [r3, #84]	@ 0x54
 8003c2e:	687b      	ldr	r3, [r7, #4]
 8003c30:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003c32:	2204      	movs	r2, #4
 8003c34:	409a      	lsls	r2, r3
 8003c36:	68fb      	ldr	r3, [r7, #12]
 8003c38:	4013      	ands	r3, r2
 8003c3a:	2b00      	cmp	r3, #0
 8003c3c:	d012      	beq.n	8003c64 <HAL_DMA_IRQHandler+0xd8>
 8003c3e:	687b      	ldr	r3, [r7, #4]
 8003c40:	681b      	ldr	r3, [r3, #0]
 8003c42:	681b      	ldr	r3, [r3, #0]
 8003c44:	f003 0302 	and.w	r3, r3, #2
 8003c48:	2b00      	cmp	r3, #0
 8003c4a:	d00b      	beq.n	8003c64 <HAL_DMA_IRQHandler+0xd8>
 8003c4c:	687b      	ldr	r3, [r7, #4]
 8003c4e:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003c50:	2204      	movs	r2, #4
 8003c52:	409a      	lsls	r2, r3
 8003c54:	693b      	ldr	r3, [r7, #16]
 8003c56:	609a      	str	r2, [r3, #8]
 8003c58:	687b      	ldr	r3, [r7, #4]
 8003c5a:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8003c5c:	f043 0204 	orr.w	r2, r3, #4
 8003c60:	687b      	ldr	r3, [r7, #4]
 8003c62:	655a      	str	r2, [r3, #84]	@ 0x54
 8003c64:	687b      	ldr	r3, [r7, #4]
 8003c66:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003c68:	2210      	movs	r2, #16
 8003c6a:	409a      	lsls	r2, r3
 8003c6c:	68fb      	ldr	r3, [r7, #12]
 8003c6e:	4013      	ands	r3, r2
 8003c70:	2b00      	cmp	r3, #0
 8003c72:	d043      	beq.n	8003cfc <HAL_DMA_IRQHandler+0x170>
 8003c74:	687b      	ldr	r3, [r7, #4]
 8003c76:	681b      	ldr	r3, [r3, #0]
 8003c78:	681b      	ldr	r3, [r3, #0]
 8003c7a:	f003 0308 	and.w	r3, r3, #8
 8003c7e:	2b00      	cmp	r3, #0
 8003c80:	d03c      	beq.n	8003cfc <HAL_DMA_IRQHandler+0x170>
 8003c82:	687b      	ldr	r3, [r7, #4]
 8003c84:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003c86:	2210      	movs	r2, #16
 8003c88:	409a      	lsls	r2, r3
 8003c8a:	693b      	ldr	r3, [r7, #16]
 8003c8c:	609a      	str	r2, [r3, #8]
 8003c8e:	687b      	ldr	r3, [r7, #4]
 8003c90:	681b      	ldr	r3, [r3, #0]
 8003c92:	681b      	ldr	r3, [r3, #0]
 8003c94:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 8003c98:	2b00      	cmp	r3, #0
 8003c9a:	d018      	beq.n	8003cce <HAL_DMA_IRQHandler+0x142>
 8003c9c:	687b      	ldr	r3, [r7, #4]
 8003c9e:	681b      	ldr	r3, [r3, #0]
 8003ca0:	681b      	ldr	r3, [r3, #0]
 8003ca2:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 8003ca6:	2b00      	cmp	r3, #0
 8003ca8:	d108      	bne.n	8003cbc <HAL_DMA_IRQHandler+0x130>
 8003caa:	687b      	ldr	r3, [r7, #4]
 8003cac:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003cae:	2b00      	cmp	r3, #0
 8003cb0:	d024      	beq.n	8003cfc <HAL_DMA_IRQHandler+0x170>
 8003cb2:	687b      	ldr	r3, [r7, #4]
 8003cb4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003cb6:	6878      	ldr	r0, [r7, #4]
 8003cb8:	4798      	blx	r3
 8003cba:	e01f      	b.n	8003cfc <HAL_DMA_IRQHandler+0x170>
 8003cbc:	687b      	ldr	r3, [r7, #4]
 8003cbe:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8003cc0:	2b00      	cmp	r3, #0
 8003cc2:	d01b      	beq.n	8003cfc <HAL_DMA_IRQHandler+0x170>
 8003cc4:	687b      	ldr	r3, [r7, #4]
 8003cc6:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8003cc8:	6878      	ldr	r0, [r7, #4]
 8003cca:	4798      	blx	r3
 8003ccc:	e016      	b.n	8003cfc <HAL_DMA_IRQHandler+0x170>
 8003cce:	687b      	ldr	r3, [r7, #4]
 8003cd0:	681b      	ldr	r3, [r3, #0]
 8003cd2:	681b      	ldr	r3, [r3, #0]
 8003cd4:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003cd8:	2b00      	cmp	r3, #0
 8003cda:	d107      	bne.n	8003cec <HAL_DMA_IRQHandler+0x160>
 8003cdc:	687b      	ldr	r3, [r7, #4]
 8003cde:	681b      	ldr	r3, [r3, #0]
 8003ce0:	681a      	ldr	r2, [r3, #0]
 8003ce2:	687b      	ldr	r3, [r7, #4]
 8003ce4:	681b      	ldr	r3, [r3, #0]
 8003ce6:	f022 0208 	bic.w	r2, r2, #8
 8003cea:	601a      	str	r2, [r3, #0]
 8003cec:	687b      	ldr	r3, [r7, #4]
 8003cee:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003cf0:	2b00      	cmp	r3, #0
 8003cf2:	d003      	beq.n	8003cfc <HAL_DMA_IRQHandler+0x170>
 8003cf4:	687b      	ldr	r3, [r7, #4]
 8003cf6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003cf8:	6878      	ldr	r0, [r7, #4]
 8003cfa:	4798      	blx	r3
 8003cfc:	687b      	ldr	r3, [r7, #4]
 8003cfe:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003d00:	2220      	movs	r2, #32
 8003d02:	409a      	lsls	r2, r3
 8003d04:	68fb      	ldr	r3, [r7, #12]
 8003d06:	4013      	ands	r3, r2
 8003d08:	2b00      	cmp	r3, #0
 8003d0a:	f000 808f 	beq.w	8003e2c <HAL_DMA_IRQHandler+0x2a0>
 8003d0e:	687b      	ldr	r3, [r7, #4]
 8003d10:	681b      	ldr	r3, [r3, #0]
 8003d12:	681b      	ldr	r3, [r3, #0]
 8003d14:	f003 0310 	and.w	r3, r3, #16
 8003d18:	2b00      	cmp	r3, #0
 8003d1a:	f000 8087 	beq.w	8003e2c <HAL_DMA_IRQHandler+0x2a0>
 8003d1e:	687b      	ldr	r3, [r7, #4]
 8003d20:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003d22:	2220      	movs	r2, #32
 8003d24:	409a      	lsls	r2, r3
 8003d26:	693b      	ldr	r3, [r7, #16]
 8003d28:	609a      	str	r2, [r3, #8]
 8003d2a:	687b      	ldr	r3, [r7, #4]
 8003d2c:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 8003d30:	b2db      	uxtb	r3, r3
 8003d32:	2b05      	cmp	r3, #5
 8003d34:	d136      	bne.n	8003da4 <HAL_DMA_IRQHandler+0x218>
 8003d36:	687b      	ldr	r3, [r7, #4]
 8003d38:	681b      	ldr	r3, [r3, #0]
 8003d3a:	681a      	ldr	r2, [r3, #0]
 8003d3c:	687b      	ldr	r3, [r7, #4]
 8003d3e:	681b      	ldr	r3, [r3, #0]
 8003d40:	f022 0216 	bic.w	r2, r2, #22
 8003d44:	601a      	str	r2, [r3, #0]
 8003d46:	687b      	ldr	r3, [r7, #4]
 8003d48:	681b      	ldr	r3, [r3, #0]
 8003d4a:	695a      	ldr	r2, [r3, #20]
 8003d4c:	687b      	ldr	r3, [r7, #4]
 8003d4e:	681b      	ldr	r3, [r3, #0]
 8003d50:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8003d54:	615a      	str	r2, [r3, #20]
 8003d56:	687b      	ldr	r3, [r7, #4]
 8003d58:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003d5a:	2b00      	cmp	r3, #0
 8003d5c:	d103      	bne.n	8003d66 <HAL_DMA_IRQHandler+0x1da>
 8003d5e:	687b      	ldr	r3, [r7, #4]
 8003d60:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8003d62:	2b00      	cmp	r3, #0
 8003d64:	d007      	beq.n	8003d76 <HAL_DMA_IRQHandler+0x1ea>
 8003d66:	687b      	ldr	r3, [r7, #4]
 8003d68:	681b      	ldr	r3, [r3, #0]
 8003d6a:	681a      	ldr	r2, [r3, #0]
 8003d6c:	687b      	ldr	r3, [r7, #4]
 8003d6e:	681b      	ldr	r3, [r3, #0]
 8003d70:	f022 0208 	bic.w	r2, r2, #8
 8003d74:	601a      	str	r2, [r3, #0]
 8003d76:	687b      	ldr	r3, [r7, #4]
 8003d78:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003d7a:	223f      	movs	r2, #63	@ 0x3f
 8003d7c:	409a      	lsls	r2, r3
 8003d7e:	693b      	ldr	r3, [r7, #16]
 8003d80:	609a      	str	r2, [r3, #8]
 8003d82:	687b      	ldr	r3, [r7, #4]
 8003d84:	2201      	movs	r2, #1
 8003d86:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8003d8a:	687b      	ldr	r3, [r7, #4]
 8003d8c:	2200      	movs	r2, #0
 8003d8e:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8003d92:	687b      	ldr	r3, [r7, #4]
 8003d94:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8003d96:	2b00      	cmp	r3, #0
 8003d98:	d07e      	beq.n	8003e98 <HAL_DMA_IRQHandler+0x30c>
 8003d9a:	687b      	ldr	r3, [r7, #4]
 8003d9c:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8003d9e:	6878      	ldr	r0, [r7, #4]
 8003da0:	4798      	blx	r3
 8003da2:	e079      	b.n	8003e98 <HAL_DMA_IRQHandler+0x30c>
 8003da4:	687b      	ldr	r3, [r7, #4]
 8003da6:	681b      	ldr	r3, [r3, #0]
 8003da8:	681b      	ldr	r3, [r3, #0]
 8003daa:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 8003dae:	2b00      	cmp	r3, #0
 8003db0:	d01d      	beq.n	8003dee <HAL_DMA_IRQHandler+0x262>
 8003db2:	687b      	ldr	r3, [r7, #4]
 8003db4:	681b      	ldr	r3, [r3, #0]
 8003db6:	681b      	ldr	r3, [r3, #0]
 8003db8:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 8003dbc:	2b00      	cmp	r3, #0
 8003dbe:	d10d      	bne.n	8003ddc <HAL_DMA_IRQHandler+0x250>
 8003dc0:	687b      	ldr	r3, [r7, #4]
 8003dc2:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003dc4:	2b00      	cmp	r3, #0
 8003dc6:	d031      	beq.n	8003e2c <HAL_DMA_IRQHandler+0x2a0>
 8003dc8:	687b      	ldr	r3, [r7, #4]
 8003dca:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003dcc:	6878      	ldr	r0, [r7, #4]
 8003dce:	4798      	blx	r3
 8003dd0:	e02c      	b.n	8003e2c <HAL_DMA_IRQHandler+0x2a0>
 8003dd2:	bf00      	nop
 8003dd4:	20000008 	.word	0x20000008
 8003dd8:	1b4e81b5 	.word	0x1b4e81b5
 8003ddc:	687b      	ldr	r3, [r7, #4]
 8003dde:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003de0:	2b00      	cmp	r3, #0
 8003de2:	d023      	beq.n	8003e2c <HAL_DMA_IRQHandler+0x2a0>
 8003de4:	687b      	ldr	r3, [r7, #4]
 8003de6:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003de8:	6878      	ldr	r0, [r7, #4]
 8003dea:	4798      	blx	r3
 8003dec:	e01e      	b.n	8003e2c <HAL_DMA_IRQHandler+0x2a0>
 8003dee:	687b      	ldr	r3, [r7, #4]
 8003df0:	681b      	ldr	r3, [r3, #0]
 8003df2:	681b      	ldr	r3, [r3, #0]
 8003df4:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003df8:	2b00      	cmp	r3, #0
 8003dfa:	d10f      	bne.n	8003e1c <HAL_DMA_IRQHandler+0x290>
 8003dfc:	687b      	ldr	r3, [r7, #4]
 8003dfe:	681b      	ldr	r3, [r3, #0]
 8003e00:	681a      	ldr	r2, [r3, #0]
 8003e02:	687b      	ldr	r3, [r7, #4]
 8003e04:	681b      	ldr	r3, [r3, #0]
 8003e06:	f022 0210 	bic.w	r2, r2, #16
 8003e0a:	601a      	str	r2, [r3, #0]
 8003e0c:	687b      	ldr	r3, [r7, #4]
 8003e0e:	2201      	movs	r2, #1
 8003e10:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8003e14:	687b      	ldr	r3, [r7, #4]
 8003e16:	2200      	movs	r2, #0
 8003e18:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8003e1c:	687b      	ldr	r3, [r7, #4]
 8003e1e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003e20:	2b00      	cmp	r3, #0
 8003e22:	d003      	beq.n	8003e2c <HAL_DMA_IRQHandler+0x2a0>
 8003e24:	687b      	ldr	r3, [r7, #4]
 8003e26:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003e28:	6878      	ldr	r0, [r7, #4]
 8003e2a:	4798      	blx	r3
 8003e2c:	687b      	ldr	r3, [r7, #4]
 8003e2e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8003e30:	2b00      	cmp	r3, #0
 8003e32:	d032      	beq.n	8003e9a <HAL_DMA_IRQHandler+0x30e>
 8003e34:	687b      	ldr	r3, [r7, #4]
 8003e36:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8003e38:	f003 0301 	and.w	r3, r3, #1
 8003e3c:	2b00      	cmp	r3, #0
 8003e3e:	d022      	beq.n	8003e86 <HAL_DMA_IRQHandler+0x2fa>
 8003e40:	687b      	ldr	r3, [r7, #4]
 8003e42:	2205      	movs	r2, #5
 8003e44:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8003e48:	687b      	ldr	r3, [r7, #4]
 8003e4a:	681b      	ldr	r3, [r3, #0]
 8003e4c:	681a      	ldr	r2, [r3, #0]
 8003e4e:	687b      	ldr	r3, [r7, #4]
 8003e50:	681b      	ldr	r3, [r3, #0]
 8003e52:	f022 0201 	bic.w	r2, r2, #1
 8003e56:	601a      	str	r2, [r3, #0]
 8003e58:	68bb      	ldr	r3, [r7, #8]
 8003e5a:	3301      	adds	r3, #1
 8003e5c:	60bb      	str	r3, [r7, #8]
 8003e5e:	697a      	ldr	r2, [r7, #20]
 8003e60:	429a      	cmp	r2, r3
 8003e62:	d307      	bcc.n	8003e74 <HAL_DMA_IRQHandler+0x2e8>
 8003e64:	687b      	ldr	r3, [r7, #4]
 8003e66:	681b      	ldr	r3, [r3, #0]
 8003e68:	681b      	ldr	r3, [r3, #0]
 8003e6a:	f003 0301 	and.w	r3, r3, #1
 8003e6e:	2b00      	cmp	r3, #0
 8003e70:	d1f2      	bne.n	8003e58 <HAL_DMA_IRQHandler+0x2cc>
 8003e72:	e000      	b.n	8003e76 <HAL_DMA_IRQHandler+0x2ea>
 8003e74:	bf00      	nop
 8003e76:	687b      	ldr	r3, [r7, #4]
 8003e78:	2201      	movs	r2, #1
 8003e7a:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8003e7e:	687b      	ldr	r3, [r7, #4]
 8003e80:	2200      	movs	r2, #0
 8003e82:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8003e86:	687b      	ldr	r3, [r7, #4]
 8003e88:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8003e8a:	2b00      	cmp	r3, #0
 8003e8c:	d005      	beq.n	8003e9a <HAL_DMA_IRQHandler+0x30e>
 8003e8e:	687b      	ldr	r3, [r7, #4]
 8003e90:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8003e92:	6878      	ldr	r0, [r7, #4]
 8003e94:	4798      	blx	r3
 8003e96:	e000      	b.n	8003e9a <HAL_DMA_IRQHandler+0x30e>
 8003e98:	bf00      	nop
 8003e9a:	3718      	adds	r7, #24
 8003e9c:	46bd      	mov	sp, r7
 8003e9e:	bd80      	pop	{r7, pc}

08003ea0 <DMA_SetConfig>:
 8003ea0:	b480      	push	{r7}
 8003ea2:	b085      	sub	sp, #20
 8003ea4:	af00      	add	r7, sp, #0
 8003ea6:	60f8      	str	r0, [r7, #12]
 8003ea8:	60b9      	str	r1, [r7, #8]
 8003eaa:	607a      	str	r2, [r7, #4]
 8003eac:	603b      	str	r3, [r7, #0]
 8003eae:	68fb      	ldr	r3, [r7, #12]
 8003eb0:	681b      	ldr	r3, [r3, #0]
 8003eb2:	681a      	ldr	r2, [r3, #0]
 8003eb4:	68fb      	ldr	r3, [r7, #12]
 8003eb6:	681b      	ldr	r3, [r3, #0]
 8003eb8:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 8003ebc:	601a      	str	r2, [r3, #0]
 8003ebe:	68fb      	ldr	r3, [r7, #12]
 8003ec0:	681b      	ldr	r3, [r3, #0]
 8003ec2:	683a      	ldr	r2, [r7, #0]
 8003ec4:	605a      	str	r2, [r3, #4]
 8003ec6:	68fb      	ldr	r3, [r7, #12]
 8003ec8:	689b      	ldr	r3, [r3, #8]
 8003eca:	2b40      	cmp	r3, #64	@ 0x40
 8003ecc:	d108      	bne.n	8003ee0 <DMA_SetConfig+0x40>
 8003ece:	68fb      	ldr	r3, [r7, #12]
 8003ed0:	681b      	ldr	r3, [r3, #0]
 8003ed2:	687a      	ldr	r2, [r7, #4]
 8003ed4:	609a      	str	r2, [r3, #8]
 8003ed6:	68fb      	ldr	r3, [r7, #12]
 8003ed8:	681b      	ldr	r3, [r3, #0]
 8003eda:	68ba      	ldr	r2, [r7, #8]
 8003edc:	60da      	str	r2, [r3, #12]
 8003ede:	e007      	b.n	8003ef0 <DMA_SetConfig+0x50>
 8003ee0:	68fb      	ldr	r3, [r7, #12]
 8003ee2:	681b      	ldr	r3, [r3, #0]
 8003ee4:	68ba      	ldr	r2, [r7, #8]
 8003ee6:	609a      	str	r2, [r3, #8]
 8003ee8:	68fb      	ldr	r3, [r7, #12]
 8003eea:	681b      	ldr	r3, [r3, #0]
 8003eec:	687a      	ldr	r2, [r7, #4]
 8003eee:	60da      	str	r2, [r3, #12]
 8003ef0:	bf00      	nop
 8003ef2:	3714      	adds	r7, #20
 8003ef4:	46bd      	mov	sp, r7
 8003ef6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003efa:	4770      	bx	lr

08003efc <DMA_CalcBaseAndBitshift>:
 8003efc:	b480      	push	{r7}
 8003efe:	b085      	sub	sp, #20
 8003f00:	af00      	add	r7, sp, #0
 8003f02:	6078      	str	r0, [r7, #4]
 8003f04:	687b      	ldr	r3, [r7, #4]
 8003f06:	681b      	ldr	r3, [r3, #0]
 8003f08:	b2db      	uxtb	r3, r3
 8003f0a:	3b10      	subs	r3, #16
 8003f0c:	4a14      	ldr	r2, [pc, #80]	@ (8003f60 <DMA_CalcBaseAndBitshift+0x64>)
 8003f0e:	fba2 2303 	umull	r2, r3, r2, r3
 8003f12:	091b      	lsrs	r3, r3, #4
 8003f14:	60fb      	str	r3, [r7, #12]
 8003f16:	4a13      	ldr	r2, [pc, #76]	@ (8003f64 <DMA_CalcBaseAndBitshift+0x68>)
 8003f18:	68fb      	ldr	r3, [r7, #12]
 8003f1a:	4413      	add	r3, r2
 8003f1c:	781b      	ldrb	r3, [r3, #0]
 8003f1e:	461a      	mov	r2, r3
 8003f20:	687b      	ldr	r3, [r7, #4]
 8003f22:	65da      	str	r2, [r3, #92]	@ 0x5c
 8003f24:	68fb      	ldr	r3, [r7, #12]
 8003f26:	2b03      	cmp	r3, #3
 8003f28:	d909      	bls.n	8003f3e <DMA_CalcBaseAndBitshift+0x42>
 8003f2a:	687b      	ldr	r3, [r7, #4]
 8003f2c:	681b      	ldr	r3, [r3, #0]
 8003f2e:	f423 737f 	bic.w	r3, r3, #1020	@ 0x3fc
 8003f32:	f023 0303 	bic.w	r3, r3, #3
 8003f36:	1d1a      	adds	r2, r3, #4
 8003f38:	687b      	ldr	r3, [r7, #4]
 8003f3a:	659a      	str	r2, [r3, #88]	@ 0x58
 8003f3c:	e007      	b.n	8003f4e <DMA_CalcBaseAndBitshift+0x52>
 8003f3e:	687b      	ldr	r3, [r7, #4]
 8003f40:	681b      	ldr	r3, [r3, #0]
 8003f42:	f423 737f 	bic.w	r3, r3, #1020	@ 0x3fc
 8003f46:	f023 0303 	bic.w	r3, r3, #3
 8003f4a:	687a      	ldr	r2, [r7, #4]
 8003f4c:	6593      	str	r3, [r2, #88]	@ 0x58
 8003f4e:	687b      	ldr	r3, [r7, #4]
 8003f50:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8003f52:	4618      	mov	r0, r3
 8003f54:	3714      	adds	r7, #20
 8003f56:	46bd      	mov	sp, r7
 8003f58:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003f5c:	4770      	bx	lr
 8003f5e:	bf00      	nop
 8003f60:	aaaaaaab 	.word	0xaaaaaaab
 8003f64:	0800e0d8 	.word	0x0800e0d8

08003f68 <DMA_CheckFifoParam>:
 8003f68:	b480      	push	{r7}
 8003f6a:	b085      	sub	sp, #20
 8003f6c:	af00      	add	r7, sp, #0
 8003f6e:	6078      	str	r0, [r7, #4]
 8003f70:	2300      	movs	r3, #0
 8003f72:	73fb      	strb	r3, [r7, #15]
 8003f74:	687b      	ldr	r3, [r7, #4]
 8003f76:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003f78:	60bb      	str	r3, [r7, #8]
 8003f7a:	687b      	ldr	r3, [r7, #4]
 8003f7c:	699b      	ldr	r3, [r3, #24]
 8003f7e:	2b00      	cmp	r3, #0
 8003f80:	d11f      	bne.n	8003fc2 <DMA_CheckFifoParam+0x5a>
 8003f82:	68bb      	ldr	r3, [r7, #8]
 8003f84:	2b03      	cmp	r3, #3
 8003f86:	d856      	bhi.n	8004036 <DMA_CheckFifoParam+0xce>
 8003f88:	a201      	add	r2, pc, #4	@ (adr r2, 8003f90 <DMA_CheckFifoParam+0x28>)
 8003f8a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003f8e:	bf00      	nop
 8003f90:	08003fa1 	.word	0x08003fa1
 8003f94:	08003fb3 	.word	0x08003fb3
 8003f98:	08003fa1 	.word	0x08003fa1
 8003f9c:	08004037 	.word	0x08004037
 8003fa0:	687b      	ldr	r3, [r7, #4]
 8003fa2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003fa4:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 8003fa8:	2b00      	cmp	r3, #0
 8003faa:	d046      	beq.n	800403a <DMA_CheckFifoParam+0xd2>
 8003fac:	2301      	movs	r3, #1
 8003fae:	73fb      	strb	r3, [r7, #15]
 8003fb0:	e043      	b.n	800403a <DMA_CheckFifoParam+0xd2>
 8003fb2:	687b      	ldr	r3, [r7, #4]
 8003fb4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003fb6:	f1b3 7fc0 	cmp.w	r3, #25165824	@ 0x1800000
 8003fba:	d140      	bne.n	800403e <DMA_CheckFifoParam+0xd6>
 8003fbc:	2301      	movs	r3, #1
 8003fbe:	73fb      	strb	r3, [r7, #15]
 8003fc0:	e03d      	b.n	800403e <DMA_CheckFifoParam+0xd6>
 8003fc2:	687b      	ldr	r3, [r7, #4]
 8003fc4:	699b      	ldr	r3, [r3, #24]
 8003fc6:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8003fca:	d121      	bne.n	8004010 <DMA_CheckFifoParam+0xa8>
 8003fcc:	68bb      	ldr	r3, [r7, #8]
 8003fce:	2b03      	cmp	r3, #3
 8003fd0:	d837      	bhi.n	8004042 <DMA_CheckFifoParam+0xda>
 8003fd2:	a201      	add	r2, pc, #4	@ (adr r2, 8003fd8 <DMA_CheckFifoParam+0x70>)
 8003fd4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003fd8:	08003fe9 	.word	0x08003fe9
 8003fdc:	08003fef 	.word	0x08003fef
 8003fe0:	08003fe9 	.word	0x08003fe9
 8003fe4:	08004001 	.word	0x08004001
 8003fe8:	2301      	movs	r3, #1
 8003fea:	73fb      	strb	r3, [r7, #15]
 8003fec:	e030      	b.n	8004050 <DMA_CheckFifoParam+0xe8>
 8003fee:	687b      	ldr	r3, [r7, #4]
 8003ff0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003ff2:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 8003ff6:	2b00      	cmp	r3, #0
 8003ff8:	d025      	beq.n	8004046 <DMA_CheckFifoParam+0xde>
 8003ffa:	2301      	movs	r3, #1
 8003ffc:	73fb      	strb	r3, [r7, #15]
 8003ffe:	e022      	b.n	8004046 <DMA_CheckFifoParam+0xde>
 8004000:	687b      	ldr	r3, [r7, #4]
 8004002:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8004004:	f1b3 7fc0 	cmp.w	r3, #25165824	@ 0x1800000
 8004008:	d11f      	bne.n	800404a <DMA_CheckFifoParam+0xe2>
 800400a:	2301      	movs	r3, #1
 800400c:	73fb      	strb	r3, [r7, #15]
 800400e:	e01c      	b.n	800404a <DMA_CheckFifoParam+0xe2>
 8004010:	68bb      	ldr	r3, [r7, #8]
 8004012:	2b02      	cmp	r3, #2
 8004014:	d903      	bls.n	800401e <DMA_CheckFifoParam+0xb6>
 8004016:	68bb      	ldr	r3, [r7, #8]
 8004018:	2b03      	cmp	r3, #3
 800401a:	d003      	beq.n	8004024 <DMA_CheckFifoParam+0xbc>
 800401c:	e018      	b.n	8004050 <DMA_CheckFifoParam+0xe8>
 800401e:	2301      	movs	r3, #1
 8004020:	73fb      	strb	r3, [r7, #15]
 8004022:	e015      	b.n	8004050 <DMA_CheckFifoParam+0xe8>
 8004024:	687b      	ldr	r3, [r7, #4]
 8004026:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8004028:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 800402c:	2b00      	cmp	r3, #0
 800402e:	d00e      	beq.n	800404e <DMA_CheckFifoParam+0xe6>
 8004030:	2301      	movs	r3, #1
 8004032:	73fb      	strb	r3, [r7, #15]
 8004034:	e00b      	b.n	800404e <DMA_CheckFifoParam+0xe6>
 8004036:	bf00      	nop
 8004038:	e00a      	b.n	8004050 <DMA_CheckFifoParam+0xe8>
 800403a:	bf00      	nop
 800403c:	e008      	b.n	8004050 <DMA_CheckFifoParam+0xe8>
 800403e:	bf00      	nop
 8004040:	e006      	b.n	8004050 <DMA_CheckFifoParam+0xe8>
 8004042:	bf00      	nop
 8004044:	e004      	b.n	8004050 <DMA_CheckFifoParam+0xe8>
 8004046:	bf00      	nop
 8004048:	e002      	b.n	8004050 <DMA_CheckFifoParam+0xe8>
 800404a:	bf00      	nop
 800404c:	e000      	b.n	8004050 <DMA_CheckFifoParam+0xe8>
 800404e:	bf00      	nop
 8004050:	7bfb      	ldrb	r3, [r7, #15]
 8004052:	4618      	mov	r0, r3
 8004054:	3714      	adds	r7, #20
 8004056:	46bd      	mov	sp, r7
 8004058:	f85d 7b04 	ldr.w	r7, [sp], #4
 800405c:	4770      	bx	lr
 800405e:	bf00      	nop

08004060 <HAL_DMA2D_Init>:
 8004060:	b580      	push	{r7, lr}
 8004062:	b082      	sub	sp, #8
 8004064:	af00      	add	r7, sp, #0
 8004066:	6078      	str	r0, [r7, #4]
 8004068:	687b      	ldr	r3, [r7, #4]
 800406a:	2b00      	cmp	r3, #0
 800406c:	d101      	bne.n	8004072 <HAL_DMA2D_Init+0x12>
 800406e:	2301      	movs	r3, #1
 8004070:	e03b      	b.n	80040ea <HAL_DMA2D_Init+0x8a>
 8004072:	687b      	ldr	r3, [r7, #4]
 8004074:	f893 3039 	ldrb.w	r3, [r3, #57]	@ 0x39
 8004078:	b2db      	uxtb	r3, r3
 800407a:	2b00      	cmp	r3, #0
 800407c:	d106      	bne.n	800408c <HAL_DMA2D_Init+0x2c>
 800407e:	687b      	ldr	r3, [r7, #4]
 8004080:	2200      	movs	r2, #0
 8004082:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38
 8004086:	6878      	ldr	r0, [r7, #4]
 8004088:	f7fd f9a2 	bl	80013d0 <HAL_DMA2D_MspInit>
 800408c:	687b      	ldr	r3, [r7, #4]
 800408e:	2202      	movs	r2, #2
 8004090:	f883 2039 	strb.w	r2, [r3, #57]	@ 0x39
 8004094:	687b      	ldr	r3, [r7, #4]
 8004096:	681b      	ldr	r3, [r3, #0]
 8004098:	681b      	ldr	r3, [r3, #0]
 800409a:	f423 3140 	bic.w	r1, r3, #196608	@ 0x30000
 800409e:	687b      	ldr	r3, [r7, #4]
 80040a0:	685a      	ldr	r2, [r3, #4]
 80040a2:	687b      	ldr	r3, [r7, #4]
 80040a4:	681b      	ldr	r3, [r3, #0]
 80040a6:	430a      	orrs	r2, r1
 80040a8:	601a      	str	r2, [r3, #0]
 80040aa:	687b      	ldr	r3, [r7, #4]
 80040ac:	681b      	ldr	r3, [r3, #0]
 80040ae:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80040b0:	f023 0107 	bic.w	r1, r3, #7
 80040b4:	687b      	ldr	r3, [r7, #4]
 80040b6:	689a      	ldr	r2, [r3, #8]
 80040b8:	687b      	ldr	r3, [r7, #4]
 80040ba:	681b      	ldr	r3, [r3, #0]
 80040bc:	430a      	orrs	r2, r1
 80040be:	635a      	str	r2, [r3, #52]	@ 0x34
 80040c0:	687b      	ldr	r3, [r7, #4]
 80040c2:	681b      	ldr	r3, [r3, #0]
 80040c4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80040c6:	f423 537f 	bic.w	r3, r3, #16320	@ 0x3fc0
 80040ca:	f023 033f 	bic.w	r3, r3, #63	@ 0x3f
 80040ce:	687a      	ldr	r2, [r7, #4]
 80040d0:	68d1      	ldr	r1, [r2, #12]
 80040d2:	687a      	ldr	r2, [r7, #4]
 80040d4:	6812      	ldr	r2, [r2, #0]
 80040d6:	430b      	orrs	r3, r1
 80040d8:	6413      	str	r3, [r2, #64]	@ 0x40
 80040da:	687b      	ldr	r3, [r7, #4]
 80040dc:	2200      	movs	r2, #0
 80040de:	63da      	str	r2, [r3, #60]	@ 0x3c
 80040e0:	687b      	ldr	r3, [r7, #4]
 80040e2:	2201      	movs	r2, #1
 80040e4:	f883 2039 	strb.w	r2, [r3, #57]	@ 0x39
 80040e8:	2300      	movs	r3, #0
 80040ea:	4618      	mov	r0, r3
 80040ec:	3708      	adds	r7, #8
 80040ee:	46bd      	mov	sp, r7
 80040f0:	bd80      	pop	{r7, pc}

080040f2 <HAL_DMA2D_IRQHandler>:
 80040f2:	b580      	push	{r7, lr}
 80040f4:	b084      	sub	sp, #16
 80040f6:	af00      	add	r7, sp, #0
 80040f8:	6078      	str	r0, [r7, #4]
 80040fa:	687b      	ldr	r3, [r7, #4]
 80040fc:	681b      	ldr	r3, [r3, #0]
 80040fe:	685b      	ldr	r3, [r3, #4]
 8004100:	60fb      	str	r3, [r7, #12]
 8004102:	687b      	ldr	r3, [r7, #4]
 8004104:	681b      	ldr	r3, [r3, #0]
 8004106:	681b      	ldr	r3, [r3, #0]
 8004108:	60bb      	str	r3, [r7, #8]
 800410a:	68fb      	ldr	r3, [r7, #12]
 800410c:	f003 0301 	and.w	r3, r3, #1
 8004110:	2b00      	cmp	r3, #0
 8004112:	d026      	beq.n	8004162 <HAL_DMA2D_IRQHandler+0x70>
 8004114:	68bb      	ldr	r3, [r7, #8]
 8004116:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800411a:	2b00      	cmp	r3, #0
 800411c:	d021      	beq.n	8004162 <HAL_DMA2D_IRQHandler+0x70>
 800411e:	687b      	ldr	r3, [r7, #4]
 8004120:	681b      	ldr	r3, [r3, #0]
 8004122:	681a      	ldr	r2, [r3, #0]
 8004124:	687b      	ldr	r3, [r7, #4]
 8004126:	681b      	ldr	r3, [r3, #0]
 8004128:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 800412c:	601a      	str	r2, [r3, #0]
 800412e:	687b      	ldr	r3, [r7, #4]
 8004130:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8004132:	f043 0201 	orr.w	r2, r3, #1
 8004136:	687b      	ldr	r3, [r7, #4]
 8004138:	63da      	str	r2, [r3, #60]	@ 0x3c
 800413a:	687b      	ldr	r3, [r7, #4]
 800413c:	681b      	ldr	r3, [r3, #0]
 800413e:	2201      	movs	r2, #1
 8004140:	609a      	str	r2, [r3, #8]
 8004142:	687b      	ldr	r3, [r7, #4]
 8004144:	2204      	movs	r2, #4
 8004146:	f883 2039 	strb.w	r2, [r3, #57]	@ 0x39
 800414a:	687b      	ldr	r3, [r7, #4]
 800414c:	2200      	movs	r2, #0
 800414e:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38
 8004152:	687b      	ldr	r3, [r7, #4]
 8004154:	695b      	ldr	r3, [r3, #20]
 8004156:	2b00      	cmp	r3, #0
 8004158:	d003      	beq.n	8004162 <HAL_DMA2D_IRQHandler+0x70>
 800415a:	687b      	ldr	r3, [r7, #4]
 800415c:	695b      	ldr	r3, [r3, #20]
 800415e:	6878      	ldr	r0, [r7, #4]
 8004160:	4798      	blx	r3
 8004162:	68fb      	ldr	r3, [r7, #12]
 8004164:	f003 0320 	and.w	r3, r3, #32
 8004168:	2b00      	cmp	r3, #0
 800416a:	d026      	beq.n	80041ba <HAL_DMA2D_IRQHandler+0xc8>
 800416c:	68bb      	ldr	r3, [r7, #8]
 800416e:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 8004172:	2b00      	cmp	r3, #0
 8004174:	d021      	beq.n	80041ba <HAL_DMA2D_IRQHandler+0xc8>
 8004176:	687b      	ldr	r3, [r7, #4]
 8004178:	681b      	ldr	r3, [r3, #0]
 800417a:	681a      	ldr	r2, [r3, #0]
 800417c:	687b      	ldr	r3, [r7, #4]
 800417e:	681b      	ldr	r3, [r3, #0]
 8004180:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8004184:	601a      	str	r2, [r3, #0]
 8004186:	687b      	ldr	r3, [r7, #4]
 8004188:	681b      	ldr	r3, [r3, #0]
 800418a:	2220      	movs	r2, #32
 800418c:	609a      	str	r2, [r3, #8]
 800418e:	687b      	ldr	r3, [r7, #4]
 8004190:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8004192:	f043 0202 	orr.w	r2, r3, #2
 8004196:	687b      	ldr	r3, [r7, #4]
 8004198:	63da      	str	r2, [r3, #60]	@ 0x3c
 800419a:	687b      	ldr	r3, [r7, #4]
 800419c:	2204      	movs	r2, #4
 800419e:	f883 2039 	strb.w	r2, [r3, #57]	@ 0x39
 80041a2:	687b      	ldr	r3, [r7, #4]
 80041a4:	2200      	movs	r2, #0
 80041a6:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38
 80041aa:	687b      	ldr	r3, [r7, #4]
 80041ac:	695b      	ldr	r3, [r3, #20]
 80041ae:	2b00      	cmp	r3, #0
 80041b0:	d003      	beq.n	80041ba <HAL_DMA2D_IRQHandler+0xc8>
 80041b2:	687b      	ldr	r3, [r7, #4]
 80041b4:	695b      	ldr	r3, [r3, #20]
 80041b6:	6878      	ldr	r0, [r7, #4]
 80041b8:	4798      	blx	r3
 80041ba:	68fb      	ldr	r3, [r7, #12]
 80041bc:	f003 0308 	and.w	r3, r3, #8
 80041c0:	2b00      	cmp	r3, #0
 80041c2:	d026      	beq.n	8004212 <HAL_DMA2D_IRQHandler+0x120>
 80041c4:	68bb      	ldr	r3, [r7, #8]
 80041c6:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 80041ca:	2b00      	cmp	r3, #0
 80041cc:	d021      	beq.n	8004212 <HAL_DMA2D_IRQHandler+0x120>
 80041ce:	687b      	ldr	r3, [r7, #4]
 80041d0:	681b      	ldr	r3, [r3, #0]
 80041d2:	681a      	ldr	r2, [r3, #0]
 80041d4:	687b      	ldr	r3, [r7, #4]
 80041d6:	681b      	ldr	r3, [r3, #0]
 80041d8:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 80041dc:	601a      	str	r2, [r3, #0]
 80041de:	687b      	ldr	r3, [r7, #4]
 80041e0:	681b      	ldr	r3, [r3, #0]
 80041e2:	2208      	movs	r2, #8
 80041e4:	609a      	str	r2, [r3, #8]
 80041e6:	687b      	ldr	r3, [r7, #4]
 80041e8:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80041ea:	f043 0204 	orr.w	r2, r3, #4
 80041ee:	687b      	ldr	r3, [r7, #4]
 80041f0:	63da      	str	r2, [r3, #60]	@ 0x3c
 80041f2:	687b      	ldr	r3, [r7, #4]
 80041f4:	2204      	movs	r2, #4
 80041f6:	f883 2039 	strb.w	r2, [r3, #57]	@ 0x39
 80041fa:	687b      	ldr	r3, [r7, #4]
 80041fc:	2200      	movs	r2, #0
 80041fe:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38
 8004202:	687b      	ldr	r3, [r7, #4]
 8004204:	695b      	ldr	r3, [r3, #20]
 8004206:	2b00      	cmp	r3, #0
 8004208:	d003      	beq.n	8004212 <HAL_DMA2D_IRQHandler+0x120>
 800420a:	687b      	ldr	r3, [r7, #4]
 800420c:	695b      	ldr	r3, [r3, #20]
 800420e:	6878      	ldr	r0, [r7, #4]
 8004210:	4798      	blx	r3
 8004212:	68fb      	ldr	r3, [r7, #12]
 8004214:	f003 0304 	and.w	r3, r3, #4
 8004218:	2b00      	cmp	r3, #0
 800421a:	d013      	beq.n	8004244 <HAL_DMA2D_IRQHandler+0x152>
 800421c:	68bb      	ldr	r3, [r7, #8]
 800421e:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8004222:	2b00      	cmp	r3, #0
 8004224:	d00e      	beq.n	8004244 <HAL_DMA2D_IRQHandler+0x152>
 8004226:	687b      	ldr	r3, [r7, #4]
 8004228:	681b      	ldr	r3, [r3, #0]
 800422a:	681a      	ldr	r2, [r3, #0]
 800422c:	687b      	ldr	r3, [r7, #4]
 800422e:	681b      	ldr	r3, [r3, #0]
 8004230:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8004234:	601a      	str	r2, [r3, #0]
 8004236:	687b      	ldr	r3, [r7, #4]
 8004238:	681b      	ldr	r3, [r3, #0]
 800423a:	2204      	movs	r2, #4
 800423c:	609a      	str	r2, [r3, #8]
 800423e:	6878      	ldr	r0, [r7, #4]
 8004240:	f000 f853 	bl	80042ea <HAL_DMA2D_LineEventCallback>
 8004244:	68fb      	ldr	r3, [r7, #12]
 8004246:	f003 0302 	and.w	r3, r3, #2
 800424a:	2b00      	cmp	r3, #0
 800424c:	d024      	beq.n	8004298 <HAL_DMA2D_IRQHandler+0x1a6>
 800424e:	68bb      	ldr	r3, [r7, #8]
 8004250:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8004254:	2b00      	cmp	r3, #0
 8004256:	d01f      	beq.n	8004298 <HAL_DMA2D_IRQHandler+0x1a6>
 8004258:	687b      	ldr	r3, [r7, #4]
 800425a:	681b      	ldr	r3, [r3, #0]
 800425c:	681a      	ldr	r2, [r3, #0]
 800425e:	687b      	ldr	r3, [r7, #4]
 8004260:	681b      	ldr	r3, [r3, #0]
 8004262:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
 8004266:	601a      	str	r2, [r3, #0]
 8004268:	687b      	ldr	r3, [r7, #4]
 800426a:	681b      	ldr	r3, [r3, #0]
 800426c:	2202      	movs	r2, #2
 800426e:	609a      	str	r2, [r3, #8]
 8004270:	687b      	ldr	r3, [r7, #4]
 8004272:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 8004274:	687b      	ldr	r3, [r7, #4]
 8004276:	63da      	str	r2, [r3, #60]	@ 0x3c
 8004278:	687b      	ldr	r3, [r7, #4]
 800427a:	2201      	movs	r2, #1
 800427c:	f883 2039 	strb.w	r2, [r3, #57]	@ 0x39
 8004280:	687b      	ldr	r3, [r7, #4]
 8004282:	2200      	movs	r2, #0
 8004284:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38
 8004288:	687b      	ldr	r3, [r7, #4]
 800428a:	691b      	ldr	r3, [r3, #16]
 800428c:	2b00      	cmp	r3, #0
 800428e:	d003      	beq.n	8004298 <HAL_DMA2D_IRQHandler+0x1a6>
 8004290:	687b      	ldr	r3, [r7, #4]
 8004292:	691b      	ldr	r3, [r3, #16]
 8004294:	6878      	ldr	r0, [r7, #4]
 8004296:	4798      	blx	r3
 8004298:	68fb      	ldr	r3, [r7, #12]
 800429a:	f003 0310 	and.w	r3, r3, #16
 800429e:	2b00      	cmp	r3, #0
 80042a0:	d01f      	beq.n	80042e2 <HAL_DMA2D_IRQHandler+0x1f0>
 80042a2:	68bb      	ldr	r3, [r7, #8]
 80042a4:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 80042a8:	2b00      	cmp	r3, #0
 80042aa:	d01a      	beq.n	80042e2 <HAL_DMA2D_IRQHandler+0x1f0>
 80042ac:	687b      	ldr	r3, [r7, #4]
 80042ae:	681b      	ldr	r3, [r3, #0]
 80042b0:	681a      	ldr	r2, [r3, #0]
 80042b2:	687b      	ldr	r3, [r7, #4]
 80042b4:	681b      	ldr	r3, [r3, #0]
 80042b6:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
 80042ba:	601a      	str	r2, [r3, #0]
 80042bc:	687b      	ldr	r3, [r7, #4]
 80042be:	681b      	ldr	r3, [r3, #0]
 80042c0:	2210      	movs	r2, #16
 80042c2:	609a      	str	r2, [r3, #8]
 80042c4:	687b      	ldr	r3, [r7, #4]
 80042c6:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 80042c8:	687b      	ldr	r3, [r7, #4]
 80042ca:	63da      	str	r2, [r3, #60]	@ 0x3c
 80042cc:	687b      	ldr	r3, [r7, #4]
 80042ce:	2201      	movs	r2, #1
 80042d0:	f883 2039 	strb.w	r2, [r3, #57]	@ 0x39
 80042d4:	687b      	ldr	r3, [r7, #4]
 80042d6:	2200      	movs	r2, #0
 80042d8:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38
 80042dc:	6878      	ldr	r0, [r7, #4]
 80042de:	f000 f80e 	bl	80042fe <HAL_DMA2D_CLUTLoadingCpltCallback>
 80042e2:	bf00      	nop
 80042e4:	3710      	adds	r7, #16
 80042e6:	46bd      	mov	sp, r7
 80042e8:	bd80      	pop	{r7, pc}

080042ea <HAL_DMA2D_LineEventCallback>:
 80042ea:	b480      	push	{r7}
 80042ec:	b083      	sub	sp, #12
 80042ee:	af00      	add	r7, sp, #0
 80042f0:	6078      	str	r0, [r7, #4]
 80042f2:	bf00      	nop
 80042f4:	370c      	adds	r7, #12
 80042f6:	46bd      	mov	sp, r7
 80042f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80042fc:	4770      	bx	lr

080042fe <HAL_DMA2D_CLUTLoadingCpltCallback>:
 80042fe:	b480      	push	{r7}
 8004300:	b083      	sub	sp, #12
 8004302:	af00      	add	r7, sp, #0
 8004304:	6078      	str	r0, [r7, #4]
 8004306:	bf00      	nop
 8004308:	370c      	adds	r7, #12
 800430a:	46bd      	mov	sp, r7
 800430c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004310:	4770      	bx	lr
	...

08004314 <HAL_DMA2D_ConfigLayer>:
 8004314:	b480      	push	{r7}
 8004316:	b087      	sub	sp, #28
 8004318:	af00      	add	r7, sp, #0
 800431a:	6078      	str	r0, [r7, #4]
 800431c:	6039      	str	r1, [r7, #0]
 800431e:	687b      	ldr	r3, [r7, #4]
 8004320:	685b      	ldr	r3, [r3, #4]
 8004322:	f5b3 3f40 	cmp.w	r3, #196608	@ 0x30000
 8004326:	687b      	ldr	r3, [r7, #4]
 8004328:	f893 3038 	ldrb.w	r3, [r3, #56]	@ 0x38
 800432c:	2b01      	cmp	r3, #1
 800432e:	d101      	bne.n	8004334 <HAL_DMA2D_ConfigLayer+0x20>
 8004330:	2302      	movs	r3, #2
 8004332:	e079      	b.n	8004428 <HAL_DMA2D_ConfigLayer+0x114>
 8004334:	687b      	ldr	r3, [r7, #4]
 8004336:	2201      	movs	r2, #1
 8004338:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38
 800433c:	687b      	ldr	r3, [r7, #4]
 800433e:	2202      	movs	r2, #2
 8004340:	f883 2039 	strb.w	r2, [r3, #57]	@ 0x39
 8004344:	683b      	ldr	r3, [r7, #0]
 8004346:	011b      	lsls	r3, r3, #4
 8004348:	3318      	adds	r3, #24
 800434a:	687a      	ldr	r2, [r7, #4]
 800434c:	4413      	add	r3, r2
 800434e:	613b      	str	r3, [r7, #16]
 8004350:	693b      	ldr	r3, [r7, #16]
 8004352:	685a      	ldr	r2, [r3, #4]
 8004354:	693b      	ldr	r3, [r7, #16]
 8004356:	689b      	ldr	r3, [r3, #8]
 8004358:	041b      	lsls	r3, r3, #16
 800435a:	4313      	orrs	r3, r2
 800435c:	617b      	str	r3, [r7, #20]
 800435e:	4b35      	ldr	r3, [pc, #212]	@ (8004434 <HAL_DMA2D_ConfigLayer+0x120>)
 8004360:	60fb      	str	r3, [r7, #12]
 8004362:	693b      	ldr	r3, [r7, #16]
 8004364:	685b      	ldr	r3, [r3, #4]
 8004366:	2b0a      	cmp	r3, #10
 8004368:	d003      	beq.n	8004372 <HAL_DMA2D_ConfigLayer+0x5e>
 800436a:	693b      	ldr	r3, [r7, #16]
 800436c:	685b      	ldr	r3, [r3, #4]
 800436e:	2b09      	cmp	r3, #9
 8004370:	d107      	bne.n	8004382 <HAL_DMA2D_ConfigLayer+0x6e>
 8004372:	693b      	ldr	r3, [r7, #16]
 8004374:	68db      	ldr	r3, [r3, #12]
 8004376:	f003 437f 	and.w	r3, r3, #4278190080	@ 0xff000000
 800437a:	697a      	ldr	r2, [r7, #20]
 800437c:	4313      	orrs	r3, r2
 800437e:	617b      	str	r3, [r7, #20]
 8004380:	e005      	b.n	800438e <HAL_DMA2D_ConfigLayer+0x7a>
 8004382:	693b      	ldr	r3, [r7, #16]
 8004384:	68db      	ldr	r3, [r3, #12]
 8004386:	061b      	lsls	r3, r3, #24
 8004388:	697a      	ldr	r2, [r7, #20]
 800438a:	4313      	orrs	r3, r2
 800438c:	617b      	str	r3, [r7, #20]
 800438e:	683b      	ldr	r3, [r7, #0]
 8004390:	2b00      	cmp	r3, #0
 8004392:	d120      	bne.n	80043d6 <HAL_DMA2D_ConfigLayer+0xc2>
 8004394:	687b      	ldr	r3, [r7, #4]
 8004396:	681b      	ldr	r3, [r3, #0]
 8004398:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 800439a:	68fb      	ldr	r3, [r7, #12]
 800439c:	43db      	mvns	r3, r3
 800439e:	ea02 0103 	and.w	r1, r2, r3
 80043a2:	687b      	ldr	r3, [r7, #4]
 80043a4:	681b      	ldr	r3, [r3, #0]
 80043a6:	697a      	ldr	r2, [r7, #20]
 80043a8:	430a      	orrs	r2, r1
 80043aa:	625a      	str	r2, [r3, #36]	@ 0x24
 80043ac:	687b      	ldr	r3, [r7, #4]
 80043ae:	681b      	ldr	r3, [r3, #0]
 80043b0:	693a      	ldr	r2, [r7, #16]
 80043b2:	6812      	ldr	r2, [r2, #0]
 80043b4:	619a      	str	r2, [r3, #24]
 80043b6:	693b      	ldr	r3, [r7, #16]
 80043b8:	685b      	ldr	r3, [r3, #4]
 80043ba:	2b0a      	cmp	r3, #10
 80043bc:	d003      	beq.n	80043c6 <HAL_DMA2D_ConfigLayer+0xb2>
 80043be:	693b      	ldr	r3, [r7, #16]
 80043c0:	685b      	ldr	r3, [r3, #4]
 80043c2:	2b09      	cmp	r3, #9
 80043c4:	d127      	bne.n	8004416 <HAL_DMA2D_ConfigLayer+0x102>
 80043c6:	693b      	ldr	r3, [r7, #16]
 80043c8:	68da      	ldr	r2, [r3, #12]
 80043ca:	687b      	ldr	r3, [r7, #4]
 80043cc:	681b      	ldr	r3, [r3, #0]
 80043ce:	f022 427f 	bic.w	r2, r2, #4278190080	@ 0xff000000
 80043d2:	629a      	str	r2, [r3, #40]	@ 0x28
 80043d4:	e01f      	b.n	8004416 <HAL_DMA2D_ConfigLayer+0x102>
 80043d6:	687b      	ldr	r3, [r7, #4]
 80043d8:	681b      	ldr	r3, [r3, #0]
 80043da:	69da      	ldr	r2, [r3, #28]
 80043dc:	68fb      	ldr	r3, [r7, #12]
 80043de:	43db      	mvns	r3, r3
 80043e0:	ea02 0103 	and.w	r1, r2, r3
 80043e4:	687b      	ldr	r3, [r7, #4]
 80043e6:	681b      	ldr	r3, [r3, #0]
 80043e8:	697a      	ldr	r2, [r7, #20]
 80043ea:	430a      	orrs	r2, r1
 80043ec:	61da      	str	r2, [r3, #28]
 80043ee:	687b      	ldr	r3, [r7, #4]
 80043f0:	681b      	ldr	r3, [r3, #0]
 80043f2:	693a      	ldr	r2, [r7, #16]
 80043f4:	6812      	ldr	r2, [r2, #0]
 80043f6:	611a      	str	r2, [r3, #16]
 80043f8:	693b      	ldr	r3, [r7, #16]
 80043fa:	685b      	ldr	r3, [r3, #4]
 80043fc:	2b0a      	cmp	r3, #10
 80043fe:	d003      	beq.n	8004408 <HAL_DMA2D_ConfigLayer+0xf4>
 8004400:	693b      	ldr	r3, [r7, #16]
 8004402:	685b      	ldr	r3, [r3, #4]
 8004404:	2b09      	cmp	r3, #9
 8004406:	d106      	bne.n	8004416 <HAL_DMA2D_ConfigLayer+0x102>
 8004408:	693b      	ldr	r3, [r7, #16]
 800440a:	68da      	ldr	r2, [r3, #12]
 800440c:	687b      	ldr	r3, [r7, #4]
 800440e:	681b      	ldr	r3, [r3, #0]
 8004410:	f022 427f 	bic.w	r2, r2, #4278190080	@ 0xff000000
 8004414:	621a      	str	r2, [r3, #32]
 8004416:	687b      	ldr	r3, [r7, #4]
 8004418:	2201      	movs	r2, #1
 800441a:	f883 2039 	strb.w	r2, [r3, #57]	@ 0x39
 800441e:	687b      	ldr	r3, [r7, #4]
 8004420:	2200      	movs	r2, #0
 8004422:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38
 8004426:	2300      	movs	r3, #0
 8004428:	4618      	mov	r0, r3
 800442a:	371c      	adds	r7, #28
 800442c:	46bd      	mov	sp, r7
 800442e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004432:	4770      	bx	lr
 8004434:	ff03000f 	.word	0xff03000f

08004438 <HAL_GPIO_Init>:
 8004438:	b480      	push	{r7}
 800443a:	b089      	sub	sp, #36	@ 0x24
 800443c:	af00      	add	r7, sp, #0
 800443e:	6078      	str	r0, [r7, #4]
 8004440:	6039      	str	r1, [r7, #0]
 8004442:	2300      	movs	r3, #0
 8004444:	617b      	str	r3, [r7, #20]
 8004446:	2300      	movs	r3, #0
 8004448:	613b      	str	r3, [r7, #16]
 800444a:	2300      	movs	r3, #0
 800444c:	61bb      	str	r3, [r7, #24]
 800444e:	2300      	movs	r3, #0
 8004450:	61fb      	str	r3, [r7, #28]
 8004452:	e177      	b.n	8004744 <HAL_GPIO_Init+0x30c>
 8004454:	2201      	movs	r2, #1
 8004456:	69fb      	ldr	r3, [r7, #28]
 8004458:	fa02 f303 	lsl.w	r3, r2, r3
 800445c:	617b      	str	r3, [r7, #20]
 800445e:	683b      	ldr	r3, [r7, #0]
 8004460:	681b      	ldr	r3, [r3, #0]
 8004462:	697a      	ldr	r2, [r7, #20]
 8004464:	4013      	ands	r3, r2
 8004466:	613b      	str	r3, [r7, #16]
 8004468:	693a      	ldr	r2, [r7, #16]
 800446a:	697b      	ldr	r3, [r7, #20]
 800446c:	429a      	cmp	r2, r3
 800446e:	f040 8166 	bne.w	800473e <HAL_GPIO_Init+0x306>
 8004472:	683b      	ldr	r3, [r7, #0]
 8004474:	685b      	ldr	r3, [r3, #4]
 8004476:	f003 0303 	and.w	r3, r3, #3
 800447a:	2b01      	cmp	r3, #1
 800447c:	d005      	beq.n	800448a <HAL_GPIO_Init+0x52>
 800447e:	683b      	ldr	r3, [r7, #0]
 8004480:	685b      	ldr	r3, [r3, #4]
 8004482:	f003 0303 	and.w	r3, r3, #3
 8004486:	2b02      	cmp	r3, #2
 8004488:	d130      	bne.n	80044ec <HAL_GPIO_Init+0xb4>
 800448a:	687b      	ldr	r3, [r7, #4]
 800448c:	689b      	ldr	r3, [r3, #8]
 800448e:	61bb      	str	r3, [r7, #24]
 8004490:	69fb      	ldr	r3, [r7, #28]
 8004492:	005b      	lsls	r3, r3, #1
 8004494:	2203      	movs	r2, #3
 8004496:	fa02 f303 	lsl.w	r3, r2, r3
 800449a:	43db      	mvns	r3, r3
 800449c:	69ba      	ldr	r2, [r7, #24]
 800449e:	4013      	ands	r3, r2
 80044a0:	61bb      	str	r3, [r7, #24]
 80044a2:	683b      	ldr	r3, [r7, #0]
 80044a4:	68da      	ldr	r2, [r3, #12]
 80044a6:	69fb      	ldr	r3, [r7, #28]
 80044a8:	005b      	lsls	r3, r3, #1
 80044aa:	fa02 f303 	lsl.w	r3, r2, r3
 80044ae:	69ba      	ldr	r2, [r7, #24]
 80044b0:	4313      	orrs	r3, r2
 80044b2:	61bb      	str	r3, [r7, #24]
 80044b4:	687b      	ldr	r3, [r7, #4]
 80044b6:	69ba      	ldr	r2, [r7, #24]
 80044b8:	609a      	str	r2, [r3, #8]
 80044ba:	687b      	ldr	r3, [r7, #4]
 80044bc:	685b      	ldr	r3, [r3, #4]
 80044be:	61bb      	str	r3, [r7, #24]
 80044c0:	2201      	movs	r2, #1
 80044c2:	69fb      	ldr	r3, [r7, #28]
 80044c4:	fa02 f303 	lsl.w	r3, r2, r3
 80044c8:	43db      	mvns	r3, r3
 80044ca:	69ba      	ldr	r2, [r7, #24]
 80044cc:	4013      	ands	r3, r2
 80044ce:	61bb      	str	r3, [r7, #24]
 80044d0:	683b      	ldr	r3, [r7, #0]
 80044d2:	685b      	ldr	r3, [r3, #4]
 80044d4:	091b      	lsrs	r3, r3, #4
 80044d6:	f003 0201 	and.w	r2, r3, #1
 80044da:	69fb      	ldr	r3, [r7, #28]
 80044dc:	fa02 f303 	lsl.w	r3, r2, r3
 80044e0:	69ba      	ldr	r2, [r7, #24]
 80044e2:	4313      	orrs	r3, r2
 80044e4:	61bb      	str	r3, [r7, #24]
 80044e6:	687b      	ldr	r3, [r7, #4]
 80044e8:	69ba      	ldr	r2, [r7, #24]
 80044ea:	605a      	str	r2, [r3, #4]
 80044ec:	683b      	ldr	r3, [r7, #0]
 80044ee:	685b      	ldr	r3, [r3, #4]
 80044f0:	f003 0303 	and.w	r3, r3, #3
 80044f4:	2b03      	cmp	r3, #3
 80044f6:	d017      	beq.n	8004528 <HAL_GPIO_Init+0xf0>
 80044f8:	687b      	ldr	r3, [r7, #4]
 80044fa:	68db      	ldr	r3, [r3, #12]
 80044fc:	61bb      	str	r3, [r7, #24]
 80044fe:	69fb      	ldr	r3, [r7, #28]
 8004500:	005b      	lsls	r3, r3, #1
 8004502:	2203      	movs	r2, #3
 8004504:	fa02 f303 	lsl.w	r3, r2, r3
 8004508:	43db      	mvns	r3, r3
 800450a:	69ba      	ldr	r2, [r7, #24]
 800450c:	4013      	ands	r3, r2
 800450e:	61bb      	str	r3, [r7, #24]
 8004510:	683b      	ldr	r3, [r7, #0]
 8004512:	689a      	ldr	r2, [r3, #8]
 8004514:	69fb      	ldr	r3, [r7, #28]
 8004516:	005b      	lsls	r3, r3, #1
 8004518:	fa02 f303 	lsl.w	r3, r2, r3
 800451c:	69ba      	ldr	r2, [r7, #24]
 800451e:	4313      	orrs	r3, r2
 8004520:	61bb      	str	r3, [r7, #24]
 8004522:	687b      	ldr	r3, [r7, #4]
 8004524:	69ba      	ldr	r2, [r7, #24]
 8004526:	60da      	str	r2, [r3, #12]
 8004528:	683b      	ldr	r3, [r7, #0]
 800452a:	685b      	ldr	r3, [r3, #4]
 800452c:	f003 0303 	and.w	r3, r3, #3
 8004530:	2b02      	cmp	r3, #2
 8004532:	d123      	bne.n	800457c <HAL_GPIO_Init+0x144>
 8004534:	69fb      	ldr	r3, [r7, #28]
 8004536:	08da      	lsrs	r2, r3, #3
 8004538:	687b      	ldr	r3, [r7, #4]
 800453a:	3208      	adds	r2, #8
 800453c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8004540:	61bb      	str	r3, [r7, #24]
 8004542:	69fb      	ldr	r3, [r7, #28]
 8004544:	f003 0307 	and.w	r3, r3, #7
 8004548:	009b      	lsls	r3, r3, #2
 800454a:	220f      	movs	r2, #15
 800454c:	fa02 f303 	lsl.w	r3, r2, r3
 8004550:	43db      	mvns	r3, r3
 8004552:	69ba      	ldr	r2, [r7, #24]
 8004554:	4013      	ands	r3, r2
 8004556:	61bb      	str	r3, [r7, #24]
 8004558:	683b      	ldr	r3, [r7, #0]
 800455a:	691a      	ldr	r2, [r3, #16]
 800455c:	69fb      	ldr	r3, [r7, #28]
 800455e:	f003 0307 	and.w	r3, r3, #7
 8004562:	009b      	lsls	r3, r3, #2
 8004564:	fa02 f303 	lsl.w	r3, r2, r3
 8004568:	69ba      	ldr	r2, [r7, #24]
 800456a:	4313      	orrs	r3, r2
 800456c:	61bb      	str	r3, [r7, #24]
 800456e:	69fb      	ldr	r3, [r7, #28]
 8004570:	08da      	lsrs	r2, r3, #3
 8004572:	687b      	ldr	r3, [r7, #4]
 8004574:	3208      	adds	r2, #8
 8004576:	69b9      	ldr	r1, [r7, #24]
 8004578:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 800457c:	687b      	ldr	r3, [r7, #4]
 800457e:	681b      	ldr	r3, [r3, #0]
 8004580:	61bb      	str	r3, [r7, #24]
 8004582:	69fb      	ldr	r3, [r7, #28]
 8004584:	005b      	lsls	r3, r3, #1
 8004586:	2203      	movs	r2, #3
 8004588:	fa02 f303 	lsl.w	r3, r2, r3
 800458c:	43db      	mvns	r3, r3
 800458e:	69ba      	ldr	r2, [r7, #24]
 8004590:	4013      	ands	r3, r2
 8004592:	61bb      	str	r3, [r7, #24]
 8004594:	683b      	ldr	r3, [r7, #0]
 8004596:	685b      	ldr	r3, [r3, #4]
 8004598:	f003 0203 	and.w	r2, r3, #3
 800459c:	69fb      	ldr	r3, [r7, #28]
 800459e:	005b      	lsls	r3, r3, #1
 80045a0:	fa02 f303 	lsl.w	r3, r2, r3
 80045a4:	69ba      	ldr	r2, [r7, #24]
 80045a6:	4313      	orrs	r3, r2
 80045a8:	61bb      	str	r3, [r7, #24]
 80045aa:	687b      	ldr	r3, [r7, #4]
 80045ac:	69ba      	ldr	r2, [r7, #24]
 80045ae:	601a      	str	r2, [r3, #0]
 80045b0:	683b      	ldr	r3, [r7, #0]
 80045b2:	685b      	ldr	r3, [r3, #4]
 80045b4:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 80045b8:	2b00      	cmp	r3, #0
 80045ba:	f000 80c0 	beq.w	800473e <HAL_GPIO_Init+0x306>
 80045be:	2300      	movs	r3, #0
 80045c0:	60fb      	str	r3, [r7, #12]
 80045c2:	4b66      	ldr	r3, [pc, #408]	@ (800475c <HAL_GPIO_Init+0x324>)
 80045c4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80045c6:	4a65      	ldr	r2, [pc, #404]	@ (800475c <HAL_GPIO_Init+0x324>)
 80045c8:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 80045cc:	6453      	str	r3, [r2, #68]	@ 0x44
 80045ce:	4b63      	ldr	r3, [pc, #396]	@ (800475c <HAL_GPIO_Init+0x324>)
 80045d0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80045d2:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 80045d6:	60fb      	str	r3, [r7, #12]
 80045d8:	68fb      	ldr	r3, [r7, #12]
 80045da:	4a61      	ldr	r2, [pc, #388]	@ (8004760 <HAL_GPIO_Init+0x328>)
 80045dc:	69fb      	ldr	r3, [r7, #28]
 80045de:	089b      	lsrs	r3, r3, #2
 80045e0:	3302      	adds	r3, #2
 80045e2:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80045e6:	61bb      	str	r3, [r7, #24]
 80045e8:	69fb      	ldr	r3, [r7, #28]
 80045ea:	f003 0303 	and.w	r3, r3, #3
 80045ee:	009b      	lsls	r3, r3, #2
 80045f0:	220f      	movs	r2, #15
 80045f2:	fa02 f303 	lsl.w	r3, r2, r3
 80045f6:	43db      	mvns	r3, r3
 80045f8:	69ba      	ldr	r2, [r7, #24]
 80045fa:	4013      	ands	r3, r2
 80045fc:	61bb      	str	r3, [r7, #24]
 80045fe:	687b      	ldr	r3, [r7, #4]
 8004600:	4a58      	ldr	r2, [pc, #352]	@ (8004764 <HAL_GPIO_Init+0x32c>)
 8004602:	4293      	cmp	r3, r2
 8004604:	d037      	beq.n	8004676 <HAL_GPIO_Init+0x23e>
 8004606:	687b      	ldr	r3, [r7, #4]
 8004608:	4a57      	ldr	r2, [pc, #348]	@ (8004768 <HAL_GPIO_Init+0x330>)
 800460a:	4293      	cmp	r3, r2
 800460c:	d031      	beq.n	8004672 <HAL_GPIO_Init+0x23a>
 800460e:	687b      	ldr	r3, [r7, #4]
 8004610:	4a56      	ldr	r2, [pc, #344]	@ (800476c <HAL_GPIO_Init+0x334>)
 8004612:	4293      	cmp	r3, r2
 8004614:	d02b      	beq.n	800466e <HAL_GPIO_Init+0x236>
 8004616:	687b      	ldr	r3, [r7, #4]
 8004618:	4a55      	ldr	r2, [pc, #340]	@ (8004770 <HAL_GPIO_Init+0x338>)
 800461a:	4293      	cmp	r3, r2
 800461c:	d025      	beq.n	800466a <HAL_GPIO_Init+0x232>
 800461e:	687b      	ldr	r3, [r7, #4]
 8004620:	4a54      	ldr	r2, [pc, #336]	@ (8004774 <HAL_GPIO_Init+0x33c>)
 8004622:	4293      	cmp	r3, r2
 8004624:	d01f      	beq.n	8004666 <HAL_GPIO_Init+0x22e>
 8004626:	687b      	ldr	r3, [r7, #4]
 8004628:	4a53      	ldr	r2, [pc, #332]	@ (8004778 <HAL_GPIO_Init+0x340>)
 800462a:	4293      	cmp	r3, r2
 800462c:	d019      	beq.n	8004662 <HAL_GPIO_Init+0x22a>
 800462e:	687b      	ldr	r3, [r7, #4]
 8004630:	4a52      	ldr	r2, [pc, #328]	@ (800477c <HAL_GPIO_Init+0x344>)
 8004632:	4293      	cmp	r3, r2
 8004634:	d013      	beq.n	800465e <HAL_GPIO_Init+0x226>
 8004636:	687b      	ldr	r3, [r7, #4]
 8004638:	4a51      	ldr	r2, [pc, #324]	@ (8004780 <HAL_GPIO_Init+0x348>)
 800463a:	4293      	cmp	r3, r2
 800463c:	d00d      	beq.n	800465a <HAL_GPIO_Init+0x222>
 800463e:	687b      	ldr	r3, [r7, #4]
 8004640:	4a50      	ldr	r2, [pc, #320]	@ (8004784 <HAL_GPIO_Init+0x34c>)
 8004642:	4293      	cmp	r3, r2
 8004644:	d007      	beq.n	8004656 <HAL_GPIO_Init+0x21e>
 8004646:	687b      	ldr	r3, [r7, #4]
 8004648:	4a4f      	ldr	r2, [pc, #316]	@ (8004788 <HAL_GPIO_Init+0x350>)
 800464a:	4293      	cmp	r3, r2
 800464c:	d101      	bne.n	8004652 <HAL_GPIO_Init+0x21a>
 800464e:	2309      	movs	r3, #9
 8004650:	e012      	b.n	8004678 <HAL_GPIO_Init+0x240>
 8004652:	230a      	movs	r3, #10
 8004654:	e010      	b.n	8004678 <HAL_GPIO_Init+0x240>
 8004656:	2308      	movs	r3, #8
 8004658:	e00e      	b.n	8004678 <HAL_GPIO_Init+0x240>
 800465a:	2307      	movs	r3, #7
 800465c:	e00c      	b.n	8004678 <HAL_GPIO_Init+0x240>
 800465e:	2306      	movs	r3, #6
 8004660:	e00a      	b.n	8004678 <HAL_GPIO_Init+0x240>
 8004662:	2305      	movs	r3, #5
 8004664:	e008      	b.n	8004678 <HAL_GPIO_Init+0x240>
 8004666:	2304      	movs	r3, #4
 8004668:	e006      	b.n	8004678 <HAL_GPIO_Init+0x240>
 800466a:	2303      	movs	r3, #3
 800466c:	e004      	b.n	8004678 <HAL_GPIO_Init+0x240>
 800466e:	2302      	movs	r3, #2
 8004670:	e002      	b.n	8004678 <HAL_GPIO_Init+0x240>
 8004672:	2301      	movs	r3, #1
 8004674:	e000      	b.n	8004678 <HAL_GPIO_Init+0x240>
 8004676:	2300      	movs	r3, #0
 8004678:	69fa      	ldr	r2, [r7, #28]
 800467a:	f002 0203 	and.w	r2, r2, #3
 800467e:	0092      	lsls	r2, r2, #2
 8004680:	4093      	lsls	r3, r2
 8004682:	69ba      	ldr	r2, [r7, #24]
 8004684:	4313      	orrs	r3, r2
 8004686:	61bb      	str	r3, [r7, #24]
 8004688:	4935      	ldr	r1, [pc, #212]	@ (8004760 <HAL_GPIO_Init+0x328>)
 800468a:	69fb      	ldr	r3, [r7, #28]
 800468c:	089b      	lsrs	r3, r3, #2
 800468e:	3302      	adds	r3, #2
 8004690:	69ba      	ldr	r2, [r7, #24]
 8004692:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8004696:	4b3d      	ldr	r3, [pc, #244]	@ (800478c <HAL_GPIO_Init+0x354>)
 8004698:	689b      	ldr	r3, [r3, #8]
 800469a:	61bb      	str	r3, [r7, #24]
 800469c:	693b      	ldr	r3, [r7, #16]
 800469e:	43db      	mvns	r3, r3
 80046a0:	69ba      	ldr	r2, [r7, #24]
 80046a2:	4013      	ands	r3, r2
 80046a4:	61bb      	str	r3, [r7, #24]
 80046a6:	683b      	ldr	r3, [r7, #0]
 80046a8:	685b      	ldr	r3, [r3, #4]
 80046aa:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 80046ae:	2b00      	cmp	r3, #0
 80046b0:	d003      	beq.n	80046ba <HAL_GPIO_Init+0x282>
 80046b2:	69ba      	ldr	r2, [r7, #24]
 80046b4:	693b      	ldr	r3, [r7, #16]
 80046b6:	4313      	orrs	r3, r2
 80046b8:	61bb      	str	r3, [r7, #24]
 80046ba:	4a34      	ldr	r2, [pc, #208]	@ (800478c <HAL_GPIO_Init+0x354>)
 80046bc:	69bb      	ldr	r3, [r7, #24]
 80046be:	6093      	str	r3, [r2, #8]
 80046c0:	4b32      	ldr	r3, [pc, #200]	@ (800478c <HAL_GPIO_Init+0x354>)
 80046c2:	68db      	ldr	r3, [r3, #12]
 80046c4:	61bb      	str	r3, [r7, #24]
 80046c6:	693b      	ldr	r3, [r7, #16]
 80046c8:	43db      	mvns	r3, r3
 80046ca:	69ba      	ldr	r2, [r7, #24]
 80046cc:	4013      	ands	r3, r2
 80046ce:	61bb      	str	r3, [r7, #24]
 80046d0:	683b      	ldr	r3, [r7, #0]
 80046d2:	685b      	ldr	r3, [r3, #4]
 80046d4:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 80046d8:	2b00      	cmp	r3, #0
 80046da:	d003      	beq.n	80046e4 <HAL_GPIO_Init+0x2ac>
 80046dc:	69ba      	ldr	r2, [r7, #24]
 80046de:	693b      	ldr	r3, [r7, #16]
 80046e0:	4313      	orrs	r3, r2
 80046e2:	61bb      	str	r3, [r7, #24]
 80046e4:	4a29      	ldr	r2, [pc, #164]	@ (800478c <HAL_GPIO_Init+0x354>)
 80046e6:	69bb      	ldr	r3, [r7, #24]
 80046e8:	60d3      	str	r3, [r2, #12]
 80046ea:	4b28      	ldr	r3, [pc, #160]	@ (800478c <HAL_GPIO_Init+0x354>)
 80046ec:	685b      	ldr	r3, [r3, #4]
 80046ee:	61bb      	str	r3, [r7, #24]
 80046f0:	693b      	ldr	r3, [r7, #16]
 80046f2:	43db      	mvns	r3, r3
 80046f4:	69ba      	ldr	r2, [r7, #24]
 80046f6:	4013      	ands	r3, r2
 80046f8:	61bb      	str	r3, [r7, #24]
 80046fa:	683b      	ldr	r3, [r7, #0]
 80046fc:	685b      	ldr	r3, [r3, #4]
 80046fe:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8004702:	2b00      	cmp	r3, #0
 8004704:	d003      	beq.n	800470e <HAL_GPIO_Init+0x2d6>
 8004706:	69ba      	ldr	r2, [r7, #24]
 8004708:	693b      	ldr	r3, [r7, #16]
 800470a:	4313      	orrs	r3, r2
 800470c:	61bb      	str	r3, [r7, #24]
 800470e:	4a1f      	ldr	r2, [pc, #124]	@ (800478c <HAL_GPIO_Init+0x354>)
 8004710:	69bb      	ldr	r3, [r7, #24]
 8004712:	6053      	str	r3, [r2, #4]
 8004714:	4b1d      	ldr	r3, [pc, #116]	@ (800478c <HAL_GPIO_Init+0x354>)
 8004716:	681b      	ldr	r3, [r3, #0]
 8004718:	61bb      	str	r3, [r7, #24]
 800471a:	693b      	ldr	r3, [r7, #16]
 800471c:	43db      	mvns	r3, r3
 800471e:	69ba      	ldr	r2, [r7, #24]
 8004720:	4013      	ands	r3, r2
 8004722:	61bb      	str	r3, [r7, #24]
 8004724:	683b      	ldr	r3, [r7, #0]
 8004726:	685b      	ldr	r3, [r3, #4]
 8004728:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 800472c:	2b00      	cmp	r3, #0
 800472e:	d003      	beq.n	8004738 <HAL_GPIO_Init+0x300>
 8004730:	69ba      	ldr	r2, [r7, #24]
 8004732:	693b      	ldr	r3, [r7, #16]
 8004734:	4313      	orrs	r3, r2
 8004736:	61bb      	str	r3, [r7, #24]
 8004738:	4a14      	ldr	r2, [pc, #80]	@ (800478c <HAL_GPIO_Init+0x354>)
 800473a:	69bb      	ldr	r3, [r7, #24]
 800473c:	6013      	str	r3, [r2, #0]
 800473e:	69fb      	ldr	r3, [r7, #28]
 8004740:	3301      	adds	r3, #1
 8004742:	61fb      	str	r3, [r7, #28]
 8004744:	69fb      	ldr	r3, [r7, #28]
 8004746:	2b0f      	cmp	r3, #15
 8004748:	f67f ae84 	bls.w	8004454 <HAL_GPIO_Init+0x1c>
 800474c:	bf00      	nop
 800474e:	bf00      	nop
 8004750:	3724      	adds	r7, #36	@ 0x24
 8004752:	46bd      	mov	sp, r7
 8004754:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004758:	4770      	bx	lr
 800475a:	bf00      	nop
 800475c:	40023800 	.word	0x40023800
 8004760:	40013800 	.word	0x40013800
 8004764:	40020000 	.word	0x40020000
 8004768:	40020400 	.word	0x40020400
 800476c:	40020800 	.word	0x40020800
 8004770:	40020c00 	.word	0x40020c00
 8004774:	40021000 	.word	0x40021000
 8004778:	40021400 	.word	0x40021400
 800477c:	40021800 	.word	0x40021800
 8004780:	40021c00 	.word	0x40021c00
 8004784:	40022000 	.word	0x40022000
 8004788:	40022400 	.word	0x40022400
 800478c:	40013c00 	.word	0x40013c00

08004790 <HAL_GPIO_WritePin>:
 8004790:	b480      	push	{r7}
 8004792:	b083      	sub	sp, #12
 8004794:	af00      	add	r7, sp, #0
 8004796:	6078      	str	r0, [r7, #4]
 8004798:	460b      	mov	r3, r1
 800479a:	807b      	strh	r3, [r7, #2]
 800479c:	4613      	mov	r3, r2
 800479e:	707b      	strb	r3, [r7, #1]
 80047a0:	787b      	ldrb	r3, [r7, #1]
 80047a2:	2b00      	cmp	r3, #0
 80047a4:	d003      	beq.n	80047ae <HAL_GPIO_WritePin+0x1e>
 80047a6:	887a      	ldrh	r2, [r7, #2]
 80047a8:	687b      	ldr	r3, [r7, #4]
 80047aa:	619a      	str	r2, [r3, #24]
 80047ac:	e003      	b.n	80047b6 <HAL_GPIO_WritePin+0x26>
 80047ae:	887b      	ldrh	r3, [r7, #2]
 80047b0:	041a      	lsls	r2, r3, #16
 80047b2:	687b      	ldr	r3, [r7, #4]
 80047b4:	619a      	str	r2, [r3, #24]
 80047b6:	bf00      	nop
 80047b8:	370c      	adds	r7, #12
 80047ba:	46bd      	mov	sp, r7
 80047bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80047c0:	4770      	bx	lr

080047c2 <HAL_HCD_IRQHandler>:
 80047c2:	b580      	push	{r7, lr}
 80047c4:	b086      	sub	sp, #24
 80047c6:	af00      	add	r7, sp, #0
 80047c8:	6078      	str	r0, [r7, #4]
 80047ca:	687b      	ldr	r3, [r7, #4]
 80047cc:	681b      	ldr	r3, [r3, #0]
 80047ce:	613b      	str	r3, [r7, #16]
 80047d0:	693b      	ldr	r3, [r7, #16]
 80047d2:	60fb      	str	r3, [r7, #12]
 80047d4:	687b      	ldr	r3, [r7, #4]
 80047d6:	681b      	ldr	r3, [r3, #0]
 80047d8:	4618      	mov	r0, r3
 80047da:	f005 faef 	bl	8009dbc <USB_GetMode>
 80047de:	4603      	mov	r3, r0
 80047e0:	2b01      	cmp	r3, #1
 80047e2:	f040 80fb 	bne.w	80049dc <HAL_HCD_IRQHandler+0x21a>
 80047e6:	687b      	ldr	r3, [r7, #4]
 80047e8:	681b      	ldr	r3, [r3, #0]
 80047ea:	4618      	mov	r0, r3
 80047ec:	f005 fab2 	bl	8009d54 <USB_ReadInterrupts>
 80047f0:	4603      	mov	r3, r0
 80047f2:	2b00      	cmp	r3, #0
 80047f4:	f000 80f1 	beq.w	80049da <HAL_HCD_IRQHandler+0x218>
 80047f8:	687b      	ldr	r3, [r7, #4]
 80047fa:	681b      	ldr	r3, [r3, #0]
 80047fc:	4618      	mov	r0, r3
 80047fe:	f005 faa9 	bl	8009d54 <USB_ReadInterrupts>
 8004802:	4603      	mov	r3, r0
 8004804:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8004808:	f5b3 1f00 	cmp.w	r3, #2097152	@ 0x200000
 800480c:	d104      	bne.n	8004818 <HAL_HCD_IRQHandler+0x56>
 800480e:	687b      	ldr	r3, [r7, #4]
 8004810:	681b      	ldr	r3, [r3, #0]
 8004812:	f44f 1200 	mov.w	r2, #2097152	@ 0x200000
 8004816:	615a      	str	r2, [r3, #20]
 8004818:	687b      	ldr	r3, [r7, #4]
 800481a:	681b      	ldr	r3, [r3, #0]
 800481c:	4618      	mov	r0, r3
 800481e:	f005 fa99 	bl	8009d54 <USB_ReadInterrupts>
 8004822:	4603      	mov	r3, r0
 8004824:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8004828:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 800482c:	d104      	bne.n	8004838 <HAL_HCD_IRQHandler+0x76>
 800482e:	687b      	ldr	r3, [r7, #4]
 8004830:	681b      	ldr	r3, [r3, #0]
 8004832:	f44f 1280 	mov.w	r2, #1048576	@ 0x100000
 8004836:	615a      	str	r2, [r3, #20]
 8004838:	687b      	ldr	r3, [r7, #4]
 800483a:	681b      	ldr	r3, [r3, #0]
 800483c:	4618      	mov	r0, r3
 800483e:	f005 fa89 	bl	8009d54 <USB_ReadInterrupts>
 8004842:	4603      	mov	r3, r0
 8004844:	f003 6380 	and.w	r3, r3, #67108864	@ 0x4000000
 8004848:	f1b3 6f80 	cmp.w	r3, #67108864	@ 0x4000000
 800484c:	d104      	bne.n	8004858 <HAL_HCD_IRQHandler+0x96>
 800484e:	687b      	ldr	r3, [r7, #4]
 8004850:	681b      	ldr	r3, [r3, #0]
 8004852:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 8004856:	615a      	str	r2, [r3, #20]
 8004858:	687b      	ldr	r3, [r7, #4]
 800485a:	681b      	ldr	r3, [r3, #0]
 800485c:	4618      	mov	r0, r3
 800485e:	f005 fa79 	bl	8009d54 <USB_ReadInterrupts>
 8004862:	4603      	mov	r3, r0
 8004864:	f003 0302 	and.w	r3, r3, #2
 8004868:	2b02      	cmp	r3, #2
 800486a:	d103      	bne.n	8004874 <HAL_HCD_IRQHandler+0xb2>
 800486c:	687b      	ldr	r3, [r7, #4]
 800486e:	681b      	ldr	r3, [r3, #0]
 8004870:	2202      	movs	r2, #2
 8004872:	615a      	str	r2, [r3, #20]
 8004874:	687b      	ldr	r3, [r7, #4]
 8004876:	681b      	ldr	r3, [r3, #0]
 8004878:	4618      	mov	r0, r3
 800487a:	f005 fa6b 	bl	8009d54 <USB_ReadInterrupts>
 800487e:	4603      	mov	r3, r0
 8004880:	f003 5300 	and.w	r3, r3, #536870912	@ 0x20000000
 8004884:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 8004888:	d120      	bne.n	80048cc <HAL_HCD_IRQHandler+0x10a>
 800488a:	687b      	ldr	r3, [r7, #4]
 800488c:	681b      	ldr	r3, [r3, #0]
 800488e:	f04f 5200 	mov.w	r2, #536870912	@ 0x20000000
 8004892:	615a      	str	r2, [r3, #20]
 8004894:	68fb      	ldr	r3, [r7, #12]
 8004896:	f503 6388 	add.w	r3, r3, #1088	@ 0x440
 800489a:	681b      	ldr	r3, [r3, #0]
 800489c:	f003 0301 	and.w	r3, r3, #1
 80048a0:	2b00      	cmp	r3, #0
 80048a2:	d113      	bne.n	80048cc <HAL_HCD_IRQHandler+0x10a>
 80048a4:	2110      	movs	r1, #16
 80048a6:	6938      	ldr	r0, [r7, #16]
 80048a8:	f005 f99c 	bl	8009be4 <USB_FlushTxFifo>
 80048ac:	6938      	ldr	r0, [r7, #16]
 80048ae:	f005 f9cb 	bl	8009c48 <USB_FlushRxFifo>
 80048b2:	687b      	ldr	r3, [r7, #4]
 80048b4:	7a5b      	ldrb	r3, [r3, #9]
 80048b6:	2b02      	cmp	r3, #2
 80048b8:	d105      	bne.n	80048c6 <HAL_HCD_IRQHandler+0x104>
 80048ba:	687b      	ldr	r3, [r7, #4]
 80048bc:	681b      	ldr	r3, [r3, #0]
 80048be:	2101      	movs	r1, #1
 80048c0:	4618      	mov	r0, r3
 80048c2:	f005 fa89 	bl	8009dd8 <USB_InitFSLSPClkSel>
 80048c6:	6878      	ldr	r0, [r7, #4]
 80048c8:	f006 fdd6 	bl	800b478 <HAL_HCD_Disconnect_Callback>
 80048cc:	687b      	ldr	r3, [r7, #4]
 80048ce:	681b      	ldr	r3, [r3, #0]
 80048d0:	4618      	mov	r0, r3
 80048d2:	f005 fa3f 	bl	8009d54 <USB_ReadInterrupts>
 80048d6:	4603      	mov	r3, r0
 80048d8:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 80048dc:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 80048e0:	d102      	bne.n	80048e8 <HAL_HCD_IRQHandler+0x126>
 80048e2:	6878      	ldr	r0, [r7, #4]
 80048e4:	f001 fca1 	bl	800622a <HCD_Port_IRQHandler>
 80048e8:	687b      	ldr	r3, [r7, #4]
 80048ea:	681b      	ldr	r3, [r3, #0]
 80048ec:	4618      	mov	r0, r3
 80048ee:	f005 fa31 	bl	8009d54 <USB_ReadInterrupts>
 80048f2:	4603      	mov	r3, r0
 80048f4:	f003 0308 	and.w	r3, r3, #8
 80048f8:	2b08      	cmp	r3, #8
 80048fa:	d106      	bne.n	800490a <HAL_HCD_IRQHandler+0x148>
 80048fc:	6878      	ldr	r0, [r7, #4]
 80048fe:	f006 fd9f 	bl	800b440 <HAL_HCD_SOF_Callback>
 8004902:	687b      	ldr	r3, [r7, #4]
 8004904:	681b      	ldr	r3, [r3, #0]
 8004906:	2208      	movs	r2, #8
 8004908:	615a      	str	r2, [r3, #20]
 800490a:	687b      	ldr	r3, [r7, #4]
 800490c:	681b      	ldr	r3, [r3, #0]
 800490e:	4618      	mov	r0, r3
 8004910:	f005 fa20 	bl	8009d54 <USB_ReadInterrupts>
 8004914:	4603      	mov	r3, r0
 8004916:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800491a:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 800491e:	d139      	bne.n	8004994 <HAL_HCD_IRQHandler+0x1d2>
 8004920:	687b      	ldr	r3, [r7, #4]
 8004922:	681b      	ldr	r3, [r3, #0]
 8004924:	4618      	mov	r0, r3
 8004926:	f005 fa94 	bl	8009e52 <USB_HC_ReadInterrupt>
 800492a:	60b8      	str	r0, [r7, #8]
 800492c:	2300      	movs	r3, #0
 800492e:	617b      	str	r3, [r7, #20]
 8004930:	e025      	b.n	800497e <HAL_HCD_IRQHandler+0x1bc>
 8004932:	697b      	ldr	r3, [r7, #20]
 8004934:	f003 030f 	and.w	r3, r3, #15
 8004938:	68ba      	ldr	r2, [r7, #8]
 800493a:	fa22 f303 	lsr.w	r3, r2, r3
 800493e:	f003 0301 	and.w	r3, r3, #1
 8004942:	2b00      	cmp	r3, #0
 8004944:	d018      	beq.n	8004978 <HAL_HCD_IRQHandler+0x1b6>
 8004946:	697b      	ldr	r3, [r7, #20]
 8004948:	015a      	lsls	r2, r3, #5
 800494a:	68fb      	ldr	r3, [r7, #12]
 800494c:	4413      	add	r3, r2
 800494e:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8004952:	681b      	ldr	r3, [r3, #0]
 8004954:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 8004958:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 800495c:	d106      	bne.n	800496c <HAL_HCD_IRQHandler+0x1aa>
 800495e:	697b      	ldr	r3, [r7, #20]
 8004960:	b2db      	uxtb	r3, r3
 8004962:	4619      	mov	r1, r3
 8004964:	6878      	ldr	r0, [r7, #4]
 8004966:	f000 f859 	bl	8004a1c <HCD_HC_IN_IRQHandler>
 800496a:	e005      	b.n	8004978 <HAL_HCD_IRQHandler+0x1b6>
 800496c:	697b      	ldr	r3, [r7, #20]
 800496e:	b2db      	uxtb	r3, r3
 8004970:	4619      	mov	r1, r3
 8004972:	6878      	ldr	r0, [r7, #4]
 8004974:	f000 febb 	bl	80056ee <HCD_HC_OUT_IRQHandler>
 8004978:	697b      	ldr	r3, [r7, #20]
 800497a:	3301      	adds	r3, #1
 800497c:	617b      	str	r3, [r7, #20]
 800497e:	687b      	ldr	r3, [r7, #4]
 8004980:	795b      	ldrb	r3, [r3, #5]
 8004982:	461a      	mov	r2, r3
 8004984:	697b      	ldr	r3, [r7, #20]
 8004986:	4293      	cmp	r3, r2
 8004988:	d3d3      	bcc.n	8004932 <HAL_HCD_IRQHandler+0x170>
 800498a:	687b      	ldr	r3, [r7, #4]
 800498c:	681b      	ldr	r3, [r3, #0]
 800498e:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8004992:	615a      	str	r2, [r3, #20]
 8004994:	687b      	ldr	r3, [r7, #4]
 8004996:	681b      	ldr	r3, [r3, #0]
 8004998:	4618      	mov	r0, r3
 800499a:	f005 f9db 	bl	8009d54 <USB_ReadInterrupts>
 800499e:	4603      	mov	r3, r0
 80049a0:	f003 0310 	and.w	r3, r3, #16
 80049a4:	2b10      	cmp	r3, #16
 80049a6:	d101      	bne.n	80049ac <HAL_HCD_IRQHandler+0x1ea>
 80049a8:	2301      	movs	r3, #1
 80049aa:	e000      	b.n	80049ae <HAL_HCD_IRQHandler+0x1ec>
 80049ac:	2300      	movs	r3, #0
 80049ae:	2b00      	cmp	r3, #0
 80049b0:	d014      	beq.n	80049dc <HAL_HCD_IRQHandler+0x21a>
 80049b2:	687b      	ldr	r3, [r7, #4]
 80049b4:	681b      	ldr	r3, [r3, #0]
 80049b6:	699a      	ldr	r2, [r3, #24]
 80049b8:	687b      	ldr	r3, [r7, #4]
 80049ba:	681b      	ldr	r3, [r3, #0]
 80049bc:	f022 0210 	bic.w	r2, r2, #16
 80049c0:	619a      	str	r2, [r3, #24]
 80049c2:	6878      	ldr	r0, [r7, #4]
 80049c4:	f001 fb52 	bl	800606c <HCD_RXQLVL_IRQHandler>
 80049c8:	687b      	ldr	r3, [r7, #4]
 80049ca:	681b      	ldr	r3, [r3, #0]
 80049cc:	699a      	ldr	r2, [r3, #24]
 80049ce:	687b      	ldr	r3, [r7, #4]
 80049d0:	681b      	ldr	r3, [r3, #0]
 80049d2:	f042 0210 	orr.w	r2, r2, #16
 80049d6:	619a      	str	r2, [r3, #24]
 80049d8:	e000      	b.n	80049dc <HAL_HCD_IRQHandler+0x21a>
 80049da:	bf00      	nop
 80049dc:	3718      	adds	r7, #24
 80049de:	46bd      	mov	sp, r7
 80049e0:	bd80      	pop	{r7, pc}

080049e2 <HAL_HCD_Stop>:
 80049e2:	b580      	push	{r7, lr}
 80049e4:	b082      	sub	sp, #8
 80049e6:	af00      	add	r7, sp, #0
 80049e8:	6078      	str	r0, [r7, #4]
 80049ea:	687b      	ldr	r3, [r7, #4]
 80049ec:	f893 33d4 	ldrb.w	r3, [r3, #980]	@ 0x3d4
 80049f0:	2b01      	cmp	r3, #1
 80049f2:	d101      	bne.n	80049f8 <HAL_HCD_Stop+0x16>
 80049f4:	2302      	movs	r3, #2
 80049f6:	e00d      	b.n	8004a14 <HAL_HCD_Stop+0x32>
 80049f8:	687b      	ldr	r3, [r7, #4]
 80049fa:	2201      	movs	r2, #1
 80049fc:	f883 23d4 	strb.w	r2, [r3, #980]	@ 0x3d4
 8004a00:	687b      	ldr	r3, [r7, #4]
 8004a02:	681b      	ldr	r3, [r3, #0]
 8004a04:	4618      	mov	r0, r3
 8004a06:	f005 fb55 	bl	800a0b4 <USB_StopHost>
 8004a0a:	687b      	ldr	r3, [r7, #4]
 8004a0c:	2200      	movs	r2, #0
 8004a0e:	f883 23d4 	strb.w	r2, [r3, #980]	@ 0x3d4
 8004a12:	2300      	movs	r3, #0
 8004a14:	4618      	mov	r0, r3
 8004a16:	3708      	adds	r7, #8
 8004a18:	46bd      	mov	sp, r7
 8004a1a:	bd80      	pop	{r7, pc}

08004a1c <HCD_HC_IN_IRQHandler>:
 8004a1c:	b580      	push	{r7, lr}
 8004a1e:	b086      	sub	sp, #24
 8004a20:	af00      	add	r7, sp, #0
 8004a22:	6078      	str	r0, [r7, #4]
 8004a24:	460b      	mov	r3, r1
 8004a26:	70fb      	strb	r3, [r7, #3]
 8004a28:	687b      	ldr	r3, [r7, #4]
 8004a2a:	681b      	ldr	r3, [r3, #0]
 8004a2c:	617b      	str	r3, [r7, #20]
 8004a2e:	697b      	ldr	r3, [r7, #20]
 8004a30:	613b      	str	r3, [r7, #16]
 8004a32:	687b      	ldr	r3, [r7, #4]
 8004a34:	681b      	ldr	r3, [r3, #0]
 8004a36:	78fa      	ldrb	r2, [r7, #3]
 8004a38:	4611      	mov	r1, r2
 8004a3a:	4618      	mov	r0, r3
 8004a3c:	f005 f99d 	bl	8009d7a <USB_ReadChInterrupts>
 8004a40:	4603      	mov	r3, r0
 8004a42:	f003 0304 	and.w	r3, r3, #4
 8004a46:	2b04      	cmp	r3, #4
 8004a48:	d11a      	bne.n	8004a80 <HCD_HC_IN_IRQHandler+0x64>
 8004a4a:	78fb      	ldrb	r3, [r7, #3]
 8004a4c:	015a      	lsls	r2, r3, #5
 8004a4e:	693b      	ldr	r3, [r7, #16]
 8004a50:	4413      	add	r3, r2
 8004a52:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8004a56:	461a      	mov	r2, r3
 8004a58:	2304      	movs	r3, #4
 8004a5a:	6093      	str	r3, [r2, #8]
 8004a5c:	78fa      	ldrb	r2, [r7, #3]
 8004a5e:	6879      	ldr	r1, [r7, #4]
 8004a60:	4613      	mov	r3, r2
 8004a62:	011b      	lsls	r3, r3, #4
 8004a64:	1a9b      	subs	r3, r3, r2
 8004a66:	009b      	lsls	r3, r3, #2
 8004a68:	440b      	add	r3, r1
 8004a6a:	334d      	adds	r3, #77	@ 0x4d
 8004a6c:	2207      	movs	r2, #7
 8004a6e:	701a      	strb	r2, [r3, #0]
 8004a70:	687b      	ldr	r3, [r7, #4]
 8004a72:	681b      	ldr	r3, [r3, #0]
 8004a74:	78fa      	ldrb	r2, [r7, #3]
 8004a76:	4611      	mov	r1, r2
 8004a78:	4618      	mov	r0, r3
 8004a7a:	f005 f9fb 	bl	8009e74 <USB_HC_Halt>
 8004a7e:	e09e      	b.n	8004bbe <HCD_HC_IN_IRQHandler+0x1a2>
 8004a80:	687b      	ldr	r3, [r7, #4]
 8004a82:	681b      	ldr	r3, [r3, #0]
 8004a84:	78fa      	ldrb	r2, [r7, #3]
 8004a86:	4611      	mov	r1, r2
 8004a88:	4618      	mov	r0, r3
 8004a8a:	f005 f976 	bl	8009d7a <USB_ReadChInterrupts>
 8004a8e:	4603      	mov	r3, r0
 8004a90:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8004a94:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8004a98:	d11b      	bne.n	8004ad2 <HCD_HC_IN_IRQHandler+0xb6>
 8004a9a:	78fb      	ldrb	r3, [r7, #3]
 8004a9c:	015a      	lsls	r2, r3, #5
 8004a9e:	693b      	ldr	r3, [r7, #16]
 8004aa0:	4413      	add	r3, r2
 8004aa2:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8004aa6:	461a      	mov	r2, r3
 8004aa8:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8004aac:	6093      	str	r3, [r2, #8]
 8004aae:	78fa      	ldrb	r2, [r7, #3]
 8004ab0:	6879      	ldr	r1, [r7, #4]
 8004ab2:	4613      	mov	r3, r2
 8004ab4:	011b      	lsls	r3, r3, #4
 8004ab6:	1a9b      	subs	r3, r3, r2
 8004ab8:	009b      	lsls	r3, r3, #2
 8004aba:	440b      	add	r3, r1
 8004abc:	334d      	adds	r3, #77	@ 0x4d
 8004abe:	2208      	movs	r2, #8
 8004ac0:	701a      	strb	r2, [r3, #0]
 8004ac2:	687b      	ldr	r3, [r7, #4]
 8004ac4:	681b      	ldr	r3, [r3, #0]
 8004ac6:	78fa      	ldrb	r2, [r7, #3]
 8004ac8:	4611      	mov	r1, r2
 8004aca:	4618      	mov	r0, r3
 8004acc:	f005 f9d2 	bl	8009e74 <USB_HC_Halt>
 8004ad0:	e075      	b.n	8004bbe <HCD_HC_IN_IRQHandler+0x1a2>
 8004ad2:	687b      	ldr	r3, [r7, #4]
 8004ad4:	681b      	ldr	r3, [r3, #0]
 8004ad6:	78fa      	ldrb	r2, [r7, #3]
 8004ad8:	4611      	mov	r1, r2
 8004ada:	4618      	mov	r0, r3
 8004adc:	f005 f94d 	bl	8009d7a <USB_ReadChInterrupts>
 8004ae0:	4603      	mov	r3, r0
 8004ae2:	f003 0308 	and.w	r3, r3, #8
 8004ae6:	2b08      	cmp	r3, #8
 8004ae8:	d11a      	bne.n	8004b20 <HCD_HC_IN_IRQHandler+0x104>
 8004aea:	78fb      	ldrb	r3, [r7, #3]
 8004aec:	015a      	lsls	r2, r3, #5
 8004aee:	693b      	ldr	r3, [r7, #16]
 8004af0:	4413      	add	r3, r2
 8004af2:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8004af6:	461a      	mov	r2, r3
 8004af8:	2308      	movs	r3, #8
 8004afa:	6093      	str	r3, [r2, #8]
 8004afc:	78fa      	ldrb	r2, [r7, #3]
 8004afe:	6879      	ldr	r1, [r7, #4]
 8004b00:	4613      	mov	r3, r2
 8004b02:	011b      	lsls	r3, r3, #4
 8004b04:	1a9b      	subs	r3, r3, r2
 8004b06:	009b      	lsls	r3, r3, #2
 8004b08:	440b      	add	r3, r1
 8004b0a:	334d      	adds	r3, #77	@ 0x4d
 8004b0c:	2206      	movs	r2, #6
 8004b0e:	701a      	strb	r2, [r3, #0]
 8004b10:	687b      	ldr	r3, [r7, #4]
 8004b12:	681b      	ldr	r3, [r3, #0]
 8004b14:	78fa      	ldrb	r2, [r7, #3]
 8004b16:	4611      	mov	r1, r2
 8004b18:	4618      	mov	r0, r3
 8004b1a:	f005 f9ab 	bl	8009e74 <USB_HC_Halt>
 8004b1e:	e04e      	b.n	8004bbe <HCD_HC_IN_IRQHandler+0x1a2>
 8004b20:	687b      	ldr	r3, [r7, #4]
 8004b22:	681b      	ldr	r3, [r3, #0]
 8004b24:	78fa      	ldrb	r2, [r7, #3]
 8004b26:	4611      	mov	r1, r2
 8004b28:	4618      	mov	r0, r3
 8004b2a:	f005 f926 	bl	8009d7a <USB_ReadChInterrupts>
 8004b2e:	4603      	mov	r3, r0
 8004b30:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8004b34:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8004b38:	d11b      	bne.n	8004b72 <HCD_HC_IN_IRQHandler+0x156>
 8004b3a:	78fb      	ldrb	r3, [r7, #3]
 8004b3c:	015a      	lsls	r2, r3, #5
 8004b3e:	693b      	ldr	r3, [r7, #16]
 8004b40:	4413      	add	r3, r2
 8004b42:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8004b46:	461a      	mov	r2, r3
 8004b48:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8004b4c:	6093      	str	r3, [r2, #8]
 8004b4e:	78fa      	ldrb	r2, [r7, #3]
 8004b50:	6879      	ldr	r1, [r7, #4]
 8004b52:	4613      	mov	r3, r2
 8004b54:	011b      	lsls	r3, r3, #4
 8004b56:	1a9b      	subs	r3, r3, r2
 8004b58:	009b      	lsls	r3, r3, #2
 8004b5a:	440b      	add	r3, r1
 8004b5c:	334d      	adds	r3, #77	@ 0x4d
 8004b5e:	2209      	movs	r2, #9
 8004b60:	701a      	strb	r2, [r3, #0]
 8004b62:	687b      	ldr	r3, [r7, #4]
 8004b64:	681b      	ldr	r3, [r3, #0]
 8004b66:	78fa      	ldrb	r2, [r7, #3]
 8004b68:	4611      	mov	r1, r2
 8004b6a:	4618      	mov	r0, r3
 8004b6c:	f005 f982 	bl	8009e74 <USB_HC_Halt>
 8004b70:	e025      	b.n	8004bbe <HCD_HC_IN_IRQHandler+0x1a2>
 8004b72:	687b      	ldr	r3, [r7, #4]
 8004b74:	681b      	ldr	r3, [r3, #0]
 8004b76:	78fa      	ldrb	r2, [r7, #3]
 8004b78:	4611      	mov	r1, r2
 8004b7a:	4618      	mov	r0, r3
 8004b7c:	f005 f8fd 	bl	8009d7a <USB_ReadChInterrupts>
 8004b80:	4603      	mov	r3, r0
 8004b82:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8004b86:	2b80      	cmp	r3, #128	@ 0x80
 8004b88:	d119      	bne.n	8004bbe <HCD_HC_IN_IRQHandler+0x1a2>
 8004b8a:	78fb      	ldrb	r3, [r7, #3]
 8004b8c:	015a      	lsls	r2, r3, #5
 8004b8e:	693b      	ldr	r3, [r7, #16]
 8004b90:	4413      	add	r3, r2
 8004b92:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8004b96:	461a      	mov	r2, r3
 8004b98:	2380      	movs	r3, #128	@ 0x80
 8004b9a:	6093      	str	r3, [r2, #8]
 8004b9c:	78fa      	ldrb	r2, [r7, #3]
 8004b9e:	6879      	ldr	r1, [r7, #4]
 8004ba0:	4613      	mov	r3, r2
 8004ba2:	011b      	lsls	r3, r3, #4
 8004ba4:	1a9b      	subs	r3, r3, r2
 8004ba6:	009b      	lsls	r3, r3, #2
 8004ba8:	440b      	add	r3, r1
 8004baa:	334d      	adds	r3, #77	@ 0x4d
 8004bac:	2207      	movs	r2, #7
 8004bae:	701a      	strb	r2, [r3, #0]
 8004bb0:	687b      	ldr	r3, [r7, #4]
 8004bb2:	681b      	ldr	r3, [r3, #0]
 8004bb4:	78fa      	ldrb	r2, [r7, #3]
 8004bb6:	4611      	mov	r1, r2
 8004bb8:	4618      	mov	r0, r3
 8004bba:	f005 f95b 	bl	8009e74 <USB_HC_Halt>
 8004bbe:	687b      	ldr	r3, [r7, #4]
 8004bc0:	681b      	ldr	r3, [r3, #0]
 8004bc2:	78fa      	ldrb	r2, [r7, #3]
 8004bc4:	4611      	mov	r1, r2
 8004bc6:	4618      	mov	r0, r3
 8004bc8:	f005 f8d7 	bl	8009d7a <USB_ReadChInterrupts>
 8004bcc:	4603      	mov	r3, r0
 8004bce:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8004bd2:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8004bd6:	d112      	bne.n	8004bfe <HCD_HC_IN_IRQHandler+0x1e2>
 8004bd8:	687b      	ldr	r3, [r7, #4]
 8004bda:	681b      	ldr	r3, [r3, #0]
 8004bdc:	78fa      	ldrb	r2, [r7, #3]
 8004bde:	4611      	mov	r1, r2
 8004be0:	4618      	mov	r0, r3
 8004be2:	f005 f947 	bl	8009e74 <USB_HC_Halt>
 8004be6:	78fb      	ldrb	r3, [r7, #3]
 8004be8:	015a      	lsls	r2, r3, #5
 8004bea:	693b      	ldr	r3, [r7, #16]
 8004bec:	4413      	add	r3, r2
 8004bee:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8004bf2:	461a      	mov	r2, r3
 8004bf4:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8004bf8:	6093      	str	r3, [r2, #8]
 8004bfa:	f000 bd75 	b.w	80056e8 <HCD_HC_IN_IRQHandler+0xccc>
 8004bfe:	687b      	ldr	r3, [r7, #4]
 8004c00:	681b      	ldr	r3, [r3, #0]
 8004c02:	78fa      	ldrb	r2, [r7, #3]
 8004c04:	4611      	mov	r1, r2
 8004c06:	4618      	mov	r0, r3
 8004c08:	f005 f8b7 	bl	8009d7a <USB_ReadChInterrupts>
 8004c0c:	4603      	mov	r3, r0
 8004c0e:	f003 0301 	and.w	r3, r3, #1
 8004c12:	2b01      	cmp	r3, #1
 8004c14:	f040 8128 	bne.w	8004e68 <HCD_HC_IN_IRQHandler+0x44c>
 8004c18:	78fb      	ldrb	r3, [r7, #3]
 8004c1a:	015a      	lsls	r2, r3, #5
 8004c1c:	693b      	ldr	r3, [r7, #16]
 8004c1e:	4413      	add	r3, r2
 8004c20:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8004c24:	461a      	mov	r2, r3
 8004c26:	2320      	movs	r3, #32
 8004c28:	6093      	str	r3, [r2, #8]
 8004c2a:	78fa      	ldrb	r2, [r7, #3]
 8004c2c:	6879      	ldr	r1, [r7, #4]
 8004c2e:	4613      	mov	r3, r2
 8004c30:	011b      	lsls	r3, r3, #4
 8004c32:	1a9b      	subs	r3, r3, r2
 8004c34:	009b      	lsls	r3, r3, #2
 8004c36:	440b      	add	r3, r1
 8004c38:	331b      	adds	r3, #27
 8004c3a:	781b      	ldrb	r3, [r3, #0]
 8004c3c:	2b01      	cmp	r3, #1
 8004c3e:	d119      	bne.n	8004c74 <HCD_HC_IN_IRQHandler+0x258>
 8004c40:	78fa      	ldrb	r2, [r7, #3]
 8004c42:	6879      	ldr	r1, [r7, #4]
 8004c44:	4613      	mov	r3, r2
 8004c46:	011b      	lsls	r3, r3, #4
 8004c48:	1a9b      	subs	r3, r3, r2
 8004c4a:	009b      	lsls	r3, r3, #2
 8004c4c:	440b      	add	r3, r1
 8004c4e:	331b      	adds	r3, #27
 8004c50:	2200      	movs	r2, #0
 8004c52:	701a      	strb	r2, [r3, #0]
 8004c54:	78fb      	ldrb	r3, [r7, #3]
 8004c56:	015a      	lsls	r2, r3, #5
 8004c58:	693b      	ldr	r3, [r7, #16]
 8004c5a:	4413      	add	r3, r2
 8004c5c:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8004c60:	685b      	ldr	r3, [r3, #4]
 8004c62:	78fa      	ldrb	r2, [r7, #3]
 8004c64:	0151      	lsls	r1, r2, #5
 8004c66:	693a      	ldr	r2, [r7, #16]
 8004c68:	440a      	add	r2, r1
 8004c6a:	f502 62a0 	add.w	r2, r2, #1280	@ 0x500
 8004c6e:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8004c72:	6053      	str	r3, [r2, #4]
 8004c74:	687b      	ldr	r3, [r7, #4]
 8004c76:	799b      	ldrb	r3, [r3, #6]
 8004c78:	2b00      	cmp	r3, #0
 8004c7a:	d01b      	beq.n	8004cb4 <HCD_HC_IN_IRQHandler+0x298>
 8004c7c:	78fa      	ldrb	r2, [r7, #3]
 8004c7e:	6879      	ldr	r1, [r7, #4]
 8004c80:	4613      	mov	r3, r2
 8004c82:	011b      	lsls	r3, r3, #4
 8004c84:	1a9b      	subs	r3, r3, r2
 8004c86:	009b      	lsls	r3, r3, #2
 8004c88:	440b      	add	r3, r1
 8004c8a:	3330      	adds	r3, #48	@ 0x30
 8004c8c:	6819      	ldr	r1, [r3, #0]
 8004c8e:	78fb      	ldrb	r3, [r7, #3]
 8004c90:	015a      	lsls	r2, r3, #5
 8004c92:	693b      	ldr	r3, [r7, #16]
 8004c94:	4413      	add	r3, r2
 8004c96:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8004c9a:	691b      	ldr	r3, [r3, #16]
 8004c9c:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8004ca0:	78fa      	ldrb	r2, [r7, #3]
 8004ca2:	1ac9      	subs	r1, r1, r3
 8004ca4:	6878      	ldr	r0, [r7, #4]
 8004ca6:	4613      	mov	r3, r2
 8004ca8:	011b      	lsls	r3, r3, #4
 8004caa:	1a9b      	subs	r3, r3, r2
 8004cac:	009b      	lsls	r3, r3, #2
 8004cae:	4403      	add	r3, r0
 8004cb0:	3338      	adds	r3, #56	@ 0x38
 8004cb2:	6019      	str	r1, [r3, #0]
 8004cb4:	78fa      	ldrb	r2, [r7, #3]
 8004cb6:	6879      	ldr	r1, [r7, #4]
 8004cb8:	4613      	mov	r3, r2
 8004cba:	011b      	lsls	r3, r3, #4
 8004cbc:	1a9b      	subs	r3, r3, r2
 8004cbe:	009b      	lsls	r3, r3, #2
 8004cc0:	440b      	add	r3, r1
 8004cc2:	334d      	adds	r3, #77	@ 0x4d
 8004cc4:	2201      	movs	r2, #1
 8004cc6:	701a      	strb	r2, [r3, #0]
 8004cc8:	78fa      	ldrb	r2, [r7, #3]
 8004cca:	6879      	ldr	r1, [r7, #4]
 8004ccc:	4613      	mov	r3, r2
 8004cce:	011b      	lsls	r3, r3, #4
 8004cd0:	1a9b      	subs	r3, r3, r2
 8004cd2:	009b      	lsls	r3, r3, #2
 8004cd4:	440b      	add	r3, r1
 8004cd6:	3344      	adds	r3, #68	@ 0x44
 8004cd8:	2200      	movs	r2, #0
 8004cda:	601a      	str	r2, [r3, #0]
 8004cdc:	78fb      	ldrb	r3, [r7, #3]
 8004cde:	015a      	lsls	r2, r3, #5
 8004ce0:	693b      	ldr	r3, [r7, #16]
 8004ce2:	4413      	add	r3, r2
 8004ce4:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8004ce8:	461a      	mov	r2, r3
 8004cea:	2301      	movs	r3, #1
 8004cec:	6093      	str	r3, [r2, #8]
 8004cee:	78fa      	ldrb	r2, [r7, #3]
 8004cf0:	6879      	ldr	r1, [r7, #4]
 8004cf2:	4613      	mov	r3, r2
 8004cf4:	011b      	lsls	r3, r3, #4
 8004cf6:	1a9b      	subs	r3, r3, r2
 8004cf8:	009b      	lsls	r3, r3, #2
 8004cfa:	440b      	add	r3, r1
 8004cfc:	3326      	adds	r3, #38	@ 0x26
 8004cfe:	781b      	ldrb	r3, [r3, #0]
 8004d00:	2b00      	cmp	r3, #0
 8004d02:	d00a      	beq.n	8004d1a <HCD_HC_IN_IRQHandler+0x2fe>
 8004d04:	78fa      	ldrb	r2, [r7, #3]
 8004d06:	6879      	ldr	r1, [r7, #4]
 8004d08:	4613      	mov	r3, r2
 8004d0a:	011b      	lsls	r3, r3, #4
 8004d0c:	1a9b      	subs	r3, r3, r2
 8004d0e:	009b      	lsls	r3, r3, #2
 8004d10:	440b      	add	r3, r1
 8004d12:	3326      	adds	r3, #38	@ 0x26
 8004d14:	781b      	ldrb	r3, [r3, #0]
 8004d16:	2b02      	cmp	r3, #2
 8004d18:	d110      	bne.n	8004d3c <HCD_HC_IN_IRQHandler+0x320>
 8004d1a:	687b      	ldr	r3, [r7, #4]
 8004d1c:	681b      	ldr	r3, [r3, #0]
 8004d1e:	78fa      	ldrb	r2, [r7, #3]
 8004d20:	4611      	mov	r1, r2
 8004d22:	4618      	mov	r0, r3
 8004d24:	f005 f8a6 	bl	8009e74 <USB_HC_Halt>
 8004d28:	78fb      	ldrb	r3, [r7, #3]
 8004d2a:	015a      	lsls	r2, r3, #5
 8004d2c:	693b      	ldr	r3, [r7, #16]
 8004d2e:	4413      	add	r3, r2
 8004d30:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8004d34:	461a      	mov	r2, r3
 8004d36:	2310      	movs	r3, #16
 8004d38:	6093      	str	r3, [r2, #8]
 8004d3a:	e03d      	b.n	8004db8 <HCD_HC_IN_IRQHandler+0x39c>
 8004d3c:	78fa      	ldrb	r2, [r7, #3]
 8004d3e:	6879      	ldr	r1, [r7, #4]
 8004d40:	4613      	mov	r3, r2
 8004d42:	011b      	lsls	r3, r3, #4
 8004d44:	1a9b      	subs	r3, r3, r2
 8004d46:	009b      	lsls	r3, r3, #2
 8004d48:	440b      	add	r3, r1
 8004d4a:	3326      	adds	r3, #38	@ 0x26
 8004d4c:	781b      	ldrb	r3, [r3, #0]
 8004d4e:	2b03      	cmp	r3, #3
 8004d50:	d00a      	beq.n	8004d68 <HCD_HC_IN_IRQHandler+0x34c>
 8004d52:	78fa      	ldrb	r2, [r7, #3]
 8004d54:	6879      	ldr	r1, [r7, #4]
 8004d56:	4613      	mov	r3, r2
 8004d58:	011b      	lsls	r3, r3, #4
 8004d5a:	1a9b      	subs	r3, r3, r2
 8004d5c:	009b      	lsls	r3, r3, #2
 8004d5e:	440b      	add	r3, r1
 8004d60:	3326      	adds	r3, #38	@ 0x26
 8004d62:	781b      	ldrb	r3, [r3, #0]
 8004d64:	2b01      	cmp	r3, #1
 8004d66:	d127      	bne.n	8004db8 <HCD_HC_IN_IRQHandler+0x39c>
 8004d68:	78fb      	ldrb	r3, [r7, #3]
 8004d6a:	015a      	lsls	r2, r3, #5
 8004d6c:	693b      	ldr	r3, [r7, #16]
 8004d6e:	4413      	add	r3, r2
 8004d70:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8004d74:	681b      	ldr	r3, [r3, #0]
 8004d76:	78fa      	ldrb	r2, [r7, #3]
 8004d78:	0151      	lsls	r1, r2, #5
 8004d7a:	693a      	ldr	r2, [r7, #16]
 8004d7c:	440a      	add	r2, r1
 8004d7e:	f502 62a0 	add.w	r2, r2, #1280	@ 0x500
 8004d82:	f043 5300 	orr.w	r3, r3, #536870912	@ 0x20000000
 8004d86:	6013      	str	r3, [r2, #0]
 8004d88:	78fa      	ldrb	r2, [r7, #3]
 8004d8a:	6879      	ldr	r1, [r7, #4]
 8004d8c:	4613      	mov	r3, r2
 8004d8e:	011b      	lsls	r3, r3, #4
 8004d90:	1a9b      	subs	r3, r3, r2
 8004d92:	009b      	lsls	r3, r3, #2
 8004d94:	440b      	add	r3, r1
 8004d96:	334c      	adds	r3, #76	@ 0x4c
 8004d98:	2201      	movs	r2, #1
 8004d9a:	701a      	strb	r2, [r3, #0]
 8004d9c:	78fa      	ldrb	r2, [r7, #3]
 8004d9e:	6879      	ldr	r1, [r7, #4]
 8004da0:	4613      	mov	r3, r2
 8004da2:	011b      	lsls	r3, r3, #4
 8004da4:	1a9b      	subs	r3, r3, r2
 8004da6:	009b      	lsls	r3, r3, #2
 8004da8:	440b      	add	r3, r1
 8004daa:	334c      	adds	r3, #76	@ 0x4c
 8004dac:	781a      	ldrb	r2, [r3, #0]
 8004dae:	78fb      	ldrb	r3, [r7, #3]
 8004db0:	4619      	mov	r1, r3
 8004db2:	6878      	ldr	r0, [r7, #4]
 8004db4:	f006 fb6e 	bl	800b494 <HAL_HCD_HC_NotifyURBChange_Callback>
 8004db8:	687b      	ldr	r3, [r7, #4]
 8004dba:	799b      	ldrb	r3, [r3, #6]
 8004dbc:	2b01      	cmp	r3, #1
 8004dbe:	d13b      	bne.n	8004e38 <HCD_HC_IN_IRQHandler+0x41c>
 8004dc0:	78fa      	ldrb	r2, [r7, #3]
 8004dc2:	6879      	ldr	r1, [r7, #4]
 8004dc4:	4613      	mov	r3, r2
 8004dc6:	011b      	lsls	r3, r3, #4
 8004dc8:	1a9b      	subs	r3, r3, r2
 8004dca:	009b      	lsls	r3, r3, #2
 8004dcc:	440b      	add	r3, r1
 8004dce:	3338      	adds	r3, #56	@ 0x38
 8004dd0:	6819      	ldr	r1, [r3, #0]
 8004dd2:	78fa      	ldrb	r2, [r7, #3]
 8004dd4:	6878      	ldr	r0, [r7, #4]
 8004dd6:	4613      	mov	r3, r2
 8004dd8:	011b      	lsls	r3, r3, #4
 8004dda:	1a9b      	subs	r3, r3, r2
 8004ddc:	009b      	lsls	r3, r3, #2
 8004dde:	4403      	add	r3, r0
 8004de0:	3328      	adds	r3, #40	@ 0x28
 8004de2:	881b      	ldrh	r3, [r3, #0]
 8004de4:	440b      	add	r3, r1
 8004de6:	1e59      	subs	r1, r3, #1
 8004de8:	78fa      	ldrb	r2, [r7, #3]
 8004dea:	6878      	ldr	r0, [r7, #4]
 8004dec:	4613      	mov	r3, r2
 8004dee:	011b      	lsls	r3, r3, #4
 8004df0:	1a9b      	subs	r3, r3, r2
 8004df2:	009b      	lsls	r3, r3, #2
 8004df4:	4403      	add	r3, r0
 8004df6:	3328      	adds	r3, #40	@ 0x28
 8004df8:	881b      	ldrh	r3, [r3, #0]
 8004dfa:	fbb1 f3f3 	udiv	r3, r1, r3
 8004dfe:	f003 0301 	and.w	r3, r3, #1
 8004e02:	2b00      	cmp	r3, #0
 8004e04:	f000 8470 	beq.w	80056e8 <HCD_HC_IN_IRQHandler+0xccc>
 8004e08:	78fa      	ldrb	r2, [r7, #3]
 8004e0a:	6879      	ldr	r1, [r7, #4]
 8004e0c:	4613      	mov	r3, r2
 8004e0e:	011b      	lsls	r3, r3, #4
 8004e10:	1a9b      	subs	r3, r3, r2
 8004e12:	009b      	lsls	r3, r3, #2
 8004e14:	440b      	add	r3, r1
 8004e16:	333c      	adds	r3, #60	@ 0x3c
 8004e18:	781b      	ldrb	r3, [r3, #0]
 8004e1a:	78fa      	ldrb	r2, [r7, #3]
 8004e1c:	f083 0301 	eor.w	r3, r3, #1
 8004e20:	b2d8      	uxtb	r0, r3
 8004e22:	6879      	ldr	r1, [r7, #4]
 8004e24:	4613      	mov	r3, r2
 8004e26:	011b      	lsls	r3, r3, #4
 8004e28:	1a9b      	subs	r3, r3, r2
 8004e2a:	009b      	lsls	r3, r3, #2
 8004e2c:	440b      	add	r3, r1
 8004e2e:	333c      	adds	r3, #60	@ 0x3c
 8004e30:	4602      	mov	r2, r0
 8004e32:	701a      	strb	r2, [r3, #0]
 8004e34:	f000 bc58 	b.w	80056e8 <HCD_HC_IN_IRQHandler+0xccc>
 8004e38:	78fa      	ldrb	r2, [r7, #3]
 8004e3a:	6879      	ldr	r1, [r7, #4]
 8004e3c:	4613      	mov	r3, r2
 8004e3e:	011b      	lsls	r3, r3, #4
 8004e40:	1a9b      	subs	r3, r3, r2
 8004e42:	009b      	lsls	r3, r3, #2
 8004e44:	440b      	add	r3, r1
 8004e46:	333c      	adds	r3, #60	@ 0x3c
 8004e48:	781b      	ldrb	r3, [r3, #0]
 8004e4a:	78fa      	ldrb	r2, [r7, #3]
 8004e4c:	f083 0301 	eor.w	r3, r3, #1
 8004e50:	b2d8      	uxtb	r0, r3
 8004e52:	6879      	ldr	r1, [r7, #4]
 8004e54:	4613      	mov	r3, r2
 8004e56:	011b      	lsls	r3, r3, #4
 8004e58:	1a9b      	subs	r3, r3, r2
 8004e5a:	009b      	lsls	r3, r3, #2
 8004e5c:	440b      	add	r3, r1
 8004e5e:	333c      	adds	r3, #60	@ 0x3c
 8004e60:	4602      	mov	r2, r0
 8004e62:	701a      	strb	r2, [r3, #0]
 8004e64:	f000 bc40 	b.w	80056e8 <HCD_HC_IN_IRQHandler+0xccc>
 8004e68:	687b      	ldr	r3, [r7, #4]
 8004e6a:	681b      	ldr	r3, [r3, #0]
 8004e6c:	78fa      	ldrb	r2, [r7, #3]
 8004e6e:	4611      	mov	r1, r2
 8004e70:	4618      	mov	r0, r3
 8004e72:	f004 ff82 	bl	8009d7a <USB_ReadChInterrupts>
 8004e76:	4603      	mov	r3, r0
 8004e78:	f003 0320 	and.w	r3, r3, #32
 8004e7c:	2b20      	cmp	r3, #32
 8004e7e:	d131      	bne.n	8004ee4 <HCD_HC_IN_IRQHandler+0x4c8>
 8004e80:	78fb      	ldrb	r3, [r7, #3]
 8004e82:	015a      	lsls	r2, r3, #5
 8004e84:	693b      	ldr	r3, [r7, #16]
 8004e86:	4413      	add	r3, r2
 8004e88:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8004e8c:	461a      	mov	r2, r3
 8004e8e:	2320      	movs	r3, #32
 8004e90:	6093      	str	r3, [r2, #8]
 8004e92:	78fa      	ldrb	r2, [r7, #3]
 8004e94:	6879      	ldr	r1, [r7, #4]
 8004e96:	4613      	mov	r3, r2
 8004e98:	011b      	lsls	r3, r3, #4
 8004e9a:	1a9b      	subs	r3, r3, r2
 8004e9c:	009b      	lsls	r3, r3, #2
 8004e9e:	440b      	add	r3, r1
 8004ea0:	331a      	adds	r3, #26
 8004ea2:	781b      	ldrb	r3, [r3, #0]
 8004ea4:	2b01      	cmp	r3, #1
 8004ea6:	f040 841f 	bne.w	80056e8 <HCD_HC_IN_IRQHandler+0xccc>
 8004eaa:	78fa      	ldrb	r2, [r7, #3]
 8004eac:	6879      	ldr	r1, [r7, #4]
 8004eae:	4613      	mov	r3, r2
 8004eb0:	011b      	lsls	r3, r3, #4
 8004eb2:	1a9b      	subs	r3, r3, r2
 8004eb4:	009b      	lsls	r3, r3, #2
 8004eb6:	440b      	add	r3, r1
 8004eb8:	331b      	adds	r3, #27
 8004eba:	2201      	movs	r2, #1
 8004ebc:	701a      	strb	r2, [r3, #0]
 8004ebe:	78fa      	ldrb	r2, [r7, #3]
 8004ec0:	6879      	ldr	r1, [r7, #4]
 8004ec2:	4613      	mov	r3, r2
 8004ec4:	011b      	lsls	r3, r3, #4
 8004ec6:	1a9b      	subs	r3, r3, r2
 8004ec8:	009b      	lsls	r3, r3, #2
 8004eca:	440b      	add	r3, r1
 8004ecc:	334d      	adds	r3, #77	@ 0x4d
 8004ece:	2203      	movs	r2, #3
 8004ed0:	701a      	strb	r2, [r3, #0]
 8004ed2:	687b      	ldr	r3, [r7, #4]
 8004ed4:	681b      	ldr	r3, [r3, #0]
 8004ed6:	78fa      	ldrb	r2, [r7, #3]
 8004ed8:	4611      	mov	r1, r2
 8004eda:	4618      	mov	r0, r3
 8004edc:	f004 ffca 	bl	8009e74 <USB_HC_Halt>
 8004ee0:	f000 bc02 	b.w	80056e8 <HCD_HC_IN_IRQHandler+0xccc>
 8004ee4:	687b      	ldr	r3, [r7, #4]
 8004ee6:	681b      	ldr	r3, [r3, #0]
 8004ee8:	78fa      	ldrb	r2, [r7, #3]
 8004eea:	4611      	mov	r1, r2
 8004eec:	4618      	mov	r0, r3
 8004eee:	f004 ff44 	bl	8009d7a <USB_ReadChInterrupts>
 8004ef2:	4603      	mov	r3, r0
 8004ef4:	f003 0302 	and.w	r3, r3, #2
 8004ef8:	2b02      	cmp	r3, #2
 8004efa:	f040 8305 	bne.w	8005508 <HCD_HC_IN_IRQHandler+0xaec>
 8004efe:	78fb      	ldrb	r3, [r7, #3]
 8004f00:	015a      	lsls	r2, r3, #5
 8004f02:	693b      	ldr	r3, [r7, #16]
 8004f04:	4413      	add	r3, r2
 8004f06:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8004f0a:	461a      	mov	r2, r3
 8004f0c:	2302      	movs	r3, #2
 8004f0e:	6093      	str	r3, [r2, #8]
 8004f10:	78fa      	ldrb	r2, [r7, #3]
 8004f12:	6879      	ldr	r1, [r7, #4]
 8004f14:	4613      	mov	r3, r2
 8004f16:	011b      	lsls	r3, r3, #4
 8004f18:	1a9b      	subs	r3, r3, r2
 8004f1a:	009b      	lsls	r3, r3, #2
 8004f1c:	440b      	add	r3, r1
 8004f1e:	334d      	adds	r3, #77	@ 0x4d
 8004f20:	781b      	ldrb	r3, [r3, #0]
 8004f22:	2b01      	cmp	r3, #1
 8004f24:	d114      	bne.n	8004f50 <HCD_HC_IN_IRQHandler+0x534>
 8004f26:	78fa      	ldrb	r2, [r7, #3]
 8004f28:	6879      	ldr	r1, [r7, #4]
 8004f2a:	4613      	mov	r3, r2
 8004f2c:	011b      	lsls	r3, r3, #4
 8004f2e:	1a9b      	subs	r3, r3, r2
 8004f30:	009b      	lsls	r3, r3, #2
 8004f32:	440b      	add	r3, r1
 8004f34:	334d      	adds	r3, #77	@ 0x4d
 8004f36:	2202      	movs	r2, #2
 8004f38:	701a      	strb	r2, [r3, #0]
 8004f3a:	78fa      	ldrb	r2, [r7, #3]
 8004f3c:	6879      	ldr	r1, [r7, #4]
 8004f3e:	4613      	mov	r3, r2
 8004f40:	011b      	lsls	r3, r3, #4
 8004f42:	1a9b      	subs	r3, r3, r2
 8004f44:	009b      	lsls	r3, r3, #2
 8004f46:	440b      	add	r3, r1
 8004f48:	334c      	adds	r3, #76	@ 0x4c
 8004f4a:	2201      	movs	r2, #1
 8004f4c:	701a      	strb	r2, [r3, #0]
 8004f4e:	e2cc      	b.n	80054ea <HCD_HC_IN_IRQHandler+0xace>
 8004f50:	78fa      	ldrb	r2, [r7, #3]
 8004f52:	6879      	ldr	r1, [r7, #4]
 8004f54:	4613      	mov	r3, r2
 8004f56:	011b      	lsls	r3, r3, #4
 8004f58:	1a9b      	subs	r3, r3, r2
 8004f5a:	009b      	lsls	r3, r3, #2
 8004f5c:	440b      	add	r3, r1
 8004f5e:	334d      	adds	r3, #77	@ 0x4d
 8004f60:	781b      	ldrb	r3, [r3, #0]
 8004f62:	2b06      	cmp	r3, #6
 8004f64:	d114      	bne.n	8004f90 <HCD_HC_IN_IRQHandler+0x574>
 8004f66:	78fa      	ldrb	r2, [r7, #3]
 8004f68:	6879      	ldr	r1, [r7, #4]
 8004f6a:	4613      	mov	r3, r2
 8004f6c:	011b      	lsls	r3, r3, #4
 8004f6e:	1a9b      	subs	r3, r3, r2
 8004f70:	009b      	lsls	r3, r3, #2
 8004f72:	440b      	add	r3, r1
 8004f74:	334d      	adds	r3, #77	@ 0x4d
 8004f76:	2202      	movs	r2, #2
 8004f78:	701a      	strb	r2, [r3, #0]
 8004f7a:	78fa      	ldrb	r2, [r7, #3]
 8004f7c:	6879      	ldr	r1, [r7, #4]
 8004f7e:	4613      	mov	r3, r2
 8004f80:	011b      	lsls	r3, r3, #4
 8004f82:	1a9b      	subs	r3, r3, r2
 8004f84:	009b      	lsls	r3, r3, #2
 8004f86:	440b      	add	r3, r1
 8004f88:	334c      	adds	r3, #76	@ 0x4c
 8004f8a:	2205      	movs	r2, #5
 8004f8c:	701a      	strb	r2, [r3, #0]
 8004f8e:	e2ac      	b.n	80054ea <HCD_HC_IN_IRQHandler+0xace>
 8004f90:	78fa      	ldrb	r2, [r7, #3]
 8004f92:	6879      	ldr	r1, [r7, #4]
 8004f94:	4613      	mov	r3, r2
 8004f96:	011b      	lsls	r3, r3, #4
 8004f98:	1a9b      	subs	r3, r3, r2
 8004f9a:	009b      	lsls	r3, r3, #2
 8004f9c:	440b      	add	r3, r1
 8004f9e:	334d      	adds	r3, #77	@ 0x4d
 8004fa0:	781b      	ldrb	r3, [r3, #0]
 8004fa2:	2b07      	cmp	r3, #7
 8004fa4:	d00b      	beq.n	8004fbe <HCD_HC_IN_IRQHandler+0x5a2>
 8004fa6:	78fa      	ldrb	r2, [r7, #3]
 8004fa8:	6879      	ldr	r1, [r7, #4]
 8004faa:	4613      	mov	r3, r2
 8004fac:	011b      	lsls	r3, r3, #4
 8004fae:	1a9b      	subs	r3, r3, r2
 8004fb0:	009b      	lsls	r3, r3, #2
 8004fb2:	440b      	add	r3, r1
 8004fb4:	334d      	adds	r3, #77	@ 0x4d
 8004fb6:	781b      	ldrb	r3, [r3, #0]
 8004fb8:	2b09      	cmp	r3, #9
 8004fba:	f040 80a6 	bne.w	800510a <HCD_HC_IN_IRQHandler+0x6ee>
 8004fbe:	78fa      	ldrb	r2, [r7, #3]
 8004fc0:	6879      	ldr	r1, [r7, #4]
 8004fc2:	4613      	mov	r3, r2
 8004fc4:	011b      	lsls	r3, r3, #4
 8004fc6:	1a9b      	subs	r3, r3, r2
 8004fc8:	009b      	lsls	r3, r3, #2
 8004fca:	440b      	add	r3, r1
 8004fcc:	334d      	adds	r3, #77	@ 0x4d
 8004fce:	2202      	movs	r2, #2
 8004fd0:	701a      	strb	r2, [r3, #0]
 8004fd2:	78fa      	ldrb	r2, [r7, #3]
 8004fd4:	6879      	ldr	r1, [r7, #4]
 8004fd6:	4613      	mov	r3, r2
 8004fd8:	011b      	lsls	r3, r3, #4
 8004fda:	1a9b      	subs	r3, r3, r2
 8004fdc:	009b      	lsls	r3, r3, #2
 8004fde:	440b      	add	r3, r1
 8004fe0:	3344      	adds	r3, #68	@ 0x44
 8004fe2:	681b      	ldr	r3, [r3, #0]
 8004fe4:	1c59      	adds	r1, r3, #1
 8004fe6:	6878      	ldr	r0, [r7, #4]
 8004fe8:	4613      	mov	r3, r2
 8004fea:	011b      	lsls	r3, r3, #4
 8004fec:	1a9b      	subs	r3, r3, r2
 8004fee:	009b      	lsls	r3, r3, #2
 8004ff0:	4403      	add	r3, r0
 8004ff2:	3344      	adds	r3, #68	@ 0x44
 8004ff4:	6019      	str	r1, [r3, #0]
 8004ff6:	78fa      	ldrb	r2, [r7, #3]
 8004ff8:	6879      	ldr	r1, [r7, #4]
 8004ffa:	4613      	mov	r3, r2
 8004ffc:	011b      	lsls	r3, r3, #4
 8004ffe:	1a9b      	subs	r3, r3, r2
 8005000:	009b      	lsls	r3, r3, #2
 8005002:	440b      	add	r3, r1
 8005004:	3344      	adds	r3, #68	@ 0x44
 8005006:	681b      	ldr	r3, [r3, #0]
 8005008:	2b02      	cmp	r3, #2
 800500a:	d943      	bls.n	8005094 <HCD_HC_IN_IRQHandler+0x678>
 800500c:	78fa      	ldrb	r2, [r7, #3]
 800500e:	6879      	ldr	r1, [r7, #4]
 8005010:	4613      	mov	r3, r2
 8005012:	011b      	lsls	r3, r3, #4
 8005014:	1a9b      	subs	r3, r3, r2
 8005016:	009b      	lsls	r3, r3, #2
 8005018:	440b      	add	r3, r1
 800501a:	3344      	adds	r3, #68	@ 0x44
 800501c:	2200      	movs	r2, #0
 800501e:	601a      	str	r2, [r3, #0]
 8005020:	78fa      	ldrb	r2, [r7, #3]
 8005022:	6879      	ldr	r1, [r7, #4]
 8005024:	4613      	mov	r3, r2
 8005026:	011b      	lsls	r3, r3, #4
 8005028:	1a9b      	subs	r3, r3, r2
 800502a:	009b      	lsls	r3, r3, #2
 800502c:	440b      	add	r3, r1
 800502e:	331a      	adds	r3, #26
 8005030:	781b      	ldrb	r3, [r3, #0]
 8005032:	2b01      	cmp	r3, #1
 8005034:	d123      	bne.n	800507e <HCD_HC_IN_IRQHandler+0x662>
 8005036:	78fa      	ldrb	r2, [r7, #3]
 8005038:	6879      	ldr	r1, [r7, #4]
 800503a:	4613      	mov	r3, r2
 800503c:	011b      	lsls	r3, r3, #4
 800503e:	1a9b      	subs	r3, r3, r2
 8005040:	009b      	lsls	r3, r3, #2
 8005042:	440b      	add	r3, r1
 8005044:	331b      	adds	r3, #27
 8005046:	2200      	movs	r2, #0
 8005048:	701a      	strb	r2, [r3, #0]
 800504a:	78fa      	ldrb	r2, [r7, #3]
 800504c:	6879      	ldr	r1, [r7, #4]
 800504e:	4613      	mov	r3, r2
 8005050:	011b      	lsls	r3, r3, #4
 8005052:	1a9b      	subs	r3, r3, r2
 8005054:	009b      	lsls	r3, r3, #2
 8005056:	440b      	add	r3, r1
 8005058:	331c      	adds	r3, #28
 800505a:	2200      	movs	r2, #0
 800505c:	701a      	strb	r2, [r3, #0]
 800505e:	78fb      	ldrb	r3, [r7, #3]
 8005060:	015a      	lsls	r2, r3, #5
 8005062:	693b      	ldr	r3, [r7, #16]
 8005064:	4413      	add	r3, r2
 8005066:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 800506a:	685b      	ldr	r3, [r3, #4]
 800506c:	78fa      	ldrb	r2, [r7, #3]
 800506e:	0151      	lsls	r1, r2, #5
 8005070:	693a      	ldr	r2, [r7, #16]
 8005072:	440a      	add	r2, r1
 8005074:	f502 62a0 	add.w	r2, r2, #1280	@ 0x500
 8005078:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 800507c:	6053      	str	r3, [r2, #4]
 800507e:	78fa      	ldrb	r2, [r7, #3]
 8005080:	6879      	ldr	r1, [r7, #4]
 8005082:	4613      	mov	r3, r2
 8005084:	011b      	lsls	r3, r3, #4
 8005086:	1a9b      	subs	r3, r3, r2
 8005088:	009b      	lsls	r3, r3, #2
 800508a:	440b      	add	r3, r1
 800508c:	334c      	adds	r3, #76	@ 0x4c
 800508e:	2204      	movs	r2, #4
 8005090:	701a      	strb	r2, [r3, #0]
 8005092:	e229      	b.n	80054e8 <HCD_HC_IN_IRQHandler+0xacc>
 8005094:	78fa      	ldrb	r2, [r7, #3]
 8005096:	6879      	ldr	r1, [r7, #4]
 8005098:	4613      	mov	r3, r2
 800509a:	011b      	lsls	r3, r3, #4
 800509c:	1a9b      	subs	r3, r3, r2
 800509e:	009b      	lsls	r3, r3, #2
 80050a0:	440b      	add	r3, r1
 80050a2:	334c      	adds	r3, #76	@ 0x4c
 80050a4:	2202      	movs	r2, #2
 80050a6:	701a      	strb	r2, [r3, #0]
 80050a8:	78fa      	ldrb	r2, [r7, #3]
 80050aa:	6879      	ldr	r1, [r7, #4]
 80050ac:	4613      	mov	r3, r2
 80050ae:	011b      	lsls	r3, r3, #4
 80050b0:	1a9b      	subs	r3, r3, r2
 80050b2:	009b      	lsls	r3, r3, #2
 80050b4:	440b      	add	r3, r1
 80050b6:	3326      	adds	r3, #38	@ 0x26
 80050b8:	781b      	ldrb	r3, [r3, #0]
 80050ba:	2b00      	cmp	r3, #0
 80050bc:	d00b      	beq.n	80050d6 <HCD_HC_IN_IRQHandler+0x6ba>
 80050be:	78fa      	ldrb	r2, [r7, #3]
 80050c0:	6879      	ldr	r1, [r7, #4]
 80050c2:	4613      	mov	r3, r2
 80050c4:	011b      	lsls	r3, r3, #4
 80050c6:	1a9b      	subs	r3, r3, r2
 80050c8:	009b      	lsls	r3, r3, #2
 80050ca:	440b      	add	r3, r1
 80050cc:	3326      	adds	r3, #38	@ 0x26
 80050ce:	781b      	ldrb	r3, [r3, #0]
 80050d0:	2b02      	cmp	r3, #2
 80050d2:	f040 8209 	bne.w	80054e8 <HCD_HC_IN_IRQHandler+0xacc>
 80050d6:	78fb      	ldrb	r3, [r7, #3]
 80050d8:	015a      	lsls	r2, r3, #5
 80050da:	693b      	ldr	r3, [r7, #16]
 80050dc:	4413      	add	r3, r2
 80050de:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 80050e2:	681b      	ldr	r3, [r3, #0]
 80050e4:	60fb      	str	r3, [r7, #12]
 80050e6:	68fb      	ldr	r3, [r7, #12]
 80050e8:	f023 4380 	bic.w	r3, r3, #1073741824	@ 0x40000000
 80050ec:	60fb      	str	r3, [r7, #12]
 80050ee:	68fb      	ldr	r3, [r7, #12]
 80050f0:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 80050f4:	60fb      	str	r3, [r7, #12]
 80050f6:	78fb      	ldrb	r3, [r7, #3]
 80050f8:	015a      	lsls	r2, r3, #5
 80050fa:	693b      	ldr	r3, [r7, #16]
 80050fc:	4413      	add	r3, r2
 80050fe:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8005102:	461a      	mov	r2, r3
 8005104:	68fb      	ldr	r3, [r7, #12]
 8005106:	6013      	str	r3, [r2, #0]
 8005108:	e1ee      	b.n	80054e8 <HCD_HC_IN_IRQHandler+0xacc>
 800510a:	78fa      	ldrb	r2, [r7, #3]
 800510c:	6879      	ldr	r1, [r7, #4]
 800510e:	4613      	mov	r3, r2
 8005110:	011b      	lsls	r3, r3, #4
 8005112:	1a9b      	subs	r3, r3, r2
 8005114:	009b      	lsls	r3, r3, #2
 8005116:	440b      	add	r3, r1
 8005118:	334d      	adds	r3, #77	@ 0x4d
 800511a:	781b      	ldrb	r3, [r3, #0]
 800511c:	2b05      	cmp	r3, #5
 800511e:	f040 80c8 	bne.w	80052b2 <HCD_HC_IN_IRQHandler+0x896>
 8005122:	78fa      	ldrb	r2, [r7, #3]
 8005124:	6879      	ldr	r1, [r7, #4]
 8005126:	4613      	mov	r3, r2
 8005128:	011b      	lsls	r3, r3, #4
 800512a:	1a9b      	subs	r3, r3, r2
 800512c:	009b      	lsls	r3, r3, #2
 800512e:	440b      	add	r3, r1
 8005130:	334d      	adds	r3, #77	@ 0x4d
 8005132:	2202      	movs	r2, #2
 8005134:	701a      	strb	r2, [r3, #0]
 8005136:	78fa      	ldrb	r2, [r7, #3]
 8005138:	6879      	ldr	r1, [r7, #4]
 800513a:	4613      	mov	r3, r2
 800513c:	011b      	lsls	r3, r3, #4
 800513e:	1a9b      	subs	r3, r3, r2
 8005140:	009b      	lsls	r3, r3, #2
 8005142:	440b      	add	r3, r1
 8005144:	331b      	adds	r3, #27
 8005146:	781b      	ldrb	r3, [r3, #0]
 8005148:	2b01      	cmp	r3, #1
 800514a:	f040 81ce 	bne.w	80054ea <HCD_HC_IN_IRQHandler+0xace>
 800514e:	78fa      	ldrb	r2, [r7, #3]
 8005150:	6879      	ldr	r1, [r7, #4]
 8005152:	4613      	mov	r3, r2
 8005154:	011b      	lsls	r3, r3, #4
 8005156:	1a9b      	subs	r3, r3, r2
 8005158:	009b      	lsls	r3, r3, #2
 800515a:	440b      	add	r3, r1
 800515c:	3326      	adds	r3, #38	@ 0x26
 800515e:	781b      	ldrb	r3, [r3, #0]
 8005160:	2b03      	cmp	r3, #3
 8005162:	d16b      	bne.n	800523c <HCD_HC_IN_IRQHandler+0x820>
 8005164:	78fa      	ldrb	r2, [r7, #3]
 8005166:	6879      	ldr	r1, [r7, #4]
 8005168:	4613      	mov	r3, r2
 800516a:	011b      	lsls	r3, r3, #4
 800516c:	1a9b      	subs	r3, r3, r2
 800516e:	009b      	lsls	r3, r3, #2
 8005170:	440b      	add	r3, r1
 8005172:	3348      	adds	r3, #72	@ 0x48
 8005174:	681b      	ldr	r3, [r3, #0]
 8005176:	1c59      	adds	r1, r3, #1
 8005178:	6878      	ldr	r0, [r7, #4]
 800517a:	4613      	mov	r3, r2
 800517c:	011b      	lsls	r3, r3, #4
 800517e:	1a9b      	subs	r3, r3, r2
 8005180:	009b      	lsls	r3, r3, #2
 8005182:	4403      	add	r3, r0
 8005184:	3348      	adds	r3, #72	@ 0x48
 8005186:	6019      	str	r1, [r3, #0]
 8005188:	78fa      	ldrb	r2, [r7, #3]
 800518a:	6879      	ldr	r1, [r7, #4]
 800518c:	4613      	mov	r3, r2
 800518e:	011b      	lsls	r3, r3, #4
 8005190:	1a9b      	subs	r3, r3, r2
 8005192:	009b      	lsls	r3, r3, #2
 8005194:	440b      	add	r3, r1
 8005196:	3348      	adds	r3, #72	@ 0x48
 8005198:	681b      	ldr	r3, [r3, #0]
 800519a:	2b02      	cmp	r3, #2
 800519c:	d943      	bls.n	8005226 <HCD_HC_IN_IRQHandler+0x80a>
 800519e:	78fa      	ldrb	r2, [r7, #3]
 80051a0:	6879      	ldr	r1, [r7, #4]
 80051a2:	4613      	mov	r3, r2
 80051a4:	011b      	lsls	r3, r3, #4
 80051a6:	1a9b      	subs	r3, r3, r2
 80051a8:	009b      	lsls	r3, r3, #2
 80051aa:	440b      	add	r3, r1
 80051ac:	3348      	adds	r3, #72	@ 0x48
 80051ae:	2200      	movs	r2, #0
 80051b0:	601a      	str	r2, [r3, #0]
 80051b2:	78fa      	ldrb	r2, [r7, #3]
 80051b4:	6879      	ldr	r1, [r7, #4]
 80051b6:	4613      	mov	r3, r2
 80051b8:	011b      	lsls	r3, r3, #4
 80051ba:	1a9b      	subs	r3, r3, r2
 80051bc:	009b      	lsls	r3, r3, #2
 80051be:	440b      	add	r3, r1
 80051c0:	331b      	adds	r3, #27
 80051c2:	2200      	movs	r2, #0
 80051c4:	701a      	strb	r2, [r3, #0]
 80051c6:	78fa      	ldrb	r2, [r7, #3]
 80051c8:	6879      	ldr	r1, [r7, #4]
 80051ca:	4613      	mov	r3, r2
 80051cc:	011b      	lsls	r3, r3, #4
 80051ce:	1a9b      	subs	r3, r3, r2
 80051d0:	009b      	lsls	r3, r3, #2
 80051d2:	440b      	add	r3, r1
 80051d4:	3344      	adds	r3, #68	@ 0x44
 80051d6:	681b      	ldr	r3, [r3, #0]
 80051d8:	2b02      	cmp	r3, #2
 80051da:	d809      	bhi.n	80051f0 <HCD_HC_IN_IRQHandler+0x7d4>
 80051dc:	78fa      	ldrb	r2, [r7, #3]
 80051de:	6879      	ldr	r1, [r7, #4]
 80051e0:	4613      	mov	r3, r2
 80051e2:	011b      	lsls	r3, r3, #4
 80051e4:	1a9b      	subs	r3, r3, r2
 80051e6:	009b      	lsls	r3, r3, #2
 80051e8:	440b      	add	r3, r1
 80051ea:	331c      	adds	r3, #28
 80051ec:	2201      	movs	r2, #1
 80051ee:	701a      	strb	r2, [r3, #0]
 80051f0:	78fb      	ldrb	r3, [r7, #3]
 80051f2:	015a      	lsls	r2, r3, #5
 80051f4:	693b      	ldr	r3, [r7, #16]
 80051f6:	4413      	add	r3, r2
 80051f8:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 80051fc:	685b      	ldr	r3, [r3, #4]
 80051fe:	78fa      	ldrb	r2, [r7, #3]
 8005200:	0151      	lsls	r1, r2, #5
 8005202:	693a      	ldr	r2, [r7, #16]
 8005204:	440a      	add	r2, r1
 8005206:	f502 62a0 	add.w	r2, r2, #1280	@ 0x500
 800520a:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 800520e:	6053      	str	r3, [r2, #4]
 8005210:	78fa      	ldrb	r2, [r7, #3]
 8005212:	6879      	ldr	r1, [r7, #4]
 8005214:	4613      	mov	r3, r2
 8005216:	011b      	lsls	r3, r3, #4
 8005218:	1a9b      	subs	r3, r3, r2
 800521a:	009b      	lsls	r3, r3, #2
 800521c:	440b      	add	r3, r1
 800521e:	334c      	adds	r3, #76	@ 0x4c
 8005220:	2204      	movs	r2, #4
 8005222:	701a      	strb	r2, [r3, #0]
 8005224:	e014      	b.n	8005250 <HCD_HC_IN_IRQHandler+0x834>
 8005226:	78fa      	ldrb	r2, [r7, #3]
 8005228:	6879      	ldr	r1, [r7, #4]
 800522a:	4613      	mov	r3, r2
 800522c:	011b      	lsls	r3, r3, #4
 800522e:	1a9b      	subs	r3, r3, r2
 8005230:	009b      	lsls	r3, r3, #2
 8005232:	440b      	add	r3, r1
 8005234:	334c      	adds	r3, #76	@ 0x4c
 8005236:	2202      	movs	r2, #2
 8005238:	701a      	strb	r2, [r3, #0]
 800523a:	e009      	b.n	8005250 <HCD_HC_IN_IRQHandler+0x834>
 800523c:	78fa      	ldrb	r2, [r7, #3]
 800523e:	6879      	ldr	r1, [r7, #4]
 8005240:	4613      	mov	r3, r2
 8005242:	011b      	lsls	r3, r3, #4
 8005244:	1a9b      	subs	r3, r3, r2
 8005246:	009b      	lsls	r3, r3, #2
 8005248:	440b      	add	r3, r1
 800524a:	334c      	adds	r3, #76	@ 0x4c
 800524c:	2202      	movs	r2, #2
 800524e:	701a      	strb	r2, [r3, #0]
 8005250:	78fa      	ldrb	r2, [r7, #3]
 8005252:	6879      	ldr	r1, [r7, #4]
 8005254:	4613      	mov	r3, r2
 8005256:	011b      	lsls	r3, r3, #4
 8005258:	1a9b      	subs	r3, r3, r2
 800525a:	009b      	lsls	r3, r3, #2
 800525c:	440b      	add	r3, r1
 800525e:	3326      	adds	r3, #38	@ 0x26
 8005260:	781b      	ldrb	r3, [r3, #0]
 8005262:	2b00      	cmp	r3, #0
 8005264:	d00b      	beq.n	800527e <HCD_HC_IN_IRQHandler+0x862>
 8005266:	78fa      	ldrb	r2, [r7, #3]
 8005268:	6879      	ldr	r1, [r7, #4]
 800526a:	4613      	mov	r3, r2
 800526c:	011b      	lsls	r3, r3, #4
 800526e:	1a9b      	subs	r3, r3, r2
 8005270:	009b      	lsls	r3, r3, #2
 8005272:	440b      	add	r3, r1
 8005274:	3326      	adds	r3, #38	@ 0x26
 8005276:	781b      	ldrb	r3, [r3, #0]
 8005278:	2b02      	cmp	r3, #2
 800527a:	f040 8136 	bne.w	80054ea <HCD_HC_IN_IRQHandler+0xace>
 800527e:	78fb      	ldrb	r3, [r7, #3]
 8005280:	015a      	lsls	r2, r3, #5
 8005282:	693b      	ldr	r3, [r7, #16]
 8005284:	4413      	add	r3, r2
 8005286:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 800528a:	681b      	ldr	r3, [r3, #0]
 800528c:	60fb      	str	r3, [r7, #12]
 800528e:	68fb      	ldr	r3, [r7, #12]
 8005290:	f023 4380 	bic.w	r3, r3, #1073741824	@ 0x40000000
 8005294:	60fb      	str	r3, [r7, #12]
 8005296:	68fb      	ldr	r3, [r7, #12]
 8005298:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 800529c:	60fb      	str	r3, [r7, #12]
 800529e:	78fb      	ldrb	r3, [r7, #3]
 80052a0:	015a      	lsls	r2, r3, #5
 80052a2:	693b      	ldr	r3, [r7, #16]
 80052a4:	4413      	add	r3, r2
 80052a6:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 80052aa:	461a      	mov	r2, r3
 80052ac:	68fb      	ldr	r3, [r7, #12]
 80052ae:	6013      	str	r3, [r2, #0]
 80052b0:	e11b      	b.n	80054ea <HCD_HC_IN_IRQHandler+0xace>
 80052b2:	78fa      	ldrb	r2, [r7, #3]
 80052b4:	6879      	ldr	r1, [r7, #4]
 80052b6:	4613      	mov	r3, r2
 80052b8:	011b      	lsls	r3, r3, #4
 80052ba:	1a9b      	subs	r3, r3, r2
 80052bc:	009b      	lsls	r3, r3, #2
 80052be:	440b      	add	r3, r1
 80052c0:	334d      	adds	r3, #77	@ 0x4d
 80052c2:	781b      	ldrb	r3, [r3, #0]
 80052c4:	2b03      	cmp	r3, #3
 80052c6:	f040 8081 	bne.w	80053cc <HCD_HC_IN_IRQHandler+0x9b0>
 80052ca:	78fa      	ldrb	r2, [r7, #3]
 80052cc:	6879      	ldr	r1, [r7, #4]
 80052ce:	4613      	mov	r3, r2
 80052d0:	011b      	lsls	r3, r3, #4
 80052d2:	1a9b      	subs	r3, r3, r2
 80052d4:	009b      	lsls	r3, r3, #2
 80052d6:	440b      	add	r3, r1
 80052d8:	334d      	adds	r3, #77	@ 0x4d
 80052da:	2202      	movs	r2, #2
 80052dc:	701a      	strb	r2, [r3, #0]
 80052de:	78fa      	ldrb	r2, [r7, #3]
 80052e0:	6879      	ldr	r1, [r7, #4]
 80052e2:	4613      	mov	r3, r2
 80052e4:	011b      	lsls	r3, r3, #4
 80052e6:	1a9b      	subs	r3, r3, r2
 80052e8:	009b      	lsls	r3, r3, #2
 80052ea:	440b      	add	r3, r1
 80052ec:	331b      	adds	r3, #27
 80052ee:	781b      	ldrb	r3, [r3, #0]
 80052f0:	2b01      	cmp	r3, #1
 80052f2:	f040 80fa 	bne.w	80054ea <HCD_HC_IN_IRQHandler+0xace>
 80052f6:	78fa      	ldrb	r2, [r7, #3]
 80052f8:	6879      	ldr	r1, [r7, #4]
 80052fa:	4613      	mov	r3, r2
 80052fc:	011b      	lsls	r3, r3, #4
 80052fe:	1a9b      	subs	r3, r3, r2
 8005300:	009b      	lsls	r3, r3, #2
 8005302:	440b      	add	r3, r1
 8005304:	334c      	adds	r3, #76	@ 0x4c
 8005306:	2202      	movs	r2, #2
 8005308:	701a      	strb	r2, [r3, #0]
 800530a:	78fb      	ldrb	r3, [r7, #3]
 800530c:	015a      	lsls	r2, r3, #5
 800530e:	693b      	ldr	r3, [r7, #16]
 8005310:	4413      	add	r3, r2
 8005312:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8005316:	685b      	ldr	r3, [r3, #4]
 8005318:	78fa      	ldrb	r2, [r7, #3]
 800531a:	0151      	lsls	r1, r2, #5
 800531c:	693a      	ldr	r2, [r7, #16]
 800531e:	440a      	add	r2, r1
 8005320:	f502 62a0 	add.w	r2, r2, #1280	@ 0x500
 8005324:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8005328:	6053      	str	r3, [r2, #4]
 800532a:	78fb      	ldrb	r3, [r7, #3]
 800532c:	015a      	lsls	r2, r3, #5
 800532e:	693b      	ldr	r3, [r7, #16]
 8005330:	4413      	add	r3, r2
 8005332:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8005336:	68db      	ldr	r3, [r3, #12]
 8005338:	78fa      	ldrb	r2, [r7, #3]
 800533a:	0151      	lsls	r1, r2, #5
 800533c:	693a      	ldr	r2, [r7, #16]
 800533e:	440a      	add	r2, r1
 8005340:	f502 62a0 	add.w	r2, r2, #1280	@ 0x500
 8005344:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8005348:	60d3      	str	r3, [r2, #12]
 800534a:	78fb      	ldrb	r3, [r7, #3]
 800534c:	015a      	lsls	r2, r3, #5
 800534e:	693b      	ldr	r3, [r7, #16]
 8005350:	4413      	add	r3, r2
 8005352:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8005356:	68db      	ldr	r3, [r3, #12]
 8005358:	78fa      	ldrb	r2, [r7, #3]
 800535a:	0151      	lsls	r1, r2, #5
 800535c:	693a      	ldr	r2, [r7, #16]
 800535e:	440a      	add	r2, r1
 8005360:	f502 62a0 	add.w	r2, r2, #1280	@ 0x500
 8005364:	f023 0320 	bic.w	r3, r3, #32
 8005368:	60d3      	str	r3, [r2, #12]
 800536a:	78fa      	ldrb	r2, [r7, #3]
 800536c:	6879      	ldr	r1, [r7, #4]
 800536e:	4613      	mov	r3, r2
 8005370:	011b      	lsls	r3, r3, #4
 8005372:	1a9b      	subs	r3, r3, r2
 8005374:	009b      	lsls	r3, r3, #2
 8005376:	440b      	add	r3, r1
 8005378:	3326      	adds	r3, #38	@ 0x26
 800537a:	781b      	ldrb	r3, [r3, #0]
 800537c:	2b00      	cmp	r3, #0
 800537e:	d00b      	beq.n	8005398 <HCD_HC_IN_IRQHandler+0x97c>
 8005380:	78fa      	ldrb	r2, [r7, #3]
 8005382:	6879      	ldr	r1, [r7, #4]
 8005384:	4613      	mov	r3, r2
 8005386:	011b      	lsls	r3, r3, #4
 8005388:	1a9b      	subs	r3, r3, r2
 800538a:	009b      	lsls	r3, r3, #2
 800538c:	440b      	add	r3, r1
 800538e:	3326      	adds	r3, #38	@ 0x26
 8005390:	781b      	ldrb	r3, [r3, #0]
 8005392:	2b02      	cmp	r3, #2
 8005394:	f040 80a9 	bne.w	80054ea <HCD_HC_IN_IRQHandler+0xace>
 8005398:	78fb      	ldrb	r3, [r7, #3]
 800539a:	015a      	lsls	r2, r3, #5
 800539c:	693b      	ldr	r3, [r7, #16]
 800539e:	4413      	add	r3, r2
 80053a0:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 80053a4:	681b      	ldr	r3, [r3, #0]
 80053a6:	60fb      	str	r3, [r7, #12]
 80053a8:	68fb      	ldr	r3, [r7, #12]
 80053aa:	f023 4380 	bic.w	r3, r3, #1073741824	@ 0x40000000
 80053ae:	60fb      	str	r3, [r7, #12]
 80053b0:	68fb      	ldr	r3, [r7, #12]
 80053b2:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 80053b6:	60fb      	str	r3, [r7, #12]
 80053b8:	78fb      	ldrb	r3, [r7, #3]
 80053ba:	015a      	lsls	r2, r3, #5
 80053bc:	693b      	ldr	r3, [r7, #16]
 80053be:	4413      	add	r3, r2
 80053c0:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 80053c4:	461a      	mov	r2, r3
 80053c6:	68fb      	ldr	r3, [r7, #12]
 80053c8:	6013      	str	r3, [r2, #0]
 80053ca:	e08e      	b.n	80054ea <HCD_HC_IN_IRQHandler+0xace>
 80053cc:	78fa      	ldrb	r2, [r7, #3]
 80053ce:	6879      	ldr	r1, [r7, #4]
 80053d0:	4613      	mov	r3, r2
 80053d2:	011b      	lsls	r3, r3, #4
 80053d4:	1a9b      	subs	r3, r3, r2
 80053d6:	009b      	lsls	r3, r3, #2
 80053d8:	440b      	add	r3, r1
 80053da:	334d      	adds	r3, #77	@ 0x4d
 80053dc:	781b      	ldrb	r3, [r3, #0]
 80053de:	2b04      	cmp	r3, #4
 80053e0:	d143      	bne.n	800546a <HCD_HC_IN_IRQHandler+0xa4e>
 80053e2:	78fa      	ldrb	r2, [r7, #3]
 80053e4:	6879      	ldr	r1, [r7, #4]
 80053e6:	4613      	mov	r3, r2
 80053e8:	011b      	lsls	r3, r3, #4
 80053ea:	1a9b      	subs	r3, r3, r2
 80053ec:	009b      	lsls	r3, r3, #2
 80053ee:	440b      	add	r3, r1
 80053f0:	334d      	adds	r3, #77	@ 0x4d
 80053f2:	2202      	movs	r2, #2
 80053f4:	701a      	strb	r2, [r3, #0]
 80053f6:	78fa      	ldrb	r2, [r7, #3]
 80053f8:	6879      	ldr	r1, [r7, #4]
 80053fa:	4613      	mov	r3, r2
 80053fc:	011b      	lsls	r3, r3, #4
 80053fe:	1a9b      	subs	r3, r3, r2
 8005400:	009b      	lsls	r3, r3, #2
 8005402:	440b      	add	r3, r1
 8005404:	334c      	adds	r3, #76	@ 0x4c
 8005406:	2202      	movs	r2, #2
 8005408:	701a      	strb	r2, [r3, #0]
 800540a:	78fa      	ldrb	r2, [r7, #3]
 800540c:	6879      	ldr	r1, [r7, #4]
 800540e:	4613      	mov	r3, r2
 8005410:	011b      	lsls	r3, r3, #4
 8005412:	1a9b      	subs	r3, r3, r2
 8005414:	009b      	lsls	r3, r3, #2
 8005416:	440b      	add	r3, r1
 8005418:	3326      	adds	r3, #38	@ 0x26
 800541a:	781b      	ldrb	r3, [r3, #0]
 800541c:	2b00      	cmp	r3, #0
 800541e:	d00a      	beq.n	8005436 <HCD_HC_IN_IRQHandler+0xa1a>
 8005420:	78fa      	ldrb	r2, [r7, #3]
 8005422:	6879      	ldr	r1, [r7, #4]
 8005424:	4613      	mov	r3, r2
 8005426:	011b      	lsls	r3, r3, #4
 8005428:	1a9b      	subs	r3, r3, r2
 800542a:	009b      	lsls	r3, r3, #2
 800542c:	440b      	add	r3, r1
 800542e:	3326      	adds	r3, #38	@ 0x26
 8005430:	781b      	ldrb	r3, [r3, #0]
 8005432:	2b02      	cmp	r3, #2
 8005434:	d159      	bne.n	80054ea <HCD_HC_IN_IRQHandler+0xace>
 8005436:	78fb      	ldrb	r3, [r7, #3]
 8005438:	015a      	lsls	r2, r3, #5
 800543a:	693b      	ldr	r3, [r7, #16]
 800543c:	4413      	add	r3, r2
 800543e:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8005442:	681b      	ldr	r3, [r3, #0]
 8005444:	60fb      	str	r3, [r7, #12]
 8005446:	68fb      	ldr	r3, [r7, #12]
 8005448:	f023 4380 	bic.w	r3, r3, #1073741824	@ 0x40000000
 800544c:	60fb      	str	r3, [r7, #12]
 800544e:	68fb      	ldr	r3, [r7, #12]
 8005450:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8005454:	60fb      	str	r3, [r7, #12]
 8005456:	78fb      	ldrb	r3, [r7, #3]
 8005458:	015a      	lsls	r2, r3, #5
 800545a:	693b      	ldr	r3, [r7, #16]
 800545c:	4413      	add	r3, r2
 800545e:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8005462:	461a      	mov	r2, r3
 8005464:	68fb      	ldr	r3, [r7, #12]
 8005466:	6013      	str	r3, [r2, #0]
 8005468:	e03f      	b.n	80054ea <HCD_HC_IN_IRQHandler+0xace>
 800546a:	78fa      	ldrb	r2, [r7, #3]
 800546c:	6879      	ldr	r1, [r7, #4]
 800546e:	4613      	mov	r3, r2
 8005470:	011b      	lsls	r3, r3, #4
 8005472:	1a9b      	subs	r3, r3, r2
 8005474:	009b      	lsls	r3, r3, #2
 8005476:	440b      	add	r3, r1
 8005478:	334d      	adds	r3, #77	@ 0x4d
 800547a:	781b      	ldrb	r3, [r3, #0]
 800547c:	2b08      	cmp	r3, #8
 800547e:	d126      	bne.n	80054ce <HCD_HC_IN_IRQHandler+0xab2>
 8005480:	78fa      	ldrb	r2, [r7, #3]
 8005482:	6879      	ldr	r1, [r7, #4]
 8005484:	4613      	mov	r3, r2
 8005486:	011b      	lsls	r3, r3, #4
 8005488:	1a9b      	subs	r3, r3, r2
 800548a:	009b      	lsls	r3, r3, #2
 800548c:	440b      	add	r3, r1
 800548e:	334d      	adds	r3, #77	@ 0x4d
 8005490:	2202      	movs	r2, #2
 8005492:	701a      	strb	r2, [r3, #0]
 8005494:	78fa      	ldrb	r2, [r7, #3]
 8005496:	6879      	ldr	r1, [r7, #4]
 8005498:	4613      	mov	r3, r2
 800549a:	011b      	lsls	r3, r3, #4
 800549c:	1a9b      	subs	r3, r3, r2
 800549e:	009b      	lsls	r3, r3, #2
 80054a0:	440b      	add	r3, r1
 80054a2:	3344      	adds	r3, #68	@ 0x44
 80054a4:	681b      	ldr	r3, [r3, #0]
 80054a6:	1c59      	adds	r1, r3, #1
 80054a8:	6878      	ldr	r0, [r7, #4]
 80054aa:	4613      	mov	r3, r2
 80054ac:	011b      	lsls	r3, r3, #4
 80054ae:	1a9b      	subs	r3, r3, r2
 80054b0:	009b      	lsls	r3, r3, #2
 80054b2:	4403      	add	r3, r0
 80054b4:	3344      	adds	r3, #68	@ 0x44
 80054b6:	6019      	str	r1, [r3, #0]
 80054b8:	78fa      	ldrb	r2, [r7, #3]
 80054ba:	6879      	ldr	r1, [r7, #4]
 80054bc:	4613      	mov	r3, r2
 80054be:	011b      	lsls	r3, r3, #4
 80054c0:	1a9b      	subs	r3, r3, r2
 80054c2:	009b      	lsls	r3, r3, #2
 80054c4:	440b      	add	r3, r1
 80054c6:	334c      	adds	r3, #76	@ 0x4c
 80054c8:	2204      	movs	r2, #4
 80054ca:	701a      	strb	r2, [r3, #0]
 80054cc:	e00d      	b.n	80054ea <HCD_HC_IN_IRQHandler+0xace>
 80054ce:	78fa      	ldrb	r2, [r7, #3]
 80054d0:	6879      	ldr	r1, [r7, #4]
 80054d2:	4613      	mov	r3, r2
 80054d4:	011b      	lsls	r3, r3, #4
 80054d6:	1a9b      	subs	r3, r3, r2
 80054d8:	009b      	lsls	r3, r3, #2
 80054da:	440b      	add	r3, r1
 80054dc:	334d      	adds	r3, #77	@ 0x4d
 80054de:	781b      	ldrb	r3, [r3, #0]
 80054e0:	2b02      	cmp	r3, #2
 80054e2:	f000 8100 	beq.w	80056e6 <HCD_HC_IN_IRQHandler+0xcca>
 80054e6:	e000      	b.n	80054ea <HCD_HC_IN_IRQHandler+0xace>
 80054e8:	bf00      	nop
 80054ea:	78fa      	ldrb	r2, [r7, #3]
 80054ec:	6879      	ldr	r1, [r7, #4]
 80054ee:	4613      	mov	r3, r2
 80054f0:	011b      	lsls	r3, r3, #4
 80054f2:	1a9b      	subs	r3, r3, r2
 80054f4:	009b      	lsls	r3, r3, #2
 80054f6:	440b      	add	r3, r1
 80054f8:	334c      	adds	r3, #76	@ 0x4c
 80054fa:	781a      	ldrb	r2, [r3, #0]
 80054fc:	78fb      	ldrb	r3, [r7, #3]
 80054fe:	4619      	mov	r1, r3
 8005500:	6878      	ldr	r0, [r7, #4]
 8005502:	f005 ffc7 	bl	800b494 <HAL_HCD_HC_NotifyURBChange_Callback>
 8005506:	e0ef      	b.n	80056e8 <HCD_HC_IN_IRQHandler+0xccc>
 8005508:	687b      	ldr	r3, [r7, #4]
 800550a:	681b      	ldr	r3, [r3, #0]
 800550c:	78fa      	ldrb	r2, [r7, #3]
 800550e:	4611      	mov	r1, r2
 8005510:	4618      	mov	r0, r3
 8005512:	f004 fc32 	bl	8009d7a <USB_ReadChInterrupts>
 8005516:	4603      	mov	r3, r0
 8005518:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800551c:	2b40      	cmp	r3, #64	@ 0x40
 800551e:	d12f      	bne.n	8005580 <HCD_HC_IN_IRQHandler+0xb64>
 8005520:	78fb      	ldrb	r3, [r7, #3]
 8005522:	015a      	lsls	r2, r3, #5
 8005524:	693b      	ldr	r3, [r7, #16]
 8005526:	4413      	add	r3, r2
 8005528:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 800552c:	461a      	mov	r2, r3
 800552e:	2340      	movs	r3, #64	@ 0x40
 8005530:	6093      	str	r3, [r2, #8]
 8005532:	78fa      	ldrb	r2, [r7, #3]
 8005534:	6879      	ldr	r1, [r7, #4]
 8005536:	4613      	mov	r3, r2
 8005538:	011b      	lsls	r3, r3, #4
 800553a:	1a9b      	subs	r3, r3, r2
 800553c:	009b      	lsls	r3, r3, #2
 800553e:	440b      	add	r3, r1
 8005540:	334d      	adds	r3, #77	@ 0x4d
 8005542:	2205      	movs	r2, #5
 8005544:	701a      	strb	r2, [r3, #0]
 8005546:	78fa      	ldrb	r2, [r7, #3]
 8005548:	6879      	ldr	r1, [r7, #4]
 800554a:	4613      	mov	r3, r2
 800554c:	011b      	lsls	r3, r3, #4
 800554e:	1a9b      	subs	r3, r3, r2
 8005550:	009b      	lsls	r3, r3, #2
 8005552:	440b      	add	r3, r1
 8005554:	331a      	adds	r3, #26
 8005556:	781b      	ldrb	r3, [r3, #0]
 8005558:	2b00      	cmp	r3, #0
 800555a:	d109      	bne.n	8005570 <HCD_HC_IN_IRQHandler+0xb54>
 800555c:	78fa      	ldrb	r2, [r7, #3]
 800555e:	6879      	ldr	r1, [r7, #4]
 8005560:	4613      	mov	r3, r2
 8005562:	011b      	lsls	r3, r3, #4
 8005564:	1a9b      	subs	r3, r3, r2
 8005566:	009b      	lsls	r3, r3, #2
 8005568:	440b      	add	r3, r1
 800556a:	3344      	adds	r3, #68	@ 0x44
 800556c:	2200      	movs	r2, #0
 800556e:	601a      	str	r2, [r3, #0]
 8005570:	687b      	ldr	r3, [r7, #4]
 8005572:	681b      	ldr	r3, [r3, #0]
 8005574:	78fa      	ldrb	r2, [r7, #3]
 8005576:	4611      	mov	r1, r2
 8005578:	4618      	mov	r0, r3
 800557a:	f004 fc7b 	bl	8009e74 <USB_HC_Halt>
 800557e:	e0b3      	b.n	80056e8 <HCD_HC_IN_IRQHandler+0xccc>
 8005580:	687b      	ldr	r3, [r7, #4]
 8005582:	681b      	ldr	r3, [r3, #0]
 8005584:	78fa      	ldrb	r2, [r7, #3]
 8005586:	4611      	mov	r1, r2
 8005588:	4618      	mov	r0, r3
 800558a:	f004 fbf6 	bl	8009d7a <USB_ReadChInterrupts>
 800558e:	4603      	mov	r3, r0
 8005590:	f003 0310 	and.w	r3, r3, #16
 8005594:	2b10      	cmp	r3, #16
 8005596:	f040 80a7 	bne.w	80056e8 <HCD_HC_IN_IRQHandler+0xccc>
 800559a:	78fa      	ldrb	r2, [r7, #3]
 800559c:	6879      	ldr	r1, [r7, #4]
 800559e:	4613      	mov	r3, r2
 80055a0:	011b      	lsls	r3, r3, #4
 80055a2:	1a9b      	subs	r3, r3, r2
 80055a4:	009b      	lsls	r3, r3, #2
 80055a6:	440b      	add	r3, r1
 80055a8:	3326      	adds	r3, #38	@ 0x26
 80055aa:	781b      	ldrb	r3, [r3, #0]
 80055ac:	2b03      	cmp	r3, #3
 80055ae:	d11b      	bne.n	80055e8 <HCD_HC_IN_IRQHandler+0xbcc>
 80055b0:	78fa      	ldrb	r2, [r7, #3]
 80055b2:	6879      	ldr	r1, [r7, #4]
 80055b4:	4613      	mov	r3, r2
 80055b6:	011b      	lsls	r3, r3, #4
 80055b8:	1a9b      	subs	r3, r3, r2
 80055ba:	009b      	lsls	r3, r3, #2
 80055bc:	440b      	add	r3, r1
 80055be:	3344      	adds	r3, #68	@ 0x44
 80055c0:	2200      	movs	r2, #0
 80055c2:	601a      	str	r2, [r3, #0]
 80055c4:	78fa      	ldrb	r2, [r7, #3]
 80055c6:	6879      	ldr	r1, [r7, #4]
 80055c8:	4613      	mov	r3, r2
 80055ca:	011b      	lsls	r3, r3, #4
 80055cc:	1a9b      	subs	r3, r3, r2
 80055ce:	009b      	lsls	r3, r3, #2
 80055d0:	440b      	add	r3, r1
 80055d2:	334d      	adds	r3, #77	@ 0x4d
 80055d4:	2204      	movs	r2, #4
 80055d6:	701a      	strb	r2, [r3, #0]
 80055d8:	687b      	ldr	r3, [r7, #4]
 80055da:	681b      	ldr	r3, [r3, #0]
 80055dc:	78fa      	ldrb	r2, [r7, #3]
 80055de:	4611      	mov	r1, r2
 80055e0:	4618      	mov	r0, r3
 80055e2:	f004 fc47 	bl	8009e74 <USB_HC_Halt>
 80055e6:	e03f      	b.n	8005668 <HCD_HC_IN_IRQHandler+0xc4c>
 80055e8:	78fa      	ldrb	r2, [r7, #3]
 80055ea:	6879      	ldr	r1, [r7, #4]
 80055ec:	4613      	mov	r3, r2
 80055ee:	011b      	lsls	r3, r3, #4
 80055f0:	1a9b      	subs	r3, r3, r2
 80055f2:	009b      	lsls	r3, r3, #2
 80055f4:	440b      	add	r3, r1
 80055f6:	3326      	adds	r3, #38	@ 0x26
 80055f8:	781b      	ldrb	r3, [r3, #0]
 80055fa:	2b00      	cmp	r3, #0
 80055fc:	d00a      	beq.n	8005614 <HCD_HC_IN_IRQHandler+0xbf8>
 80055fe:	78fa      	ldrb	r2, [r7, #3]
 8005600:	6879      	ldr	r1, [r7, #4]
 8005602:	4613      	mov	r3, r2
 8005604:	011b      	lsls	r3, r3, #4
 8005606:	1a9b      	subs	r3, r3, r2
 8005608:	009b      	lsls	r3, r3, #2
 800560a:	440b      	add	r3, r1
 800560c:	3326      	adds	r3, #38	@ 0x26
 800560e:	781b      	ldrb	r3, [r3, #0]
 8005610:	2b02      	cmp	r3, #2
 8005612:	d129      	bne.n	8005668 <HCD_HC_IN_IRQHandler+0xc4c>
 8005614:	78fa      	ldrb	r2, [r7, #3]
 8005616:	6879      	ldr	r1, [r7, #4]
 8005618:	4613      	mov	r3, r2
 800561a:	011b      	lsls	r3, r3, #4
 800561c:	1a9b      	subs	r3, r3, r2
 800561e:	009b      	lsls	r3, r3, #2
 8005620:	440b      	add	r3, r1
 8005622:	3344      	adds	r3, #68	@ 0x44
 8005624:	2200      	movs	r2, #0
 8005626:	601a      	str	r2, [r3, #0]
 8005628:	687b      	ldr	r3, [r7, #4]
 800562a:	799b      	ldrb	r3, [r3, #6]
 800562c:	2b00      	cmp	r3, #0
 800562e:	d00a      	beq.n	8005646 <HCD_HC_IN_IRQHandler+0xc2a>
 8005630:	78fa      	ldrb	r2, [r7, #3]
 8005632:	6879      	ldr	r1, [r7, #4]
 8005634:	4613      	mov	r3, r2
 8005636:	011b      	lsls	r3, r3, #4
 8005638:	1a9b      	subs	r3, r3, r2
 800563a:	009b      	lsls	r3, r3, #2
 800563c:	440b      	add	r3, r1
 800563e:	331b      	adds	r3, #27
 8005640:	781b      	ldrb	r3, [r3, #0]
 8005642:	2b01      	cmp	r3, #1
 8005644:	d110      	bne.n	8005668 <HCD_HC_IN_IRQHandler+0xc4c>
 8005646:	78fa      	ldrb	r2, [r7, #3]
 8005648:	6879      	ldr	r1, [r7, #4]
 800564a:	4613      	mov	r3, r2
 800564c:	011b      	lsls	r3, r3, #4
 800564e:	1a9b      	subs	r3, r3, r2
 8005650:	009b      	lsls	r3, r3, #2
 8005652:	440b      	add	r3, r1
 8005654:	334d      	adds	r3, #77	@ 0x4d
 8005656:	2204      	movs	r2, #4
 8005658:	701a      	strb	r2, [r3, #0]
 800565a:	687b      	ldr	r3, [r7, #4]
 800565c:	681b      	ldr	r3, [r3, #0]
 800565e:	78fa      	ldrb	r2, [r7, #3]
 8005660:	4611      	mov	r1, r2
 8005662:	4618      	mov	r0, r3
 8005664:	f004 fc06 	bl	8009e74 <USB_HC_Halt>
 8005668:	78fa      	ldrb	r2, [r7, #3]
 800566a:	6879      	ldr	r1, [r7, #4]
 800566c:	4613      	mov	r3, r2
 800566e:	011b      	lsls	r3, r3, #4
 8005670:	1a9b      	subs	r3, r3, r2
 8005672:	009b      	lsls	r3, r3, #2
 8005674:	440b      	add	r3, r1
 8005676:	331b      	adds	r3, #27
 8005678:	781b      	ldrb	r3, [r3, #0]
 800567a:	2b01      	cmp	r3, #1
 800567c:	d129      	bne.n	80056d2 <HCD_HC_IN_IRQHandler+0xcb6>
 800567e:	78fa      	ldrb	r2, [r7, #3]
 8005680:	6879      	ldr	r1, [r7, #4]
 8005682:	4613      	mov	r3, r2
 8005684:	011b      	lsls	r3, r3, #4
 8005686:	1a9b      	subs	r3, r3, r2
 8005688:	009b      	lsls	r3, r3, #2
 800568a:	440b      	add	r3, r1
 800568c:	331b      	adds	r3, #27
 800568e:	2200      	movs	r2, #0
 8005690:	701a      	strb	r2, [r3, #0]
 8005692:	78fb      	ldrb	r3, [r7, #3]
 8005694:	015a      	lsls	r2, r3, #5
 8005696:	693b      	ldr	r3, [r7, #16]
 8005698:	4413      	add	r3, r2
 800569a:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 800569e:	685b      	ldr	r3, [r3, #4]
 80056a0:	78fa      	ldrb	r2, [r7, #3]
 80056a2:	0151      	lsls	r1, r2, #5
 80056a4:	693a      	ldr	r2, [r7, #16]
 80056a6:	440a      	add	r2, r1
 80056a8:	f502 62a0 	add.w	r2, r2, #1280	@ 0x500
 80056ac:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 80056b0:	6053      	str	r3, [r2, #4]
 80056b2:	78fb      	ldrb	r3, [r7, #3]
 80056b4:	015a      	lsls	r2, r3, #5
 80056b6:	693b      	ldr	r3, [r7, #16]
 80056b8:	4413      	add	r3, r2
 80056ba:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 80056be:	68db      	ldr	r3, [r3, #12]
 80056c0:	78fa      	ldrb	r2, [r7, #3]
 80056c2:	0151      	lsls	r1, r2, #5
 80056c4:	693a      	ldr	r2, [r7, #16]
 80056c6:	440a      	add	r2, r1
 80056c8:	f502 62a0 	add.w	r2, r2, #1280	@ 0x500
 80056cc:	f043 0320 	orr.w	r3, r3, #32
 80056d0:	60d3      	str	r3, [r2, #12]
 80056d2:	78fb      	ldrb	r3, [r7, #3]
 80056d4:	015a      	lsls	r2, r3, #5
 80056d6:	693b      	ldr	r3, [r7, #16]
 80056d8:	4413      	add	r3, r2
 80056da:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 80056de:	461a      	mov	r2, r3
 80056e0:	2310      	movs	r3, #16
 80056e2:	6093      	str	r3, [r2, #8]
 80056e4:	e000      	b.n	80056e8 <HCD_HC_IN_IRQHandler+0xccc>
 80056e6:	bf00      	nop
 80056e8:	3718      	adds	r7, #24
 80056ea:	46bd      	mov	sp, r7
 80056ec:	bd80      	pop	{r7, pc}

080056ee <HCD_HC_OUT_IRQHandler>:
 80056ee:	b580      	push	{r7, lr}
 80056f0:	b086      	sub	sp, #24
 80056f2:	af00      	add	r7, sp, #0
 80056f4:	6078      	str	r0, [r7, #4]
 80056f6:	460b      	mov	r3, r1
 80056f8:	70fb      	strb	r3, [r7, #3]
 80056fa:	687b      	ldr	r3, [r7, #4]
 80056fc:	681b      	ldr	r3, [r3, #0]
 80056fe:	617b      	str	r3, [r7, #20]
 8005700:	697b      	ldr	r3, [r7, #20]
 8005702:	613b      	str	r3, [r7, #16]
 8005704:	687b      	ldr	r3, [r7, #4]
 8005706:	681b      	ldr	r3, [r3, #0]
 8005708:	78fa      	ldrb	r2, [r7, #3]
 800570a:	4611      	mov	r1, r2
 800570c:	4618      	mov	r0, r3
 800570e:	f004 fb34 	bl	8009d7a <USB_ReadChInterrupts>
 8005712:	4603      	mov	r3, r0
 8005714:	f003 0304 	and.w	r3, r3, #4
 8005718:	2b04      	cmp	r3, #4
 800571a:	d11b      	bne.n	8005754 <HCD_HC_OUT_IRQHandler+0x66>
 800571c:	78fb      	ldrb	r3, [r7, #3]
 800571e:	015a      	lsls	r2, r3, #5
 8005720:	693b      	ldr	r3, [r7, #16]
 8005722:	4413      	add	r3, r2
 8005724:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8005728:	461a      	mov	r2, r3
 800572a:	2304      	movs	r3, #4
 800572c:	6093      	str	r3, [r2, #8]
 800572e:	78fa      	ldrb	r2, [r7, #3]
 8005730:	6879      	ldr	r1, [r7, #4]
 8005732:	4613      	mov	r3, r2
 8005734:	011b      	lsls	r3, r3, #4
 8005736:	1a9b      	subs	r3, r3, r2
 8005738:	009b      	lsls	r3, r3, #2
 800573a:	440b      	add	r3, r1
 800573c:	334d      	adds	r3, #77	@ 0x4d
 800573e:	2207      	movs	r2, #7
 8005740:	701a      	strb	r2, [r3, #0]
 8005742:	687b      	ldr	r3, [r7, #4]
 8005744:	681b      	ldr	r3, [r3, #0]
 8005746:	78fa      	ldrb	r2, [r7, #3]
 8005748:	4611      	mov	r1, r2
 800574a:	4618      	mov	r0, r3
 800574c:	f004 fb92 	bl	8009e74 <USB_HC_Halt>
 8005750:	f000 bc89 	b.w	8006066 <HCD_HC_OUT_IRQHandler+0x978>
 8005754:	687b      	ldr	r3, [r7, #4]
 8005756:	681b      	ldr	r3, [r3, #0]
 8005758:	78fa      	ldrb	r2, [r7, #3]
 800575a:	4611      	mov	r1, r2
 800575c:	4618      	mov	r0, r3
 800575e:	f004 fb0c 	bl	8009d7a <USB_ReadChInterrupts>
 8005762:	4603      	mov	r3, r0
 8005764:	f003 0320 	and.w	r3, r3, #32
 8005768:	2b20      	cmp	r3, #32
 800576a:	f040 8082 	bne.w	8005872 <HCD_HC_OUT_IRQHandler+0x184>
 800576e:	78fb      	ldrb	r3, [r7, #3]
 8005770:	015a      	lsls	r2, r3, #5
 8005772:	693b      	ldr	r3, [r7, #16]
 8005774:	4413      	add	r3, r2
 8005776:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 800577a:	461a      	mov	r2, r3
 800577c:	2320      	movs	r3, #32
 800577e:	6093      	str	r3, [r2, #8]
 8005780:	78fa      	ldrb	r2, [r7, #3]
 8005782:	6879      	ldr	r1, [r7, #4]
 8005784:	4613      	mov	r3, r2
 8005786:	011b      	lsls	r3, r3, #4
 8005788:	1a9b      	subs	r3, r3, r2
 800578a:	009b      	lsls	r3, r3, #2
 800578c:	440b      	add	r3, r1
 800578e:	3319      	adds	r3, #25
 8005790:	781b      	ldrb	r3, [r3, #0]
 8005792:	2b01      	cmp	r3, #1
 8005794:	d124      	bne.n	80057e0 <HCD_HC_OUT_IRQHandler+0xf2>
 8005796:	78fa      	ldrb	r2, [r7, #3]
 8005798:	6879      	ldr	r1, [r7, #4]
 800579a:	4613      	mov	r3, r2
 800579c:	011b      	lsls	r3, r3, #4
 800579e:	1a9b      	subs	r3, r3, r2
 80057a0:	009b      	lsls	r3, r3, #2
 80057a2:	440b      	add	r3, r1
 80057a4:	3319      	adds	r3, #25
 80057a6:	2200      	movs	r2, #0
 80057a8:	701a      	strb	r2, [r3, #0]
 80057aa:	78fa      	ldrb	r2, [r7, #3]
 80057ac:	6879      	ldr	r1, [r7, #4]
 80057ae:	4613      	mov	r3, r2
 80057b0:	011b      	lsls	r3, r3, #4
 80057b2:	1a9b      	subs	r3, r3, r2
 80057b4:	009b      	lsls	r3, r3, #2
 80057b6:	440b      	add	r3, r1
 80057b8:	334c      	adds	r3, #76	@ 0x4c
 80057ba:	2202      	movs	r2, #2
 80057bc:	701a      	strb	r2, [r3, #0]
 80057be:	78fa      	ldrb	r2, [r7, #3]
 80057c0:	6879      	ldr	r1, [r7, #4]
 80057c2:	4613      	mov	r3, r2
 80057c4:	011b      	lsls	r3, r3, #4
 80057c6:	1a9b      	subs	r3, r3, r2
 80057c8:	009b      	lsls	r3, r3, #2
 80057ca:	440b      	add	r3, r1
 80057cc:	334d      	adds	r3, #77	@ 0x4d
 80057ce:	2203      	movs	r2, #3
 80057d0:	701a      	strb	r2, [r3, #0]
 80057d2:	687b      	ldr	r3, [r7, #4]
 80057d4:	681b      	ldr	r3, [r3, #0]
 80057d6:	78fa      	ldrb	r2, [r7, #3]
 80057d8:	4611      	mov	r1, r2
 80057da:	4618      	mov	r0, r3
 80057dc:	f004 fb4a 	bl	8009e74 <USB_HC_Halt>
 80057e0:	78fa      	ldrb	r2, [r7, #3]
 80057e2:	6879      	ldr	r1, [r7, #4]
 80057e4:	4613      	mov	r3, r2
 80057e6:	011b      	lsls	r3, r3, #4
 80057e8:	1a9b      	subs	r3, r3, r2
 80057ea:	009b      	lsls	r3, r3, #2
 80057ec:	440b      	add	r3, r1
 80057ee:	331a      	adds	r3, #26
 80057f0:	781b      	ldrb	r3, [r3, #0]
 80057f2:	2b01      	cmp	r3, #1
 80057f4:	f040 8437 	bne.w	8006066 <HCD_HC_OUT_IRQHandler+0x978>
 80057f8:	78fa      	ldrb	r2, [r7, #3]
 80057fa:	6879      	ldr	r1, [r7, #4]
 80057fc:	4613      	mov	r3, r2
 80057fe:	011b      	lsls	r3, r3, #4
 8005800:	1a9b      	subs	r3, r3, r2
 8005802:	009b      	lsls	r3, r3, #2
 8005804:	440b      	add	r3, r1
 8005806:	331b      	adds	r3, #27
 8005808:	781b      	ldrb	r3, [r3, #0]
 800580a:	2b00      	cmp	r3, #0
 800580c:	f040 842b 	bne.w	8006066 <HCD_HC_OUT_IRQHandler+0x978>
 8005810:	78fa      	ldrb	r2, [r7, #3]
 8005812:	6879      	ldr	r1, [r7, #4]
 8005814:	4613      	mov	r3, r2
 8005816:	011b      	lsls	r3, r3, #4
 8005818:	1a9b      	subs	r3, r3, r2
 800581a:	009b      	lsls	r3, r3, #2
 800581c:	440b      	add	r3, r1
 800581e:	3326      	adds	r3, #38	@ 0x26
 8005820:	781b      	ldrb	r3, [r3, #0]
 8005822:	2b01      	cmp	r3, #1
 8005824:	d009      	beq.n	800583a <HCD_HC_OUT_IRQHandler+0x14c>
 8005826:	78fa      	ldrb	r2, [r7, #3]
 8005828:	6879      	ldr	r1, [r7, #4]
 800582a:	4613      	mov	r3, r2
 800582c:	011b      	lsls	r3, r3, #4
 800582e:	1a9b      	subs	r3, r3, r2
 8005830:	009b      	lsls	r3, r3, #2
 8005832:	440b      	add	r3, r1
 8005834:	331b      	adds	r3, #27
 8005836:	2201      	movs	r2, #1
 8005838:	701a      	strb	r2, [r3, #0]
 800583a:	78fa      	ldrb	r2, [r7, #3]
 800583c:	6879      	ldr	r1, [r7, #4]
 800583e:	4613      	mov	r3, r2
 8005840:	011b      	lsls	r3, r3, #4
 8005842:	1a9b      	subs	r3, r3, r2
 8005844:	009b      	lsls	r3, r3, #2
 8005846:	440b      	add	r3, r1
 8005848:	334d      	adds	r3, #77	@ 0x4d
 800584a:	2203      	movs	r2, #3
 800584c:	701a      	strb	r2, [r3, #0]
 800584e:	687b      	ldr	r3, [r7, #4]
 8005850:	681b      	ldr	r3, [r3, #0]
 8005852:	78fa      	ldrb	r2, [r7, #3]
 8005854:	4611      	mov	r1, r2
 8005856:	4618      	mov	r0, r3
 8005858:	f004 fb0c 	bl	8009e74 <USB_HC_Halt>
 800585c:	78fa      	ldrb	r2, [r7, #3]
 800585e:	6879      	ldr	r1, [r7, #4]
 8005860:	4613      	mov	r3, r2
 8005862:	011b      	lsls	r3, r3, #4
 8005864:	1a9b      	subs	r3, r3, r2
 8005866:	009b      	lsls	r3, r3, #2
 8005868:	440b      	add	r3, r1
 800586a:	3344      	adds	r3, #68	@ 0x44
 800586c:	2200      	movs	r2, #0
 800586e:	601a      	str	r2, [r3, #0]
 8005870:	e3f9      	b.n	8006066 <HCD_HC_OUT_IRQHandler+0x978>
 8005872:	687b      	ldr	r3, [r7, #4]
 8005874:	681b      	ldr	r3, [r3, #0]
 8005876:	78fa      	ldrb	r2, [r7, #3]
 8005878:	4611      	mov	r1, r2
 800587a:	4618      	mov	r0, r3
 800587c:	f004 fa7d 	bl	8009d7a <USB_ReadChInterrupts>
 8005880:	4603      	mov	r3, r0
 8005882:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8005886:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800588a:	d111      	bne.n	80058b0 <HCD_HC_OUT_IRQHandler+0x1c2>
 800588c:	78fb      	ldrb	r3, [r7, #3]
 800588e:	015a      	lsls	r2, r3, #5
 8005890:	693b      	ldr	r3, [r7, #16]
 8005892:	4413      	add	r3, r2
 8005894:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8005898:	461a      	mov	r2, r3
 800589a:	f44f 7300 	mov.w	r3, #512	@ 0x200
 800589e:	6093      	str	r3, [r2, #8]
 80058a0:	687b      	ldr	r3, [r7, #4]
 80058a2:	681b      	ldr	r3, [r3, #0]
 80058a4:	78fa      	ldrb	r2, [r7, #3]
 80058a6:	4611      	mov	r1, r2
 80058a8:	4618      	mov	r0, r3
 80058aa:	f004 fae3 	bl	8009e74 <USB_HC_Halt>
 80058ae:	e3da      	b.n	8006066 <HCD_HC_OUT_IRQHandler+0x978>
 80058b0:	687b      	ldr	r3, [r7, #4]
 80058b2:	681b      	ldr	r3, [r3, #0]
 80058b4:	78fa      	ldrb	r2, [r7, #3]
 80058b6:	4611      	mov	r1, r2
 80058b8:	4618      	mov	r0, r3
 80058ba:	f004 fa5e 	bl	8009d7a <USB_ReadChInterrupts>
 80058be:	4603      	mov	r3, r0
 80058c0:	f003 0301 	and.w	r3, r3, #1
 80058c4:	2b01      	cmp	r3, #1
 80058c6:	d168      	bne.n	800599a <HCD_HC_OUT_IRQHandler+0x2ac>
 80058c8:	78fa      	ldrb	r2, [r7, #3]
 80058ca:	6879      	ldr	r1, [r7, #4]
 80058cc:	4613      	mov	r3, r2
 80058ce:	011b      	lsls	r3, r3, #4
 80058d0:	1a9b      	subs	r3, r3, r2
 80058d2:	009b      	lsls	r3, r3, #2
 80058d4:	440b      	add	r3, r1
 80058d6:	3344      	adds	r3, #68	@ 0x44
 80058d8:	2200      	movs	r2, #0
 80058da:	601a      	str	r2, [r3, #0]
 80058dc:	687b      	ldr	r3, [r7, #4]
 80058de:	681b      	ldr	r3, [r3, #0]
 80058e0:	78fa      	ldrb	r2, [r7, #3]
 80058e2:	4611      	mov	r1, r2
 80058e4:	4618      	mov	r0, r3
 80058e6:	f004 fa48 	bl	8009d7a <USB_ReadChInterrupts>
 80058ea:	4603      	mov	r3, r0
 80058ec:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80058f0:	2b40      	cmp	r3, #64	@ 0x40
 80058f2:	d112      	bne.n	800591a <HCD_HC_OUT_IRQHandler+0x22c>
 80058f4:	78fa      	ldrb	r2, [r7, #3]
 80058f6:	6879      	ldr	r1, [r7, #4]
 80058f8:	4613      	mov	r3, r2
 80058fa:	011b      	lsls	r3, r3, #4
 80058fc:	1a9b      	subs	r3, r3, r2
 80058fe:	009b      	lsls	r3, r3, #2
 8005900:	440b      	add	r3, r1
 8005902:	3319      	adds	r3, #25
 8005904:	2201      	movs	r2, #1
 8005906:	701a      	strb	r2, [r3, #0]
 8005908:	78fb      	ldrb	r3, [r7, #3]
 800590a:	015a      	lsls	r2, r3, #5
 800590c:	693b      	ldr	r3, [r7, #16]
 800590e:	4413      	add	r3, r2
 8005910:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8005914:	461a      	mov	r2, r3
 8005916:	2340      	movs	r3, #64	@ 0x40
 8005918:	6093      	str	r3, [r2, #8]
 800591a:	78fa      	ldrb	r2, [r7, #3]
 800591c:	6879      	ldr	r1, [r7, #4]
 800591e:	4613      	mov	r3, r2
 8005920:	011b      	lsls	r3, r3, #4
 8005922:	1a9b      	subs	r3, r3, r2
 8005924:	009b      	lsls	r3, r3, #2
 8005926:	440b      	add	r3, r1
 8005928:	331b      	adds	r3, #27
 800592a:	781b      	ldrb	r3, [r3, #0]
 800592c:	2b00      	cmp	r3, #0
 800592e:	d019      	beq.n	8005964 <HCD_HC_OUT_IRQHandler+0x276>
 8005930:	78fa      	ldrb	r2, [r7, #3]
 8005932:	6879      	ldr	r1, [r7, #4]
 8005934:	4613      	mov	r3, r2
 8005936:	011b      	lsls	r3, r3, #4
 8005938:	1a9b      	subs	r3, r3, r2
 800593a:	009b      	lsls	r3, r3, #2
 800593c:	440b      	add	r3, r1
 800593e:	331b      	adds	r3, #27
 8005940:	2200      	movs	r2, #0
 8005942:	701a      	strb	r2, [r3, #0]
 8005944:	78fb      	ldrb	r3, [r7, #3]
 8005946:	015a      	lsls	r2, r3, #5
 8005948:	693b      	ldr	r3, [r7, #16]
 800594a:	4413      	add	r3, r2
 800594c:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8005950:	685b      	ldr	r3, [r3, #4]
 8005952:	78fa      	ldrb	r2, [r7, #3]
 8005954:	0151      	lsls	r1, r2, #5
 8005956:	693a      	ldr	r2, [r7, #16]
 8005958:	440a      	add	r2, r1
 800595a:	f502 62a0 	add.w	r2, r2, #1280	@ 0x500
 800595e:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8005962:	6053      	str	r3, [r2, #4]
 8005964:	78fb      	ldrb	r3, [r7, #3]
 8005966:	015a      	lsls	r2, r3, #5
 8005968:	693b      	ldr	r3, [r7, #16]
 800596a:	4413      	add	r3, r2
 800596c:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8005970:	461a      	mov	r2, r3
 8005972:	2301      	movs	r3, #1
 8005974:	6093      	str	r3, [r2, #8]
 8005976:	78fa      	ldrb	r2, [r7, #3]
 8005978:	6879      	ldr	r1, [r7, #4]
 800597a:	4613      	mov	r3, r2
 800597c:	011b      	lsls	r3, r3, #4
 800597e:	1a9b      	subs	r3, r3, r2
 8005980:	009b      	lsls	r3, r3, #2
 8005982:	440b      	add	r3, r1
 8005984:	334d      	adds	r3, #77	@ 0x4d
 8005986:	2201      	movs	r2, #1
 8005988:	701a      	strb	r2, [r3, #0]
 800598a:	687b      	ldr	r3, [r7, #4]
 800598c:	681b      	ldr	r3, [r3, #0]
 800598e:	78fa      	ldrb	r2, [r7, #3]
 8005990:	4611      	mov	r1, r2
 8005992:	4618      	mov	r0, r3
 8005994:	f004 fa6e 	bl	8009e74 <USB_HC_Halt>
 8005998:	e365      	b.n	8006066 <HCD_HC_OUT_IRQHandler+0x978>
 800599a:	687b      	ldr	r3, [r7, #4]
 800599c:	681b      	ldr	r3, [r3, #0]
 800599e:	78fa      	ldrb	r2, [r7, #3]
 80059a0:	4611      	mov	r1, r2
 80059a2:	4618      	mov	r0, r3
 80059a4:	f004 f9e9 	bl	8009d7a <USB_ReadChInterrupts>
 80059a8:	4603      	mov	r3, r0
 80059aa:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80059ae:	2b40      	cmp	r3, #64	@ 0x40
 80059b0:	d139      	bne.n	8005a26 <HCD_HC_OUT_IRQHandler+0x338>
 80059b2:	78fa      	ldrb	r2, [r7, #3]
 80059b4:	6879      	ldr	r1, [r7, #4]
 80059b6:	4613      	mov	r3, r2
 80059b8:	011b      	lsls	r3, r3, #4
 80059ba:	1a9b      	subs	r3, r3, r2
 80059bc:	009b      	lsls	r3, r3, #2
 80059be:	440b      	add	r3, r1
 80059c0:	334d      	adds	r3, #77	@ 0x4d
 80059c2:	2205      	movs	r2, #5
 80059c4:	701a      	strb	r2, [r3, #0]
 80059c6:	78fa      	ldrb	r2, [r7, #3]
 80059c8:	6879      	ldr	r1, [r7, #4]
 80059ca:	4613      	mov	r3, r2
 80059cc:	011b      	lsls	r3, r3, #4
 80059ce:	1a9b      	subs	r3, r3, r2
 80059d0:	009b      	lsls	r3, r3, #2
 80059d2:	440b      	add	r3, r1
 80059d4:	331a      	adds	r3, #26
 80059d6:	781b      	ldrb	r3, [r3, #0]
 80059d8:	2b00      	cmp	r3, #0
 80059da:	d109      	bne.n	80059f0 <HCD_HC_OUT_IRQHandler+0x302>
 80059dc:	78fa      	ldrb	r2, [r7, #3]
 80059de:	6879      	ldr	r1, [r7, #4]
 80059e0:	4613      	mov	r3, r2
 80059e2:	011b      	lsls	r3, r3, #4
 80059e4:	1a9b      	subs	r3, r3, r2
 80059e6:	009b      	lsls	r3, r3, #2
 80059e8:	440b      	add	r3, r1
 80059ea:	3319      	adds	r3, #25
 80059ec:	2201      	movs	r2, #1
 80059ee:	701a      	strb	r2, [r3, #0]
 80059f0:	78fa      	ldrb	r2, [r7, #3]
 80059f2:	6879      	ldr	r1, [r7, #4]
 80059f4:	4613      	mov	r3, r2
 80059f6:	011b      	lsls	r3, r3, #4
 80059f8:	1a9b      	subs	r3, r3, r2
 80059fa:	009b      	lsls	r3, r3, #2
 80059fc:	440b      	add	r3, r1
 80059fe:	3344      	adds	r3, #68	@ 0x44
 8005a00:	2200      	movs	r2, #0
 8005a02:	601a      	str	r2, [r3, #0]
 8005a04:	687b      	ldr	r3, [r7, #4]
 8005a06:	681b      	ldr	r3, [r3, #0]
 8005a08:	78fa      	ldrb	r2, [r7, #3]
 8005a0a:	4611      	mov	r1, r2
 8005a0c:	4618      	mov	r0, r3
 8005a0e:	f004 fa31 	bl	8009e74 <USB_HC_Halt>
 8005a12:	78fb      	ldrb	r3, [r7, #3]
 8005a14:	015a      	lsls	r2, r3, #5
 8005a16:	693b      	ldr	r3, [r7, #16]
 8005a18:	4413      	add	r3, r2
 8005a1a:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8005a1e:	461a      	mov	r2, r3
 8005a20:	2340      	movs	r3, #64	@ 0x40
 8005a22:	6093      	str	r3, [r2, #8]
 8005a24:	e31f      	b.n	8006066 <HCD_HC_OUT_IRQHandler+0x978>
 8005a26:	687b      	ldr	r3, [r7, #4]
 8005a28:	681b      	ldr	r3, [r3, #0]
 8005a2a:	78fa      	ldrb	r2, [r7, #3]
 8005a2c:	4611      	mov	r1, r2
 8005a2e:	4618      	mov	r0, r3
 8005a30:	f004 f9a3 	bl	8009d7a <USB_ReadChInterrupts>
 8005a34:	4603      	mov	r3, r0
 8005a36:	f003 0308 	and.w	r3, r3, #8
 8005a3a:	2b08      	cmp	r3, #8
 8005a3c:	d11a      	bne.n	8005a74 <HCD_HC_OUT_IRQHandler+0x386>
 8005a3e:	78fb      	ldrb	r3, [r7, #3]
 8005a40:	015a      	lsls	r2, r3, #5
 8005a42:	693b      	ldr	r3, [r7, #16]
 8005a44:	4413      	add	r3, r2
 8005a46:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8005a4a:	461a      	mov	r2, r3
 8005a4c:	2308      	movs	r3, #8
 8005a4e:	6093      	str	r3, [r2, #8]
 8005a50:	78fa      	ldrb	r2, [r7, #3]
 8005a52:	6879      	ldr	r1, [r7, #4]
 8005a54:	4613      	mov	r3, r2
 8005a56:	011b      	lsls	r3, r3, #4
 8005a58:	1a9b      	subs	r3, r3, r2
 8005a5a:	009b      	lsls	r3, r3, #2
 8005a5c:	440b      	add	r3, r1
 8005a5e:	334d      	adds	r3, #77	@ 0x4d
 8005a60:	2206      	movs	r2, #6
 8005a62:	701a      	strb	r2, [r3, #0]
 8005a64:	687b      	ldr	r3, [r7, #4]
 8005a66:	681b      	ldr	r3, [r3, #0]
 8005a68:	78fa      	ldrb	r2, [r7, #3]
 8005a6a:	4611      	mov	r1, r2
 8005a6c:	4618      	mov	r0, r3
 8005a6e:	f004 fa01 	bl	8009e74 <USB_HC_Halt>
 8005a72:	e2f8      	b.n	8006066 <HCD_HC_OUT_IRQHandler+0x978>
 8005a74:	687b      	ldr	r3, [r7, #4]
 8005a76:	681b      	ldr	r3, [r3, #0]
 8005a78:	78fa      	ldrb	r2, [r7, #3]
 8005a7a:	4611      	mov	r1, r2
 8005a7c:	4618      	mov	r0, r3
 8005a7e:	f004 f97c 	bl	8009d7a <USB_ReadChInterrupts>
 8005a82:	4603      	mov	r3, r0
 8005a84:	f003 0310 	and.w	r3, r3, #16
 8005a88:	2b10      	cmp	r3, #16
 8005a8a:	d144      	bne.n	8005b16 <HCD_HC_OUT_IRQHandler+0x428>
 8005a8c:	78fa      	ldrb	r2, [r7, #3]
 8005a8e:	6879      	ldr	r1, [r7, #4]
 8005a90:	4613      	mov	r3, r2
 8005a92:	011b      	lsls	r3, r3, #4
 8005a94:	1a9b      	subs	r3, r3, r2
 8005a96:	009b      	lsls	r3, r3, #2
 8005a98:	440b      	add	r3, r1
 8005a9a:	3344      	adds	r3, #68	@ 0x44
 8005a9c:	2200      	movs	r2, #0
 8005a9e:	601a      	str	r2, [r3, #0]
 8005aa0:	78fa      	ldrb	r2, [r7, #3]
 8005aa2:	6879      	ldr	r1, [r7, #4]
 8005aa4:	4613      	mov	r3, r2
 8005aa6:	011b      	lsls	r3, r3, #4
 8005aa8:	1a9b      	subs	r3, r3, r2
 8005aaa:	009b      	lsls	r3, r3, #2
 8005aac:	440b      	add	r3, r1
 8005aae:	334d      	adds	r3, #77	@ 0x4d
 8005ab0:	2204      	movs	r2, #4
 8005ab2:	701a      	strb	r2, [r3, #0]
 8005ab4:	78fa      	ldrb	r2, [r7, #3]
 8005ab6:	6879      	ldr	r1, [r7, #4]
 8005ab8:	4613      	mov	r3, r2
 8005aba:	011b      	lsls	r3, r3, #4
 8005abc:	1a9b      	subs	r3, r3, r2
 8005abe:	009b      	lsls	r3, r3, #2
 8005ac0:	440b      	add	r3, r1
 8005ac2:	3319      	adds	r3, #25
 8005ac4:	781b      	ldrb	r3, [r3, #0]
 8005ac6:	2b00      	cmp	r3, #0
 8005ac8:	d114      	bne.n	8005af4 <HCD_HC_OUT_IRQHandler+0x406>
 8005aca:	78fa      	ldrb	r2, [r7, #3]
 8005acc:	6879      	ldr	r1, [r7, #4]
 8005ace:	4613      	mov	r3, r2
 8005ad0:	011b      	lsls	r3, r3, #4
 8005ad2:	1a9b      	subs	r3, r3, r2
 8005ad4:	009b      	lsls	r3, r3, #2
 8005ad6:	440b      	add	r3, r1
 8005ad8:	3318      	adds	r3, #24
 8005ada:	781b      	ldrb	r3, [r3, #0]
 8005adc:	2b00      	cmp	r3, #0
 8005ade:	d109      	bne.n	8005af4 <HCD_HC_OUT_IRQHandler+0x406>
 8005ae0:	78fa      	ldrb	r2, [r7, #3]
 8005ae2:	6879      	ldr	r1, [r7, #4]
 8005ae4:	4613      	mov	r3, r2
 8005ae6:	011b      	lsls	r3, r3, #4
 8005ae8:	1a9b      	subs	r3, r3, r2
 8005aea:	009b      	lsls	r3, r3, #2
 8005aec:	440b      	add	r3, r1
 8005aee:	3319      	adds	r3, #25
 8005af0:	2201      	movs	r2, #1
 8005af2:	701a      	strb	r2, [r3, #0]
 8005af4:	687b      	ldr	r3, [r7, #4]
 8005af6:	681b      	ldr	r3, [r3, #0]
 8005af8:	78fa      	ldrb	r2, [r7, #3]
 8005afa:	4611      	mov	r1, r2
 8005afc:	4618      	mov	r0, r3
 8005afe:	f004 f9b9 	bl	8009e74 <USB_HC_Halt>
 8005b02:	78fb      	ldrb	r3, [r7, #3]
 8005b04:	015a      	lsls	r2, r3, #5
 8005b06:	693b      	ldr	r3, [r7, #16]
 8005b08:	4413      	add	r3, r2
 8005b0a:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8005b0e:	461a      	mov	r2, r3
 8005b10:	2310      	movs	r3, #16
 8005b12:	6093      	str	r3, [r2, #8]
 8005b14:	e2a7      	b.n	8006066 <HCD_HC_OUT_IRQHandler+0x978>
 8005b16:	687b      	ldr	r3, [r7, #4]
 8005b18:	681b      	ldr	r3, [r3, #0]
 8005b1a:	78fa      	ldrb	r2, [r7, #3]
 8005b1c:	4611      	mov	r1, r2
 8005b1e:	4618      	mov	r0, r3
 8005b20:	f004 f92b 	bl	8009d7a <USB_ReadChInterrupts>
 8005b24:	4603      	mov	r3, r0
 8005b26:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8005b2a:	2b80      	cmp	r3, #128	@ 0x80
 8005b2c:	f040 8083 	bne.w	8005c36 <HCD_HC_OUT_IRQHandler+0x548>
 8005b30:	687b      	ldr	r3, [r7, #4]
 8005b32:	799b      	ldrb	r3, [r3, #6]
 8005b34:	2b00      	cmp	r3, #0
 8005b36:	d111      	bne.n	8005b5c <HCD_HC_OUT_IRQHandler+0x46e>
 8005b38:	78fa      	ldrb	r2, [r7, #3]
 8005b3a:	6879      	ldr	r1, [r7, #4]
 8005b3c:	4613      	mov	r3, r2
 8005b3e:	011b      	lsls	r3, r3, #4
 8005b40:	1a9b      	subs	r3, r3, r2
 8005b42:	009b      	lsls	r3, r3, #2
 8005b44:	440b      	add	r3, r1
 8005b46:	334d      	adds	r3, #77	@ 0x4d
 8005b48:	2207      	movs	r2, #7
 8005b4a:	701a      	strb	r2, [r3, #0]
 8005b4c:	687b      	ldr	r3, [r7, #4]
 8005b4e:	681b      	ldr	r3, [r3, #0]
 8005b50:	78fa      	ldrb	r2, [r7, #3]
 8005b52:	4611      	mov	r1, r2
 8005b54:	4618      	mov	r0, r3
 8005b56:	f004 f98d 	bl	8009e74 <USB_HC_Halt>
 8005b5a:	e062      	b.n	8005c22 <HCD_HC_OUT_IRQHandler+0x534>
 8005b5c:	78fa      	ldrb	r2, [r7, #3]
 8005b5e:	6879      	ldr	r1, [r7, #4]
 8005b60:	4613      	mov	r3, r2
 8005b62:	011b      	lsls	r3, r3, #4
 8005b64:	1a9b      	subs	r3, r3, r2
 8005b66:	009b      	lsls	r3, r3, #2
 8005b68:	440b      	add	r3, r1
 8005b6a:	3344      	adds	r3, #68	@ 0x44
 8005b6c:	681b      	ldr	r3, [r3, #0]
 8005b6e:	1c59      	adds	r1, r3, #1
 8005b70:	6878      	ldr	r0, [r7, #4]
 8005b72:	4613      	mov	r3, r2
 8005b74:	011b      	lsls	r3, r3, #4
 8005b76:	1a9b      	subs	r3, r3, r2
 8005b78:	009b      	lsls	r3, r3, #2
 8005b7a:	4403      	add	r3, r0
 8005b7c:	3344      	adds	r3, #68	@ 0x44
 8005b7e:	6019      	str	r1, [r3, #0]
 8005b80:	78fa      	ldrb	r2, [r7, #3]
 8005b82:	6879      	ldr	r1, [r7, #4]
 8005b84:	4613      	mov	r3, r2
 8005b86:	011b      	lsls	r3, r3, #4
 8005b88:	1a9b      	subs	r3, r3, r2
 8005b8a:	009b      	lsls	r3, r3, #2
 8005b8c:	440b      	add	r3, r1
 8005b8e:	3344      	adds	r3, #68	@ 0x44
 8005b90:	681b      	ldr	r3, [r3, #0]
 8005b92:	2b02      	cmp	r3, #2
 8005b94:	d922      	bls.n	8005bdc <HCD_HC_OUT_IRQHandler+0x4ee>
 8005b96:	78fa      	ldrb	r2, [r7, #3]
 8005b98:	6879      	ldr	r1, [r7, #4]
 8005b9a:	4613      	mov	r3, r2
 8005b9c:	011b      	lsls	r3, r3, #4
 8005b9e:	1a9b      	subs	r3, r3, r2
 8005ba0:	009b      	lsls	r3, r3, #2
 8005ba2:	440b      	add	r3, r1
 8005ba4:	3344      	adds	r3, #68	@ 0x44
 8005ba6:	2200      	movs	r2, #0
 8005ba8:	601a      	str	r2, [r3, #0]
 8005baa:	78fa      	ldrb	r2, [r7, #3]
 8005bac:	6879      	ldr	r1, [r7, #4]
 8005bae:	4613      	mov	r3, r2
 8005bb0:	011b      	lsls	r3, r3, #4
 8005bb2:	1a9b      	subs	r3, r3, r2
 8005bb4:	009b      	lsls	r3, r3, #2
 8005bb6:	440b      	add	r3, r1
 8005bb8:	334c      	adds	r3, #76	@ 0x4c
 8005bba:	2204      	movs	r2, #4
 8005bbc:	701a      	strb	r2, [r3, #0]
 8005bbe:	78fa      	ldrb	r2, [r7, #3]
 8005bc0:	6879      	ldr	r1, [r7, #4]
 8005bc2:	4613      	mov	r3, r2
 8005bc4:	011b      	lsls	r3, r3, #4
 8005bc6:	1a9b      	subs	r3, r3, r2
 8005bc8:	009b      	lsls	r3, r3, #2
 8005bca:	440b      	add	r3, r1
 8005bcc:	334c      	adds	r3, #76	@ 0x4c
 8005bce:	781a      	ldrb	r2, [r3, #0]
 8005bd0:	78fb      	ldrb	r3, [r7, #3]
 8005bd2:	4619      	mov	r1, r3
 8005bd4:	6878      	ldr	r0, [r7, #4]
 8005bd6:	f005 fc5d 	bl	800b494 <HAL_HCD_HC_NotifyURBChange_Callback>
 8005bda:	e022      	b.n	8005c22 <HCD_HC_OUT_IRQHandler+0x534>
 8005bdc:	78fa      	ldrb	r2, [r7, #3]
 8005bde:	6879      	ldr	r1, [r7, #4]
 8005be0:	4613      	mov	r3, r2
 8005be2:	011b      	lsls	r3, r3, #4
 8005be4:	1a9b      	subs	r3, r3, r2
 8005be6:	009b      	lsls	r3, r3, #2
 8005be8:	440b      	add	r3, r1
 8005bea:	334c      	adds	r3, #76	@ 0x4c
 8005bec:	2202      	movs	r2, #2
 8005bee:	701a      	strb	r2, [r3, #0]
 8005bf0:	78fb      	ldrb	r3, [r7, #3]
 8005bf2:	015a      	lsls	r2, r3, #5
 8005bf4:	693b      	ldr	r3, [r7, #16]
 8005bf6:	4413      	add	r3, r2
 8005bf8:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8005bfc:	681b      	ldr	r3, [r3, #0]
 8005bfe:	60fb      	str	r3, [r7, #12]
 8005c00:	68fb      	ldr	r3, [r7, #12]
 8005c02:	f023 4380 	bic.w	r3, r3, #1073741824	@ 0x40000000
 8005c06:	60fb      	str	r3, [r7, #12]
 8005c08:	68fb      	ldr	r3, [r7, #12]
 8005c0a:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8005c0e:	60fb      	str	r3, [r7, #12]
 8005c10:	78fb      	ldrb	r3, [r7, #3]
 8005c12:	015a      	lsls	r2, r3, #5
 8005c14:	693b      	ldr	r3, [r7, #16]
 8005c16:	4413      	add	r3, r2
 8005c18:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8005c1c:	461a      	mov	r2, r3
 8005c1e:	68fb      	ldr	r3, [r7, #12]
 8005c20:	6013      	str	r3, [r2, #0]
 8005c22:	78fb      	ldrb	r3, [r7, #3]
 8005c24:	015a      	lsls	r2, r3, #5
 8005c26:	693b      	ldr	r3, [r7, #16]
 8005c28:	4413      	add	r3, r2
 8005c2a:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8005c2e:	461a      	mov	r2, r3
 8005c30:	2380      	movs	r3, #128	@ 0x80
 8005c32:	6093      	str	r3, [r2, #8]
 8005c34:	e217      	b.n	8006066 <HCD_HC_OUT_IRQHandler+0x978>
 8005c36:	687b      	ldr	r3, [r7, #4]
 8005c38:	681b      	ldr	r3, [r3, #0]
 8005c3a:	78fa      	ldrb	r2, [r7, #3]
 8005c3c:	4611      	mov	r1, r2
 8005c3e:	4618      	mov	r0, r3
 8005c40:	f004 f89b 	bl	8009d7a <USB_ReadChInterrupts>
 8005c44:	4603      	mov	r3, r0
 8005c46:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8005c4a:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8005c4e:	d11b      	bne.n	8005c88 <HCD_HC_OUT_IRQHandler+0x59a>
 8005c50:	78fa      	ldrb	r2, [r7, #3]
 8005c52:	6879      	ldr	r1, [r7, #4]
 8005c54:	4613      	mov	r3, r2
 8005c56:	011b      	lsls	r3, r3, #4
 8005c58:	1a9b      	subs	r3, r3, r2
 8005c5a:	009b      	lsls	r3, r3, #2
 8005c5c:	440b      	add	r3, r1
 8005c5e:	334d      	adds	r3, #77	@ 0x4d
 8005c60:	2209      	movs	r2, #9
 8005c62:	701a      	strb	r2, [r3, #0]
 8005c64:	687b      	ldr	r3, [r7, #4]
 8005c66:	681b      	ldr	r3, [r3, #0]
 8005c68:	78fa      	ldrb	r2, [r7, #3]
 8005c6a:	4611      	mov	r1, r2
 8005c6c:	4618      	mov	r0, r3
 8005c6e:	f004 f901 	bl	8009e74 <USB_HC_Halt>
 8005c72:	78fb      	ldrb	r3, [r7, #3]
 8005c74:	015a      	lsls	r2, r3, #5
 8005c76:	693b      	ldr	r3, [r7, #16]
 8005c78:	4413      	add	r3, r2
 8005c7a:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8005c7e:	461a      	mov	r2, r3
 8005c80:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8005c84:	6093      	str	r3, [r2, #8]
 8005c86:	e1ee      	b.n	8006066 <HCD_HC_OUT_IRQHandler+0x978>
 8005c88:	687b      	ldr	r3, [r7, #4]
 8005c8a:	681b      	ldr	r3, [r3, #0]
 8005c8c:	78fa      	ldrb	r2, [r7, #3]
 8005c8e:	4611      	mov	r1, r2
 8005c90:	4618      	mov	r0, r3
 8005c92:	f004 f872 	bl	8009d7a <USB_ReadChInterrupts>
 8005c96:	4603      	mov	r3, r0
 8005c98:	f003 0302 	and.w	r3, r3, #2
 8005c9c:	2b02      	cmp	r3, #2
 8005c9e:	f040 81df 	bne.w	8006060 <HCD_HC_OUT_IRQHandler+0x972>
 8005ca2:	78fb      	ldrb	r3, [r7, #3]
 8005ca4:	015a      	lsls	r2, r3, #5
 8005ca6:	693b      	ldr	r3, [r7, #16]
 8005ca8:	4413      	add	r3, r2
 8005caa:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8005cae:	461a      	mov	r2, r3
 8005cb0:	2302      	movs	r3, #2
 8005cb2:	6093      	str	r3, [r2, #8]
 8005cb4:	78fa      	ldrb	r2, [r7, #3]
 8005cb6:	6879      	ldr	r1, [r7, #4]
 8005cb8:	4613      	mov	r3, r2
 8005cba:	011b      	lsls	r3, r3, #4
 8005cbc:	1a9b      	subs	r3, r3, r2
 8005cbe:	009b      	lsls	r3, r3, #2
 8005cc0:	440b      	add	r3, r1
 8005cc2:	334d      	adds	r3, #77	@ 0x4d
 8005cc4:	781b      	ldrb	r3, [r3, #0]
 8005cc6:	2b01      	cmp	r3, #1
 8005cc8:	f040 8093 	bne.w	8005df2 <HCD_HC_OUT_IRQHandler+0x704>
 8005ccc:	78fa      	ldrb	r2, [r7, #3]
 8005cce:	6879      	ldr	r1, [r7, #4]
 8005cd0:	4613      	mov	r3, r2
 8005cd2:	011b      	lsls	r3, r3, #4
 8005cd4:	1a9b      	subs	r3, r3, r2
 8005cd6:	009b      	lsls	r3, r3, #2
 8005cd8:	440b      	add	r3, r1
 8005cda:	334d      	adds	r3, #77	@ 0x4d
 8005cdc:	2202      	movs	r2, #2
 8005cde:	701a      	strb	r2, [r3, #0]
 8005ce0:	78fa      	ldrb	r2, [r7, #3]
 8005ce2:	6879      	ldr	r1, [r7, #4]
 8005ce4:	4613      	mov	r3, r2
 8005ce6:	011b      	lsls	r3, r3, #4
 8005ce8:	1a9b      	subs	r3, r3, r2
 8005cea:	009b      	lsls	r3, r3, #2
 8005cec:	440b      	add	r3, r1
 8005cee:	334c      	adds	r3, #76	@ 0x4c
 8005cf0:	2201      	movs	r2, #1
 8005cf2:	701a      	strb	r2, [r3, #0]
 8005cf4:	78fa      	ldrb	r2, [r7, #3]
 8005cf6:	6879      	ldr	r1, [r7, #4]
 8005cf8:	4613      	mov	r3, r2
 8005cfa:	011b      	lsls	r3, r3, #4
 8005cfc:	1a9b      	subs	r3, r3, r2
 8005cfe:	009b      	lsls	r3, r3, #2
 8005d00:	440b      	add	r3, r1
 8005d02:	3326      	adds	r3, #38	@ 0x26
 8005d04:	781b      	ldrb	r3, [r3, #0]
 8005d06:	2b02      	cmp	r3, #2
 8005d08:	d00b      	beq.n	8005d22 <HCD_HC_OUT_IRQHandler+0x634>
 8005d0a:	78fa      	ldrb	r2, [r7, #3]
 8005d0c:	6879      	ldr	r1, [r7, #4]
 8005d0e:	4613      	mov	r3, r2
 8005d10:	011b      	lsls	r3, r3, #4
 8005d12:	1a9b      	subs	r3, r3, r2
 8005d14:	009b      	lsls	r3, r3, #2
 8005d16:	440b      	add	r3, r1
 8005d18:	3326      	adds	r3, #38	@ 0x26
 8005d1a:	781b      	ldrb	r3, [r3, #0]
 8005d1c:	2b03      	cmp	r3, #3
 8005d1e:	f040 8190 	bne.w	8006042 <HCD_HC_OUT_IRQHandler+0x954>
 8005d22:	687b      	ldr	r3, [r7, #4]
 8005d24:	799b      	ldrb	r3, [r3, #6]
 8005d26:	2b00      	cmp	r3, #0
 8005d28:	d115      	bne.n	8005d56 <HCD_HC_OUT_IRQHandler+0x668>
 8005d2a:	78fa      	ldrb	r2, [r7, #3]
 8005d2c:	6879      	ldr	r1, [r7, #4]
 8005d2e:	4613      	mov	r3, r2
 8005d30:	011b      	lsls	r3, r3, #4
 8005d32:	1a9b      	subs	r3, r3, r2
 8005d34:	009b      	lsls	r3, r3, #2
 8005d36:	440b      	add	r3, r1
 8005d38:	333d      	adds	r3, #61	@ 0x3d
 8005d3a:	781b      	ldrb	r3, [r3, #0]
 8005d3c:	78fa      	ldrb	r2, [r7, #3]
 8005d3e:	f083 0301 	eor.w	r3, r3, #1
 8005d42:	b2d8      	uxtb	r0, r3
 8005d44:	6879      	ldr	r1, [r7, #4]
 8005d46:	4613      	mov	r3, r2
 8005d48:	011b      	lsls	r3, r3, #4
 8005d4a:	1a9b      	subs	r3, r3, r2
 8005d4c:	009b      	lsls	r3, r3, #2
 8005d4e:	440b      	add	r3, r1
 8005d50:	333d      	adds	r3, #61	@ 0x3d
 8005d52:	4602      	mov	r2, r0
 8005d54:	701a      	strb	r2, [r3, #0]
 8005d56:	687b      	ldr	r3, [r7, #4]
 8005d58:	799b      	ldrb	r3, [r3, #6]
 8005d5a:	2b01      	cmp	r3, #1
 8005d5c:	f040 8171 	bne.w	8006042 <HCD_HC_OUT_IRQHandler+0x954>
 8005d60:	78fa      	ldrb	r2, [r7, #3]
 8005d62:	6879      	ldr	r1, [r7, #4]
 8005d64:	4613      	mov	r3, r2
 8005d66:	011b      	lsls	r3, r3, #4
 8005d68:	1a9b      	subs	r3, r3, r2
 8005d6a:	009b      	lsls	r3, r3, #2
 8005d6c:	440b      	add	r3, r1
 8005d6e:	3334      	adds	r3, #52	@ 0x34
 8005d70:	681b      	ldr	r3, [r3, #0]
 8005d72:	2b00      	cmp	r3, #0
 8005d74:	f000 8165 	beq.w	8006042 <HCD_HC_OUT_IRQHandler+0x954>
 8005d78:	78fa      	ldrb	r2, [r7, #3]
 8005d7a:	6879      	ldr	r1, [r7, #4]
 8005d7c:	4613      	mov	r3, r2
 8005d7e:	011b      	lsls	r3, r3, #4
 8005d80:	1a9b      	subs	r3, r3, r2
 8005d82:	009b      	lsls	r3, r3, #2
 8005d84:	440b      	add	r3, r1
 8005d86:	3334      	adds	r3, #52	@ 0x34
 8005d88:	6819      	ldr	r1, [r3, #0]
 8005d8a:	78fa      	ldrb	r2, [r7, #3]
 8005d8c:	6878      	ldr	r0, [r7, #4]
 8005d8e:	4613      	mov	r3, r2
 8005d90:	011b      	lsls	r3, r3, #4
 8005d92:	1a9b      	subs	r3, r3, r2
 8005d94:	009b      	lsls	r3, r3, #2
 8005d96:	4403      	add	r3, r0
 8005d98:	3328      	adds	r3, #40	@ 0x28
 8005d9a:	881b      	ldrh	r3, [r3, #0]
 8005d9c:	440b      	add	r3, r1
 8005d9e:	1e59      	subs	r1, r3, #1
 8005da0:	78fa      	ldrb	r2, [r7, #3]
 8005da2:	6878      	ldr	r0, [r7, #4]
 8005da4:	4613      	mov	r3, r2
 8005da6:	011b      	lsls	r3, r3, #4
 8005da8:	1a9b      	subs	r3, r3, r2
 8005daa:	009b      	lsls	r3, r3, #2
 8005dac:	4403      	add	r3, r0
 8005dae:	3328      	adds	r3, #40	@ 0x28
 8005db0:	881b      	ldrh	r3, [r3, #0]
 8005db2:	fbb1 f3f3 	udiv	r3, r1, r3
 8005db6:	60bb      	str	r3, [r7, #8]
 8005db8:	68bb      	ldr	r3, [r7, #8]
 8005dba:	f003 0301 	and.w	r3, r3, #1
 8005dbe:	2b00      	cmp	r3, #0
 8005dc0:	f000 813f 	beq.w	8006042 <HCD_HC_OUT_IRQHandler+0x954>
 8005dc4:	78fa      	ldrb	r2, [r7, #3]
 8005dc6:	6879      	ldr	r1, [r7, #4]
 8005dc8:	4613      	mov	r3, r2
 8005dca:	011b      	lsls	r3, r3, #4
 8005dcc:	1a9b      	subs	r3, r3, r2
 8005dce:	009b      	lsls	r3, r3, #2
 8005dd0:	440b      	add	r3, r1
 8005dd2:	333d      	adds	r3, #61	@ 0x3d
 8005dd4:	781b      	ldrb	r3, [r3, #0]
 8005dd6:	78fa      	ldrb	r2, [r7, #3]
 8005dd8:	f083 0301 	eor.w	r3, r3, #1
 8005ddc:	b2d8      	uxtb	r0, r3
 8005dde:	6879      	ldr	r1, [r7, #4]
 8005de0:	4613      	mov	r3, r2
 8005de2:	011b      	lsls	r3, r3, #4
 8005de4:	1a9b      	subs	r3, r3, r2
 8005de6:	009b      	lsls	r3, r3, #2
 8005de8:	440b      	add	r3, r1
 8005dea:	333d      	adds	r3, #61	@ 0x3d
 8005dec:	4602      	mov	r2, r0
 8005dee:	701a      	strb	r2, [r3, #0]
 8005df0:	e127      	b.n	8006042 <HCD_HC_OUT_IRQHandler+0x954>
 8005df2:	78fa      	ldrb	r2, [r7, #3]
 8005df4:	6879      	ldr	r1, [r7, #4]
 8005df6:	4613      	mov	r3, r2
 8005df8:	011b      	lsls	r3, r3, #4
 8005dfa:	1a9b      	subs	r3, r3, r2
 8005dfc:	009b      	lsls	r3, r3, #2
 8005dfe:	440b      	add	r3, r1
 8005e00:	334d      	adds	r3, #77	@ 0x4d
 8005e02:	781b      	ldrb	r3, [r3, #0]
 8005e04:	2b03      	cmp	r3, #3
 8005e06:	d120      	bne.n	8005e4a <HCD_HC_OUT_IRQHandler+0x75c>
 8005e08:	78fa      	ldrb	r2, [r7, #3]
 8005e0a:	6879      	ldr	r1, [r7, #4]
 8005e0c:	4613      	mov	r3, r2
 8005e0e:	011b      	lsls	r3, r3, #4
 8005e10:	1a9b      	subs	r3, r3, r2
 8005e12:	009b      	lsls	r3, r3, #2
 8005e14:	440b      	add	r3, r1
 8005e16:	334d      	adds	r3, #77	@ 0x4d
 8005e18:	2202      	movs	r2, #2
 8005e1a:	701a      	strb	r2, [r3, #0]
 8005e1c:	78fa      	ldrb	r2, [r7, #3]
 8005e1e:	6879      	ldr	r1, [r7, #4]
 8005e20:	4613      	mov	r3, r2
 8005e22:	011b      	lsls	r3, r3, #4
 8005e24:	1a9b      	subs	r3, r3, r2
 8005e26:	009b      	lsls	r3, r3, #2
 8005e28:	440b      	add	r3, r1
 8005e2a:	331b      	adds	r3, #27
 8005e2c:	781b      	ldrb	r3, [r3, #0]
 8005e2e:	2b01      	cmp	r3, #1
 8005e30:	f040 8107 	bne.w	8006042 <HCD_HC_OUT_IRQHandler+0x954>
 8005e34:	78fa      	ldrb	r2, [r7, #3]
 8005e36:	6879      	ldr	r1, [r7, #4]
 8005e38:	4613      	mov	r3, r2
 8005e3a:	011b      	lsls	r3, r3, #4
 8005e3c:	1a9b      	subs	r3, r3, r2
 8005e3e:	009b      	lsls	r3, r3, #2
 8005e40:	440b      	add	r3, r1
 8005e42:	334c      	adds	r3, #76	@ 0x4c
 8005e44:	2202      	movs	r2, #2
 8005e46:	701a      	strb	r2, [r3, #0]
 8005e48:	e0fb      	b.n	8006042 <HCD_HC_OUT_IRQHandler+0x954>
 8005e4a:	78fa      	ldrb	r2, [r7, #3]
 8005e4c:	6879      	ldr	r1, [r7, #4]
 8005e4e:	4613      	mov	r3, r2
 8005e50:	011b      	lsls	r3, r3, #4
 8005e52:	1a9b      	subs	r3, r3, r2
 8005e54:	009b      	lsls	r3, r3, #2
 8005e56:	440b      	add	r3, r1
 8005e58:	334d      	adds	r3, #77	@ 0x4d
 8005e5a:	781b      	ldrb	r3, [r3, #0]
 8005e5c:	2b04      	cmp	r3, #4
 8005e5e:	d13a      	bne.n	8005ed6 <HCD_HC_OUT_IRQHandler+0x7e8>
 8005e60:	78fa      	ldrb	r2, [r7, #3]
 8005e62:	6879      	ldr	r1, [r7, #4]
 8005e64:	4613      	mov	r3, r2
 8005e66:	011b      	lsls	r3, r3, #4
 8005e68:	1a9b      	subs	r3, r3, r2
 8005e6a:	009b      	lsls	r3, r3, #2
 8005e6c:	440b      	add	r3, r1
 8005e6e:	334d      	adds	r3, #77	@ 0x4d
 8005e70:	2202      	movs	r2, #2
 8005e72:	701a      	strb	r2, [r3, #0]
 8005e74:	78fa      	ldrb	r2, [r7, #3]
 8005e76:	6879      	ldr	r1, [r7, #4]
 8005e78:	4613      	mov	r3, r2
 8005e7a:	011b      	lsls	r3, r3, #4
 8005e7c:	1a9b      	subs	r3, r3, r2
 8005e7e:	009b      	lsls	r3, r3, #2
 8005e80:	440b      	add	r3, r1
 8005e82:	334c      	adds	r3, #76	@ 0x4c
 8005e84:	2202      	movs	r2, #2
 8005e86:	701a      	strb	r2, [r3, #0]
 8005e88:	78fa      	ldrb	r2, [r7, #3]
 8005e8a:	6879      	ldr	r1, [r7, #4]
 8005e8c:	4613      	mov	r3, r2
 8005e8e:	011b      	lsls	r3, r3, #4
 8005e90:	1a9b      	subs	r3, r3, r2
 8005e92:	009b      	lsls	r3, r3, #2
 8005e94:	440b      	add	r3, r1
 8005e96:	331b      	adds	r3, #27
 8005e98:	781b      	ldrb	r3, [r3, #0]
 8005e9a:	2b01      	cmp	r3, #1
 8005e9c:	f040 80d1 	bne.w	8006042 <HCD_HC_OUT_IRQHandler+0x954>
 8005ea0:	78fa      	ldrb	r2, [r7, #3]
 8005ea2:	6879      	ldr	r1, [r7, #4]
 8005ea4:	4613      	mov	r3, r2
 8005ea6:	011b      	lsls	r3, r3, #4
 8005ea8:	1a9b      	subs	r3, r3, r2
 8005eaa:	009b      	lsls	r3, r3, #2
 8005eac:	440b      	add	r3, r1
 8005eae:	331b      	adds	r3, #27
 8005eb0:	2200      	movs	r2, #0
 8005eb2:	701a      	strb	r2, [r3, #0]
 8005eb4:	78fb      	ldrb	r3, [r7, #3]
 8005eb6:	015a      	lsls	r2, r3, #5
 8005eb8:	693b      	ldr	r3, [r7, #16]
 8005eba:	4413      	add	r3, r2
 8005ebc:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8005ec0:	685b      	ldr	r3, [r3, #4]
 8005ec2:	78fa      	ldrb	r2, [r7, #3]
 8005ec4:	0151      	lsls	r1, r2, #5
 8005ec6:	693a      	ldr	r2, [r7, #16]
 8005ec8:	440a      	add	r2, r1
 8005eca:	f502 62a0 	add.w	r2, r2, #1280	@ 0x500
 8005ece:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8005ed2:	6053      	str	r3, [r2, #4]
 8005ed4:	e0b5      	b.n	8006042 <HCD_HC_OUT_IRQHandler+0x954>
 8005ed6:	78fa      	ldrb	r2, [r7, #3]
 8005ed8:	6879      	ldr	r1, [r7, #4]
 8005eda:	4613      	mov	r3, r2
 8005edc:	011b      	lsls	r3, r3, #4
 8005ede:	1a9b      	subs	r3, r3, r2
 8005ee0:	009b      	lsls	r3, r3, #2
 8005ee2:	440b      	add	r3, r1
 8005ee4:	334d      	adds	r3, #77	@ 0x4d
 8005ee6:	781b      	ldrb	r3, [r3, #0]
 8005ee8:	2b05      	cmp	r3, #5
 8005eea:	d114      	bne.n	8005f16 <HCD_HC_OUT_IRQHandler+0x828>
 8005eec:	78fa      	ldrb	r2, [r7, #3]
 8005eee:	6879      	ldr	r1, [r7, #4]
 8005ef0:	4613      	mov	r3, r2
 8005ef2:	011b      	lsls	r3, r3, #4
 8005ef4:	1a9b      	subs	r3, r3, r2
 8005ef6:	009b      	lsls	r3, r3, #2
 8005ef8:	440b      	add	r3, r1
 8005efa:	334d      	adds	r3, #77	@ 0x4d
 8005efc:	2202      	movs	r2, #2
 8005efe:	701a      	strb	r2, [r3, #0]
 8005f00:	78fa      	ldrb	r2, [r7, #3]
 8005f02:	6879      	ldr	r1, [r7, #4]
 8005f04:	4613      	mov	r3, r2
 8005f06:	011b      	lsls	r3, r3, #4
 8005f08:	1a9b      	subs	r3, r3, r2
 8005f0a:	009b      	lsls	r3, r3, #2
 8005f0c:	440b      	add	r3, r1
 8005f0e:	334c      	adds	r3, #76	@ 0x4c
 8005f10:	2202      	movs	r2, #2
 8005f12:	701a      	strb	r2, [r3, #0]
 8005f14:	e095      	b.n	8006042 <HCD_HC_OUT_IRQHandler+0x954>
 8005f16:	78fa      	ldrb	r2, [r7, #3]
 8005f18:	6879      	ldr	r1, [r7, #4]
 8005f1a:	4613      	mov	r3, r2
 8005f1c:	011b      	lsls	r3, r3, #4
 8005f1e:	1a9b      	subs	r3, r3, r2
 8005f20:	009b      	lsls	r3, r3, #2
 8005f22:	440b      	add	r3, r1
 8005f24:	334d      	adds	r3, #77	@ 0x4d
 8005f26:	781b      	ldrb	r3, [r3, #0]
 8005f28:	2b06      	cmp	r3, #6
 8005f2a:	d114      	bne.n	8005f56 <HCD_HC_OUT_IRQHandler+0x868>
 8005f2c:	78fa      	ldrb	r2, [r7, #3]
 8005f2e:	6879      	ldr	r1, [r7, #4]
 8005f30:	4613      	mov	r3, r2
 8005f32:	011b      	lsls	r3, r3, #4
 8005f34:	1a9b      	subs	r3, r3, r2
 8005f36:	009b      	lsls	r3, r3, #2
 8005f38:	440b      	add	r3, r1
 8005f3a:	334d      	adds	r3, #77	@ 0x4d
 8005f3c:	2202      	movs	r2, #2
 8005f3e:	701a      	strb	r2, [r3, #0]
 8005f40:	78fa      	ldrb	r2, [r7, #3]
 8005f42:	6879      	ldr	r1, [r7, #4]
 8005f44:	4613      	mov	r3, r2
 8005f46:	011b      	lsls	r3, r3, #4
 8005f48:	1a9b      	subs	r3, r3, r2
 8005f4a:	009b      	lsls	r3, r3, #2
 8005f4c:	440b      	add	r3, r1
 8005f4e:	334c      	adds	r3, #76	@ 0x4c
 8005f50:	2205      	movs	r2, #5
 8005f52:	701a      	strb	r2, [r3, #0]
 8005f54:	e075      	b.n	8006042 <HCD_HC_OUT_IRQHandler+0x954>
 8005f56:	78fa      	ldrb	r2, [r7, #3]
 8005f58:	6879      	ldr	r1, [r7, #4]
 8005f5a:	4613      	mov	r3, r2
 8005f5c:	011b      	lsls	r3, r3, #4
 8005f5e:	1a9b      	subs	r3, r3, r2
 8005f60:	009b      	lsls	r3, r3, #2
 8005f62:	440b      	add	r3, r1
 8005f64:	334d      	adds	r3, #77	@ 0x4d
 8005f66:	781b      	ldrb	r3, [r3, #0]
 8005f68:	2b07      	cmp	r3, #7
 8005f6a:	d00a      	beq.n	8005f82 <HCD_HC_OUT_IRQHandler+0x894>
 8005f6c:	78fa      	ldrb	r2, [r7, #3]
 8005f6e:	6879      	ldr	r1, [r7, #4]
 8005f70:	4613      	mov	r3, r2
 8005f72:	011b      	lsls	r3, r3, #4
 8005f74:	1a9b      	subs	r3, r3, r2
 8005f76:	009b      	lsls	r3, r3, #2
 8005f78:	440b      	add	r3, r1
 8005f7a:	334d      	adds	r3, #77	@ 0x4d
 8005f7c:	781b      	ldrb	r3, [r3, #0]
 8005f7e:	2b09      	cmp	r3, #9
 8005f80:	d170      	bne.n	8006064 <HCD_HC_OUT_IRQHandler+0x976>
 8005f82:	78fa      	ldrb	r2, [r7, #3]
 8005f84:	6879      	ldr	r1, [r7, #4]
 8005f86:	4613      	mov	r3, r2
 8005f88:	011b      	lsls	r3, r3, #4
 8005f8a:	1a9b      	subs	r3, r3, r2
 8005f8c:	009b      	lsls	r3, r3, #2
 8005f8e:	440b      	add	r3, r1
 8005f90:	334d      	adds	r3, #77	@ 0x4d
 8005f92:	2202      	movs	r2, #2
 8005f94:	701a      	strb	r2, [r3, #0]
 8005f96:	78fa      	ldrb	r2, [r7, #3]
 8005f98:	6879      	ldr	r1, [r7, #4]
 8005f9a:	4613      	mov	r3, r2
 8005f9c:	011b      	lsls	r3, r3, #4
 8005f9e:	1a9b      	subs	r3, r3, r2
 8005fa0:	009b      	lsls	r3, r3, #2
 8005fa2:	440b      	add	r3, r1
 8005fa4:	3344      	adds	r3, #68	@ 0x44
 8005fa6:	681b      	ldr	r3, [r3, #0]
 8005fa8:	1c59      	adds	r1, r3, #1
 8005faa:	6878      	ldr	r0, [r7, #4]
 8005fac:	4613      	mov	r3, r2
 8005fae:	011b      	lsls	r3, r3, #4
 8005fb0:	1a9b      	subs	r3, r3, r2
 8005fb2:	009b      	lsls	r3, r3, #2
 8005fb4:	4403      	add	r3, r0
 8005fb6:	3344      	adds	r3, #68	@ 0x44
 8005fb8:	6019      	str	r1, [r3, #0]
 8005fba:	78fa      	ldrb	r2, [r7, #3]
 8005fbc:	6879      	ldr	r1, [r7, #4]
 8005fbe:	4613      	mov	r3, r2
 8005fc0:	011b      	lsls	r3, r3, #4
 8005fc2:	1a9b      	subs	r3, r3, r2
 8005fc4:	009b      	lsls	r3, r3, #2
 8005fc6:	440b      	add	r3, r1
 8005fc8:	3344      	adds	r3, #68	@ 0x44
 8005fca:	681b      	ldr	r3, [r3, #0]
 8005fcc:	2b02      	cmp	r3, #2
 8005fce:	d914      	bls.n	8005ffa <HCD_HC_OUT_IRQHandler+0x90c>
 8005fd0:	78fa      	ldrb	r2, [r7, #3]
 8005fd2:	6879      	ldr	r1, [r7, #4]
 8005fd4:	4613      	mov	r3, r2
 8005fd6:	011b      	lsls	r3, r3, #4
 8005fd8:	1a9b      	subs	r3, r3, r2
 8005fda:	009b      	lsls	r3, r3, #2
 8005fdc:	440b      	add	r3, r1
 8005fde:	3344      	adds	r3, #68	@ 0x44
 8005fe0:	2200      	movs	r2, #0
 8005fe2:	601a      	str	r2, [r3, #0]
 8005fe4:	78fa      	ldrb	r2, [r7, #3]
 8005fe6:	6879      	ldr	r1, [r7, #4]
 8005fe8:	4613      	mov	r3, r2
 8005fea:	011b      	lsls	r3, r3, #4
 8005fec:	1a9b      	subs	r3, r3, r2
 8005fee:	009b      	lsls	r3, r3, #2
 8005ff0:	440b      	add	r3, r1
 8005ff2:	334c      	adds	r3, #76	@ 0x4c
 8005ff4:	2204      	movs	r2, #4
 8005ff6:	701a      	strb	r2, [r3, #0]
 8005ff8:	e022      	b.n	8006040 <HCD_HC_OUT_IRQHandler+0x952>
 8005ffa:	78fa      	ldrb	r2, [r7, #3]
 8005ffc:	6879      	ldr	r1, [r7, #4]
 8005ffe:	4613      	mov	r3, r2
 8006000:	011b      	lsls	r3, r3, #4
 8006002:	1a9b      	subs	r3, r3, r2
 8006004:	009b      	lsls	r3, r3, #2
 8006006:	440b      	add	r3, r1
 8006008:	334c      	adds	r3, #76	@ 0x4c
 800600a:	2202      	movs	r2, #2
 800600c:	701a      	strb	r2, [r3, #0]
 800600e:	78fb      	ldrb	r3, [r7, #3]
 8006010:	015a      	lsls	r2, r3, #5
 8006012:	693b      	ldr	r3, [r7, #16]
 8006014:	4413      	add	r3, r2
 8006016:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 800601a:	681b      	ldr	r3, [r3, #0]
 800601c:	60fb      	str	r3, [r7, #12]
 800601e:	68fb      	ldr	r3, [r7, #12]
 8006020:	f023 4380 	bic.w	r3, r3, #1073741824	@ 0x40000000
 8006024:	60fb      	str	r3, [r7, #12]
 8006026:	68fb      	ldr	r3, [r7, #12]
 8006028:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 800602c:	60fb      	str	r3, [r7, #12]
 800602e:	78fb      	ldrb	r3, [r7, #3]
 8006030:	015a      	lsls	r2, r3, #5
 8006032:	693b      	ldr	r3, [r7, #16]
 8006034:	4413      	add	r3, r2
 8006036:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 800603a:	461a      	mov	r2, r3
 800603c:	68fb      	ldr	r3, [r7, #12]
 800603e:	6013      	str	r3, [r2, #0]
 8006040:	bf00      	nop
 8006042:	78fa      	ldrb	r2, [r7, #3]
 8006044:	6879      	ldr	r1, [r7, #4]
 8006046:	4613      	mov	r3, r2
 8006048:	011b      	lsls	r3, r3, #4
 800604a:	1a9b      	subs	r3, r3, r2
 800604c:	009b      	lsls	r3, r3, #2
 800604e:	440b      	add	r3, r1
 8006050:	334c      	adds	r3, #76	@ 0x4c
 8006052:	781a      	ldrb	r2, [r3, #0]
 8006054:	78fb      	ldrb	r3, [r7, #3]
 8006056:	4619      	mov	r1, r3
 8006058:	6878      	ldr	r0, [r7, #4]
 800605a:	f005 fa1b 	bl	800b494 <HAL_HCD_HC_NotifyURBChange_Callback>
 800605e:	e002      	b.n	8006066 <HCD_HC_OUT_IRQHandler+0x978>
 8006060:	bf00      	nop
 8006062:	e000      	b.n	8006066 <HCD_HC_OUT_IRQHandler+0x978>
 8006064:	bf00      	nop
 8006066:	3718      	adds	r7, #24
 8006068:	46bd      	mov	sp, r7
 800606a:	bd80      	pop	{r7, pc}

0800606c <HCD_RXQLVL_IRQHandler>:
 800606c:	b580      	push	{r7, lr}
 800606e:	b08a      	sub	sp, #40	@ 0x28
 8006070:	af00      	add	r7, sp, #0
 8006072:	6078      	str	r0, [r7, #4]
 8006074:	687b      	ldr	r3, [r7, #4]
 8006076:	681b      	ldr	r3, [r3, #0]
 8006078:	627b      	str	r3, [r7, #36]	@ 0x24
 800607a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800607c:	623b      	str	r3, [r7, #32]
 800607e:	687b      	ldr	r3, [r7, #4]
 8006080:	681b      	ldr	r3, [r3, #0]
 8006082:	6a1b      	ldr	r3, [r3, #32]
 8006084:	61fb      	str	r3, [r7, #28]
 8006086:	69fb      	ldr	r3, [r7, #28]
 8006088:	f003 030f 	and.w	r3, r3, #15
 800608c:	61bb      	str	r3, [r7, #24]
 800608e:	69fb      	ldr	r3, [r7, #28]
 8006090:	0c5b      	lsrs	r3, r3, #17
 8006092:	f003 030f 	and.w	r3, r3, #15
 8006096:	617b      	str	r3, [r7, #20]
 8006098:	69fb      	ldr	r3, [r7, #28]
 800609a:	091b      	lsrs	r3, r3, #4
 800609c:	f3c3 030a 	ubfx	r3, r3, #0, #11
 80060a0:	613b      	str	r3, [r7, #16]
 80060a2:	697b      	ldr	r3, [r7, #20]
 80060a4:	2b02      	cmp	r3, #2
 80060a6:	d004      	beq.n	80060b2 <HCD_RXQLVL_IRQHandler+0x46>
 80060a8:	697b      	ldr	r3, [r7, #20]
 80060aa:	2b05      	cmp	r3, #5
 80060ac:	f000 80b6 	beq.w	800621c <HCD_RXQLVL_IRQHandler+0x1b0>
 80060b0:	e0b7      	b.n	8006222 <HCD_RXQLVL_IRQHandler+0x1b6>
 80060b2:	693b      	ldr	r3, [r7, #16]
 80060b4:	2b00      	cmp	r3, #0
 80060b6:	f000 80b3 	beq.w	8006220 <HCD_RXQLVL_IRQHandler+0x1b4>
 80060ba:	6879      	ldr	r1, [r7, #4]
 80060bc:	69ba      	ldr	r2, [r7, #24]
 80060be:	4613      	mov	r3, r2
 80060c0:	011b      	lsls	r3, r3, #4
 80060c2:	1a9b      	subs	r3, r3, r2
 80060c4:	009b      	lsls	r3, r3, #2
 80060c6:	440b      	add	r3, r1
 80060c8:	332c      	adds	r3, #44	@ 0x2c
 80060ca:	681b      	ldr	r3, [r3, #0]
 80060cc:	2b00      	cmp	r3, #0
 80060ce:	f000 80a7 	beq.w	8006220 <HCD_RXQLVL_IRQHandler+0x1b4>
 80060d2:	6879      	ldr	r1, [r7, #4]
 80060d4:	69ba      	ldr	r2, [r7, #24]
 80060d6:	4613      	mov	r3, r2
 80060d8:	011b      	lsls	r3, r3, #4
 80060da:	1a9b      	subs	r3, r3, r2
 80060dc:	009b      	lsls	r3, r3, #2
 80060de:	440b      	add	r3, r1
 80060e0:	3338      	adds	r3, #56	@ 0x38
 80060e2:	681a      	ldr	r2, [r3, #0]
 80060e4:	693b      	ldr	r3, [r7, #16]
 80060e6:	18d1      	adds	r1, r2, r3
 80060e8:	6878      	ldr	r0, [r7, #4]
 80060ea:	69ba      	ldr	r2, [r7, #24]
 80060ec:	4613      	mov	r3, r2
 80060ee:	011b      	lsls	r3, r3, #4
 80060f0:	1a9b      	subs	r3, r3, r2
 80060f2:	009b      	lsls	r3, r3, #2
 80060f4:	4403      	add	r3, r0
 80060f6:	3334      	adds	r3, #52	@ 0x34
 80060f8:	681b      	ldr	r3, [r3, #0]
 80060fa:	4299      	cmp	r1, r3
 80060fc:	f200 8083 	bhi.w	8006206 <HCD_RXQLVL_IRQHandler+0x19a>
 8006100:	687b      	ldr	r3, [r7, #4]
 8006102:	6818      	ldr	r0, [r3, #0]
 8006104:	6879      	ldr	r1, [r7, #4]
 8006106:	69ba      	ldr	r2, [r7, #24]
 8006108:	4613      	mov	r3, r2
 800610a:	011b      	lsls	r3, r3, #4
 800610c:	1a9b      	subs	r3, r3, r2
 800610e:	009b      	lsls	r3, r3, #2
 8006110:	440b      	add	r3, r1
 8006112:	332c      	adds	r3, #44	@ 0x2c
 8006114:	681b      	ldr	r3, [r3, #0]
 8006116:	693a      	ldr	r2, [r7, #16]
 8006118:	b292      	uxth	r2, r2
 800611a:	4619      	mov	r1, r3
 800611c:	f003 fdc2 	bl	8009ca4 <USB_ReadPacket>
 8006120:	6879      	ldr	r1, [r7, #4]
 8006122:	69ba      	ldr	r2, [r7, #24]
 8006124:	4613      	mov	r3, r2
 8006126:	011b      	lsls	r3, r3, #4
 8006128:	1a9b      	subs	r3, r3, r2
 800612a:	009b      	lsls	r3, r3, #2
 800612c:	440b      	add	r3, r1
 800612e:	332c      	adds	r3, #44	@ 0x2c
 8006130:	681a      	ldr	r2, [r3, #0]
 8006132:	693b      	ldr	r3, [r7, #16]
 8006134:	18d1      	adds	r1, r2, r3
 8006136:	6878      	ldr	r0, [r7, #4]
 8006138:	69ba      	ldr	r2, [r7, #24]
 800613a:	4613      	mov	r3, r2
 800613c:	011b      	lsls	r3, r3, #4
 800613e:	1a9b      	subs	r3, r3, r2
 8006140:	009b      	lsls	r3, r3, #2
 8006142:	4403      	add	r3, r0
 8006144:	332c      	adds	r3, #44	@ 0x2c
 8006146:	6019      	str	r1, [r3, #0]
 8006148:	6879      	ldr	r1, [r7, #4]
 800614a:	69ba      	ldr	r2, [r7, #24]
 800614c:	4613      	mov	r3, r2
 800614e:	011b      	lsls	r3, r3, #4
 8006150:	1a9b      	subs	r3, r3, r2
 8006152:	009b      	lsls	r3, r3, #2
 8006154:	440b      	add	r3, r1
 8006156:	3338      	adds	r3, #56	@ 0x38
 8006158:	681a      	ldr	r2, [r3, #0]
 800615a:	693b      	ldr	r3, [r7, #16]
 800615c:	18d1      	adds	r1, r2, r3
 800615e:	6878      	ldr	r0, [r7, #4]
 8006160:	69ba      	ldr	r2, [r7, #24]
 8006162:	4613      	mov	r3, r2
 8006164:	011b      	lsls	r3, r3, #4
 8006166:	1a9b      	subs	r3, r3, r2
 8006168:	009b      	lsls	r3, r3, #2
 800616a:	4403      	add	r3, r0
 800616c:	3338      	adds	r3, #56	@ 0x38
 800616e:	6019      	str	r1, [r3, #0]
 8006170:	69bb      	ldr	r3, [r7, #24]
 8006172:	015a      	lsls	r2, r3, #5
 8006174:	6a3b      	ldr	r3, [r7, #32]
 8006176:	4413      	add	r3, r2
 8006178:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 800617c:	691b      	ldr	r3, [r3, #16]
 800617e:	0cdb      	lsrs	r3, r3, #19
 8006180:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8006184:	60fb      	str	r3, [r7, #12]
 8006186:	6879      	ldr	r1, [r7, #4]
 8006188:	69ba      	ldr	r2, [r7, #24]
 800618a:	4613      	mov	r3, r2
 800618c:	011b      	lsls	r3, r3, #4
 800618e:	1a9b      	subs	r3, r3, r2
 8006190:	009b      	lsls	r3, r3, #2
 8006192:	440b      	add	r3, r1
 8006194:	3328      	adds	r3, #40	@ 0x28
 8006196:	881b      	ldrh	r3, [r3, #0]
 8006198:	461a      	mov	r2, r3
 800619a:	693b      	ldr	r3, [r7, #16]
 800619c:	4293      	cmp	r3, r2
 800619e:	d13f      	bne.n	8006220 <HCD_RXQLVL_IRQHandler+0x1b4>
 80061a0:	68fb      	ldr	r3, [r7, #12]
 80061a2:	2b00      	cmp	r3, #0
 80061a4:	d03c      	beq.n	8006220 <HCD_RXQLVL_IRQHandler+0x1b4>
 80061a6:	69bb      	ldr	r3, [r7, #24]
 80061a8:	015a      	lsls	r2, r3, #5
 80061aa:	6a3b      	ldr	r3, [r7, #32]
 80061ac:	4413      	add	r3, r2
 80061ae:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 80061b2:	681b      	ldr	r3, [r3, #0]
 80061b4:	60bb      	str	r3, [r7, #8]
 80061b6:	68bb      	ldr	r3, [r7, #8]
 80061b8:	f023 4380 	bic.w	r3, r3, #1073741824	@ 0x40000000
 80061bc:	60bb      	str	r3, [r7, #8]
 80061be:	68bb      	ldr	r3, [r7, #8]
 80061c0:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 80061c4:	60bb      	str	r3, [r7, #8]
 80061c6:	69bb      	ldr	r3, [r7, #24]
 80061c8:	015a      	lsls	r2, r3, #5
 80061ca:	6a3b      	ldr	r3, [r7, #32]
 80061cc:	4413      	add	r3, r2
 80061ce:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 80061d2:	461a      	mov	r2, r3
 80061d4:	68bb      	ldr	r3, [r7, #8]
 80061d6:	6013      	str	r3, [r2, #0]
 80061d8:	6879      	ldr	r1, [r7, #4]
 80061da:	69ba      	ldr	r2, [r7, #24]
 80061dc:	4613      	mov	r3, r2
 80061de:	011b      	lsls	r3, r3, #4
 80061e0:	1a9b      	subs	r3, r3, r2
 80061e2:	009b      	lsls	r3, r3, #2
 80061e4:	440b      	add	r3, r1
 80061e6:	333c      	adds	r3, #60	@ 0x3c
 80061e8:	781b      	ldrb	r3, [r3, #0]
 80061ea:	f083 0301 	eor.w	r3, r3, #1
 80061ee:	b2d8      	uxtb	r0, r3
 80061f0:	6879      	ldr	r1, [r7, #4]
 80061f2:	69ba      	ldr	r2, [r7, #24]
 80061f4:	4613      	mov	r3, r2
 80061f6:	011b      	lsls	r3, r3, #4
 80061f8:	1a9b      	subs	r3, r3, r2
 80061fa:	009b      	lsls	r3, r3, #2
 80061fc:	440b      	add	r3, r1
 80061fe:	333c      	adds	r3, #60	@ 0x3c
 8006200:	4602      	mov	r2, r0
 8006202:	701a      	strb	r2, [r3, #0]
 8006204:	e00c      	b.n	8006220 <HCD_RXQLVL_IRQHandler+0x1b4>
 8006206:	6879      	ldr	r1, [r7, #4]
 8006208:	69ba      	ldr	r2, [r7, #24]
 800620a:	4613      	mov	r3, r2
 800620c:	011b      	lsls	r3, r3, #4
 800620e:	1a9b      	subs	r3, r3, r2
 8006210:	009b      	lsls	r3, r3, #2
 8006212:	440b      	add	r3, r1
 8006214:	334c      	adds	r3, #76	@ 0x4c
 8006216:	2204      	movs	r2, #4
 8006218:	701a      	strb	r2, [r3, #0]
 800621a:	e001      	b.n	8006220 <HCD_RXQLVL_IRQHandler+0x1b4>
 800621c:	bf00      	nop
 800621e:	e000      	b.n	8006222 <HCD_RXQLVL_IRQHandler+0x1b6>
 8006220:	bf00      	nop
 8006222:	bf00      	nop
 8006224:	3728      	adds	r7, #40	@ 0x28
 8006226:	46bd      	mov	sp, r7
 8006228:	bd80      	pop	{r7, pc}

0800622a <HCD_Port_IRQHandler>:
 800622a:	b580      	push	{r7, lr}
 800622c:	b086      	sub	sp, #24
 800622e:	af00      	add	r7, sp, #0
 8006230:	6078      	str	r0, [r7, #4]
 8006232:	687b      	ldr	r3, [r7, #4]
 8006234:	681b      	ldr	r3, [r3, #0]
 8006236:	617b      	str	r3, [r7, #20]
 8006238:	697b      	ldr	r3, [r7, #20]
 800623a:	613b      	str	r3, [r7, #16]
 800623c:	693b      	ldr	r3, [r7, #16]
 800623e:	f503 6388 	add.w	r3, r3, #1088	@ 0x440
 8006242:	681b      	ldr	r3, [r3, #0]
 8006244:	60fb      	str	r3, [r7, #12]
 8006246:	693b      	ldr	r3, [r7, #16]
 8006248:	f503 6388 	add.w	r3, r3, #1088	@ 0x440
 800624c:	681b      	ldr	r3, [r3, #0]
 800624e:	60bb      	str	r3, [r7, #8]
 8006250:	68bb      	ldr	r3, [r7, #8]
 8006252:	f023 032e 	bic.w	r3, r3, #46	@ 0x2e
 8006256:	60bb      	str	r3, [r7, #8]
 8006258:	68fb      	ldr	r3, [r7, #12]
 800625a:	f003 0302 	and.w	r3, r3, #2
 800625e:	2b02      	cmp	r3, #2
 8006260:	d10b      	bne.n	800627a <HCD_Port_IRQHandler+0x50>
 8006262:	68fb      	ldr	r3, [r7, #12]
 8006264:	f003 0301 	and.w	r3, r3, #1
 8006268:	2b01      	cmp	r3, #1
 800626a:	d102      	bne.n	8006272 <HCD_Port_IRQHandler+0x48>
 800626c:	6878      	ldr	r0, [r7, #4]
 800626e:	f005 f8f5 	bl	800b45c <HAL_HCD_Connect_Callback>
 8006272:	68bb      	ldr	r3, [r7, #8]
 8006274:	f043 0302 	orr.w	r3, r3, #2
 8006278:	60bb      	str	r3, [r7, #8]
 800627a:	68fb      	ldr	r3, [r7, #12]
 800627c:	f003 0308 	and.w	r3, r3, #8
 8006280:	2b08      	cmp	r3, #8
 8006282:	d132      	bne.n	80062ea <HCD_Port_IRQHandler+0xc0>
 8006284:	68bb      	ldr	r3, [r7, #8]
 8006286:	f043 0308 	orr.w	r3, r3, #8
 800628a:	60bb      	str	r3, [r7, #8]
 800628c:	68fb      	ldr	r3, [r7, #12]
 800628e:	f003 0304 	and.w	r3, r3, #4
 8006292:	2b04      	cmp	r3, #4
 8006294:	d126      	bne.n	80062e4 <HCD_Port_IRQHandler+0xba>
 8006296:	687b      	ldr	r3, [r7, #4]
 8006298:	7a5b      	ldrb	r3, [r3, #9]
 800629a:	2b02      	cmp	r3, #2
 800629c:	d113      	bne.n	80062c6 <HCD_Port_IRQHandler+0x9c>
 800629e:	68fb      	ldr	r3, [r7, #12]
 80062a0:	f403 23c0 	and.w	r3, r3, #393216	@ 0x60000
 80062a4:	f5b3 2f80 	cmp.w	r3, #262144	@ 0x40000
 80062a8:	d106      	bne.n	80062b8 <HCD_Port_IRQHandler+0x8e>
 80062aa:	687b      	ldr	r3, [r7, #4]
 80062ac:	681b      	ldr	r3, [r3, #0]
 80062ae:	2102      	movs	r1, #2
 80062b0:	4618      	mov	r0, r3
 80062b2:	f003 fd91 	bl	8009dd8 <USB_InitFSLSPClkSel>
 80062b6:	e011      	b.n	80062dc <HCD_Port_IRQHandler+0xb2>
 80062b8:	687b      	ldr	r3, [r7, #4]
 80062ba:	681b      	ldr	r3, [r3, #0]
 80062bc:	2101      	movs	r1, #1
 80062be:	4618      	mov	r0, r3
 80062c0:	f003 fd8a 	bl	8009dd8 <USB_InitFSLSPClkSel>
 80062c4:	e00a      	b.n	80062dc <HCD_Port_IRQHandler+0xb2>
 80062c6:	687b      	ldr	r3, [r7, #4]
 80062c8:	79db      	ldrb	r3, [r3, #7]
 80062ca:	2b01      	cmp	r3, #1
 80062cc:	d106      	bne.n	80062dc <HCD_Port_IRQHandler+0xb2>
 80062ce:	693b      	ldr	r3, [r7, #16]
 80062d0:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 80062d4:	461a      	mov	r2, r3
 80062d6:	f64e 2360 	movw	r3, #60000	@ 0xea60
 80062da:	6053      	str	r3, [r2, #4]
 80062dc:	6878      	ldr	r0, [r7, #4]
 80062de:	f005 f8eb 	bl	800b4b8 <HAL_HCD_PortEnabled_Callback>
 80062e2:	e002      	b.n	80062ea <HCD_Port_IRQHandler+0xc0>
 80062e4:	6878      	ldr	r0, [r7, #4]
 80062e6:	f005 f8f5 	bl	800b4d4 <HAL_HCD_PortDisabled_Callback>
 80062ea:	68fb      	ldr	r3, [r7, #12]
 80062ec:	f003 0320 	and.w	r3, r3, #32
 80062f0:	2b20      	cmp	r3, #32
 80062f2:	d103      	bne.n	80062fc <HCD_Port_IRQHandler+0xd2>
 80062f4:	68bb      	ldr	r3, [r7, #8]
 80062f6:	f043 0320 	orr.w	r3, r3, #32
 80062fa:	60bb      	str	r3, [r7, #8]
 80062fc:	693b      	ldr	r3, [r7, #16]
 80062fe:	f503 6388 	add.w	r3, r3, #1088	@ 0x440
 8006302:	461a      	mov	r2, r3
 8006304:	68bb      	ldr	r3, [r7, #8]
 8006306:	6013      	str	r3, [r2, #0]
 8006308:	bf00      	nop
 800630a:	3718      	adds	r7, #24
 800630c:	46bd      	mov	sp, r7
 800630e:	bd80      	pop	{r7, pc}

08006310 <HAL_I2C_Init>:
 8006310:	b580      	push	{r7, lr}
 8006312:	b084      	sub	sp, #16
 8006314:	af00      	add	r7, sp, #0
 8006316:	6078      	str	r0, [r7, #4]
 8006318:	687b      	ldr	r3, [r7, #4]
 800631a:	2b00      	cmp	r3, #0
 800631c:	d101      	bne.n	8006322 <HAL_I2C_Init+0x12>
 800631e:	2301      	movs	r3, #1
 8006320:	e12b      	b.n	800657a <HAL_I2C_Init+0x26a>
 8006322:	687b      	ldr	r3, [r7, #4]
 8006324:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8006328:	b2db      	uxtb	r3, r3
 800632a:	2b00      	cmp	r3, #0
 800632c:	d106      	bne.n	800633c <HAL_I2C_Init+0x2c>
 800632e:	687b      	ldr	r3, [r7, #4]
 8006330:	2200      	movs	r2, #0
 8006332:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8006336:	6878      	ldr	r0, [r7, #4]
 8006338:	f7fb fd8c 	bl	8001e54 <HAL_I2C_MspInit>
 800633c:	687b      	ldr	r3, [r7, #4]
 800633e:	2224      	movs	r2, #36	@ 0x24
 8006340:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8006344:	687b      	ldr	r3, [r7, #4]
 8006346:	681b      	ldr	r3, [r3, #0]
 8006348:	681a      	ldr	r2, [r3, #0]
 800634a:	687b      	ldr	r3, [r7, #4]
 800634c:	681b      	ldr	r3, [r3, #0]
 800634e:	f022 0201 	bic.w	r2, r2, #1
 8006352:	601a      	str	r2, [r3, #0]
 8006354:	687b      	ldr	r3, [r7, #4]
 8006356:	681b      	ldr	r3, [r3, #0]
 8006358:	681a      	ldr	r2, [r3, #0]
 800635a:	687b      	ldr	r3, [r7, #4]
 800635c:	681b      	ldr	r3, [r3, #0]
 800635e:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8006362:	601a      	str	r2, [r3, #0]
 8006364:	687b      	ldr	r3, [r7, #4]
 8006366:	681b      	ldr	r3, [r3, #0]
 8006368:	681a      	ldr	r2, [r3, #0]
 800636a:	687b      	ldr	r3, [r7, #4]
 800636c:	681b      	ldr	r3, [r3, #0]
 800636e:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 8006372:	601a      	str	r2, [r3, #0]
 8006374:	f001 f964 	bl	8007640 <HAL_RCC_GetPCLK1Freq>
 8006378:	60f8      	str	r0, [r7, #12]
 800637a:	687b      	ldr	r3, [r7, #4]
 800637c:	685b      	ldr	r3, [r3, #4]
 800637e:	4a81      	ldr	r2, [pc, #516]	@ (8006584 <HAL_I2C_Init+0x274>)
 8006380:	4293      	cmp	r3, r2
 8006382:	d807      	bhi.n	8006394 <HAL_I2C_Init+0x84>
 8006384:	68fb      	ldr	r3, [r7, #12]
 8006386:	4a80      	ldr	r2, [pc, #512]	@ (8006588 <HAL_I2C_Init+0x278>)
 8006388:	4293      	cmp	r3, r2
 800638a:	bf94      	ite	ls
 800638c:	2301      	movls	r3, #1
 800638e:	2300      	movhi	r3, #0
 8006390:	b2db      	uxtb	r3, r3
 8006392:	e006      	b.n	80063a2 <HAL_I2C_Init+0x92>
 8006394:	68fb      	ldr	r3, [r7, #12]
 8006396:	4a7d      	ldr	r2, [pc, #500]	@ (800658c <HAL_I2C_Init+0x27c>)
 8006398:	4293      	cmp	r3, r2
 800639a:	bf94      	ite	ls
 800639c:	2301      	movls	r3, #1
 800639e:	2300      	movhi	r3, #0
 80063a0:	b2db      	uxtb	r3, r3
 80063a2:	2b00      	cmp	r3, #0
 80063a4:	d001      	beq.n	80063aa <HAL_I2C_Init+0x9a>
 80063a6:	2301      	movs	r3, #1
 80063a8:	e0e7      	b.n	800657a <HAL_I2C_Init+0x26a>
 80063aa:	68fb      	ldr	r3, [r7, #12]
 80063ac:	4a78      	ldr	r2, [pc, #480]	@ (8006590 <HAL_I2C_Init+0x280>)
 80063ae:	fba2 2303 	umull	r2, r3, r2, r3
 80063b2:	0c9b      	lsrs	r3, r3, #18
 80063b4:	60bb      	str	r3, [r7, #8]
 80063b6:	687b      	ldr	r3, [r7, #4]
 80063b8:	681b      	ldr	r3, [r3, #0]
 80063ba:	685b      	ldr	r3, [r3, #4]
 80063bc:	f023 013f 	bic.w	r1, r3, #63	@ 0x3f
 80063c0:	687b      	ldr	r3, [r7, #4]
 80063c2:	681b      	ldr	r3, [r3, #0]
 80063c4:	68ba      	ldr	r2, [r7, #8]
 80063c6:	430a      	orrs	r2, r1
 80063c8:	605a      	str	r2, [r3, #4]
 80063ca:	687b      	ldr	r3, [r7, #4]
 80063cc:	681b      	ldr	r3, [r3, #0]
 80063ce:	6a1b      	ldr	r3, [r3, #32]
 80063d0:	f023 013f 	bic.w	r1, r3, #63	@ 0x3f
 80063d4:	687b      	ldr	r3, [r7, #4]
 80063d6:	685b      	ldr	r3, [r3, #4]
 80063d8:	4a6a      	ldr	r2, [pc, #424]	@ (8006584 <HAL_I2C_Init+0x274>)
 80063da:	4293      	cmp	r3, r2
 80063dc:	d802      	bhi.n	80063e4 <HAL_I2C_Init+0xd4>
 80063de:	68bb      	ldr	r3, [r7, #8]
 80063e0:	3301      	adds	r3, #1
 80063e2:	e009      	b.n	80063f8 <HAL_I2C_Init+0xe8>
 80063e4:	68bb      	ldr	r3, [r7, #8]
 80063e6:	f44f 7296 	mov.w	r2, #300	@ 0x12c
 80063ea:	fb02 f303 	mul.w	r3, r2, r3
 80063ee:	4a69      	ldr	r2, [pc, #420]	@ (8006594 <HAL_I2C_Init+0x284>)
 80063f0:	fba2 2303 	umull	r2, r3, r2, r3
 80063f4:	099b      	lsrs	r3, r3, #6
 80063f6:	3301      	adds	r3, #1
 80063f8:	687a      	ldr	r2, [r7, #4]
 80063fa:	6812      	ldr	r2, [r2, #0]
 80063fc:	430b      	orrs	r3, r1
 80063fe:	6213      	str	r3, [r2, #32]
 8006400:	687b      	ldr	r3, [r7, #4]
 8006402:	681b      	ldr	r3, [r3, #0]
 8006404:	69db      	ldr	r3, [r3, #28]
 8006406:	f423 424f 	bic.w	r2, r3, #52992	@ 0xcf00
 800640a:	f022 02ff 	bic.w	r2, r2, #255	@ 0xff
 800640e:	687b      	ldr	r3, [r7, #4]
 8006410:	685b      	ldr	r3, [r3, #4]
 8006412:	495c      	ldr	r1, [pc, #368]	@ (8006584 <HAL_I2C_Init+0x274>)
 8006414:	428b      	cmp	r3, r1
 8006416:	d819      	bhi.n	800644c <HAL_I2C_Init+0x13c>
 8006418:	68fb      	ldr	r3, [r7, #12]
 800641a:	1e59      	subs	r1, r3, #1
 800641c:	687b      	ldr	r3, [r7, #4]
 800641e:	685b      	ldr	r3, [r3, #4]
 8006420:	005b      	lsls	r3, r3, #1
 8006422:	fbb1 f3f3 	udiv	r3, r1, r3
 8006426:	1c59      	adds	r1, r3, #1
 8006428:	f640 73fc 	movw	r3, #4092	@ 0xffc
 800642c:	400b      	ands	r3, r1
 800642e:	2b00      	cmp	r3, #0
 8006430:	d00a      	beq.n	8006448 <HAL_I2C_Init+0x138>
 8006432:	68fb      	ldr	r3, [r7, #12]
 8006434:	1e59      	subs	r1, r3, #1
 8006436:	687b      	ldr	r3, [r7, #4]
 8006438:	685b      	ldr	r3, [r3, #4]
 800643a:	005b      	lsls	r3, r3, #1
 800643c:	fbb1 f3f3 	udiv	r3, r1, r3
 8006440:	3301      	adds	r3, #1
 8006442:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8006446:	e051      	b.n	80064ec <HAL_I2C_Init+0x1dc>
 8006448:	2304      	movs	r3, #4
 800644a:	e04f      	b.n	80064ec <HAL_I2C_Init+0x1dc>
 800644c:	687b      	ldr	r3, [r7, #4]
 800644e:	689b      	ldr	r3, [r3, #8]
 8006450:	2b00      	cmp	r3, #0
 8006452:	d111      	bne.n	8006478 <HAL_I2C_Init+0x168>
 8006454:	68fb      	ldr	r3, [r7, #12]
 8006456:	1e58      	subs	r0, r3, #1
 8006458:	687b      	ldr	r3, [r7, #4]
 800645a:	6859      	ldr	r1, [r3, #4]
 800645c:	460b      	mov	r3, r1
 800645e:	005b      	lsls	r3, r3, #1
 8006460:	440b      	add	r3, r1
 8006462:	fbb0 f3f3 	udiv	r3, r0, r3
 8006466:	3301      	adds	r3, #1
 8006468:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800646c:	2b00      	cmp	r3, #0
 800646e:	bf0c      	ite	eq
 8006470:	2301      	moveq	r3, #1
 8006472:	2300      	movne	r3, #0
 8006474:	b2db      	uxtb	r3, r3
 8006476:	e012      	b.n	800649e <HAL_I2C_Init+0x18e>
 8006478:	68fb      	ldr	r3, [r7, #12]
 800647a:	1e58      	subs	r0, r3, #1
 800647c:	687b      	ldr	r3, [r7, #4]
 800647e:	6859      	ldr	r1, [r3, #4]
 8006480:	460b      	mov	r3, r1
 8006482:	009b      	lsls	r3, r3, #2
 8006484:	440b      	add	r3, r1
 8006486:	0099      	lsls	r1, r3, #2
 8006488:	440b      	add	r3, r1
 800648a:	fbb0 f3f3 	udiv	r3, r0, r3
 800648e:	3301      	adds	r3, #1
 8006490:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8006494:	2b00      	cmp	r3, #0
 8006496:	bf0c      	ite	eq
 8006498:	2301      	moveq	r3, #1
 800649a:	2300      	movne	r3, #0
 800649c:	b2db      	uxtb	r3, r3
 800649e:	2b00      	cmp	r3, #0
 80064a0:	d001      	beq.n	80064a6 <HAL_I2C_Init+0x196>
 80064a2:	2301      	movs	r3, #1
 80064a4:	e022      	b.n	80064ec <HAL_I2C_Init+0x1dc>
 80064a6:	687b      	ldr	r3, [r7, #4]
 80064a8:	689b      	ldr	r3, [r3, #8]
 80064aa:	2b00      	cmp	r3, #0
 80064ac:	d10e      	bne.n	80064cc <HAL_I2C_Init+0x1bc>
 80064ae:	68fb      	ldr	r3, [r7, #12]
 80064b0:	1e58      	subs	r0, r3, #1
 80064b2:	687b      	ldr	r3, [r7, #4]
 80064b4:	6859      	ldr	r1, [r3, #4]
 80064b6:	460b      	mov	r3, r1
 80064b8:	005b      	lsls	r3, r3, #1
 80064ba:	440b      	add	r3, r1
 80064bc:	fbb0 f3f3 	udiv	r3, r0, r3
 80064c0:	3301      	adds	r3, #1
 80064c2:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80064c6:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 80064ca:	e00f      	b.n	80064ec <HAL_I2C_Init+0x1dc>
 80064cc:	68fb      	ldr	r3, [r7, #12]
 80064ce:	1e58      	subs	r0, r3, #1
 80064d0:	687b      	ldr	r3, [r7, #4]
 80064d2:	6859      	ldr	r1, [r3, #4]
 80064d4:	460b      	mov	r3, r1
 80064d6:	009b      	lsls	r3, r3, #2
 80064d8:	440b      	add	r3, r1
 80064da:	0099      	lsls	r1, r3, #2
 80064dc:	440b      	add	r3, r1
 80064de:	fbb0 f3f3 	udiv	r3, r0, r3
 80064e2:	3301      	adds	r3, #1
 80064e4:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80064e8:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 80064ec:	6879      	ldr	r1, [r7, #4]
 80064ee:	6809      	ldr	r1, [r1, #0]
 80064f0:	4313      	orrs	r3, r2
 80064f2:	61cb      	str	r3, [r1, #28]
 80064f4:	687b      	ldr	r3, [r7, #4]
 80064f6:	681b      	ldr	r3, [r3, #0]
 80064f8:	681b      	ldr	r3, [r3, #0]
 80064fa:	f023 01c0 	bic.w	r1, r3, #192	@ 0xc0
 80064fe:	687b      	ldr	r3, [r7, #4]
 8006500:	69da      	ldr	r2, [r3, #28]
 8006502:	687b      	ldr	r3, [r7, #4]
 8006504:	6a1b      	ldr	r3, [r3, #32]
 8006506:	431a      	orrs	r2, r3
 8006508:	687b      	ldr	r3, [r7, #4]
 800650a:	681b      	ldr	r3, [r3, #0]
 800650c:	430a      	orrs	r2, r1
 800650e:	601a      	str	r2, [r3, #0]
 8006510:	687b      	ldr	r3, [r7, #4]
 8006512:	681b      	ldr	r3, [r3, #0]
 8006514:	689b      	ldr	r3, [r3, #8]
 8006516:	f423 4303 	bic.w	r3, r3, #33536	@ 0x8300
 800651a:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
 800651e:	687a      	ldr	r2, [r7, #4]
 8006520:	6911      	ldr	r1, [r2, #16]
 8006522:	687a      	ldr	r2, [r7, #4]
 8006524:	68d2      	ldr	r2, [r2, #12]
 8006526:	4311      	orrs	r1, r2
 8006528:	687a      	ldr	r2, [r7, #4]
 800652a:	6812      	ldr	r2, [r2, #0]
 800652c:	430b      	orrs	r3, r1
 800652e:	6093      	str	r3, [r2, #8]
 8006530:	687b      	ldr	r3, [r7, #4]
 8006532:	681b      	ldr	r3, [r3, #0]
 8006534:	68db      	ldr	r3, [r3, #12]
 8006536:	f023 01ff 	bic.w	r1, r3, #255	@ 0xff
 800653a:	687b      	ldr	r3, [r7, #4]
 800653c:	695a      	ldr	r2, [r3, #20]
 800653e:	687b      	ldr	r3, [r7, #4]
 8006540:	699b      	ldr	r3, [r3, #24]
 8006542:	431a      	orrs	r2, r3
 8006544:	687b      	ldr	r3, [r7, #4]
 8006546:	681b      	ldr	r3, [r3, #0]
 8006548:	430a      	orrs	r2, r1
 800654a:	60da      	str	r2, [r3, #12]
 800654c:	687b      	ldr	r3, [r7, #4]
 800654e:	681b      	ldr	r3, [r3, #0]
 8006550:	681a      	ldr	r2, [r3, #0]
 8006552:	687b      	ldr	r3, [r7, #4]
 8006554:	681b      	ldr	r3, [r3, #0]
 8006556:	f042 0201 	orr.w	r2, r2, #1
 800655a:	601a      	str	r2, [r3, #0]
 800655c:	687b      	ldr	r3, [r7, #4]
 800655e:	2200      	movs	r2, #0
 8006560:	641a      	str	r2, [r3, #64]	@ 0x40
 8006562:	687b      	ldr	r3, [r7, #4]
 8006564:	2220      	movs	r2, #32
 8006566:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800656a:	687b      	ldr	r3, [r7, #4]
 800656c:	2200      	movs	r2, #0
 800656e:	631a      	str	r2, [r3, #48]	@ 0x30
 8006570:	687b      	ldr	r3, [r7, #4]
 8006572:	2200      	movs	r2, #0
 8006574:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8006578:	2300      	movs	r3, #0
 800657a:	4618      	mov	r0, r3
 800657c:	3710      	adds	r7, #16
 800657e:	46bd      	mov	sp, r7
 8006580:	bd80      	pop	{r7, pc}
 8006582:	bf00      	nop
 8006584:	000186a0 	.word	0x000186a0
 8006588:	001e847f 	.word	0x001e847f
 800658c:	003d08ff 	.word	0x003d08ff
 8006590:	431bde83 	.word	0x431bde83
 8006594:	10624dd3 	.word	0x10624dd3

08006598 <HAL_I2CEx_ConfigAnalogFilter>:
 8006598:	b480      	push	{r7}
 800659a:	b083      	sub	sp, #12
 800659c:	af00      	add	r7, sp, #0
 800659e:	6078      	str	r0, [r7, #4]
 80065a0:	6039      	str	r1, [r7, #0]
 80065a2:	687b      	ldr	r3, [r7, #4]
 80065a4:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 80065a8:	b2db      	uxtb	r3, r3
 80065aa:	2b20      	cmp	r3, #32
 80065ac:	d129      	bne.n	8006602 <HAL_I2CEx_ConfigAnalogFilter+0x6a>
 80065ae:	687b      	ldr	r3, [r7, #4]
 80065b0:	2224      	movs	r2, #36	@ 0x24
 80065b2:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80065b6:	687b      	ldr	r3, [r7, #4]
 80065b8:	681b      	ldr	r3, [r3, #0]
 80065ba:	681a      	ldr	r2, [r3, #0]
 80065bc:	687b      	ldr	r3, [r7, #4]
 80065be:	681b      	ldr	r3, [r3, #0]
 80065c0:	f022 0201 	bic.w	r2, r2, #1
 80065c4:	601a      	str	r2, [r3, #0]
 80065c6:	687b      	ldr	r3, [r7, #4]
 80065c8:	681b      	ldr	r3, [r3, #0]
 80065ca:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80065cc:	687b      	ldr	r3, [r7, #4]
 80065ce:	681b      	ldr	r3, [r3, #0]
 80065d0:	f022 0210 	bic.w	r2, r2, #16
 80065d4:	625a      	str	r2, [r3, #36]	@ 0x24
 80065d6:	687b      	ldr	r3, [r7, #4]
 80065d8:	681b      	ldr	r3, [r3, #0]
 80065da:	6a59      	ldr	r1, [r3, #36]	@ 0x24
 80065dc:	687b      	ldr	r3, [r7, #4]
 80065de:	681b      	ldr	r3, [r3, #0]
 80065e0:	683a      	ldr	r2, [r7, #0]
 80065e2:	430a      	orrs	r2, r1
 80065e4:	625a      	str	r2, [r3, #36]	@ 0x24
 80065e6:	687b      	ldr	r3, [r7, #4]
 80065e8:	681b      	ldr	r3, [r3, #0]
 80065ea:	681a      	ldr	r2, [r3, #0]
 80065ec:	687b      	ldr	r3, [r7, #4]
 80065ee:	681b      	ldr	r3, [r3, #0]
 80065f0:	f042 0201 	orr.w	r2, r2, #1
 80065f4:	601a      	str	r2, [r3, #0]
 80065f6:	687b      	ldr	r3, [r7, #4]
 80065f8:	2220      	movs	r2, #32
 80065fa:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80065fe:	2300      	movs	r3, #0
 8006600:	e000      	b.n	8006604 <HAL_I2CEx_ConfigAnalogFilter+0x6c>
 8006602:	2302      	movs	r3, #2
 8006604:	4618      	mov	r0, r3
 8006606:	370c      	adds	r7, #12
 8006608:	46bd      	mov	sp, r7
 800660a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800660e:	4770      	bx	lr

08006610 <HAL_I2CEx_ConfigDigitalFilter>:
 8006610:	b480      	push	{r7}
 8006612:	b085      	sub	sp, #20
 8006614:	af00      	add	r7, sp, #0
 8006616:	6078      	str	r0, [r7, #4]
 8006618:	6039      	str	r1, [r7, #0]
 800661a:	2300      	movs	r3, #0
 800661c:	81fb      	strh	r3, [r7, #14]
 800661e:	687b      	ldr	r3, [r7, #4]
 8006620:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8006624:	b2db      	uxtb	r3, r3
 8006626:	2b20      	cmp	r3, #32
 8006628:	d12a      	bne.n	8006680 <HAL_I2CEx_ConfigDigitalFilter+0x70>
 800662a:	687b      	ldr	r3, [r7, #4]
 800662c:	2224      	movs	r2, #36	@ 0x24
 800662e:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8006632:	687b      	ldr	r3, [r7, #4]
 8006634:	681b      	ldr	r3, [r3, #0]
 8006636:	681a      	ldr	r2, [r3, #0]
 8006638:	687b      	ldr	r3, [r7, #4]
 800663a:	681b      	ldr	r3, [r3, #0]
 800663c:	f022 0201 	bic.w	r2, r2, #1
 8006640:	601a      	str	r2, [r3, #0]
 8006642:	687b      	ldr	r3, [r7, #4]
 8006644:	681b      	ldr	r3, [r3, #0]
 8006646:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8006648:	81fb      	strh	r3, [r7, #14]
 800664a:	89fb      	ldrh	r3, [r7, #14]
 800664c:	f023 030f 	bic.w	r3, r3, #15
 8006650:	81fb      	strh	r3, [r7, #14]
 8006652:	683b      	ldr	r3, [r7, #0]
 8006654:	b29a      	uxth	r2, r3
 8006656:	89fb      	ldrh	r3, [r7, #14]
 8006658:	4313      	orrs	r3, r2
 800665a:	81fb      	strh	r3, [r7, #14]
 800665c:	687b      	ldr	r3, [r7, #4]
 800665e:	681b      	ldr	r3, [r3, #0]
 8006660:	89fa      	ldrh	r2, [r7, #14]
 8006662:	625a      	str	r2, [r3, #36]	@ 0x24
 8006664:	687b      	ldr	r3, [r7, #4]
 8006666:	681b      	ldr	r3, [r3, #0]
 8006668:	681a      	ldr	r2, [r3, #0]
 800666a:	687b      	ldr	r3, [r7, #4]
 800666c:	681b      	ldr	r3, [r3, #0]
 800666e:	f042 0201 	orr.w	r2, r2, #1
 8006672:	601a      	str	r2, [r3, #0]
 8006674:	687b      	ldr	r3, [r7, #4]
 8006676:	2220      	movs	r2, #32
 8006678:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800667c:	2300      	movs	r3, #0
 800667e:	e000      	b.n	8006682 <HAL_I2CEx_ConfigDigitalFilter+0x72>
 8006680:	2302      	movs	r3, #2
 8006682:	4618      	mov	r0, r3
 8006684:	3714      	adds	r7, #20
 8006686:	46bd      	mov	sp, r7
 8006688:	f85d 7b04 	ldr.w	r7, [sp], #4
 800668c:	4770      	bx	lr
	...

08006690 <HAL_LTDC_Init>:
 8006690:	b580      	push	{r7, lr}
 8006692:	b084      	sub	sp, #16
 8006694:	af00      	add	r7, sp, #0
 8006696:	6078      	str	r0, [r7, #4]
 8006698:	687b      	ldr	r3, [r7, #4]
 800669a:	2b00      	cmp	r3, #0
 800669c:	d101      	bne.n	80066a2 <HAL_LTDC_Init+0x12>
 800669e:	2301      	movs	r3, #1
 80066a0:	e0bf      	b.n	8006822 <HAL_LTDC_Init+0x192>
 80066a2:	687b      	ldr	r3, [r7, #4]
 80066a4:	f893 30a1 	ldrb.w	r3, [r3, #161]	@ 0xa1
 80066a8:	b2db      	uxtb	r3, r3
 80066aa:	2b00      	cmp	r3, #0
 80066ac:	d106      	bne.n	80066bc <HAL_LTDC_Init+0x2c>
 80066ae:	687b      	ldr	r3, [r7, #4]
 80066b0:	2200      	movs	r2, #0
 80066b2:	f883 20a0 	strb.w	r2, [r3, #160]	@ 0xa0
 80066b6:	6878      	ldr	r0, [r7, #4]
 80066b8:	f7fc f9ae 	bl	8002a18 <HAL_LTDC_MspInit>
 80066bc:	687b      	ldr	r3, [r7, #4]
 80066be:	2202      	movs	r2, #2
 80066c0:	f883 20a1 	strb.w	r2, [r3, #161]	@ 0xa1
 80066c4:	687b      	ldr	r3, [r7, #4]
 80066c6:	681b      	ldr	r3, [r3, #0]
 80066c8:	699a      	ldr	r2, [r3, #24]
 80066ca:	687b      	ldr	r3, [r7, #4]
 80066cc:	681b      	ldr	r3, [r3, #0]
 80066ce:	f022 4270 	bic.w	r2, r2, #4026531840	@ 0xf0000000
 80066d2:	619a      	str	r2, [r3, #24]
 80066d4:	687b      	ldr	r3, [r7, #4]
 80066d6:	681b      	ldr	r3, [r3, #0]
 80066d8:	6999      	ldr	r1, [r3, #24]
 80066da:	687b      	ldr	r3, [r7, #4]
 80066dc:	685a      	ldr	r2, [r3, #4]
 80066de:	687b      	ldr	r3, [r7, #4]
 80066e0:	689b      	ldr	r3, [r3, #8]
 80066e2:	431a      	orrs	r2, r3
 80066e4:	687b      	ldr	r3, [r7, #4]
 80066e6:	68db      	ldr	r3, [r3, #12]
 80066e8:	431a      	orrs	r2, r3
 80066ea:	687b      	ldr	r3, [r7, #4]
 80066ec:	691b      	ldr	r3, [r3, #16]
 80066ee:	431a      	orrs	r2, r3
 80066f0:	687b      	ldr	r3, [r7, #4]
 80066f2:	681b      	ldr	r3, [r3, #0]
 80066f4:	430a      	orrs	r2, r1
 80066f6:	619a      	str	r2, [r3, #24]
 80066f8:	687b      	ldr	r3, [r7, #4]
 80066fa:	681b      	ldr	r3, [r3, #0]
 80066fc:	6899      	ldr	r1, [r3, #8]
 80066fe:	687b      	ldr	r3, [r7, #4]
 8006700:	681a      	ldr	r2, [r3, #0]
 8006702:	4b4a      	ldr	r3, [pc, #296]	@ (800682c <HAL_LTDC_Init+0x19c>)
 8006704:	400b      	ands	r3, r1
 8006706:	6093      	str	r3, [r2, #8]
 8006708:	687b      	ldr	r3, [r7, #4]
 800670a:	695b      	ldr	r3, [r3, #20]
 800670c:	041b      	lsls	r3, r3, #16
 800670e:	60fb      	str	r3, [r7, #12]
 8006710:	687b      	ldr	r3, [r7, #4]
 8006712:	681b      	ldr	r3, [r3, #0]
 8006714:	6899      	ldr	r1, [r3, #8]
 8006716:	687b      	ldr	r3, [r7, #4]
 8006718:	699a      	ldr	r2, [r3, #24]
 800671a:	68fb      	ldr	r3, [r7, #12]
 800671c:	431a      	orrs	r2, r3
 800671e:	687b      	ldr	r3, [r7, #4]
 8006720:	681b      	ldr	r3, [r3, #0]
 8006722:	430a      	orrs	r2, r1
 8006724:	609a      	str	r2, [r3, #8]
 8006726:	687b      	ldr	r3, [r7, #4]
 8006728:	681b      	ldr	r3, [r3, #0]
 800672a:	68d9      	ldr	r1, [r3, #12]
 800672c:	687b      	ldr	r3, [r7, #4]
 800672e:	681a      	ldr	r2, [r3, #0]
 8006730:	4b3e      	ldr	r3, [pc, #248]	@ (800682c <HAL_LTDC_Init+0x19c>)
 8006732:	400b      	ands	r3, r1
 8006734:	60d3      	str	r3, [r2, #12]
 8006736:	687b      	ldr	r3, [r7, #4]
 8006738:	69db      	ldr	r3, [r3, #28]
 800673a:	041b      	lsls	r3, r3, #16
 800673c:	60fb      	str	r3, [r7, #12]
 800673e:	687b      	ldr	r3, [r7, #4]
 8006740:	681b      	ldr	r3, [r3, #0]
 8006742:	68d9      	ldr	r1, [r3, #12]
 8006744:	687b      	ldr	r3, [r7, #4]
 8006746:	6a1a      	ldr	r2, [r3, #32]
 8006748:	68fb      	ldr	r3, [r7, #12]
 800674a:	431a      	orrs	r2, r3
 800674c:	687b      	ldr	r3, [r7, #4]
 800674e:	681b      	ldr	r3, [r3, #0]
 8006750:	430a      	orrs	r2, r1
 8006752:	60da      	str	r2, [r3, #12]
 8006754:	687b      	ldr	r3, [r7, #4]
 8006756:	681b      	ldr	r3, [r3, #0]
 8006758:	6919      	ldr	r1, [r3, #16]
 800675a:	687b      	ldr	r3, [r7, #4]
 800675c:	681a      	ldr	r2, [r3, #0]
 800675e:	4b33      	ldr	r3, [pc, #204]	@ (800682c <HAL_LTDC_Init+0x19c>)
 8006760:	400b      	ands	r3, r1
 8006762:	6113      	str	r3, [r2, #16]
 8006764:	687b      	ldr	r3, [r7, #4]
 8006766:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8006768:	041b      	lsls	r3, r3, #16
 800676a:	60fb      	str	r3, [r7, #12]
 800676c:	687b      	ldr	r3, [r7, #4]
 800676e:	681b      	ldr	r3, [r3, #0]
 8006770:	6919      	ldr	r1, [r3, #16]
 8006772:	687b      	ldr	r3, [r7, #4]
 8006774:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8006776:	68fb      	ldr	r3, [r7, #12]
 8006778:	431a      	orrs	r2, r3
 800677a:	687b      	ldr	r3, [r7, #4]
 800677c:	681b      	ldr	r3, [r3, #0]
 800677e:	430a      	orrs	r2, r1
 8006780:	611a      	str	r2, [r3, #16]
 8006782:	687b      	ldr	r3, [r7, #4]
 8006784:	681b      	ldr	r3, [r3, #0]
 8006786:	6959      	ldr	r1, [r3, #20]
 8006788:	687b      	ldr	r3, [r7, #4]
 800678a:	681a      	ldr	r2, [r3, #0]
 800678c:	4b27      	ldr	r3, [pc, #156]	@ (800682c <HAL_LTDC_Init+0x19c>)
 800678e:	400b      	ands	r3, r1
 8006790:	6153      	str	r3, [r2, #20]
 8006792:	687b      	ldr	r3, [r7, #4]
 8006794:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8006796:	041b      	lsls	r3, r3, #16
 8006798:	60fb      	str	r3, [r7, #12]
 800679a:	687b      	ldr	r3, [r7, #4]
 800679c:	681b      	ldr	r3, [r3, #0]
 800679e:	6959      	ldr	r1, [r3, #20]
 80067a0:	687b      	ldr	r3, [r7, #4]
 80067a2:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80067a4:	68fb      	ldr	r3, [r7, #12]
 80067a6:	431a      	orrs	r2, r3
 80067a8:	687b      	ldr	r3, [r7, #4]
 80067aa:	681b      	ldr	r3, [r3, #0]
 80067ac:	430a      	orrs	r2, r1
 80067ae:	615a      	str	r2, [r3, #20]
 80067b0:	687b      	ldr	r3, [r7, #4]
 80067b2:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 80067b6:	021b      	lsls	r3, r3, #8
 80067b8:	60fb      	str	r3, [r7, #12]
 80067ba:	687b      	ldr	r3, [r7, #4]
 80067bc:	f893 3036 	ldrb.w	r3, [r3, #54]	@ 0x36
 80067c0:	041b      	lsls	r3, r3, #16
 80067c2:	60bb      	str	r3, [r7, #8]
 80067c4:	687b      	ldr	r3, [r7, #4]
 80067c6:	681b      	ldr	r3, [r3, #0]
 80067c8:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80067ca:	687b      	ldr	r3, [r7, #4]
 80067cc:	681b      	ldr	r3, [r3, #0]
 80067ce:	f002 427f 	and.w	r2, r2, #4278190080	@ 0xff000000
 80067d2:	62da      	str	r2, [r3, #44]	@ 0x2c
 80067d4:	687b      	ldr	r3, [r7, #4]
 80067d6:	681b      	ldr	r3, [r3, #0]
 80067d8:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 80067da:	68ba      	ldr	r2, [r7, #8]
 80067dc:	68fb      	ldr	r3, [r7, #12]
 80067de:	4313      	orrs	r3, r2
 80067e0:	687a      	ldr	r2, [r7, #4]
 80067e2:	f892 2034 	ldrb.w	r2, [r2, #52]	@ 0x34
 80067e6:	431a      	orrs	r2, r3
 80067e8:	687b      	ldr	r3, [r7, #4]
 80067ea:	681b      	ldr	r3, [r3, #0]
 80067ec:	430a      	orrs	r2, r1
 80067ee:	62da      	str	r2, [r3, #44]	@ 0x2c
 80067f0:	687b      	ldr	r3, [r7, #4]
 80067f2:	681b      	ldr	r3, [r3, #0]
 80067f4:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80067f6:	687b      	ldr	r3, [r7, #4]
 80067f8:	681b      	ldr	r3, [r3, #0]
 80067fa:	f042 0206 	orr.w	r2, r2, #6
 80067fe:	635a      	str	r2, [r3, #52]	@ 0x34
 8006800:	687b      	ldr	r3, [r7, #4]
 8006802:	681b      	ldr	r3, [r3, #0]
 8006804:	699a      	ldr	r2, [r3, #24]
 8006806:	687b      	ldr	r3, [r7, #4]
 8006808:	681b      	ldr	r3, [r3, #0]
 800680a:	f042 0201 	orr.w	r2, r2, #1
 800680e:	619a      	str	r2, [r3, #24]
 8006810:	687b      	ldr	r3, [r7, #4]
 8006812:	2200      	movs	r2, #0
 8006814:	f8c3 20a4 	str.w	r2, [r3, #164]	@ 0xa4
 8006818:	687b      	ldr	r3, [r7, #4]
 800681a:	2201      	movs	r2, #1
 800681c:	f883 20a1 	strb.w	r2, [r3, #161]	@ 0xa1
 8006820:	2300      	movs	r3, #0
 8006822:	4618      	mov	r0, r3
 8006824:	3710      	adds	r7, #16
 8006826:	46bd      	mov	sp, r7
 8006828:	bd80      	pop	{r7, pc}
 800682a:	bf00      	nop
 800682c:	f000f800 	.word	0xf000f800

08006830 <HAL_LTDC_IRQHandler>:
 8006830:	b580      	push	{r7, lr}
 8006832:	b084      	sub	sp, #16
 8006834:	af00      	add	r7, sp, #0
 8006836:	6078      	str	r0, [r7, #4]
 8006838:	687b      	ldr	r3, [r7, #4]
 800683a:	681b      	ldr	r3, [r3, #0]
 800683c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800683e:	60fb      	str	r3, [r7, #12]
 8006840:	687b      	ldr	r3, [r7, #4]
 8006842:	681b      	ldr	r3, [r3, #0]
 8006844:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8006846:	60bb      	str	r3, [r7, #8]
 8006848:	68fb      	ldr	r3, [r7, #12]
 800684a:	f003 0304 	and.w	r3, r3, #4
 800684e:	2b00      	cmp	r3, #0
 8006850:	d023      	beq.n	800689a <HAL_LTDC_IRQHandler+0x6a>
 8006852:	68bb      	ldr	r3, [r7, #8]
 8006854:	f003 0304 	and.w	r3, r3, #4
 8006858:	2b00      	cmp	r3, #0
 800685a:	d01e      	beq.n	800689a <HAL_LTDC_IRQHandler+0x6a>
 800685c:	687b      	ldr	r3, [r7, #4]
 800685e:	681b      	ldr	r3, [r3, #0]
 8006860:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8006862:	687b      	ldr	r3, [r7, #4]
 8006864:	681b      	ldr	r3, [r3, #0]
 8006866:	f022 0204 	bic.w	r2, r2, #4
 800686a:	635a      	str	r2, [r3, #52]	@ 0x34
 800686c:	687b      	ldr	r3, [r7, #4]
 800686e:	681b      	ldr	r3, [r3, #0]
 8006870:	2204      	movs	r2, #4
 8006872:	63da      	str	r2, [r3, #60]	@ 0x3c
 8006874:	687b      	ldr	r3, [r7, #4]
 8006876:	f8d3 30a4 	ldr.w	r3, [r3, #164]	@ 0xa4
 800687a:	f043 0201 	orr.w	r2, r3, #1
 800687e:	687b      	ldr	r3, [r7, #4]
 8006880:	f8c3 20a4 	str.w	r2, [r3, #164]	@ 0xa4
 8006884:	687b      	ldr	r3, [r7, #4]
 8006886:	2204      	movs	r2, #4
 8006888:	f883 20a1 	strb.w	r2, [r3, #161]	@ 0xa1
 800688c:	687b      	ldr	r3, [r7, #4]
 800688e:	2200      	movs	r2, #0
 8006890:	f883 20a0 	strb.w	r2, [r3, #160]	@ 0xa0
 8006894:	6878      	ldr	r0, [r7, #4]
 8006896:	f000 f86f 	bl	8006978 <HAL_LTDC_ErrorCallback>
 800689a:	68fb      	ldr	r3, [r7, #12]
 800689c:	f003 0302 	and.w	r3, r3, #2
 80068a0:	2b00      	cmp	r3, #0
 80068a2:	d023      	beq.n	80068ec <HAL_LTDC_IRQHandler+0xbc>
 80068a4:	68bb      	ldr	r3, [r7, #8]
 80068a6:	f003 0302 	and.w	r3, r3, #2
 80068aa:	2b00      	cmp	r3, #0
 80068ac:	d01e      	beq.n	80068ec <HAL_LTDC_IRQHandler+0xbc>
 80068ae:	687b      	ldr	r3, [r7, #4]
 80068b0:	681b      	ldr	r3, [r3, #0]
 80068b2:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80068b4:	687b      	ldr	r3, [r7, #4]
 80068b6:	681b      	ldr	r3, [r3, #0]
 80068b8:	f022 0202 	bic.w	r2, r2, #2
 80068bc:	635a      	str	r2, [r3, #52]	@ 0x34
 80068be:	687b      	ldr	r3, [r7, #4]
 80068c0:	681b      	ldr	r3, [r3, #0]
 80068c2:	2202      	movs	r2, #2
 80068c4:	63da      	str	r2, [r3, #60]	@ 0x3c
 80068c6:	687b      	ldr	r3, [r7, #4]
 80068c8:	f8d3 30a4 	ldr.w	r3, [r3, #164]	@ 0xa4
 80068cc:	f043 0202 	orr.w	r2, r3, #2
 80068d0:	687b      	ldr	r3, [r7, #4]
 80068d2:	f8c3 20a4 	str.w	r2, [r3, #164]	@ 0xa4
 80068d6:	687b      	ldr	r3, [r7, #4]
 80068d8:	2204      	movs	r2, #4
 80068da:	f883 20a1 	strb.w	r2, [r3, #161]	@ 0xa1
 80068de:	687b      	ldr	r3, [r7, #4]
 80068e0:	2200      	movs	r2, #0
 80068e2:	f883 20a0 	strb.w	r2, [r3, #160]	@ 0xa0
 80068e6:	6878      	ldr	r0, [r7, #4]
 80068e8:	f000 f846 	bl	8006978 <HAL_LTDC_ErrorCallback>
 80068ec:	68fb      	ldr	r3, [r7, #12]
 80068ee:	f003 0301 	and.w	r3, r3, #1
 80068f2:	2b00      	cmp	r3, #0
 80068f4:	d01b      	beq.n	800692e <HAL_LTDC_IRQHandler+0xfe>
 80068f6:	68bb      	ldr	r3, [r7, #8]
 80068f8:	f003 0301 	and.w	r3, r3, #1
 80068fc:	2b00      	cmp	r3, #0
 80068fe:	d016      	beq.n	800692e <HAL_LTDC_IRQHandler+0xfe>
 8006900:	687b      	ldr	r3, [r7, #4]
 8006902:	681b      	ldr	r3, [r3, #0]
 8006904:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8006906:	687b      	ldr	r3, [r7, #4]
 8006908:	681b      	ldr	r3, [r3, #0]
 800690a:	f022 0201 	bic.w	r2, r2, #1
 800690e:	635a      	str	r2, [r3, #52]	@ 0x34
 8006910:	687b      	ldr	r3, [r7, #4]
 8006912:	681b      	ldr	r3, [r3, #0]
 8006914:	2201      	movs	r2, #1
 8006916:	63da      	str	r2, [r3, #60]	@ 0x3c
 8006918:	687b      	ldr	r3, [r7, #4]
 800691a:	2201      	movs	r2, #1
 800691c:	f883 20a1 	strb.w	r2, [r3, #161]	@ 0xa1
 8006920:	687b      	ldr	r3, [r7, #4]
 8006922:	2200      	movs	r2, #0
 8006924:	f883 20a0 	strb.w	r2, [r3, #160]	@ 0xa0
 8006928:	6878      	ldr	r0, [r7, #4]
 800692a:	f000 f82f 	bl	800698c <HAL_LTDC_LineEventCallback>
 800692e:	68fb      	ldr	r3, [r7, #12]
 8006930:	f003 0308 	and.w	r3, r3, #8
 8006934:	2b00      	cmp	r3, #0
 8006936:	d01b      	beq.n	8006970 <HAL_LTDC_IRQHandler+0x140>
 8006938:	68bb      	ldr	r3, [r7, #8]
 800693a:	f003 0308 	and.w	r3, r3, #8
 800693e:	2b00      	cmp	r3, #0
 8006940:	d016      	beq.n	8006970 <HAL_LTDC_IRQHandler+0x140>
 8006942:	687b      	ldr	r3, [r7, #4]
 8006944:	681b      	ldr	r3, [r3, #0]
 8006946:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8006948:	687b      	ldr	r3, [r7, #4]
 800694a:	681b      	ldr	r3, [r3, #0]
 800694c:	f022 0208 	bic.w	r2, r2, #8
 8006950:	635a      	str	r2, [r3, #52]	@ 0x34
 8006952:	687b      	ldr	r3, [r7, #4]
 8006954:	681b      	ldr	r3, [r3, #0]
 8006956:	2208      	movs	r2, #8
 8006958:	63da      	str	r2, [r3, #60]	@ 0x3c
 800695a:	687b      	ldr	r3, [r7, #4]
 800695c:	2201      	movs	r2, #1
 800695e:	f883 20a1 	strb.w	r2, [r3, #161]	@ 0xa1
 8006962:	687b      	ldr	r3, [r7, #4]
 8006964:	2200      	movs	r2, #0
 8006966:	f883 20a0 	strb.w	r2, [r3, #160]	@ 0xa0
 800696a:	6878      	ldr	r0, [r7, #4]
 800696c:	f000 f818 	bl	80069a0 <HAL_LTDC_ReloadEventCallback>
 8006970:	bf00      	nop
 8006972:	3710      	adds	r7, #16
 8006974:	46bd      	mov	sp, r7
 8006976:	bd80      	pop	{r7, pc}

08006978 <HAL_LTDC_ErrorCallback>:
 8006978:	b480      	push	{r7}
 800697a:	b083      	sub	sp, #12
 800697c:	af00      	add	r7, sp, #0
 800697e:	6078      	str	r0, [r7, #4]
 8006980:	bf00      	nop
 8006982:	370c      	adds	r7, #12
 8006984:	46bd      	mov	sp, r7
 8006986:	f85d 7b04 	ldr.w	r7, [sp], #4
 800698a:	4770      	bx	lr

0800698c <HAL_LTDC_LineEventCallback>:
 800698c:	b480      	push	{r7}
 800698e:	b083      	sub	sp, #12
 8006990:	af00      	add	r7, sp, #0
 8006992:	6078      	str	r0, [r7, #4]
 8006994:	bf00      	nop
 8006996:	370c      	adds	r7, #12
 8006998:	46bd      	mov	sp, r7
 800699a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800699e:	4770      	bx	lr

080069a0 <HAL_LTDC_ReloadEventCallback>:
 80069a0:	b480      	push	{r7}
 80069a2:	b083      	sub	sp, #12
 80069a4:	af00      	add	r7, sp, #0
 80069a6:	6078      	str	r0, [r7, #4]
 80069a8:	bf00      	nop
 80069aa:	370c      	adds	r7, #12
 80069ac:	46bd      	mov	sp, r7
 80069ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80069b2:	4770      	bx	lr

080069b4 <HAL_LTDC_ConfigLayer>:
 80069b4:	b5b0      	push	{r4, r5, r7, lr}
 80069b6:	b084      	sub	sp, #16
 80069b8:	af00      	add	r7, sp, #0
 80069ba:	60f8      	str	r0, [r7, #12]
 80069bc:	60b9      	str	r1, [r7, #8]
 80069be:	607a      	str	r2, [r7, #4]
 80069c0:	68fb      	ldr	r3, [r7, #12]
 80069c2:	f893 30a0 	ldrb.w	r3, [r3, #160]	@ 0xa0
 80069c6:	2b01      	cmp	r3, #1
 80069c8:	d101      	bne.n	80069ce <HAL_LTDC_ConfigLayer+0x1a>
 80069ca:	2302      	movs	r3, #2
 80069cc:	e02c      	b.n	8006a28 <HAL_LTDC_ConfigLayer+0x74>
 80069ce:	68fb      	ldr	r3, [r7, #12]
 80069d0:	2201      	movs	r2, #1
 80069d2:	f883 20a0 	strb.w	r2, [r3, #160]	@ 0xa0
 80069d6:	68fb      	ldr	r3, [r7, #12]
 80069d8:	2202      	movs	r2, #2
 80069da:	f883 20a1 	strb.w	r2, [r3, #161]	@ 0xa1
 80069de:	68fa      	ldr	r2, [r7, #12]
 80069e0:	687b      	ldr	r3, [r7, #4]
 80069e2:	2134      	movs	r1, #52	@ 0x34
 80069e4:	fb01 f303 	mul.w	r3, r1, r3
 80069e8:	4413      	add	r3, r2
 80069ea:	f103 0238 	add.w	r2, r3, #56	@ 0x38
 80069ee:	68bb      	ldr	r3, [r7, #8]
 80069f0:	4614      	mov	r4, r2
 80069f2:	461d      	mov	r5, r3
 80069f4:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80069f6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80069f8:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80069fa:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80069fc:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80069fe:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8006a00:	682b      	ldr	r3, [r5, #0]
 8006a02:	6023      	str	r3, [r4, #0]
 8006a04:	687a      	ldr	r2, [r7, #4]
 8006a06:	68b9      	ldr	r1, [r7, #8]
 8006a08:	68f8      	ldr	r0, [r7, #12]
 8006a0a:	f000 f811 	bl	8006a30 <LTDC_SetConfig>
 8006a0e:	68fb      	ldr	r3, [r7, #12]
 8006a10:	681b      	ldr	r3, [r3, #0]
 8006a12:	2201      	movs	r2, #1
 8006a14:	625a      	str	r2, [r3, #36]	@ 0x24
 8006a16:	68fb      	ldr	r3, [r7, #12]
 8006a18:	2201      	movs	r2, #1
 8006a1a:	f883 20a1 	strb.w	r2, [r3, #161]	@ 0xa1
 8006a1e:	68fb      	ldr	r3, [r7, #12]
 8006a20:	2200      	movs	r2, #0
 8006a22:	f883 20a0 	strb.w	r2, [r3, #160]	@ 0xa0
 8006a26:	2300      	movs	r3, #0
 8006a28:	4618      	mov	r0, r3
 8006a2a:	3710      	adds	r7, #16
 8006a2c:	46bd      	mov	sp, r7
 8006a2e:	bdb0      	pop	{r4, r5, r7, pc}

08006a30 <LTDC_SetConfig>:
 8006a30:	b480      	push	{r7}
 8006a32:	b089      	sub	sp, #36	@ 0x24
 8006a34:	af00      	add	r7, sp, #0
 8006a36:	60f8      	str	r0, [r7, #12]
 8006a38:	60b9      	str	r1, [r7, #8]
 8006a3a:	607a      	str	r2, [r7, #4]
 8006a3c:	68bb      	ldr	r3, [r7, #8]
 8006a3e:	685a      	ldr	r2, [r3, #4]
 8006a40:	68fb      	ldr	r3, [r7, #12]
 8006a42:	681b      	ldr	r3, [r3, #0]
 8006a44:	68db      	ldr	r3, [r3, #12]
 8006a46:	0c1b      	lsrs	r3, r3, #16
 8006a48:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8006a4c:	4413      	add	r3, r2
 8006a4e:	041b      	lsls	r3, r3, #16
 8006a50:	61fb      	str	r3, [r7, #28]
 8006a52:	68fb      	ldr	r3, [r7, #12]
 8006a54:	681b      	ldr	r3, [r3, #0]
 8006a56:	461a      	mov	r2, r3
 8006a58:	687b      	ldr	r3, [r7, #4]
 8006a5a:	01db      	lsls	r3, r3, #7
 8006a5c:	4413      	add	r3, r2
 8006a5e:	3384      	adds	r3, #132	@ 0x84
 8006a60:	685b      	ldr	r3, [r3, #4]
 8006a62:	68fa      	ldr	r2, [r7, #12]
 8006a64:	6812      	ldr	r2, [r2, #0]
 8006a66:	4611      	mov	r1, r2
 8006a68:	687a      	ldr	r2, [r7, #4]
 8006a6a:	01d2      	lsls	r2, r2, #7
 8006a6c:	440a      	add	r2, r1
 8006a6e:	3284      	adds	r2, #132	@ 0x84
 8006a70:	f403 4370 	and.w	r3, r3, #61440	@ 0xf000
 8006a74:	6053      	str	r3, [r2, #4]
 8006a76:	68bb      	ldr	r3, [r7, #8]
 8006a78:	681a      	ldr	r2, [r3, #0]
 8006a7a:	68fb      	ldr	r3, [r7, #12]
 8006a7c:	681b      	ldr	r3, [r3, #0]
 8006a7e:	68db      	ldr	r3, [r3, #12]
 8006a80:	0c1b      	lsrs	r3, r3, #16
 8006a82:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8006a86:	4413      	add	r3, r2
 8006a88:	1c5a      	adds	r2, r3, #1
 8006a8a:	68fb      	ldr	r3, [r7, #12]
 8006a8c:	681b      	ldr	r3, [r3, #0]
 8006a8e:	4619      	mov	r1, r3
 8006a90:	687b      	ldr	r3, [r7, #4]
 8006a92:	01db      	lsls	r3, r3, #7
 8006a94:	440b      	add	r3, r1
 8006a96:	3384      	adds	r3, #132	@ 0x84
 8006a98:	4619      	mov	r1, r3
 8006a9a:	69fb      	ldr	r3, [r7, #28]
 8006a9c:	4313      	orrs	r3, r2
 8006a9e:	604b      	str	r3, [r1, #4]
 8006aa0:	68bb      	ldr	r3, [r7, #8]
 8006aa2:	68da      	ldr	r2, [r3, #12]
 8006aa4:	68fb      	ldr	r3, [r7, #12]
 8006aa6:	681b      	ldr	r3, [r3, #0]
 8006aa8:	68db      	ldr	r3, [r3, #12]
 8006aaa:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8006aae:	4413      	add	r3, r2
 8006ab0:	041b      	lsls	r3, r3, #16
 8006ab2:	61fb      	str	r3, [r7, #28]
 8006ab4:	68fb      	ldr	r3, [r7, #12]
 8006ab6:	681b      	ldr	r3, [r3, #0]
 8006ab8:	461a      	mov	r2, r3
 8006aba:	687b      	ldr	r3, [r7, #4]
 8006abc:	01db      	lsls	r3, r3, #7
 8006abe:	4413      	add	r3, r2
 8006ac0:	3384      	adds	r3, #132	@ 0x84
 8006ac2:	689b      	ldr	r3, [r3, #8]
 8006ac4:	68fa      	ldr	r2, [r7, #12]
 8006ac6:	6812      	ldr	r2, [r2, #0]
 8006ac8:	4611      	mov	r1, r2
 8006aca:	687a      	ldr	r2, [r7, #4]
 8006acc:	01d2      	lsls	r2, r2, #7
 8006ace:	440a      	add	r2, r1
 8006ad0:	3284      	adds	r2, #132	@ 0x84
 8006ad2:	f403 4370 	and.w	r3, r3, #61440	@ 0xf000
 8006ad6:	6093      	str	r3, [r2, #8]
 8006ad8:	68bb      	ldr	r3, [r7, #8]
 8006ada:	689a      	ldr	r2, [r3, #8]
 8006adc:	68fb      	ldr	r3, [r7, #12]
 8006ade:	681b      	ldr	r3, [r3, #0]
 8006ae0:	68db      	ldr	r3, [r3, #12]
 8006ae2:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8006ae6:	4413      	add	r3, r2
 8006ae8:	1c5a      	adds	r2, r3, #1
 8006aea:	68fb      	ldr	r3, [r7, #12]
 8006aec:	681b      	ldr	r3, [r3, #0]
 8006aee:	4619      	mov	r1, r3
 8006af0:	687b      	ldr	r3, [r7, #4]
 8006af2:	01db      	lsls	r3, r3, #7
 8006af4:	440b      	add	r3, r1
 8006af6:	3384      	adds	r3, #132	@ 0x84
 8006af8:	4619      	mov	r1, r3
 8006afa:	69fb      	ldr	r3, [r7, #28]
 8006afc:	4313      	orrs	r3, r2
 8006afe:	608b      	str	r3, [r1, #8]
 8006b00:	68fb      	ldr	r3, [r7, #12]
 8006b02:	681b      	ldr	r3, [r3, #0]
 8006b04:	461a      	mov	r2, r3
 8006b06:	687b      	ldr	r3, [r7, #4]
 8006b08:	01db      	lsls	r3, r3, #7
 8006b0a:	4413      	add	r3, r2
 8006b0c:	3384      	adds	r3, #132	@ 0x84
 8006b0e:	691b      	ldr	r3, [r3, #16]
 8006b10:	68fa      	ldr	r2, [r7, #12]
 8006b12:	6812      	ldr	r2, [r2, #0]
 8006b14:	4611      	mov	r1, r2
 8006b16:	687a      	ldr	r2, [r7, #4]
 8006b18:	01d2      	lsls	r2, r2, #7
 8006b1a:	440a      	add	r2, r1
 8006b1c:	3284      	adds	r2, #132	@ 0x84
 8006b1e:	f023 0307 	bic.w	r3, r3, #7
 8006b22:	6113      	str	r3, [r2, #16]
 8006b24:	68fb      	ldr	r3, [r7, #12]
 8006b26:	681b      	ldr	r3, [r3, #0]
 8006b28:	461a      	mov	r2, r3
 8006b2a:	687b      	ldr	r3, [r7, #4]
 8006b2c:	01db      	lsls	r3, r3, #7
 8006b2e:	4413      	add	r3, r2
 8006b30:	3384      	adds	r3, #132	@ 0x84
 8006b32:	461a      	mov	r2, r3
 8006b34:	68bb      	ldr	r3, [r7, #8]
 8006b36:	691b      	ldr	r3, [r3, #16]
 8006b38:	6113      	str	r3, [r2, #16]
 8006b3a:	68bb      	ldr	r3, [r7, #8]
 8006b3c:	f893 3031 	ldrb.w	r3, [r3, #49]	@ 0x31
 8006b40:	021b      	lsls	r3, r3, #8
 8006b42:	61fb      	str	r3, [r7, #28]
 8006b44:	68bb      	ldr	r3, [r7, #8]
 8006b46:	f893 3032 	ldrb.w	r3, [r3, #50]	@ 0x32
 8006b4a:	041b      	lsls	r3, r3, #16
 8006b4c:	61bb      	str	r3, [r7, #24]
 8006b4e:	68bb      	ldr	r3, [r7, #8]
 8006b50:	699b      	ldr	r3, [r3, #24]
 8006b52:	061b      	lsls	r3, r3, #24
 8006b54:	617b      	str	r3, [r7, #20]
 8006b56:	68fb      	ldr	r3, [r7, #12]
 8006b58:	681b      	ldr	r3, [r3, #0]
 8006b5a:	461a      	mov	r2, r3
 8006b5c:	687b      	ldr	r3, [r7, #4]
 8006b5e:	01db      	lsls	r3, r3, #7
 8006b60:	4413      	add	r3, r2
 8006b62:	3384      	adds	r3, #132	@ 0x84
 8006b64:	699b      	ldr	r3, [r3, #24]
 8006b66:	68fb      	ldr	r3, [r7, #12]
 8006b68:	681b      	ldr	r3, [r3, #0]
 8006b6a:	461a      	mov	r2, r3
 8006b6c:	687b      	ldr	r3, [r7, #4]
 8006b6e:	01db      	lsls	r3, r3, #7
 8006b70:	4413      	add	r3, r2
 8006b72:	3384      	adds	r3, #132	@ 0x84
 8006b74:	461a      	mov	r2, r3
 8006b76:	2300      	movs	r3, #0
 8006b78:	6193      	str	r3, [r2, #24]
 8006b7a:	68bb      	ldr	r3, [r7, #8]
 8006b7c:	f893 3030 	ldrb.w	r3, [r3, #48]	@ 0x30
 8006b80:	461a      	mov	r2, r3
 8006b82:	69fb      	ldr	r3, [r7, #28]
 8006b84:	431a      	orrs	r2, r3
 8006b86:	69bb      	ldr	r3, [r7, #24]
 8006b88:	431a      	orrs	r2, r3
 8006b8a:	68fb      	ldr	r3, [r7, #12]
 8006b8c:	681b      	ldr	r3, [r3, #0]
 8006b8e:	4619      	mov	r1, r3
 8006b90:	687b      	ldr	r3, [r7, #4]
 8006b92:	01db      	lsls	r3, r3, #7
 8006b94:	440b      	add	r3, r1
 8006b96:	3384      	adds	r3, #132	@ 0x84
 8006b98:	4619      	mov	r1, r3
 8006b9a:	697b      	ldr	r3, [r7, #20]
 8006b9c:	4313      	orrs	r3, r2
 8006b9e:	618b      	str	r3, [r1, #24]
 8006ba0:	68fb      	ldr	r3, [r7, #12]
 8006ba2:	681b      	ldr	r3, [r3, #0]
 8006ba4:	461a      	mov	r2, r3
 8006ba6:	687b      	ldr	r3, [r7, #4]
 8006ba8:	01db      	lsls	r3, r3, #7
 8006baa:	4413      	add	r3, r2
 8006bac:	3384      	adds	r3, #132	@ 0x84
 8006bae:	695b      	ldr	r3, [r3, #20]
 8006bb0:	68fa      	ldr	r2, [r7, #12]
 8006bb2:	6812      	ldr	r2, [r2, #0]
 8006bb4:	4611      	mov	r1, r2
 8006bb6:	687a      	ldr	r2, [r7, #4]
 8006bb8:	01d2      	lsls	r2, r2, #7
 8006bba:	440a      	add	r2, r1
 8006bbc:	3284      	adds	r2, #132	@ 0x84
 8006bbe:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
 8006bc2:	6153      	str	r3, [r2, #20]
 8006bc4:	68fb      	ldr	r3, [r7, #12]
 8006bc6:	681b      	ldr	r3, [r3, #0]
 8006bc8:	461a      	mov	r2, r3
 8006bca:	687b      	ldr	r3, [r7, #4]
 8006bcc:	01db      	lsls	r3, r3, #7
 8006bce:	4413      	add	r3, r2
 8006bd0:	3384      	adds	r3, #132	@ 0x84
 8006bd2:	461a      	mov	r2, r3
 8006bd4:	68bb      	ldr	r3, [r7, #8]
 8006bd6:	695b      	ldr	r3, [r3, #20]
 8006bd8:	6153      	str	r3, [r2, #20]
 8006bda:	68fb      	ldr	r3, [r7, #12]
 8006bdc:	681b      	ldr	r3, [r3, #0]
 8006bde:	461a      	mov	r2, r3
 8006be0:	687b      	ldr	r3, [r7, #4]
 8006be2:	01db      	lsls	r3, r3, #7
 8006be4:	4413      	add	r3, r2
 8006be6:	3384      	adds	r3, #132	@ 0x84
 8006be8:	69db      	ldr	r3, [r3, #28]
 8006bea:	68fa      	ldr	r2, [r7, #12]
 8006bec:	6812      	ldr	r2, [r2, #0]
 8006bee:	4611      	mov	r1, r2
 8006bf0:	687a      	ldr	r2, [r7, #4]
 8006bf2:	01d2      	lsls	r2, r2, #7
 8006bf4:	440a      	add	r2, r1
 8006bf6:	3284      	adds	r2, #132	@ 0x84
 8006bf8:	f423 63e0 	bic.w	r3, r3, #1792	@ 0x700
 8006bfc:	f023 0307 	bic.w	r3, r3, #7
 8006c00:	61d3      	str	r3, [r2, #28]
 8006c02:	68bb      	ldr	r3, [r7, #8]
 8006c04:	69da      	ldr	r2, [r3, #28]
 8006c06:	68bb      	ldr	r3, [r7, #8]
 8006c08:	6a1b      	ldr	r3, [r3, #32]
 8006c0a:	68f9      	ldr	r1, [r7, #12]
 8006c0c:	6809      	ldr	r1, [r1, #0]
 8006c0e:	4608      	mov	r0, r1
 8006c10:	6879      	ldr	r1, [r7, #4]
 8006c12:	01c9      	lsls	r1, r1, #7
 8006c14:	4401      	add	r1, r0
 8006c16:	3184      	adds	r1, #132	@ 0x84
 8006c18:	4313      	orrs	r3, r2
 8006c1a:	61cb      	str	r3, [r1, #28]
 8006c1c:	68fb      	ldr	r3, [r7, #12]
 8006c1e:	681b      	ldr	r3, [r3, #0]
 8006c20:	461a      	mov	r2, r3
 8006c22:	687b      	ldr	r3, [r7, #4]
 8006c24:	01db      	lsls	r3, r3, #7
 8006c26:	4413      	add	r3, r2
 8006c28:	3384      	adds	r3, #132	@ 0x84
 8006c2a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8006c2c:	68fb      	ldr	r3, [r7, #12]
 8006c2e:	681b      	ldr	r3, [r3, #0]
 8006c30:	461a      	mov	r2, r3
 8006c32:	687b      	ldr	r3, [r7, #4]
 8006c34:	01db      	lsls	r3, r3, #7
 8006c36:	4413      	add	r3, r2
 8006c38:	3384      	adds	r3, #132	@ 0x84
 8006c3a:	461a      	mov	r2, r3
 8006c3c:	2300      	movs	r3, #0
 8006c3e:	6293      	str	r3, [r2, #40]	@ 0x28
 8006c40:	68fb      	ldr	r3, [r7, #12]
 8006c42:	681b      	ldr	r3, [r3, #0]
 8006c44:	461a      	mov	r2, r3
 8006c46:	687b      	ldr	r3, [r7, #4]
 8006c48:	01db      	lsls	r3, r3, #7
 8006c4a:	4413      	add	r3, r2
 8006c4c:	3384      	adds	r3, #132	@ 0x84
 8006c4e:	461a      	mov	r2, r3
 8006c50:	68bb      	ldr	r3, [r7, #8]
 8006c52:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8006c54:	6293      	str	r3, [r2, #40]	@ 0x28
 8006c56:	68bb      	ldr	r3, [r7, #8]
 8006c58:	691b      	ldr	r3, [r3, #16]
 8006c5a:	2b00      	cmp	r3, #0
 8006c5c:	d102      	bne.n	8006c64 <LTDC_SetConfig+0x234>
 8006c5e:	2304      	movs	r3, #4
 8006c60:	61fb      	str	r3, [r7, #28]
 8006c62:	e01b      	b.n	8006c9c <LTDC_SetConfig+0x26c>
 8006c64:	68bb      	ldr	r3, [r7, #8]
 8006c66:	691b      	ldr	r3, [r3, #16]
 8006c68:	2b01      	cmp	r3, #1
 8006c6a:	d102      	bne.n	8006c72 <LTDC_SetConfig+0x242>
 8006c6c:	2303      	movs	r3, #3
 8006c6e:	61fb      	str	r3, [r7, #28]
 8006c70:	e014      	b.n	8006c9c <LTDC_SetConfig+0x26c>
 8006c72:	68bb      	ldr	r3, [r7, #8]
 8006c74:	691b      	ldr	r3, [r3, #16]
 8006c76:	2b04      	cmp	r3, #4
 8006c78:	d00b      	beq.n	8006c92 <LTDC_SetConfig+0x262>
 8006c7a:	68bb      	ldr	r3, [r7, #8]
 8006c7c:	691b      	ldr	r3, [r3, #16]
 8006c7e:	2b02      	cmp	r3, #2
 8006c80:	d007      	beq.n	8006c92 <LTDC_SetConfig+0x262>
 8006c82:	68bb      	ldr	r3, [r7, #8]
 8006c84:	691b      	ldr	r3, [r3, #16]
 8006c86:	2b03      	cmp	r3, #3
 8006c88:	d003      	beq.n	8006c92 <LTDC_SetConfig+0x262>
 8006c8a:	68bb      	ldr	r3, [r7, #8]
 8006c8c:	691b      	ldr	r3, [r3, #16]
 8006c8e:	2b07      	cmp	r3, #7
 8006c90:	d102      	bne.n	8006c98 <LTDC_SetConfig+0x268>
 8006c92:	2302      	movs	r3, #2
 8006c94:	61fb      	str	r3, [r7, #28]
 8006c96:	e001      	b.n	8006c9c <LTDC_SetConfig+0x26c>
 8006c98:	2301      	movs	r3, #1
 8006c9a:	61fb      	str	r3, [r7, #28]
 8006c9c:	68fb      	ldr	r3, [r7, #12]
 8006c9e:	681b      	ldr	r3, [r3, #0]
 8006ca0:	461a      	mov	r2, r3
 8006ca2:	687b      	ldr	r3, [r7, #4]
 8006ca4:	01db      	lsls	r3, r3, #7
 8006ca6:	4413      	add	r3, r2
 8006ca8:	3384      	adds	r3, #132	@ 0x84
 8006caa:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8006cac:	68fa      	ldr	r2, [r7, #12]
 8006cae:	6812      	ldr	r2, [r2, #0]
 8006cb0:	4611      	mov	r1, r2
 8006cb2:	687a      	ldr	r2, [r7, #4]
 8006cb4:	01d2      	lsls	r2, r2, #7
 8006cb6:	440a      	add	r2, r1
 8006cb8:	3284      	adds	r2, #132	@ 0x84
 8006cba:	f003 23e0 	and.w	r3, r3, #3758153728	@ 0xe000e000
 8006cbe:	62d3      	str	r3, [r2, #44]	@ 0x2c
 8006cc0:	68bb      	ldr	r3, [r7, #8]
 8006cc2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8006cc4:	69fa      	ldr	r2, [r7, #28]
 8006cc6:	fb02 f303 	mul.w	r3, r2, r3
 8006cca:	041a      	lsls	r2, r3, #16
 8006ccc:	68bb      	ldr	r3, [r7, #8]
 8006cce:	6859      	ldr	r1, [r3, #4]
 8006cd0:	68bb      	ldr	r3, [r7, #8]
 8006cd2:	681b      	ldr	r3, [r3, #0]
 8006cd4:	1acb      	subs	r3, r1, r3
 8006cd6:	69f9      	ldr	r1, [r7, #28]
 8006cd8:	fb01 f303 	mul.w	r3, r1, r3
 8006cdc:	3303      	adds	r3, #3
 8006cde:	68f9      	ldr	r1, [r7, #12]
 8006ce0:	6809      	ldr	r1, [r1, #0]
 8006ce2:	4608      	mov	r0, r1
 8006ce4:	6879      	ldr	r1, [r7, #4]
 8006ce6:	01c9      	lsls	r1, r1, #7
 8006ce8:	4401      	add	r1, r0
 8006cea:	3184      	adds	r1, #132	@ 0x84
 8006cec:	4313      	orrs	r3, r2
 8006cee:	62cb      	str	r3, [r1, #44]	@ 0x2c
 8006cf0:	68fb      	ldr	r3, [r7, #12]
 8006cf2:	681b      	ldr	r3, [r3, #0]
 8006cf4:	461a      	mov	r2, r3
 8006cf6:	687b      	ldr	r3, [r7, #4]
 8006cf8:	01db      	lsls	r3, r3, #7
 8006cfa:	4413      	add	r3, r2
 8006cfc:	3384      	adds	r3, #132	@ 0x84
 8006cfe:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8006d00:	68fa      	ldr	r2, [r7, #12]
 8006d02:	6812      	ldr	r2, [r2, #0]
 8006d04:	4611      	mov	r1, r2
 8006d06:	687a      	ldr	r2, [r7, #4]
 8006d08:	01d2      	lsls	r2, r2, #7
 8006d0a:	440a      	add	r2, r1
 8006d0c:	3284      	adds	r2, #132	@ 0x84
 8006d0e:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
 8006d12:	f023 0307 	bic.w	r3, r3, #7
 8006d16:	6313      	str	r3, [r2, #48]	@ 0x30
 8006d18:	68fb      	ldr	r3, [r7, #12]
 8006d1a:	681b      	ldr	r3, [r3, #0]
 8006d1c:	461a      	mov	r2, r3
 8006d1e:	687b      	ldr	r3, [r7, #4]
 8006d20:	01db      	lsls	r3, r3, #7
 8006d22:	4413      	add	r3, r2
 8006d24:	3384      	adds	r3, #132	@ 0x84
 8006d26:	461a      	mov	r2, r3
 8006d28:	68bb      	ldr	r3, [r7, #8]
 8006d2a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8006d2c:	6313      	str	r3, [r2, #48]	@ 0x30
 8006d2e:	68fb      	ldr	r3, [r7, #12]
 8006d30:	681b      	ldr	r3, [r3, #0]
 8006d32:	461a      	mov	r2, r3
 8006d34:	687b      	ldr	r3, [r7, #4]
 8006d36:	01db      	lsls	r3, r3, #7
 8006d38:	4413      	add	r3, r2
 8006d3a:	3384      	adds	r3, #132	@ 0x84
 8006d3c:	681b      	ldr	r3, [r3, #0]
 8006d3e:	68fa      	ldr	r2, [r7, #12]
 8006d40:	6812      	ldr	r2, [r2, #0]
 8006d42:	4611      	mov	r1, r2
 8006d44:	687a      	ldr	r2, [r7, #4]
 8006d46:	01d2      	lsls	r2, r2, #7
 8006d48:	440a      	add	r2, r1
 8006d4a:	3284      	adds	r2, #132	@ 0x84
 8006d4c:	f043 0301 	orr.w	r3, r3, #1
 8006d50:	6013      	str	r3, [r2, #0]
 8006d52:	bf00      	nop
 8006d54:	3724      	adds	r7, #36	@ 0x24
 8006d56:	46bd      	mov	sp, r7
 8006d58:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006d5c:	4770      	bx	lr
	...

08006d60 <HAL_RCC_OscConfig>:
 8006d60:	b580      	push	{r7, lr}
 8006d62:	b086      	sub	sp, #24
 8006d64:	af00      	add	r7, sp, #0
 8006d66:	6078      	str	r0, [r7, #4]
 8006d68:	687b      	ldr	r3, [r7, #4]
 8006d6a:	2b00      	cmp	r3, #0
 8006d6c:	d101      	bne.n	8006d72 <HAL_RCC_OscConfig+0x12>
 8006d6e:	2301      	movs	r3, #1
 8006d70:	e267      	b.n	8007242 <HAL_RCC_OscConfig+0x4e2>
 8006d72:	687b      	ldr	r3, [r7, #4]
 8006d74:	681b      	ldr	r3, [r3, #0]
 8006d76:	f003 0301 	and.w	r3, r3, #1
 8006d7a:	2b00      	cmp	r3, #0
 8006d7c:	d075      	beq.n	8006e6a <HAL_RCC_OscConfig+0x10a>
 8006d7e:	4b88      	ldr	r3, [pc, #544]	@ (8006fa0 <HAL_RCC_OscConfig+0x240>)
 8006d80:	689b      	ldr	r3, [r3, #8]
 8006d82:	f003 030c 	and.w	r3, r3, #12
 8006d86:	2b04      	cmp	r3, #4
 8006d88:	d00c      	beq.n	8006da4 <HAL_RCC_OscConfig+0x44>
 8006d8a:	4b85      	ldr	r3, [pc, #532]	@ (8006fa0 <HAL_RCC_OscConfig+0x240>)
 8006d8c:	689b      	ldr	r3, [r3, #8]
 8006d8e:	f003 030c 	and.w	r3, r3, #12
 8006d92:	2b08      	cmp	r3, #8
 8006d94:	d112      	bne.n	8006dbc <HAL_RCC_OscConfig+0x5c>
 8006d96:	4b82      	ldr	r3, [pc, #520]	@ (8006fa0 <HAL_RCC_OscConfig+0x240>)
 8006d98:	685b      	ldr	r3, [r3, #4]
 8006d9a:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8006d9e:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8006da2:	d10b      	bne.n	8006dbc <HAL_RCC_OscConfig+0x5c>
 8006da4:	4b7e      	ldr	r3, [pc, #504]	@ (8006fa0 <HAL_RCC_OscConfig+0x240>)
 8006da6:	681b      	ldr	r3, [r3, #0]
 8006da8:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8006dac:	2b00      	cmp	r3, #0
 8006dae:	d05b      	beq.n	8006e68 <HAL_RCC_OscConfig+0x108>
 8006db0:	687b      	ldr	r3, [r7, #4]
 8006db2:	685b      	ldr	r3, [r3, #4]
 8006db4:	2b00      	cmp	r3, #0
 8006db6:	d157      	bne.n	8006e68 <HAL_RCC_OscConfig+0x108>
 8006db8:	2301      	movs	r3, #1
 8006dba:	e242      	b.n	8007242 <HAL_RCC_OscConfig+0x4e2>
 8006dbc:	687b      	ldr	r3, [r7, #4]
 8006dbe:	685b      	ldr	r3, [r3, #4]
 8006dc0:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8006dc4:	d106      	bne.n	8006dd4 <HAL_RCC_OscConfig+0x74>
 8006dc6:	4b76      	ldr	r3, [pc, #472]	@ (8006fa0 <HAL_RCC_OscConfig+0x240>)
 8006dc8:	681b      	ldr	r3, [r3, #0]
 8006dca:	4a75      	ldr	r2, [pc, #468]	@ (8006fa0 <HAL_RCC_OscConfig+0x240>)
 8006dcc:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8006dd0:	6013      	str	r3, [r2, #0]
 8006dd2:	e01d      	b.n	8006e10 <HAL_RCC_OscConfig+0xb0>
 8006dd4:	687b      	ldr	r3, [r7, #4]
 8006dd6:	685b      	ldr	r3, [r3, #4]
 8006dd8:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8006ddc:	d10c      	bne.n	8006df8 <HAL_RCC_OscConfig+0x98>
 8006dde:	4b70      	ldr	r3, [pc, #448]	@ (8006fa0 <HAL_RCC_OscConfig+0x240>)
 8006de0:	681b      	ldr	r3, [r3, #0]
 8006de2:	4a6f      	ldr	r2, [pc, #444]	@ (8006fa0 <HAL_RCC_OscConfig+0x240>)
 8006de4:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8006de8:	6013      	str	r3, [r2, #0]
 8006dea:	4b6d      	ldr	r3, [pc, #436]	@ (8006fa0 <HAL_RCC_OscConfig+0x240>)
 8006dec:	681b      	ldr	r3, [r3, #0]
 8006dee:	4a6c      	ldr	r2, [pc, #432]	@ (8006fa0 <HAL_RCC_OscConfig+0x240>)
 8006df0:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8006df4:	6013      	str	r3, [r2, #0]
 8006df6:	e00b      	b.n	8006e10 <HAL_RCC_OscConfig+0xb0>
 8006df8:	4b69      	ldr	r3, [pc, #420]	@ (8006fa0 <HAL_RCC_OscConfig+0x240>)
 8006dfa:	681b      	ldr	r3, [r3, #0]
 8006dfc:	4a68      	ldr	r2, [pc, #416]	@ (8006fa0 <HAL_RCC_OscConfig+0x240>)
 8006dfe:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8006e02:	6013      	str	r3, [r2, #0]
 8006e04:	4b66      	ldr	r3, [pc, #408]	@ (8006fa0 <HAL_RCC_OscConfig+0x240>)
 8006e06:	681b      	ldr	r3, [r3, #0]
 8006e08:	4a65      	ldr	r2, [pc, #404]	@ (8006fa0 <HAL_RCC_OscConfig+0x240>)
 8006e0a:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8006e0e:	6013      	str	r3, [r2, #0]
 8006e10:	687b      	ldr	r3, [r7, #4]
 8006e12:	685b      	ldr	r3, [r3, #4]
 8006e14:	2b00      	cmp	r3, #0
 8006e16:	d013      	beq.n	8006e40 <HAL_RCC_OscConfig+0xe0>
 8006e18:	f7fc fc84 	bl	8003724 <HAL_GetTick>
 8006e1c:	6138      	str	r0, [r7, #16]
 8006e1e:	e008      	b.n	8006e32 <HAL_RCC_OscConfig+0xd2>
 8006e20:	f7fc fc80 	bl	8003724 <HAL_GetTick>
 8006e24:	4602      	mov	r2, r0
 8006e26:	693b      	ldr	r3, [r7, #16]
 8006e28:	1ad3      	subs	r3, r2, r3
 8006e2a:	2b64      	cmp	r3, #100	@ 0x64
 8006e2c:	d901      	bls.n	8006e32 <HAL_RCC_OscConfig+0xd2>
 8006e2e:	2303      	movs	r3, #3
 8006e30:	e207      	b.n	8007242 <HAL_RCC_OscConfig+0x4e2>
 8006e32:	4b5b      	ldr	r3, [pc, #364]	@ (8006fa0 <HAL_RCC_OscConfig+0x240>)
 8006e34:	681b      	ldr	r3, [r3, #0]
 8006e36:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8006e3a:	2b00      	cmp	r3, #0
 8006e3c:	d0f0      	beq.n	8006e20 <HAL_RCC_OscConfig+0xc0>
 8006e3e:	e014      	b.n	8006e6a <HAL_RCC_OscConfig+0x10a>
 8006e40:	f7fc fc70 	bl	8003724 <HAL_GetTick>
 8006e44:	6138      	str	r0, [r7, #16]
 8006e46:	e008      	b.n	8006e5a <HAL_RCC_OscConfig+0xfa>
 8006e48:	f7fc fc6c 	bl	8003724 <HAL_GetTick>
 8006e4c:	4602      	mov	r2, r0
 8006e4e:	693b      	ldr	r3, [r7, #16]
 8006e50:	1ad3      	subs	r3, r2, r3
 8006e52:	2b64      	cmp	r3, #100	@ 0x64
 8006e54:	d901      	bls.n	8006e5a <HAL_RCC_OscConfig+0xfa>
 8006e56:	2303      	movs	r3, #3
 8006e58:	e1f3      	b.n	8007242 <HAL_RCC_OscConfig+0x4e2>
 8006e5a:	4b51      	ldr	r3, [pc, #324]	@ (8006fa0 <HAL_RCC_OscConfig+0x240>)
 8006e5c:	681b      	ldr	r3, [r3, #0]
 8006e5e:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8006e62:	2b00      	cmp	r3, #0
 8006e64:	d1f0      	bne.n	8006e48 <HAL_RCC_OscConfig+0xe8>
 8006e66:	e000      	b.n	8006e6a <HAL_RCC_OscConfig+0x10a>
 8006e68:	bf00      	nop
 8006e6a:	687b      	ldr	r3, [r7, #4]
 8006e6c:	681b      	ldr	r3, [r3, #0]
 8006e6e:	f003 0302 	and.w	r3, r3, #2
 8006e72:	2b00      	cmp	r3, #0
 8006e74:	d063      	beq.n	8006f3e <HAL_RCC_OscConfig+0x1de>
 8006e76:	4b4a      	ldr	r3, [pc, #296]	@ (8006fa0 <HAL_RCC_OscConfig+0x240>)
 8006e78:	689b      	ldr	r3, [r3, #8]
 8006e7a:	f003 030c 	and.w	r3, r3, #12
 8006e7e:	2b00      	cmp	r3, #0
 8006e80:	d00b      	beq.n	8006e9a <HAL_RCC_OscConfig+0x13a>
 8006e82:	4b47      	ldr	r3, [pc, #284]	@ (8006fa0 <HAL_RCC_OscConfig+0x240>)
 8006e84:	689b      	ldr	r3, [r3, #8]
 8006e86:	f003 030c 	and.w	r3, r3, #12
 8006e8a:	2b08      	cmp	r3, #8
 8006e8c:	d11c      	bne.n	8006ec8 <HAL_RCC_OscConfig+0x168>
 8006e8e:	4b44      	ldr	r3, [pc, #272]	@ (8006fa0 <HAL_RCC_OscConfig+0x240>)
 8006e90:	685b      	ldr	r3, [r3, #4]
 8006e92:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8006e96:	2b00      	cmp	r3, #0
 8006e98:	d116      	bne.n	8006ec8 <HAL_RCC_OscConfig+0x168>
 8006e9a:	4b41      	ldr	r3, [pc, #260]	@ (8006fa0 <HAL_RCC_OscConfig+0x240>)
 8006e9c:	681b      	ldr	r3, [r3, #0]
 8006e9e:	f003 0302 	and.w	r3, r3, #2
 8006ea2:	2b00      	cmp	r3, #0
 8006ea4:	d005      	beq.n	8006eb2 <HAL_RCC_OscConfig+0x152>
 8006ea6:	687b      	ldr	r3, [r7, #4]
 8006ea8:	68db      	ldr	r3, [r3, #12]
 8006eaa:	2b01      	cmp	r3, #1
 8006eac:	d001      	beq.n	8006eb2 <HAL_RCC_OscConfig+0x152>
 8006eae:	2301      	movs	r3, #1
 8006eb0:	e1c7      	b.n	8007242 <HAL_RCC_OscConfig+0x4e2>
 8006eb2:	4b3b      	ldr	r3, [pc, #236]	@ (8006fa0 <HAL_RCC_OscConfig+0x240>)
 8006eb4:	681b      	ldr	r3, [r3, #0]
 8006eb6:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8006eba:	687b      	ldr	r3, [r7, #4]
 8006ebc:	691b      	ldr	r3, [r3, #16]
 8006ebe:	00db      	lsls	r3, r3, #3
 8006ec0:	4937      	ldr	r1, [pc, #220]	@ (8006fa0 <HAL_RCC_OscConfig+0x240>)
 8006ec2:	4313      	orrs	r3, r2
 8006ec4:	600b      	str	r3, [r1, #0]
 8006ec6:	e03a      	b.n	8006f3e <HAL_RCC_OscConfig+0x1de>
 8006ec8:	687b      	ldr	r3, [r7, #4]
 8006eca:	68db      	ldr	r3, [r3, #12]
 8006ecc:	2b00      	cmp	r3, #0
 8006ece:	d020      	beq.n	8006f12 <HAL_RCC_OscConfig+0x1b2>
 8006ed0:	4b34      	ldr	r3, [pc, #208]	@ (8006fa4 <HAL_RCC_OscConfig+0x244>)
 8006ed2:	2201      	movs	r2, #1
 8006ed4:	601a      	str	r2, [r3, #0]
 8006ed6:	f7fc fc25 	bl	8003724 <HAL_GetTick>
 8006eda:	6138      	str	r0, [r7, #16]
 8006edc:	e008      	b.n	8006ef0 <HAL_RCC_OscConfig+0x190>
 8006ede:	f7fc fc21 	bl	8003724 <HAL_GetTick>
 8006ee2:	4602      	mov	r2, r0
 8006ee4:	693b      	ldr	r3, [r7, #16]
 8006ee6:	1ad3      	subs	r3, r2, r3
 8006ee8:	2b02      	cmp	r3, #2
 8006eea:	d901      	bls.n	8006ef0 <HAL_RCC_OscConfig+0x190>
 8006eec:	2303      	movs	r3, #3
 8006eee:	e1a8      	b.n	8007242 <HAL_RCC_OscConfig+0x4e2>
 8006ef0:	4b2b      	ldr	r3, [pc, #172]	@ (8006fa0 <HAL_RCC_OscConfig+0x240>)
 8006ef2:	681b      	ldr	r3, [r3, #0]
 8006ef4:	f003 0302 	and.w	r3, r3, #2
 8006ef8:	2b00      	cmp	r3, #0
 8006efa:	d0f0      	beq.n	8006ede <HAL_RCC_OscConfig+0x17e>
 8006efc:	4b28      	ldr	r3, [pc, #160]	@ (8006fa0 <HAL_RCC_OscConfig+0x240>)
 8006efe:	681b      	ldr	r3, [r3, #0]
 8006f00:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8006f04:	687b      	ldr	r3, [r7, #4]
 8006f06:	691b      	ldr	r3, [r3, #16]
 8006f08:	00db      	lsls	r3, r3, #3
 8006f0a:	4925      	ldr	r1, [pc, #148]	@ (8006fa0 <HAL_RCC_OscConfig+0x240>)
 8006f0c:	4313      	orrs	r3, r2
 8006f0e:	600b      	str	r3, [r1, #0]
 8006f10:	e015      	b.n	8006f3e <HAL_RCC_OscConfig+0x1de>
 8006f12:	4b24      	ldr	r3, [pc, #144]	@ (8006fa4 <HAL_RCC_OscConfig+0x244>)
 8006f14:	2200      	movs	r2, #0
 8006f16:	601a      	str	r2, [r3, #0]
 8006f18:	f7fc fc04 	bl	8003724 <HAL_GetTick>
 8006f1c:	6138      	str	r0, [r7, #16]
 8006f1e:	e008      	b.n	8006f32 <HAL_RCC_OscConfig+0x1d2>
 8006f20:	f7fc fc00 	bl	8003724 <HAL_GetTick>
 8006f24:	4602      	mov	r2, r0
 8006f26:	693b      	ldr	r3, [r7, #16]
 8006f28:	1ad3      	subs	r3, r2, r3
 8006f2a:	2b02      	cmp	r3, #2
 8006f2c:	d901      	bls.n	8006f32 <HAL_RCC_OscConfig+0x1d2>
 8006f2e:	2303      	movs	r3, #3
 8006f30:	e187      	b.n	8007242 <HAL_RCC_OscConfig+0x4e2>
 8006f32:	4b1b      	ldr	r3, [pc, #108]	@ (8006fa0 <HAL_RCC_OscConfig+0x240>)
 8006f34:	681b      	ldr	r3, [r3, #0]
 8006f36:	f003 0302 	and.w	r3, r3, #2
 8006f3a:	2b00      	cmp	r3, #0
 8006f3c:	d1f0      	bne.n	8006f20 <HAL_RCC_OscConfig+0x1c0>
 8006f3e:	687b      	ldr	r3, [r7, #4]
 8006f40:	681b      	ldr	r3, [r3, #0]
 8006f42:	f003 0308 	and.w	r3, r3, #8
 8006f46:	2b00      	cmp	r3, #0
 8006f48:	d036      	beq.n	8006fb8 <HAL_RCC_OscConfig+0x258>
 8006f4a:	687b      	ldr	r3, [r7, #4]
 8006f4c:	695b      	ldr	r3, [r3, #20]
 8006f4e:	2b00      	cmp	r3, #0
 8006f50:	d016      	beq.n	8006f80 <HAL_RCC_OscConfig+0x220>
 8006f52:	4b15      	ldr	r3, [pc, #84]	@ (8006fa8 <HAL_RCC_OscConfig+0x248>)
 8006f54:	2201      	movs	r2, #1
 8006f56:	601a      	str	r2, [r3, #0]
 8006f58:	f7fc fbe4 	bl	8003724 <HAL_GetTick>
 8006f5c:	6138      	str	r0, [r7, #16]
 8006f5e:	e008      	b.n	8006f72 <HAL_RCC_OscConfig+0x212>
 8006f60:	f7fc fbe0 	bl	8003724 <HAL_GetTick>
 8006f64:	4602      	mov	r2, r0
 8006f66:	693b      	ldr	r3, [r7, #16]
 8006f68:	1ad3      	subs	r3, r2, r3
 8006f6a:	2b02      	cmp	r3, #2
 8006f6c:	d901      	bls.n	8006f72 <HAL_RCC_OscConfig+0x212>
 8006f6e:	2303      	movs	r3, #3
 8006f70:	e167      	b.n	8007242 <HAL_RCC_OscConfig+0x4e2>
 8006f72:	4b0b      	ldr	r3, [pc, #44]	@ (8006fa0 <HAL_RCC_OscConfig+0x240>)
 8006f74:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8006f76:	f003 0302 	and.w	r3, r3, #2
 8006f7a:	2b00      	cmp	r3, #0
 8006f7c:	d0f0      	beq.n	8006f60 <HAL_RCC_OscConfig+0x200>
 8006f7e:	e01b      	b.n	8006fb8 <HAL_RCC_OscConfig+0x258>
 8006f80:	4b09      	ldr	r3, [pc, #36]	@ (8006fa8 <HAL_RCC_OscConfig+0x248>)
 8006f82:	2200      	movs	r2, #0
 8006f84:	601a      	str	r2, [r3, #0]
 8006f86:	f7fc fbcd 	bl	8003724 <HAL_GetTick>
 8006f8a:	6138      	str	r0, [r7, #16]
 8006f8c:	e00e      	b.n	8006fac <HAL_RCC_OscConfig+0x24c>
 8006f8e:	f7fc fbc9 	bl	8003724 <HAL_GetTick>
 8006f92:	4602      	mov	r2, r0
 8006f94:	693b      	ldr	r3, [r7, #16]
 8006f96:	1ad3      	subs	r3, r2, r3
 8006f98:	2b02      	cmp	r3, #2
 8006f9a:	d907      	bls.n	8006fac <HAL_RCC_OscConfig+0x24c>
 8006f9c:	2303      	movs	r3, #3
 8006f9e:	e150      	b.n	8007242 <HAL_RCC_OscConfig+0x4e2>
 8006fa0:	40023800 	.word	0x40023800
 8006fa4:	42470000 	.word	0x42470000
 8006fa8:	42470e80 	.word	0x42470e80
 8006fac:	4b88      	ldr	r3, [pc, #544]	@ (80071d0 <HAL_RCC_OscConfig+0x470>)
 8006fae:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8006fb0:	f003 0302 	and.w	r3, r3, #2
 8006fb4:	2b00      	cmp	r3, #0
 8006fb6:	d1ea      	bne.n	8006f8e <HAL_RCC_OscConfig+0x22e>
 8006fb8:	687b      	ldr	r3, [r7, #4]
 8006fba:	681b      	ldr	r3, [r3, #0]
 8006fbc:	f003 0304 	and.w	r3, r3, #4
 8006fc0:	2b00      	cmp	r3, #0
 8006fc2:	f000 8097 	beq.w	80070f4 <HAL_RCC_OscConfig+0x394>
 8006fc6:	2300      	movs	r3, #0
 8006fc8:	75fb      	strb	r3, [r7, #23]
 8006fca:	4b81      	ldr	r3, [pc, #516]	@ (80071d0 <HAL_RCC_OscConfig+0x470>)
 8006fcc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8006fce:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8006fd2:	2b00      	cmp	r3, #0
 8006fd4:	d10f      	bne.n	8006ff6 <HAL_RCC_OscConfig+0x296>
 8006fd6:	2300      	movs	r3, #0
 8006fd8:	60bb      	str	r3, [r7, #8]
 8006fda:	4b7d      	ldr	r3, [pc, #500]	@ (80071d0 <HAL_RCC_OscConfig+0x470>)
 8006fdc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8006fde:	4a7c      	ldr	r2, [pc, #496]	@ (80071d0 <HAL_RCC_OscConfig+0x470>)
 8006fe0:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8006fe4:	6413      	str	r3, [r2, #64]	@ 0x40
 8006fe6:	4b7a      	ldr	r3, [pc, #488]	@ (80071d0 <HAL_RCC_OscConfig+0x470>)
 8006fe8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8006fea:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8006fee:	60bb      	str	r3, [r7, #8]
 8006ff0:	68bb      	ldr	r3, [r7, #8]
 8006ff2:	2301      	movs	r3, #1
 8006ff4:	75fb      	strb	r3, [r7, #23]
 8006ff6:	4b77      	ldr	r3, [pc, #476]	@ (80071d4 <HAL_RCC_OscConfig+0x474>)
 8006ff8:	681b      	ldr	r3, [r3, #0]
 8006ffa:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8006ffe:	2b00      	cmp	r3, #0
 8007000:	d118      	bne.n	8007034 <HAL_RCC_OscConfig+0x2d4>
 8007002:	4b74      	ldr	r3, [pc, #464]	@ (80071d4 <HAL_RCC_OscConfig+0x474>)
 8007004:	681b      	ldr	r3, [r3, #0]
 8007006:	4a73      	ldr	r2, [pc, #460]	@ (80071d4 <HAL_RCC_OscConfig+0x474>)
 8007008:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800700c:	6013      	str	r3, [r2, #0]
 800700e:	f7fc fb89 	bl	8003724 <HAL_GetTick>
 8007012:	6138      	str	r0, [r7, #16]
 8007014:	e008      	b.n	8007028 <HAL_RCC_OscConfig+0x2c8>
 8007016:	f7fc fb85 	bl	8003724 <HAL_GetTick>
 800701a:	4602      	mov	r2, r0
 800701c:	693b      	ldr	r3, [r7, #16]
 800701e:	1ad3      	subs	r3, r2, r3
 8007020:	2b02      	cmp	r3, #2
 8007022:	d901      	bls.n	8007028 <HAL_RCC_OscConfig+0x2c8>
 8007024:	2303      	movs	r3, #3
 8007026:	e10c      	b.n	8007242 <HAL_RCC_OscConfig+0x4e2>
 8007028:	4b6a      	ldr	r3, [pc, #424]	@ (80071d4 <HAL_RCC_OscConfig+0x474>)
 800702a:	681b      	ldr	r3, [r3, #0]
 800702c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8007030:	2b00      	cmp	r3, #0
 8007032:	d0f0      	beq.n	8007016 <HAL_RCC_OscConfig+0x2b6>
 8007034:	687b      	ldr	r3, [r7, #4]
 8007036:	689b      	ldr	r3, [r3, #8]
 8007038:	2b01      	cmp	r3, #1
 800703a:	d106      	bne.n	800704a <HAL_RCC_OscConfig+0x2ea>
 800703c:	4b64      	ldr	r3, [pc, #400]	@ (80071d0 <HAL_RCC_OscConfig+0x470>)
 800703e:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8007040:	4a63      	ldr	r2, [pc, #396]	@ (80071d0 <HAL_RCC_OscConfig+0x470>)
 8007042:	f043 0301 	orr.w	r3, r3, #1
 8007046:	6713      	str	r3, [r2, #112]	@ 0x70
 8007048:	e01c      	b.n	8007084 <HAL_RCC_OscConfig+0x324>
 800704a:	687b      	ldr	r3, [r7, #4]
 800704c:	689b      	ldr	r3, [r3, #8]
 800704e:	2b05      	cmp	r3, #5
 8007050:	d10c      	bne.n	800706c <HAL_RCC_OscConfig+0x30c>
 8007052:	4b5f      	ldr	r3, [pc, #380]	@ (80071d0 <HAL_RCC_OscConfig+0x470>)
 8007054:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8007056:	4a5e      	ldr	r2, [pc, #376]	@ (80071d0 <HAL_RCC_OscConfig+0x470>)
 8007058:	f043 0304 	orr.w	r3, r3, #4
 800705c:	6713      	str	r3, [r2, #112]	@ 0x70
 800705e:	4b5c      	ldr	r3, [pc, #368]	@ (80071d0 <HAL_RCC_OscConfig+0x470>)
 8007060:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8007062:	4a5b      	ldr	r2, [pc, #364]	@ (80071d0 <HAL_RCC_OscConfig+0x470>)
 8007064:	f043 0301 	orr.w	r3, r3, #1
 8007068:	6713      	str	r3, [r2, #112]	@ 0x70
 800706a:	e00b      	b.n	8007084 <HAL_RCC_OscConfig+0x324>
 800706c:	4b58      	ldr	r3, [pc, #352]	@ (80071d0 <HAL_RCC_OscConfig+0x470>)
 800706e:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8007070:	4a57      	ldr	r2, [pc, #348]	@ (80071d0 <HAL_RCC_OscConfig+0x470>)
 8007072:	f023 0301 	bic.w	r3, r3, #1
 8007076:	6713      	str	r3, [r2, #112]	@ 0x70
 8007078:	4b55      	ldr	r3, [pc, #340]	@ (80071d0 <HAL_RCC_OscConfig+0x470>)
 800707a:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800707c:	4a54      	ldr	r2, [pc, #336]	@ (80071d0 <HAL_RCC_OscConfig+0x470>)
 800707e:	f023 0304 	bic.w	r3, r3, #4
 8007082:	6713      	str	r3, [r2, #112]	@ 0x70
 8007084:	687b      	ldr	r3, [r7, #4]
 8007086:	689b      	ldr	r3, [r3, #8]
 8007088:	2b00      	cmp	r3, #0
 800708a:	d015      	beq.n	80070b8 <HAL_RCC_OscConfig+0x358>
 800708c:	f7fc fb4a 	bl	8003724 <HAL_GetTick>
 8007090:	6138      	str	r0, [r7, #16]
 8007092:	e00a      	b.n	80070aa <HAL_RCC_OscConfig+0x34a>
 8007094:	f7fc fb46 	bl	8003724 <HAL_GetTick>
 8007098:	4602      	mov	r2, r0
 800709a:	693b      	ldr	r3, [r7, #16]
 800709c:	1ad3      	subs	r3, r2, r3
 800709e:	f241 3288 	movw	r2, #5000	@ 0x1388
 80070a2:	4293      	cmp	r3, r2
 80070a4:	d901      	bls.n	80070aa <HAL_RCC_OscConfig+0x34a>
 80070a6:	2303      	movs	r3, #3
 80070a8:	e0cb      	b.n	8007242 <HAL_RCC_OscConfig+0x4e2>
 80070aa:	4b49      	ldr	r3, [pc, #292]	@ (80071d0 <HAL_RCC_OscConfig+0x470>)
 80070ac:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80070ae:	f003 0302 	and.w	r3, r3, #2
 80070b2:	2b00      	cmp	r3, #0
 80070b4:	d0ee      	beq.n	8007094 <HAL_RCC_OscConfig+0x334>
 80070b6:	e014      	b.n	80070e2 <HAL_RCC_OscConfig+0x382>
 80070b8:	f7fc fb34 	bl	8003724 <HAL_GetTick>
 80070bc:	6138      	str	r0, [r7, #16]
 80070be:	e00a      	b.n	80070d6 <HAL_RCC_OscConfig+0x376>
 80070c0:	f7fc fb30 	bl	8003724 <HAL_GetTick>
 80070c4:	4602      	mov	r2, r0
 80070c6:	693b      	ldr	r3, [r7, #16]
 80070c8:	1ad3      	subs	r3, r2, r3
 80070ca:	f241 3288 	movw	r2, #5000	@ 0x1388
 80070ce:	4293      	cmp	r3, r2
 80070d0:	d901      	bls.n	80070d6 <HAL_RCC_OscConfig+0x376>
 80070d2:	2303      	movs	r3, #3
 80070d4:	e0b5      	b.n	8007242 <HAL_RCC_OscConfig+0x4e2>
 80070d6:	4b3e      	ldr	r3, [pc, #248]	@ (80071d0 <HAL_RCC_OscConfig+0x470>)
 80070d8:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80070da:	f003 0302 	and.w	r3, r3, #2
 80070de:	2b00      	cmp	r3, #0
 80070e0:	d1ee      	bne.n	80070c0 <HAL_RCC_OscConfig+0x360>
 80070e2:	7dfb      	ldrb	r3, [r7, #23]
 80070e4:	2b01      	cmp	r3, #1
 80070e6:	d105      	bne.n	80070f4 <HAL_RCC_OscConfig+0x394>
 80070e8:	4b39      	ldr	r3, [pc, #228]	@ (80071d0 <HAL_RCC_OscConfig+0x470>)
 80070ea:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80070ec:	4a38      	ldr	r2, [pc, #224]	@ (80071d0 <HAL_RCC_OscConfig+0x470>)
 80070ee:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 80070f2:	6413      	str	r3, [r2, #64]	@ 0x40
 80070f4:	687b      	ldr	r3, [r7, #4]
 80070f6:	699b      	ldr	r3, [r3, #24]
 80070f8:	2b00      	cmp	r3, #0
 80070fa:	f000 80a1 	beq.w	8007240 <HAL_RCC_OscConfig+0x4e0>
 80070fe:	4b34      	ldr	r3, [pc, #208]	@ (80071d0 <HAL_RCC_OscConfig+0x470>)
 8007100:	689b      	ldr	r3, [r3, #8]
 8007102:	f003 030c 	and.w	r3, r3, #12
 8007106:	2b08      	cmp	r3, #8
 8007108:	d05c      	beq.n	80071c4 <HAL_RCC_OscConfig+0x464>
 800710a:	687b      	ldr	r3, [r7, #4]
 800710c:	699b      	ldr	r3, [r3, #24]
 800710e:	2b02      	cmp	r3, #2
 8007110:	d141      	bne.n	8007196 <HAL_RCC_OscConfig+0x436>
 8007112:	4b31      	ldr	r3, [pc, #196]	@ (80071d8 <HAL_RCC_OscConfig+0x478>)
 8007114:	2200      	movs	r2, #0
 8007116:	601a      	str	r2, [r3, #0]
 8007118:	f7fc fb04 	bl	8003724 <HAL_GetTick>
 800711c:	6138      	str	r0, [r7, #16]
 800711e:	e008      	b.n	8007132 <HAL_RCC_OscConfig+0x3d2>
 8007120:	f7fc fb00 	bl	8003724 <HAL_GetTick>
 8007124:	4602      	mov	r2, r0
 8007126:	693b      	ldr	r3, [r7, #16]
 8007128:	1ad3      	subs	r3, r2, r3
 800712a:	2b02      	cmp	r3, #2
 800712c:	d901      	bls.n	8007132 <HAL_RCC_OscConfig+0x3d2>
 800712e:	2303      	movs	r3, #3
 8007130:	e087      	b.n	8007242 <HAL_RCC_OscConfig+0x4e2>
 8007132:	4b27      	ldr	r3, [pc, #156]	@ (80071d0 <HAL_RCC_OscConfig+0x470>)
 8007134:	681b      	ldr	r3, [r3, #0]
 8007136:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800713a:	2b00      	cmp	r3, #0
 800713c:	d1f0      	bne.n	8007120 <HAL_RCC_OscConfig+0x3c0>
 800713e:	687b      	ldr	r3, [r7, #4]
 8007140:	69da      	ldr	r2, [r3, #28]
 8007142:	687b      	ldr	r3, [r7, #4]
 8007144:	6a1b      	ldr	r3, [r3, #32]
 8007146:	431a      	orrs	r2, r3
 8007148:	687b      	ldr	r3, [r7, #4]
 800714a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800714c:	019b      	lsls	r3, r3, #6
 800714e:	431a      	orrs	r2, r3
 8007150:	687b      	ldr	r3, [r7, #4]
 8007152:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8007154:	085b      	lsrs	r3, r3, #1
 8007156:	3b01      	subs	r3, #1
 8007158:	041b      	lsls	r3, r3, #16
 800715a:	431a      	orrs	r2, r3
 800715c:	687b      	ldr	r3, [r7, #4]
 800715e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8007160:	061b      	lsls	r3, r3, #24
 8007162:	491b      	ldr	r1, [pc, #108]	@ (80071d0 <HAL_RCC_OscConfig+0x470>)
 8007164:	4313      	orrs	r3, r2
 8007166:	604b      	str	r3, [r1, #4]
 8007168:	4b1b      	ldr	r3, [pc, #108]	@ (80071d8 <HAL_RCC_OscConfig+0x478>)
 800716a:	2201      	movs	r2, #1
 800716c:	601a      	str	r2, [r3, #0]
 800716e:	f7fc fad9 	bl	8003724 <HAL_GetTick>
 8007172:	6138      	str	r0, [r7, #16]
 8007174:	e008      	b.n	8007188 <HAL_RCC_OscConfig+0x428>
 8007176:	f7fc fad5 	bl	8003724 <HAL_GetTick>
 800717a:	4602      	mov	r2, r0
 800717c:	693b      	ldr	r3, [r7, #16]
 800717e:	1ad3      	subs	r3, r2, r3
 8007180:	2b02      	cmp	r3, #2
 8007182:	d901      	bls.n	8007188 <HAL_RCC_OscConfig+0x428>
 8007184:	2303      	movs	r3, #3
 8007186:	e05c      	b.n	8007242 <HAL_RCC_OscConfig+0x4e2>
 8007188:	4b11      	ldr	r3, [pc, #68]	@ (80071d0 <HAL_RCC_OscConfig+0x470>)
 800718a:	681b      	ldr	r3, [r3, #0]
 800718c:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8007190:	2b00      	cmp	r3, #0
 8007192:	d0f0      	beq.n	8007176 <HAL_RCC_OscConfig+0x416>
 8007194:	e054      	b.n	8007240 <HAL_RCC_OscConfig+0x4e0>
 8007196:	4b10      	ldr	r3, [pc, #64]	@ (80071d8 <HAL_RCC_OscConfig+0x478>)
 8007198:	2200      	movs	r2, #0
 800719a:	601a      	str	r2, [r3, #0]
 800719c:	f7fc fac2 	bl	8003724 <HAL_GetTick>
 80071a0:	6138      	str	r0, [r7, #16]
 80071a2:	e008      	b.n	80071b6 <HAL_RCC_OscConfig+0x456>
 80071a4:	f7fc fabe 	bl	8003724 <HAL_GetTick>
 80071a8:	4602      	mov	r2, r0
 80071aa:	693b      	ldr	r3, [r7, #16]
 80071ac:	1ad3      	subs	r3, r2, r3
 80071ae:	2b02      	cmp	r3, #2
 80071b0:	d901      	bls.n	80071b6 <HAL_RCC_OscConfig+0x456>
 80071b2:	2303      	movs	r3, #3
 80071b4:	e045      	b.n	8007242 <HAL_RCC_OscConfig+0x4e2>
 80071b6:	4b06      	ldr	r3, [pc, #24]	@ (80071d0 <HAL_RCC_OscConfig+0x470>)
 80071b8:	681b      	ldr	r3, [r3, #0]
 80071ba:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80071be:	2b00      	cmp	r3, #0
 80071c0:	d1f0      	bne.n	80071a4 <HAL_RCC_OscConfig+0x444>
 80071c2:	e03d      	b.n	8007240 <HAL_RCC_OscConfig+0x4e0>
 80071c4:	687b      	ldr	r3, [r7, #4]
 80071c6:	699b      	ldr	r3, [r3, #24]
 80071c8:	2b01      	cmp	r3, #1
 80071ca:	d107      	bne.n	80071dc <HAL_RCC_OscConfig+0x47c>
 80071cc:	2301      	movs	r3, #1
 80071ce:	e038      	b.n	8007242 <HAL_RCC_OscConfig+0x4e2>
 80071d0:	40023800 	.word	0x40023800
 80071d4:	40007000 	.word	0x40007000
 80071d8:	42470060 	.word	0x42470060
 80071dc:	4b1b      	ldr	r3, [pc, #108]	@ (800724c <HAL_RCC_OscConfig+0x4ec>)
 80071de:	685b      	ldr	r3, [r3, #4]
 80071e0:	60fb      	str	r3, [r7, #12]
 80071e2:	687b      	ldr	r3, [r7, #4]
 80071e4:	699b      	ldr	r3, [r3, #24]
 80071e6:	2b01      	cmp	r3, #1
 80071e8:	d028      	beq.n	800723c <HAL_RCC_OscConfig+0x4dc>
 80071ea:	68fb      	ldr	r3, [r7, #12]
 80071ec:	f403 0280 	and.w	r2, r3, #4194304	@ 0x400000
 80071f0:	687b      	ldr	r3, [r7, #4]
 80071f2:	69db      	ldr	r3, [r3, #28]
 80071f4:	429a      	cmp	r2, r3
 80071f6:	d121      	bne.n	800723c <HAL_RCC_OscConfig+0x4dc>
 80071f8:	68fb      	ldr	r3, [r7, #12]
 80071fa:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
 80071fe:	687b      	ldr	r3, [r7, #4]
 8007200:	6a1b      	ldr	r3, [r3, #32]
 8007202:	429a      	cmp	r2, r3
 8007204:	d11a      	bne.n	800723c <HAL_RCC_OscConfig+0x4dc>
 8007206:	68fa      	ldr	r2, [r7, #12]
 8007208:	f647 73c0 	movw	r3, #32704	@ 0x7fc0
 800720c:	4013      	ands	r3, r2
 800720e:	687a      	ldr	r2, [r7, #4]
 8007210:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 8007212:	0192      	lsls	r2, r2, #6
 8007214:	4293      	cmp	r3, r2
 8007216:	d111      	bne.n	800723c <HAL_RCC_OscConfig+0x4dc>
 8007218:	68fb      	ldr	r3, [r7, #12]
 800721a:	f403 3240 	and.w	r2, r3, #196608	@ 0x30000
 800721e:	687b      	ldr	r3, [r7, #4]
 8007220:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8007222:	085b      	lsrs	r3, r3, #1
 8007224:	3b01      	subs	r3, #1
 8007226:	041b      	lsls	r3, r3, #16
 8007228:	429a      	cmp	r2, r3
 800722a:	d107      	bne.n	800723c <HAL_RCC_OscConfig+0x4dc>
 800722c:	68fb      	ldr	r3, [r7, #12]
 800722e:	f003 6270 	and.w	r2, r3, #251658240	@ 0xf000000
 8007232:	687b      	ldr	r3, [r7, #4]
 8007234:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8007236:	061b      	lsls	r3, r3, #24
 8007238:	429a      	cmp	r2, r3
 800723a:	d001      	beq.n	8007240 <HAL_RCC_OscConfig+0x4e0>
 800723c:	2301      	movs	r3, #1
 800723e:	e000      	b.n	8007242 <HAL_RCC_OscConfig+0x4e2>
 8007240:	2300      	movs	r3, #0
 8007242:	4618      	mov	r0, r3
 8007244:	3718      	adds	r7, #24
 8007246:	46bd      	mov	sp, r7
 8007248:	bd80      	pop	{r7, pc}
 800724a:	bf00      	nop
 800724c:	40023800 	.word	0x40023800

08007250 <HAL_RCC_ClockConfig>:
 8007250:	b580      	push	{r7, lr}
 8007252:	b084      	sub	sp, #16
 8007254:	af00      	add	r7, sp, #0
 8007256:	6078      	str	r0, [r7, #4]
 8007258:	6039      	str	r1, [r7, #0]
 800725a:	687b      	ldr	r3, [r7, #4]
 800725c:	2b00      	cmp	r3, #0
 800725e:	d101      	bne.n	8007264 <HAL_RCC_ClockConfig+0x14>
 8007260:	2301      	movs	r3, #1
 8007262:	e0cc      	b.n	80073fe <HAL_RCC_ClockConfig+0x1ae>
 8007264:	4b68      	ldr	r3, [pc, #416]	@ (8007408 <HAL_RCC_ClockConfig+0x1b8>)
 8007266:	681b      	ldr	r3, [r3, #0]
 8007268:	f003 030f 	and.w	r3, r3, #15
 800726c:	683a      	ldr	r2, [r7, #0]
 800726e:	429a      	cmp	r2, r3
 8007270:	d90c      	bls.n	800728c <HAL_RCC_ClockConfig+0x3c>
 8007272:	4b65      	ldr	r3, [pc, #404]	@ (8007408 <HAL_RCC_ClockConfig+0x1b8>)
 8007274:	683a      	ldr	r2, [r7, #0]
 8007276:	b2d2      	uxtb	r2, r2
 8007278:	701a      	strb	r2, [r3, #0]
 800727a:	4b63      	ldr	r3, [pc, #396]	@ (8007408 <HAL_RCC_ClockConfig+0x1b8>)
 800727c:	681b      	ldr	r3, [r3, #0]
 800727e:	f003 030f 	and.w	r3, r3, #15
 8007282:	683a      	ldr	r2, [r7, #0]
 8007284:	429a      	cmp	r2, r3
 8007286:	d001      	beq.n	800728c <HAL_RCC_ClockConfig+0x3c>
 8007288:	2301      	movs	r3, #1
 800728a:	e0b8      	b.n	80073fe <HAL_RCC_ClockConfig+0x1ae>
 800728c:	687b      	ldr	r3, [r7, #4]
 800728e:	681b      	ldr	r3, [r3, #0]
 8007290:	f003 0302 	and.w	r3, r3, #2
 8007294:	2b00      	cmp	r3, #0
 8007296:	d020      	beq.n	80072da <HAL_RCC_ClockConfig+0x8a>
 8007298:	687b      	ldr	r3, [r7, #4]
 800729a:	681b      	ldr	r3, [r3, #0]
 800729c:	f003 0304 	and.w	r3, r3, #4
 80072a0:	2b00      	cmp	r3, #0
 80072a2:	d005      	beq.n	80072b0 <HAL_RCC_ClockConfig+0x60>
 80072a4:	4b59      	ldr	r3, [pc, #356]	@ (800740c <HAL_RCC_ClockConfig+0x1bc>)
 80072a6:	689b      	ldr	r3, [r3, #8]
 80072a8:	4a58      	ldr	r2, [pc, #352]	@ (800740c <HAL_RCC_ClockConfig+0x1bc>)
 80072aa:	f443 53e0 	orr.w	r3, r3, #7168	@ 0x1c00
 80072ae:	6093      	str	r3, [r2, #8]
 80072b0:	687b      	ldr	r3, [r7, #4]
 80072b2:	681b      	ldr	r3, [r3, #0]
 80072b4:	f003 0308 	and.w	r3, r3, #8
 80072b8:	2b00      	cmp	r3, #0
 80072ba:	d005      	beq.n	80072c8 <HAL_RCC_ClockConfig+0x78>
 80072bc:	4b53      	ldr	r3, [pc, #332]	@ (800740c <HAL_RCC_ClockConfig+0x1bc>)
 80072be:	689b      	ldr	r3, [r3, #8]
 80072c0:	4a52      	ldr	r2, [pc, #328]	@ (800740c <HAL_RCC_ClockConfig+0x1bc>)
 80072c2:	f443 4360 	orr.w	r3, r3, #57344	@ 0xe000
 80072c6:	6093      	str	r3, [r2, #8]
 80072c8:	4b50      	ldr	r3, [pc, #320]	@ (800740c <HAL_RCC_ClockConfig+0x1bc>)
 80072ca:	689b      	ldr	r3, [r3, #8]
 80072cc:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 80072d0:	687b      	ldr	r3, [r7, #4]
 80072d2:	689b      	ldr	r3, [r3, #8]
 80072d4:	494d      	ldr	r1, [pc, #308]	@ (800740c <HAL_RCC_ClockConfig+0x1bc>)
 80072d6:	4313      	orrs	r3, r2
 80072d8:	608b      	str	r3, [r1, #8]
 80072da:	687b      	ldr	r3, [r7, #4]
 80072dc:	681b      	ldr	r3, [r3, #0]
 80072de:	f003 0301 	and.w	r3, r3, #1
 80072e2:	2b00      	cmp	r3, #0
 80072e4:	d044      	beq.n	8007370 <HAL_RCC_ClockConfig+0x120>
 80072e6:	687b      	ldr	r3, [r7, #4]
 80072e8:	685b      	ldr	r3, [r3, #4]
 80072ea:	2b01      	cmp	r3, #1
 80072ec:	d107      	bne.n	80072fe <HAL_RCC_ClockConfig+0xae>
 80072ee:	4b47      	ldr	r3, [pc, #284]	@ (800740c <HAL_RCC_ClockConfig+0x1bc>)
 80072f0:	681b      	ldr	r3, [r3, #0]
 80072f2:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80072f6:	2b00      	cmp	r3, #0
 80072f8:	d119      	bne.n	800732e <HAL_RCC_ClockConfig+0xde>
 80072fa:	2301      	movs	r3, #1
 80072fc:	e07f      	b.n	80073fe <HAL_RCC_ClockConfig+0x1ae>
 80072fe:	687b      	ldr	r3, [r7, #4]
 8007300:	685b      	ldr	r3, [r3, #4]
 8007302:	2b02      	cmp	r3, #2
 8007304:	d003      	beq.n	800730e <HAL_RCC_ClockConfig+0xbe>
 8007306:	687b      	ldr	r3, [r7, #4]
 8007308:	685b      	ldr	r3, [r3, #4]
 800730a:	2b03      	cmp	r3, #3
 800730c:	d107      	bne.n	800731e <HAL_RCC_ClockConfig+0xce>
 800730e:	4b3f      	ldr	r3, [pc, #252]	@ (800740c <HAL_RCC_ClockConfig+0x1bc>)
 8007310:	681b      	ldr	r3, [r3, #0]
 8007312:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8007316:	2b00      	cmp	r3, #0
 8007318:	d109      	bne.n	800732e <HAL_RCC_ClockConfig+0xde>
 800731a:	2301      	movs	r3, #1
 800731c:	e06f      	b.n	80073fe <HAL_RCC_ClockConfig+0x1ae>
 800731e:	4b3b      	ldr	r3, [pc, #236]	@ (800740c <HAL_RCC_ClockConfig+0x1bc>)
 8007320:	681b      	ldr	r3, [r3, #0]
 8007322:	f003 0302 	and.w	r3, r3, #2
 8007326:	2b00      	cmp	r3, #0
 8007328:	d101      	bne.n	800732e <HAL_RCC_ClockConfig+0xde>
 800732a:	2301      	movs	r3, #1
 800732c:	e067      	b.n	80073fe <HAL_RCC_ClockConfig+0x1ae>
 800732e:	4b37      	ldr	r3, [pc, #220]	@ (800740c <HAL_RCC_ClockConfig+0x1bc>)
 8007330:	689b      	ldr	r3, [r3, #8]
 8007332:	f023 0203 	bic.w	r2, r3, #3
 8007336:	687b      	ldr	r3, [r7, #4]
 8007338:	685b      	ldr	r3, [r3, #4]
 800733a:	4934      	ldr	r1, [pc, #208]	@ (800740c <HAL_RCC_ClockConfig+0x1bc>)
 800733c:	4313      	orrs	r3, r2
 800733e:	608b      	str	r3, [r1, #8]
 8007340:	f7fc f9f0 	bl	8003724 <HAL_GetTick>
 8007344:	60f8      	str	r0, [r7, #12]
 8007346:	e00a      	b.n	800735e <HAL_RCC_ClockConfig+0x10e>
 8007348:	f7fc f9ec 	bl	8003724 <HAL_GetTick>
 800734c:	4602      	mov	r2, r0
 800734e:	68fb      	ldr	r3, [r7, #12]
 8007350:	1ad3      	subs	r3, r2, r3
 8007352:	f241 3288 	movw	r2, #5000	@ 0x1388
 8007356:	4293      	cmp	r3, r2
 8007358:	d901      	bls.n	800735e <HAL_RCC_ClockConfig+0x10e>
 800735a:	2303      	movs	r3, #3
 800735c:	e04f      	b.n	80073fe <HAL_RCC_ClockConfig+0x1ae>
 800735e:	4b2b      	ldr	r3, [pc, #172]	@ (800740c <HAL_RCC_ClockConfig+0x1bc>)
 8007360:	689b      	ldr	r3, [r3, #8]
 8007362:	f003 020c 	and.w	r2, r3, #12
 8007366:	687b      	ldr	r3, [r7, #4]
 8007368:	685b      	ldr	r3, [r3, #4]
 800736a:	009b      	lsls	r3, r3, #2
 800736c:	429a      	cmp	r2, r3
 800736e:	d1eb      	bne.n	8007348 <HAL_RCC_ClockConfig+0xf8>
 8007370:	4b25      	ldr	r3, [pc, #148]	@ (8007408 <HAL_RCC_ClockConfig+0x1b8>)
 8007372:	681b      	ldr	r3, [r3, #0]
 8007374:	f003 030f 	and.w	r3, r3, #15
 8007378:	683a      	ldr	r2, [r7, #0]
 800737a:	429a      	cmp	r2, r3
 800737c:	d20c      	bcs.n	8007398 <HAL_RCC_ClockConfig+0x148>
 800737e:	4b22      	ldr	r3, [pc, #136]	@ (8007408 <HAL_RCC_ClockConfig+0x1b8>)
 8007380:	683a      	ldr	r2, [r7, #0]
 8007382:	b2d2      	uxtb	r2, r2
 8007384:	701a      	strb	r2, [r3, #0]
 8007386:	4b20      	ldr	r3, [pc, #128]	@ (8007408 <HAL_RCC_ClockConfig+0x1b8>)
 8007388:	681b      	ldr	r3, [r3, #0]
 800738a:	f003 030f 	and.w	r3, r3, #15
 800738e:	683a      	ldr	r2, [r7, #0]
 8007390:	429a      	cmp	r2, r3
 8007392:	d001      	beq.n	8007398 <HAL_RCC_ClockConfig+0x148>
 8007394:	2301      	movs	r3, #1
 8007396:	e032      	b.n	80073fe <HAL_RCC_ClockConfig+0x1ae>
 8007398:	687b      	ldr	r3, [r7, #4]
 800739a:	681b      	ldr	r3, [r3, #0]
 800739c:	f003 0304 	and.w	r3, r3, #4
 80073a0:	2b00      	cmp	r3, #0
 80073a2:	d008      	beq.n	80073b6 <HAL_RCC_ClockConfig+0x166>
 80073a4:	4b19      	ldr	r3, [pc, #100]	@ (800740c <HAL_RCC_ClockConfig+0x1bc>)
 80073a6:	689b      	ldr	r3, [r3, #8]
 80073a8:	f423 52e0 	bic.w	r2, r3, #7168	@ 0x1c00
 80073ac:	687b      	ldr	r3, [r7, #4]
 80073ae:	68db      	ldr	r3, [r3, #12]
 80073b0:	4916      	ldr	r1, [pc, #88]	@ (800740c <HAL_RCC_ClockConfig+0x1bc>)
 80073b2:	4313      	orrs	r3, r2
 80073b4:	608b      	str	r3, [r1, #8]
 80073b6:	687b      	ldr	r3, [r7, #4]
 80073b8:	681b      	ldr	r3, [r3, #0]
 80073ba:	f003 0308 	and.w	r3, r3, #8
 80073be:	2b00      	cmp	r3, #0
 80073c0:	d009      	beq.n	80073d6 <HAL_RCC_ClockConfig+0x186>
 80073c2:	4b12      	ldr	r3, [pc, #72]	@ (800740c <HAL_RCC_ClockConfig+0x1bc>)
 80073c4:	689b      	ldr	r3, [r3, #8]
 80073c6:	f423 4260 	bic.w	r2, r3, #57344	@ 0xe000
 80073ca:	687b      	ldr	r3, [r7, #4]
 80073cc:	691b      	ldr	r3, [r3, #16]
 80073ce:	00db      	lsls	r3, r3, #3
 80073d0:	490e      	ldr	r1, [pc, #56]	@ (800740c <HAL_RCC_ClockConfig+0x1bc>)
 80073d2:	4313      	orrs	r3, r2
 80073d4:	608b      	str	r3, [r1, #8]
 80073d6:	f000 f821 	bl	800741c <HAL_RCC_GetSysClockFreq>
 80073da:	4602      	mov	r2, r0
 80073dc:	4b0b      	ldr	r3, [pc, #44]	@ (800740c <HAL_RCC_ClockConfig+0x1bc>)
 80073de:	689b      	ldr	r3, [r3, #8]
 80073e0:	091b      	lsrs	r3, r3, #4
 80073e2:	f003 030f 	and.w	r3, r3, #15
 80073e6:	490a      	ldr	r1, [pc, #40]	@ (8007410 <HAL_RCC_ClockConfig+0x1c0>)
 80073e8:	5ccb      	ldrb	r3, [r1, r3]
 80073ea:	fa22 f303 	lsr.w	r3, r2, r3
 80073ee:	4a09      	ldr	r2, [pc, #36]	@ (8007414 <HAL_RCC_ClockConfig+0x1c4>)
 80073f0:	6013      	str	r3, [r2, #0]
 80073f2:	4b09      	ldr	r3, [pc, #36]	@ (8007418 <HAL_RCC_ClockConfig+0x1c8>)
 80073f4:	681b      	ldr	r3, [r3, #0]
 80073f6:	4618      	mov	r0, r3
 80073f8:	f7fb fe6e 	bl	80030d8 <HAL_InitTick>
 80073fc:	2300      	movs	r3, #0
 80073fe:	4618      	mov	r0, r3
 8007400:	3710      	adds	r7, #16
 8007402:	46bd      	mov	sp, r7
 8007404:	bd80      	pop	{r7, pc}
 8007406:	bf00      	nop
 8007408:	40023c00 	.word	0x40023c00
 800740c:	40023800 	.word	0x40023800
 8007410:	0800e0c0 	.word	0x0800e0c0
 8007414:	20000008 	.word	0x20000008
 8007418:	2000000c 	.word	0x2000000c

0800741c <HAL_RCC_GetSysClockFreq>:
 800741c:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8007420:	b094      	sub	sp, #80	@ 0x50
 8007422:	af00      	add	r7, sp, #0
 8007424:	2300      	movs	r3, #0
 8007426:	647b      	str	r3, [r7, #68]	@ 0x44
 8007428:	2300      	movs	r3, #0
 800742a:	64fb      	str	r3, [r7, #76]	@ 0x4c
 800742c:	2300      	movs	r3, #0
 800742e:	643b      	str	r3, [r7, #64]	@ 0x40
 8007430:	2300      	movs	r3, #0
 8007432:	64bb      	str	r3, [r7, #72]	@ 0x48
 8007434:	4b79      	ldr	r3, [pc, #484]	@ (800761c <HAL_RCC_GetSysClockFreq+0x200>)
 8007436:	689b      	ldr	r3, [r3, #8]
 8007438:	f003 030c 	and.w	r3, r3, #12
 800743c:	2b08      	cmp	r3, #8
 800743e:	d00d      	beq.n	800745c <HAL_RCC_GetSysClockFreq+0x40>
 8007440:	2b08      	cmp	r3, #8
 8007442:	f200 80e1 	bhi.w	8007608 <HAL_RCC_GetSysClockFreq+0x1ec>
 8007446:	2b00      	cmp	r3, #0
 8007448:	d002      	beq.n	8007450 <HAL_RCC_GetSysClockFreq+0x34>
 800744a:	2b04      	cmp	r3, #4
 800744c:	d003      	beq.n	8007456 <HAL_RCC_GetSysClockFreq+0x3a>
 800744e:	e0db      	b.n	8007608 <HAL_RCC_GetSysClockFreq+0x1ec>
 8007450:	4b73      	ldr	r3, [pc, #460]	@ (8007620 <HAL_RCC_GetSysClockFreq+0x204>)
 8007452:	64bb      	str	r3, [r7, #72]	@ 0x48
 8007454:	e0db      	b.n	800760e <HAL_RCC_GetSysClockFreq+0x1f2>
 8007456:	4b73      	ldr	r3, [pc, #460]	@ (8007624 <HAL_RCC_GetSysClockFreq+0x208>)
 8007458:	64bb      	str	r3, [r7, #72]	@ 0x48
 800745a:	e0d8      	b.n	800760e <HAL_RCC_GetSysClockFreq+0x1f2>
 800745c:	4b6f      	ldr	r3, [pc, #444]	@ (800761c <HAL_RCC_GetSysClockFreq+0x200>)
 800745e:	685b      	ldr	r3, [r3, #4]
 8007460:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8007464:	647b      	str	r3, [r7, #68]	@ 0x44
 8007466:	4b6d      	ldr	r3, [pc, #436]	@ (800761c <HAL_RCC_GetSysClockFreq+0x200>)
 8007468:	685b      	ldr	r3, [r3, #4]
 800746a:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 800746e:	2b00      	cmp	r3, #0
 8007470:	d063      	beq.n	800753a <HAL_RCC_GetSysClockFreq+0x11e>
 8007472:	4b6a      	ldr	r3, [pc, #424]	@ (800761c <HAL_RCC_GetSysClockFreq+0x200>)
 8007474:	685b      	ldr	r3, [r3, #4]
 8007476:	099b      	lsrs	r3, r3, #6
 8007478:	2200      	movs	r2, #0
 800747a:	63bb      	str	r3, [r7, #56]	@ 0x38
 800747c:	63fa      	str	r2, [r7, #60]	@ 0x3c
 800747e:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8007480:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8007484:	633b      	str	r3, [r7, #48]	@ 0x30
 8007486:	2300      	movs	r3, #0
 8007488:	637b      	str	r3, [r7, #52]	@ 0x34
 800748a:	e9d7 450c 	ldrd	r4, r5, [r7, #48]	@ 0x30
 800748e:	4622      	mov	r2, r4
 8007490:	462b      	mov	r3, r5
 8007492:	f04f 0000 	mov.w	r0, #0
 8007496:	f04f 0100 	mov.w	r1, #0
 800749a:	0159      	lsls	r1, r3, #5
 800749c:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 80074a0:	0150      	lsls	r0, r2, #5
 80074a2:	4602      	mov	r2, r0
 80074a4:	460b      	mov	r3, r1
 80074a6:	4621      	mov	r1, r4
 80074a8:	1a51      	subs	r1, r2, r1
 80074aa:	6139      	str	r1, [r7, #16]
 80074ac:	4629      	mov	r1, r5
 80074ae:	eb63 0301 	sbc.w	r3, r3, r1
 80074b2:	617b      	str	r3, [r7, #20]
 80074b4:	f04f 0200 	mov.w	r2, #0
 80074b8:	f04f 0300 	mov.w	r3, #0
 80074bc:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 80074c0:	4659      	mov	r1, fp
 80074c2:	018b      	lsls	r3, r1, #6
 80074c4:	4651      	mov	r1, sl
 80074c6:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 80074ca:	4651      	mov	r1, sl
 80074cc:	018a      	lsls	r2, r1, #6
 80074ce:	4651      	mov	r1, sl
 80074d0:	ebb2 0801 	subs.w	r8, r2, r1
 80074d4:	4659      	mov	r1, fp
 80074d6:	eb63 0901 	sbc.w	r9, r3, r1
 80074da:	f04f 0200 	mov.w	r2, #0
 80074de:	f04f 0300 	mov.w	r3, #0
 80074e2:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 80074e6:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 80074ea:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 80074ee:	4690      	mov	r8, r2
 80074f0:	4699      	mov	r9, r3
 80074f2:	4623      	mov	r3, r4
 80074f4:	eb18 0303 	adds.w	r3, r8, r3
 80074f8:	60bb      	str	r3, [r7, #8]
 80074fa:	462b      	mov	r3, r5
 80074fc:	eb49 0303 	adc.w	r3, r9, r3
 8007500:	60fb      	str	r3, [r7, #12]
 8007502:	f04f 0200 	mov.w	r2, #0
 8007506:	f04f 0300 	mov.w	r3, #0
 800750a:	e9d7 4502 	ldrd	r4, r5, [r7, #8]
 800750e:	4629      	mov	r1, r5
 8007510:	024b      	lsls	r3, r1, #9
 8007512:	4621      	mov	r1, r4
 8007514:	ea43 53d1 	orr.w	r3, r3, r1, lsr #23
 8007518:	4621      	mov	r1, r4
 800751a:	024a      	lsls	r2, r1, #9
 800751c:	4610      	mov	r0, r2
 800751e:	4619      	mov	r1, r3
 8007520:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8007522:	2200      	movs	r2, #0
 8007524:	62bb      	str	r3, [r7, #40]	@ 0x28
 8007526:	62fa      	str	r2, [r7, #44]	@ 0x2c
 8007528:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	@ 0x28
 800752c:	f7f9 fb4c 	bl	8000bc8 <__aeabi_uldivmod>
 8007530:	4602      	mov	r2, r0
 8007532:	460b      	mov	r3, r1
 8007534:	4613      	mov	r3, r2
 8007536:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8007538:	e058      	b.n	80075ec <HAL_RCC_GetSysClockFreq+0x1d0>
 800753a:	4b38      	ldr	r3, [pc, #224]	@ (800761c <HAL_RCC_GetSysClockFreq+0x200>)
 800753c:	685b      	ldr	r3, [r3, #4]
 800753e:	099b      	lsrs	r3, r3, #6
 8007540:	2200      	movs	r2, #0
 8007542:	4618      	mov	r0, r3
 8007544:	4611      	mov	r1, r2
 8007546:	f3c0 0308 	ubfx	r3, r0, #0, #9
 800754a:	623b      	str	r3, [r7, #32]
 800754c:	2300      	movs	r3, #0
 800754e:	627b      	str	r3, [r7, #36]	@ 0x24
 8007550:	e9d7 8908 	ldrd	r8, r9, [r7, #32]
 8007554:	4642      	mov	r2, r8
 8007556:	464b      	mov	r3, r9
 8007558:	f04f 0000 	mov.w	r0, #0
 800755c:	f04f 0100 	mov.w	r1, #0
 8007560:	0159      	lsls	r1, r3, #5
 8007562:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8007566:	0150      	lsls	r0, r2, #5
 8007568:	4602      	mov	r2, r0
 800756a:	460b      	mov	r3, r1
 800756c:	4641      	mov	r1, r8
 800756e:	ebb2 0a01 	subs.w	sl, r2, r1
 8007572:	4649      	mov	r1, r9
 8007574:	eb63 0b01 	sbc.w	fp, r3, r1
 8007578:	f04f 0200 	mov.w	r2, #0
 800757c:	f04f 0300 	mov.w	r3, #0
 8007580:	ea4f 138b 	mov.w	r3, fp, lsl #6
 8007584:	ea43 639a 	orr.w	r3, r3, sl, lsr #26
 8007588:	ea4f 128a 	mov.w	r2, sl, lsl #6
 800758c:	ebb2 040a 	subs.w	r4, r2, sl
 8007590:	eb63 050b 	sbc.w	r5, r3, fp
 8007594:	f04f 0200 	mov.w	r2, #0
 8007598:	f04f 0300 	mov.w	r3, #0
 800759c:	00eb      	lsls	r3, r5, #3
 800759e:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 80075a2:	00e2      	lsls	r2, r4, #3
 80075a4:	4614      	mov	r4, r2
 80075a6:	461d      	mov	r5, r3
 80075a8:	4643      	mov	r3, r8
 80075aa:	18e3      	adds	r3, r4, r3
 80075ac:	603b      	str	r3, [r7, #0]
 80075ae:	464b      	mov	r3, r9
 80075b0:	eb45 0303 	adc.w	r3, r5, r3
 80075b4:	607b      	str	r3, [r7, #4]
 80075b6:	f04f 0200 	mov.w	r2, #0
 80075ba:	f04f 0300 	mov.w	r3, #0
 80075be:	e9d7 4500 	ldrd	r4, r5, [r7]
 80075c2:	4629      	mov	r1, r5
 80075c4:	028b      	lsls	r3, r1, #10
 80075c6:	4621      	mov	r1, r4
 80075c8:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 80075cc:	4621      	mov	r1, r4
 80075ce:	028a      	lsls	r2, r1, #10
 80075d0:	4610      	mov	r0, r2
 80075d2:	4619      	mov	r1, r3
 80075d4:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 80075d6:	2200      	movs	r2, #0
 80075d8:	61bb      	str	r3, [r7, #24]
 80075da:	61fa      	str	r2, [r7, #28]
 80075dc:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 80075e0:	f7f9 faf2 	bl	8000bc8 <__aeabi_uldivmod>
 80075e4:	4602      	mov	r2, r0
 80075e6:	460b      	mov	r3, r1
 80075e8:	4613      	mov	r3, r2
 80075ea:	64fb      	str	r3, [r7, #76]	@ 0x4c
 80075ec:	4b0b      	ldr	r3, [pc, #44]	@ (800761c <HAL_RCC_GetSysClockFreq+0x200>)
 80075ee:	685b      	ldr	r3, [r3, #4]
 80075f0:	0c1b      	lsrs	r3, r3, #16
 80075f2:	f003 0303 	and.w	r3, r3, #3
 80075f6:	3301      	adds	r3, #1
 80075f8:	005b      	lsls	r3, r3, #1
 80075fa:	643b      	str	r3, [r7, #64]	@ 0x40
 80075fc:	6cfa      	ldr	r2, [r7, #76]	@ 0x4c
 80075fe:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 8007600:	fbb2 f3f3 	udiv	r3, r2, r3
 8007604:	64bb      	str	r3, [r7, #72]	@ 0x48
 8007606:	e002      	b.n	800760e <HAL_RCC_GetSysClockFreq+0x1f2>
 8007608:	4b05      	ldr	r3, [pc, #20]	@ (8007620 <HAL_RCC_GetSysClockFreq+0x204>)
 800760a:	64bb      	str	r3, [r7, #72]	@ 0x48
 800760c:	bf00      	nop
 800760e:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8007610:	4618      	mov	r0, r3
 8007612:	3750      	adds	r7, #80	@ 0x50
 8007614:	46bd      	mov	sp, r7
 8007616:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 800761a:	bf00      	nop
 800761c:	40023800 	.word	0x40023800
 8007620:	00f42400 	.word	0x00f42400
 8007624:	007a1200 	.word	0x007a1200

08007628 <HAL_RCC_GetHCLKFreq>:
 8007628:	b480      	push	{r7}
 800762a:	af00      	add	r7, sp, #0
 800762c:	4b03      	ldr	r3, [pc, #12]	@ (800763c <HAL_RCC_GetHCLKFreq+0x14>)
 800762e:	681b      	ldr	r3, [r3, #0]
 8007630:	4618      	mov	r0, r3
 8007632:	46bd      	mov	sp, r7
 8007634:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007638:	4770      	bx	lr
 800763a:	bf00      	nop
 800763c:	20000008 	.word	0x20000008

08007640 <HAL_RCC_GetPCLK1Freq>:
 8007640:	b580      	push	{r7, lr}
 8007642:	af00      	add	r7, sp, #0
 8007644:	f7ff fff0 	bl	8007628 <HAL_RCC_GetHCLKFreq>
 8007648:	4602      	mov	r2, r0
 800764a:	4b05      	ldr	r3, [pc, #20]	@ (8007660 <HAL_RCC_GetPCLK1Freq+0x20>)
 800764c:	689b      	ldr	r3, [r3, #8]
 800764e:	0a9b      	lsrs	r3, r3, #10
 8007650:	f003 0307 	and.w	r3, r3, #7
 8007654:	4903      	ldr	r1, [pc, #12]	@ (8007664 <HAL_RCC_GetPCLK1Freq+0x24>)
 8007656:	5ccb      	ldrb	r3, [r1, r3]
 8007658:	fa22 f303 	lsr.w	r3, r2, r3
 800765c:	4618      	mov	r0, r3
 800765e:	bd80      	pop	{r7, pc}
 8007660:	40023800 	.word	0x40023800
 8007664:	0800e0d0 	.word	0x0800e0d0

08007668 <HAL_RCC_GetPCLK2Freq>:
 8007668:	b580      	push	{r7, lr}
 800766a:	af00      	add	r7, sp, #0
 800766c:	f7ff ffdc 	bl	8007628 <HAL_RCC_GetHCLKFreq>
 8007670:	4602      	mov	r2, r0
 8007672:	4b05      	ldr	r3, [pc, #20]	@ (8007688 <HAL_RCC_GetPCLK2Freq+0x20>)
 8007674:	689b      	ldr	r3, [r3, #8]
 8007676:	0b5b      	lsrs	r3, r3, #13
 8007678:	f003 0307 	and.w	r3, r3, #7
 800767c:	4903      	ldr	r1, [pc, #12]	@ (800768c <HAL_RCC_GetPCLK2Freq+0x24>)
 800767e:	5ccb      	ldrb	r3, [r1, r3]
 8007680:	fa22 f303 	lsr.w	r3, r2, r3
 8007684:	4618      	mov	r0, r3
 8007686:	bd80      	pop	{r7, pc}
 8007688:	40023800 	.word	0x40023800
 800768c:	0800e0d0 	.word	0x0800e0d0

08007690 <HAL_RCC_GetClockConfig>:
 8007690:	b480      	push	{r7}
 8007692:	b083      	sub	sp, #12
 8007694:	af00      	add	r7, sp, #0
 8007696:	6078      	str	r0, [r7, #4]
 8007698:	6039      	str	r1, [r7, #0]
 800769a:	687b      	ldr	r3, [r7, #4]
 800769c:	220f      	movs	r2, #15
 800769e:	601a      	str	r2, [r3, #0]
 80076a0:	4b12      	ldr	r3, [pc, #72]	@ (80076ec <HAL_RCC_GetClockConfig+0x5c>)
 80076a2:	689b      	ldr	r3, [r3, #8]
 80076a4:	f003 0203 	and.w	r2, r3, #3
 80076a8:	687b      	ldr	r3, [r7, #4]
 80076aa:	605a      	str	r2, [r3, #4]
 80076ac:	4b0f      	ldr	r3, [pc, #60]	@ (80076ec <HAL_RCC_GetClockConfig+0x5c>)
 80076ae:	689b      	ldr	r3, [r3, #8]
 80076b0:	f003 02f0 	and.w	r2, r3, #240	@ 0xf0
 80076b4:	687b      	ldr	r3, [r7, #4]
 80076b6:	609a      	str	r2, [r3, #8]
 80076b8:	4b0c      	ldr	r3, [pc, #48]	@ (80076ec <HAL_RCC_GetClockConfig+0x5c>)
 80076ba:	689b      	ldr	r3, [r3, #8]
 80076bc:	f403 52e0 	and.w	r2, r3, #7168	@ 0x1c00
 80076c0:	687b      	ldr	r3, [r7, #4]
 80076c2:	60da      	str	r2, [r3, #12]
 80076c4:	4b09      	ldr	r3, [pc, #36]	@ (80076ec <HAL_RCC_GetClockConfig+0x5c>)
 80076c6:	689b      	ldr	r3, [r3, #8]
 80076c8:	08db      	lsrs	r3, r3, #3
 80076ca:	f403 52e0 	and.w	r2, r3, #7168	@ 0x1c00
 80076ce:	687b      	ldr	r3, [r7, #4]
 80076d0:	611a      	str	r2, [r3, #16]
 80076d2:	4b07      	ldr	r3, [pc, #28]	@ (80076f0 <HAL_RCC_GetClockConfig+0x60>)
 80076d4:	681b      	ldr	r3, [r3, #0]
 80076d6:	f003 020f 	and.w	r2, r3, #15
 80076da:	683b      	ldr	r3, [r7, #0]
 80076dc:	601a      	str	r2, [r3, #0]
 80076de:	bf00      	nop
 80076e0:	370c      	adds	r7, #12
 80076e2:	46bd      	mov	sp, r7
 80076e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80076e8:	4770      	bx	lr
 80076ea:	bf00      	nop
 80076ec:	40023800 	.word	0x40023800
 80076f0:	40023c00 	.word	0x40023c00

080076f4 <HAL_RCCEx_PeriphCLKConfig>:
 80076f4:	b580      	push	{r7, lr}
 80076f6:	b086      	sub	sp, #24
 80076f8:	af00      	add	r7, sp, #0
 80076fa:	6078      	str	r0, [r7, #4]
 80076fc:	2300      	movs	r3, #0
 80076fe:	617b      	str	r3, [r7, #20]
 8007700:	2300      	movs	r3, #0
 8007702:	613b      	str	r3, [r7, #16]
 8007704:	687b      	ldr	r3, [r7, #4]
 8007706:	681b      	ldr	r3, [r3, #0]
 8007708:	f003 0301 	and.w	r3, r3, #1
 800770c:	2b00      	cmp	r3, #0
 800770e:	d10b      	bne.n	8007728 <HAL_RCCEx_PeriphCLKConfig+0x34>
 8007710:	687b      	ldr	r3, [r7, #4]
 8007712:	681b      	ldr	r3, [r3, #0]
 8007714:	f003 0302 	and.w	r3, r3, #2
 8007718:	2b00      	cmp	r3, #0
 800771a:	d105      	bne.n	8007728 <HAL_RCCEx_PeriphCLKConfig+0x34>
 800771c:	687b      	ldr	r3, [r7, #4]
 800771e:	681b      	ldr	r3, [r3, #0]
 8007720:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8007724:	2b00      	cmp	r3, #0
 8007726:	d075      	beq.n	8007814 <HAL_RCCEx_PeriphCLKConfig+0x120>
 8007728:	4b91      	ldr	r3, [pc, #580]	@ (8007970 <HAL_RCCEx_PeriphCLKConfig+0x27c>)
 800772a:	2200      	movs	r2, #0
 800772c:	601a      	str	r2, [r3, #0]
 800772e:	f7fb fff9 	bl	8003724 <HAL_GetTick>
 8007732:	6178      	str	r0, [r7, #20]
 8007734:	e008      	b.n	8007748 <HAL_RCCEx_PeriphCLKConfig+0x54>
 8007736:	f7fb fff5 	bl	8003724 <HAL_GetTick>
 800773a:	4602      	mov	r2, r0
 800773c:	697b      	ldr	r3, [r7, #20]
 800773e:	1ad3      	subs	r3, r2, r3
 8007740:	2b02      	cmp	r3, #2
 8007742:	d901      	bls.n	8007748 <HAL_RCCEx_PeriphCLKConfig+0x54>
 8007744:	2303      	movs	r3, #3
 8007746:	e189      	b.n	8007a5c <HAL_RCCEx_PeriphCLKConfig+0x368>
 8007748:	4b8a      	ldr	r3, [pc, #552]	@ (8007974 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 800774a:	681b      	ldr	r3, [r3, #0]
 800774c:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 8007750:	2b00      	cmp	r3, #0
 8007752:	d1f0      	bne.n	8007736 <HAL_RCCEx_PeriphCLKConfig+0x42>
 8007754:	687b      	ldr	r3, [r7, #4]
 8007756:	681b      	ldr	r3, [r3, #0]
 8007758:	f003 0301 	and.w	r3, r3, #1
 800775c:	2b00      	cmp	r3, #0
 800775e:	d009      	beq.n	8007774 <HAL_RCCEx_PeriphCLKConfig+0x80>
 8007760:	687b      	ldr	r3, [r7, #4]
 8007762:	685b      	ldr	r3, [r3, #4]
 8007764:	019a      	lsls	r2, r3, #6
 8007766:	687b      	ldr	r3, [r7, #4]
 8007768:	689b      	ldr	r3, [r3, #8]
 800776a:	071b      	lsls	r3, r3, #28
 800776c:	4981      	ldr	r1, [pc, #516]	@ (8007974 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 800776e:	4313      	orrs	r3, r2
 8007770:	f8c1 3084 	str.w	r3, [r1, #132]	@ 0x84
 8007774:	687b      	ldr	r3, [r7, #4]
 8007776:	681b      	ldr	r3, [r3, #0]
 8007778:	f003 0302 	and.w	r3, r3, #2
 800777c:	2b00      	cmp	r3, #0
 800777e:	d01f      	beq.n	80077c0 <HAL_RCCEx_PeriphCLKConfig+0xcc>
 8007780:	4b7c      	ldr	r3, [pc, #496]	@ (8007974 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 8007782:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8007786:	0f1b      	lsrs	r3, r3, #28
 8007788:	f003 0307 	and.w	r3, r3, #7
 800778c:	613b      	str	r3, [r7, #16]
 800778e:	687b      	ldr	r3, [r7, #4]
 8007790:	685b      	ldr	r3, [r3, #4]
 8007792:	019a      	lsls	r2, r3, #6
 8007794:	687b      	ldr	r3, [r7, #4]
 8007796:	68db      	ldr	r3, [r3, #12]
 8007798:	061b      	lsls	r3, r3, #24
 800779a:	431a      	orrs	r2, r3
 800779c:	693b      	ldr	r3, [r7, #16]
 800779e:	071b      	lsls	r3, r3, #28
 80077a0:	4974      	ldr	r1, [pc, #464]	@ (8007974 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 80077a2:	4313      	orrs	r3, r2
 80077a4:	f8c1 3084 	str.w	r3, [r1, #132]	@ 0x84
 80077a8:	4b72      	ldr	r3, [pc, #456]	@ (8007974 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 80077aa:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 80077ae:	f023 021f 	bic.w	r2, r3, #31
 80077b2:	687b      	ldr	r3, [r7, #4]
 80077b4:	69db      	ldr	r3, [r3, #28]
 80077b6:	3b01      	subs	r3, #1
 80077b8:	496e      	ldr	r1, [pc, #440]	@ (8007974 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 80077ba:	4313      	orrs	r3, r2
 80077bc:	f8c1 308c 	str.w	r3, [r1, #140]	@ 0x8c
 80077c0:	687b      	ldr	r3, [r7, #4]
 80077c2:	681b      	ldr	r3, [r3, #0]
 80077c4:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80077c8:	2b00      	cmp	r3, #0
 80077ca:	d00d      	beq.n	80077e8 <HAL_RCCEx_PeriphCLKConfig+0xf4>
 80077cc:	687b      	ldr	r3, [r7, #4]
 80077ce:	685b      	ldr	r3, [r3, #4]
 80077d0:	019a      	lsls	r2, r3, #6
 80077d2:	687b      	ldr	r3, [r7, #4]
 80077d4:	68db      	ldr	r3, [r3, #12]
 80077d6:	061b      	lsls	r3, r3, #24
 80077d8:	431a      	orrs	r2, r3
 80077da:	687b      	ldr	r3, [r7, #4]
 80077dc:	689b      	ldr	r3, [r3, #8]
 80077de:	071b      	lsls	r3, r3, #28
 80077e0:	4964      	ldr	r1, [pc, #400]	@ (8007974 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 80077e2:	4313      	orrs	r3, r2
 80077e4:	f8c1 3084 	str.w	r3, [r1, #132]	@ 0x84
 80077e8:	4b61      	ldr	r3, [pc, #388]	@ (8007970 <HAL_RCCEx_PeriphCLKConfig+0x27c>)
 80077ea:	2201      	movs	r2, #1
 80077ec:	601a      	str	r2, [r3, #0]
 80077ee:	f7fb ff99 	bl	8003724 <HAL_GetTick>
 80077f2:	6178      	str	r0, [r7, #20]
 80077f4:	e008      	b.n	8007808 <HAL_RCCEx_PeriphCLKConfig+0x114>
 80077f6:	f7fb ff95 	bl	8003724 <HAL_GetTick>
 80077fa:	4602      	mov	r2, r0
 80077fc:	697b      	ldr	r3, [r7, #20]
 80077fe:	1ad3      	subs	r3, r2, r3
 8007800:	2b02      	cmp	r3, #2
 8007802:	d901      	bls.n	8007808 <HAL_RCCEx_PeriphCLKConfig+0x114>
 8007804:	2303      	movs	r3, #3
 8007806:	e129      	b.n	8007a5c <HAL_RCCEx_PeriphCLKConfig+0x368>
 8007808:	4b5a      	ldr	r3, [pc, #360]	@ (8007974 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 800780a:	681b      	ldr	r3, [r3, #0]
 800780c:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 8007810:	2b00      	cmp	r3, #0
 8007812:	d0f0      	beq.n	80077f6 <HAL_RCCEx_PeriphCLKConfig+0x102>
 8007814:	687b      	ldr	r3, [r7, #4]
 8007816:	681b      	ldr	r3, [r3, #0]
 8007818:	f003 0304 	and.w	r3, r3, #4
 800781c:	2b00      	cmp	r3, #0
 800781e:	d105      	bne.n	800782c <HAL_RCCEx_PeriphCLKConfig+0x138>
 8007820:	687b      	ldr	r3, [r7, #4]
 8007822:	681b      	ldr	r3, [r3, #0]
 8007824:	f003 0308 	and.w	r3, r3, #8
 8007828:	2b00      	cmp	r3, #0
 800782a:	d079      	beq.n	8007920 <HAL_RCCEx_PeriphCLKConfig+0x22c>
 800782c:	4b52      	ldr	r3, [pc, #328]	@ (8007978 <HAL_RCCEx_PeriphCLKConfig+0x284>)
 800782e:	2200      	movs	r2, #0
 8007830:	601a      	str	r2, [r3, #0]
 8007832:	f7fb ff77 	bl	8003724 <HAL_GetTick>
 8007836:	6178      	str	r0, [r7, #20]
 8007838:	e008      	b.n	800784c <HAL_RCCEx_PeriphCLKConfig+0x158>
 800783a:	f7fb ff73 	bl	8003724 <HAL_GetTick>
 800783e:	4602      	mov	r2, r0
 8007840:	697b      	ldr	r3, [r7, #20]
 8007842:	1ad3      	subs	r3, r2, r3
 8007844:	2b02      	cmp	r3, #2
 8007846:	d901      	bls.n	800784c <HAL_RCCEx_PeriphCLKConfig+0x158>
 8007848:	2303      	movs	r3, #3
 800784a:	e107      	b.n	8007a5c <HAL_RCCEx_PeriphCLKConfig+0x368>
 800784c:	4b49      	ldr	r3, [pc, #292]	@ (8007974 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 800784e:	681b      	ldr	r3, [r3, #0]
 8007850:	f003 5300 	and.w	r3, r3, #536870912	@ 0x20000000
 8007854:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 8007858:	d0ef      	beq.n	800783a <HAL_RCCEx_PeriphCLKConfig+0x146>
 800785a:	687b      	ldr	r3, [r7, #4]
 800785c:	681b      	ldr	r3, [r3, #0]
 800785e:	f003 0304 	and.w	r3, r3, #4
 8007862:	2b00      	cmp	r3, #0
 8007864:	d020      	beq.n	80078a8 <HAL_RCCEx_PeriphCLKConfig+0x1b4>
 8007866:	4b43      	ldr	r3, [pc, #268]	@ (8007974 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 8007868:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800786c:	0f1b      	lsrs	r3, r3, #28
 800786e:	f003 0307 	and.w	r3, r3, #7
 8007872:	613b      	str	r3, [r7, #16]
 8007874:	687b      	ldr	r3, [r7, #4]
 8007876:	691b      	ldr	r3, [r3, #16]
 8007878:	019a      	lsls	r2, r3, #6
 800787a:	687b      	ldr	r3, [r7, #4]
 800787c:	695b      	ldr	r3, [r3, #20]
 800787e:	061b      	lsls	r3, r3, #24
 8007880:	431a      	orrs	r2, r3
 8007882:	693b      	ldr	r3, [r7, #16]
 8007884:	071b      	lsls	r3, r3, #28
 8007886:	493b      	ldr	r1, [pc, #236]	@ (8007974 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 8007888:	4313      	orrs	r3, r2
 800788a:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 800788e:	4b39      	ldr	r3, [pc, #228]	@ (8007974 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 8007890:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8007894:	f423 52f8 	bic.w	r2, r3, #7936	@ 0x1f00
 8007898:	687b      	ldr	r3, [r7, #4]
 800789a:	6a1b      	ldr	r3, [r3, #32]
 800789c:	3b01      	subs	r3, #1
 800789e:	021b      	lsls	r3, r3, #8
 80078a0:	4934      	ldr	r1, [pc, #208]	@ (8007974 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 80078a2:	4313      	orrs	r3, r2
 80078a4:	f8c1 308c 	str.w	r3, [r1, #140]	@ 0x8c
 80078a8:	687b      	ldr	r3, [r7, #4]
 80078aa:	681b      	ldr	r3, [r3, #0]
 80078ac:	f003 0308 	and.w	r3, r3, #8
 80078b0:	2b00      	cmp	r3, #0
 80078b2:	d01e      	beq.n	80078f2 <HAL_RCCEx_PeriphCLKConfig+0x1fe>
 80078b4:	4b2f      	ldr	r3, [pc, #188]	@ (8007974 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 80078b6:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80078ba:	0e1b      	lsrs	r3, r3, #24
 80078bc:	f003 030f 	and.w	r3, r3, #15
 80078c0:	613b      	str	r3, [r7, #16]
 80078c2:	687b      	ldr	r3, [r7, #4]
 80078c4:	691b      	ldr	r3, [r3, #16]
 80078c6:	019a      	lsls	r2, r3, #6
 80078c8:	693b      	ldr	r3, [r7, #16]
 80078ca:	061b      	lsls	r3, r3, #24
 80078cc:	431a      	orrs	r2, r3
 80078ce:	687b      	ldr	r3, [r7, #4]
 80078d0:	699b      	ldr	r3, [r3, #24]
 80078d2:	071b      	lsls	r3, r3, #28
 80078d4:	4927      	ldr	r1, [pc, #156]	@ (8007974 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 80078d6:	4313      	orrs	r3, r2
 80078d8:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 80078dc:	4b25      	ldr	r3, [pc, #148]	@ (8007974 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 80078de:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 80078e2:	f423 3240 	bic.w	r2, r3, #196608	@ 0x30000
 80078e6:	687b      	ldr	r3, [r7, #4]
 80078e8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80078ea:	4922      	ldr	r1, [pc, #136]	@ (8007974 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 80078ec:	4313      	orrs	r3, r2
 80078ee:	f8c1 308c 	str.w	r3, [r1, #140]	@ 0x8c
 80078f2:	4b21      	ldr	r3, [pc, #132]	@ (8007978 <HAL_RCCEx_PeriphCLKConfig+0x284>)
 80078f4:	2201      	movs	r2, #1
 80078f6:	601a      	str	r2, [r3, #0]
 80078f8:	f7fb ff14 	bl	8003724 <HAL_GetTick>
 80078fc:	6178      	str	r0, [r7, #20]
 80078fe:	e008      	b.n	8007912 <HAL_RCCEx_PeriphCLKConfig+0x21e>
 8007900:	f7fb ff10 	bl	8003724 <HAL_GetTick>
 8007904:	4602      	mov	r2, r0
 8007906:	697b      	ldr	r3, [r7, #20]
 8007908:	1ad3      	subs	r3, r2, r3
 800790a:	2b02      	cmp	r3, #2
 800790c:	d901      	bls.n	8007912 <HAL_RCCEx_PeriphCLKConfig+0x21e>
 800790e:	2303      	movs	r3, #3
 8007910:	e0a4      	b.n	8007a5c <HAL_RCCEx_PeriphCLKConfig+0x368>
 8007912:	4b18      	ldr	r3, [pc, #96]	@ (8007974 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 8007914:	681b      	ldr	r3, [r3, #0]
 8007916:	f003 5300 	and.w	r3, r3, #536870912	@ 0x20000000
 800791a:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 800791e:	d1ef      	bne.n	8007900 <HAL_RCCEx_PeriphCLKConfig+0x20c>
 8007920:	687b      	ldr	r3, [r7, #4]
 8007922:	681b      	ldr	r3, [r3, #0]
 8007924:	f003 0320 	and.w	r3, r3, #32
 8007928:	2b00      	cmp	r3, #0
 800792a:	f000 808b 	beq.w	8007a44 <HAL_RCCEx_PeriphCLKConfig+0x350>
 800792e:	2300      	movs	r3, #0
 8007930:	60fb      	str	r3, [r7, #12]
 8007932:	4b10      	ldr	r3, [pc, #64]	@ (8007974 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 8007934:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8007936:	4a0f      	ldr	r2, [pc, #60]	@ (8007974 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 8007938:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 800793c:	6413      	str	r3, [r2, #64]	@ 0x40
 800793e:	4b0d      	ldr	r3, [pc, #52]	@ (8007974 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 8007940:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8007942:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8007946:	60fb      	str	r3, [r7, #12]
 8007948:	68fb      	ldr	r3, [r7, #12]
 800794a:	4b0c      	ldr	r3, [pc, #48]	@ (800797c <HAL_RCCEx_PeriphCLKConfig+0x288>)
 800794c:	681b      	ldr	r3, [r3, #0]
 800794e:	4a0b      	ldr	r2, [pc, #44]	@ (800797c <HAL_RCCEx_PeriphCLKConfig+0x288>)
 8007950:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8007954:	6013      	str	r3, [r2, #0]
 8007956:	f7fb fee5 	bl	8003724 <HAL_GetTick>
 800795a:	6178      	str	r0, [r7, #20]
 800795c:	e010      	b.n	8007980 <HAL_RCCEx_PeriphCLKConfig+0x28c>
 800795e:	f7fb fee1 	bl	8003724 <HAL_GetTick>
 8007962:	4602      	mov	r2, r0
 8007964:	697b      	ldr	r3, [r7, #20]
 8007966:	1ad3      	subs	r3, r2, r3
 8007968:	2b02      	cmp	r3, #2
 800796a:	d909      	bls.n	8007980 <HAL_RCCEx_PeriphCLKConfig+0x28c>
 800796c:	2303      	movs	r3, #3
 800796e:	e075      	b.n	8007a5c <HAL_RCCEx_PeriphCLKConfig+0x368>
 8007970:	42470068 	.word	0x42470068
 8007974:	40023800 	.word	0x40023800
 8007978:	42470070 	.word	0x42470070
 800797c:	40007000 	.word	0x40007000
 8007980:	4b38      	ldr	r3, [pc, #224]	@ (8007a64 <HAL_RCCEx_PeriphCLKConfig+0x370>)
 8007982:	681b      	ldr	r3, [r3, #0]
 8007984:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8007988:	2b00      	cmp	r3, #0
 800798a:	d0e8      	beq.n	800795e <HAL_RCCEx_PeriphCLKConfig+0x26a>
 800798c:	4b36      	ldr	r3, [pc, #216]	@ (8007a68 <HAL_RCCEx_PeriphCLKConfig+0x374>)
 800798e:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8007990:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8007994:	613b      	str	r3, [r7, #16]
 8007996:	693b      	ldr	r3, [r7, #16]
 8007998:	2b00      	cmp	r3, #0
 800799a:	d02f      	beq.n	80079fc <HAL_RCCEx_PeriphCLKConfig+0x308>
 800799c:	687b      	ldr	r3, [r7, #4]
 800799e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80079a0:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 80079a4:	693a      	ldr	r2, [r7, #16]
 80079a6:	429a      	cmp	r2, r3
 80079a8:	d028      	beq.n	80079fc <HAL_RCCEx_PeriphCLKConfig+0x308>
 80079aa:	4b2f      	ldr	r3, [pc, #188]	@ (8007a68 <HAL_RCCEx_PeriphCLKConfig+0x374>)
 80079ac:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80079ae:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 80079b2:	613b      	str	r3, [r7, #16]
 80079b4:	4b2d      	ldr	r3, [pc, #180]	@ (8007a6c <HAL_RCCEx_PeriphCLKConfig+0x378>)
 80079b6:	2201      	movs	r2, #1
 80079b8:	601a      	str	r2, [r3, #0]
 80079ba:	4b2c      	ldr	r3, [pc, #176]	@ (8007a6c <HAL_RCCEx_PeriphCLKConfig+0x378>)
 80079bc:	2200      	movs	r2, #0
 80079be:	601a      	str	r2, [r3, #0]
 80079c0:	4a29      	ldr	r2, [pc, #164]	@ (8007a68 <HAL_RCCEx_PeriphCLKConfig+0x374>)
 80079c2:	693b      	ldr	r3, [r7, #16]
 80079c4:	6713      	str	r3, [r2, #112]	@ 0x70
 80079c6:	4b28      	ldr	r3, [pc, #160]	@ (8007a68 <HAL_RCCEx_PeriphCLKConfig+0x374>)
 80079c8:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80079ca:	f003 0301 	and.w	r3, r3, #1
 80079ce:	2b01      	cmp	r3, #1
 80079d0:	d114      	bne.n	80079fc <HAL_RCCEx_PeriphCLKConfig+0x308>
 80079d2:	f7fb fea7 	bl	8003724 <HAL_GetTick>
 80079d6:	6178      	str	r0, [r7, #20]
 80079d8:	e00a      	b.n	80079f0 <HAL_RCCEx_PeriphCLKConfig+0x2fc>
 80079da:	f7fb fea3 	bl	8003724 <HAL_GetTick>
 80079de:	4602      	mov	r2, r0
 80079e0:	697b      	ldr	r3, [r7, #20]
 80079e2:	1ad3      	subs	r3, r2, r3
 80079e4:	f241 3288 	movw	r2, #5000	@ 0x1388
 80079e8:	4293      	cmp	r3, r2
 80079ea:	d901      	bls.n	80079f0 <HAL_RCCEx_PeriphCLKConfig+0x2fc>
 80079ec:	2303      	movs	r3, #3
 80079ee:	e035      	b.n	8007a5c <HAL_RCCEx_PeriphCLKConfig+0x368>
 80079f0:	4b1d      	ldr	r3, [pc, #116]	@ (8007a68 <HAL_RCCEx_PeriphCLKConfig+0x374>)
 80079f2:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80079f4:	f003 0302 	and.w	r3, r3, #2
 80079f8:	2b00      	cmp	r3, #0
 80079fa:	d0ee      	beq.n	80079da <HAL_RCCEx_PeriphCLKConfig+0x2e6>
 80079fc:	687b      	ldr	r3, [r7, #4]
 80079fe:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8007a00:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8007a04:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 8007a08:	d10d      	bne.n	8007a26 <HAL_RCCEx_PeriphCLKConfig+0x332>
 8007a0a:	4b17      	ldr	r3, [pc, #92]	@ (8007a68 <HAL_RCCEx_PeriphCLKConfig+0x374>)
 8007a0c:	689b      	ldr	r3, [r3, #8]
 8007a0e:	f423 12f8 	bic.w	r2, r3, #2031616	@ 0x1f0000
 8007a12:	687b      	ldr	r3, [r7, #4]
 8007a14:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8007a16:	f023 4370 	bic.w	r3, r3, #4026531840	@ 0xf0000000
 8007a1a:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8007a1e:	4912      	ldr	r1, [pc, #72]	@ (8007a68 <HAL_RCCEx_PeriphCLKConfig+0x374>)
 8007a20:	4313      	orrs	r3, r2
 8007a22:	608b      	str	r3, [r1, #8]
 8007a24:	e005      	b.n	8007a32 <HAL_RCCEx_PeriphCLKConfig+0x33e>
 8007a26:	4b10      	ldr	r3, [pc, #64]	@ (8007a68 <HAL_RCCEx_PeriphCLKConfig+0x374>)
 8007a28:	689b      	ldr	r3, [r3, #8]
 8007a2a:	4a0f      	ldr	r2, [pc, #60]	@ (8007a68 <HAL_RCCEx_PeriphCLKConfig+0x374>)
 8007a2c:	f423 13f8 	bic.w	r3, r3, #2031616	@ 0x1f0000
 8007a30:	6093      	str	r3, [r2, #8]
 8007a32:	4b0d      	ldr	r3, [pc, #52]	@ (8007a68 <HAL_RCCEx_PeriphCLKConfig+0x374>)
 8007a34:	6f1a      	ldr	r2, [r3, #112]	@ 0x70
 8007a36:	687b      	ldr	r3, [r7, #4]
 8007a38:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8007a3a:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8007a3e:	490a      	ldr	r1, [pc, #40]	@ (8007a68 <HAL_RCCEx_PeriphCLKConfig+0x374>)
 8007a40:	4313      	orrs	r3, r2
 8007a42:	670b      	str	r3, [r1, #112]	@ 0x70
 8007a44:	687b      	ldr	r3, [r7, #4]
 8007a46:	681b      	ldr	r3, [r3, #0]
 8007a48:	f003 0310 	and.w	r3, r3, #16
 8007a4c:	2b00      	cmp	r3, #0
 8007a4e:	d004      	beq.n	8007a5a <HAL_RCCEx_PeriphCLKConfig+0x366>
 8007a50:	687b      	ldr	r3, [r7, #4]
 8007a52:	f893 202c 	ldrb.w	r2, [r3, #44]	@ 0x2c
 8007a56:	4b06      	ldr	r3, [pc, #24]	@ (8007a70 <HAL_RCCEx_PeriphCLKConfig+0x37c>)
 8007a58:	601a      	str	r2, [r3, #0]
 8007a5a:	2300      	movs	r3, #0
 8007a5c:	4618      	mov	r0, r3
 8007a5e:	3718      	adds	r7, #24
 8007a60:	46bd      	mov	sp, r7
 8007a62:	bd80      	pop	{r7, pc}
 8007a64:	40007000 	.word	0x40007000
 8007a68:	40023800 	.word	0x40023800
 8007a6c:	42470e40 	.word	0x42470e40
 8007a70:	424711e0 	.word	0x424711e0

08007a74 <HAL_SDRAM_Init>:
 8007a74:	b580      	push	{r7, lr}
 8007a76:	b082      	sub	sp, #8
 8007a78:	af00      	add	r7, sp, #0
 8007a7a:	6078      	str	r0, [r7, #4]
 8007a7c:	6039      	str	r1, [r7, #0]
 8007a7e:	687b      	ldr	r3, [r7, #4]
 8007a80:	2b00      	cmp	r3, #0
 8007a82:	d101      	bne.n	8007a88 <HAL_SDRAM_Init+0x14>
 8007a84:	2301      	movs	r3, #1
 8007a86:	e025      	b.n	8007ad4 <HAL_SDRAM_Init+0x60>
 8007a88:	687b      	ldr	r3, [r7, #4]
 8007a8a:	f893 302c 	ldrb.w	r3, [r3, #44]	@ 0x2c
 8007a8e:	b2db      	uxtb	r3, r3
 8007a90:	2b00      	cmp	r3, #0
 8007a92:	d106      	bne.n	8007aa2 <HAL_SDRAM_Init+0x2e>
 8007a94:	687b      	ldr	r3, [r7, #4]
 8007a96:	2200      	movs	r2, #0
 8007a98:	f883 202d 	strb.w	r2, [r3, #45]	@ 0x2d
 8007a9c:	6878      	ldr	r0, [r7, #4]
 8007a9e:	f7f9 fda1 	bl	80015e4 <HAL_SDRAM_MspInit>
 8007aa2:	687b      	ldr	r3, [r7, #4]
 8007aa4:	2202      	movs	r2, #2
 8007aa6:	f883 202c 	strb.w	r2, [r3, #44]	@ 0x2c
 8007aaa:	687b      	ldr	r3, [r7, #4]
 8007aac:	681a      	ldr	r2, [r3, #0]
 8007aae:	687b      	ldr	r3, [r7, #4]
 8007ab0:	3304      	adds	r3, #4
 8007ab2:	4619      	mov	r1, r3
 8007ab4:	4610      	mov	r0, r2
 8007ab6:	f001 ffad 	bl	8009a14 <FMC_SDRAM_Init>
 8007aba:	687b      	ldr	r3, [r7, #4]
 8007abc:	6818      	ldr	r0, [r3, #0]
 8007abe:	687b      	ldr	r3, [r7, #4]
 8007ac0:	685b      	ldr	r3, [r3, #4]
 8007ac2:	461a      	mov	r2, r3
 8007ac4:	6839      	ldr	r1, [r7, #0]
 8007ac6:	f002 f802 	bl	8009ace <FMC_SDRAM_Timing_Init>
 8007aca:	687b      	ldr	r3, [r7, #4]
 8007acc:	2201      	movs	r2, #1
 8007ace:	f883 202c 	strb.w	r2, [r3, #44]	@ 0x2c
 8007ad2:	2300      	movs	r3, #0
 8007ad4:	4618      	mov	r0, r3
 8007ad6:	3708      	adds	r7, #8
 8007ad8:	46bd      	mov	sp, r7
 8007ada:	bd80      	pop	{r7, pc}

08007adc <HAL_SPI_Init>:
 8007adc:	b580      	push	{r7, lr}
 8007ade:	b082      	sub	sp, #8
 8007ae0:	af00      	add	r7, sp, #0
 8007ae2:	6078      	str	r0, [r7, #4]
 8007ae4:	687b      	ldr	r3, [r7, #4]
 8007ae6:	2b00      	cmp	r3, #0
 8007ae8:	d101      	bne.n	8007aee <HAL_SPI_Init+0x12>
 8007aea:	2301      	movs	r3, #1
 8007aec:	e07b      	b.n	8007be6 <HAL_SPI_Init+0x10a>
 8007aee:	687b      	ldr	r3, [r7, #4]
 8007af0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8007af2:	2b00      	cmp	r3, #0
 8007af4:	d108      	bne.n	8007b08 <HAL_SPI_Init+0x2c>
 8007af6:	687b      	ldr	r3, [r7, #4]
 8007af8:	685b      	ldr	r3, [r3, #4]
 8007afa:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8007afe:	d009      	beq.n	8007b14 <HAL_SPI_Init+0x38>
 8007b00:	687b      	ldr	r3, [r7, #4]
 8007b02:	2200      	movs	r2, #0
 8007b04:	61da      	str	r2, [r3, #28]
 8007b06:	e005      	b.n	8007b14 <HAL_SPI_Init+0x38>
 8007b08:	687b      	ldr	r3, [r7, #4]
 8007b0a:	2200      	movs	r2, #0
 8007b0c:	611a      	str	r2, [r3, #16]
 8007b0e:	687b      	ldr	r3, [r7, #4]
 8007b10:	2200      	movs	r2, #0
 8007b12:	615a      	str	r2, [r3, #20]
 8007b14:	687b      	ldr	r3, [r7, #4]
 8007b16:	2200      	movs	r2, #0
 8007b18:	629a      	str	r2, [r3, #40]	@ 0x28
 8007b1a:	687b      	ldr	r3, [r7, #4]
 8007b1c:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 8007b20:	b2db      	uxtb	r3, r3
 8007b22:	2b00      	cmp	r3, #0
 8007b24:	d106      	bne.n	8007b34 <HAL_SPI_Init+0x58>
 8007b26:	687b      	ldr	r3, [r7, #4]
 8007b28:	2200      	movs	r2, #0
 8007b2a:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8007b2e:	6878      	ldr	r0, [r7, #4]
 8007b30:	f7fb fa2c 	bl	8002f8c <HAL_SPI_MspInit>
 8007b34:	687b      	ldr	r3, [r7, #4]
 8007b36:	2202      	movs	r2, #2
 8007b38:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8007b3c:	687b      	ldr	r3, [r7, #4]
 8007b3e:	681b      	ldr	r3, [r3, #0]
 8007b40:	681a      	ldr	r2, [r3, #0]
 8007b42:	687b      	ldr	r3, [r7, #4]
 8007b44:	681b      	ldr	r3, [r3, #0]
 8007b46:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8007b4a:	601a      	str	r2, [r3, #0]
 8007b4c:	687b      	ldr	r3, [r7, #4]
 8007b4e:	685b      	ldr	r3, [r3, #4]
 8007b50:	f403 7282 	and.w	r2, r3, #260	@ 0x104
 8007b54:	687b      	ldr	r3, [r7, #4]
 8007b56:	689b      	ldr	r3, [r3, #8]
 8007b58:	f403 4304 	and.w	r3, r3, #33792	@ 0x8400
 8007b5c:	431a      	orrs	r2, r3
 8007b5e:	687b      	ldr	r3, [r7, #4]
 8007b60:	68db      	ldr	r3, [r3, #12]
 8007b62:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 8007b66:	431a      	orrs	r2, r3
 8007b68:	687b      	ldr	r3, [r7, #4]
 8007b6a:	691b      	ldr	r3, [r3, #16]
 8007b6c:	f003 0302 	and.w	r3, r3, #2
 8007b70:	431a      	orrs	r2, r3
 8007b72:	687b      	ldr	r3, [r7, #4]
 8007b74:	695b      	ldr	r3, [r3, #20]
 8007b76:	f003 0301 	and.w	r3, r3, #1
 8007b7a:	431a      	orrs	r2, r3
 8007b7c:	687b      	ldr	r3, [r7, #4]
 8007b7e:	699b      	ldr	r3, [r3, #24]
 8007b80:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8007b84:	431a      	orrs	r2, r3
 8007b86:	687b      	ldr	r3, [r7, #4]
 8007b88:	69db      	ldr	r3, [r3, #28]
 8007b8a:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 8007b8e:	431a      	orrs	r2, r3
 8007b90:	687b      	ldr	r3, [r7, #4]
 8007b92:	6a1b      	ldr	r3, [r3, #32]
 8007b94:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8007b98:	ea42 0103 	orr.w	r1, r2, r3
 8007b9c:	687b      	ldr	r3, [r7, #4]
 8007b9e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8007ba0:	f403 5200 	and.w	r2, r3, #8192	@ 0x2000
 8007ba4:	687b      	ldr	r3, [r7, #4]
 8007ba6:	681b      	ldr	r3, [r3, #0]
 8007ba8:	430a      	orrs	r2, r1
 8007baa:	601a      	str	r2, [r3, #0]
 8007bac:	687b      	ldr	r3, [r7, #4]
 8007bae:	699b      	ldr	r3, [r3, #24]
 8007bb0:	0c1b      	lsrs	r3, r3, #16
 8007bb2:	f003 0104 	and.w	r1, r3, #4
 8007bb6:	687b      	ldr	r3, [r7, #4]
 8007bb8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8007bba:	f003 0210 	and.w	r2, r3, #16
 8007bbe:	687b      	ldr	r3, [r7, #4]
 8007bc0:	681b      	ldr	r3, [r3, #0]
 8007bc2:	430a      	orrs	r2, r1
 8007bc4:	605a      	str	r2, [r3, #4]
 8007bc6:	687b      	ldr	r3, [r7, #4]
 8007bc8:	681b      	ldr	r3, [r3, #0]
 8007bca:	69da      	ldr	r2, [r3, #28]
 8007bcc:	687b      	ldr	r3, [r7, #4]
 8007bce:	681b      	ldr	r3, [r3, #0]
 8007bd0:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8007bd4:	61da      	str	r2, [r3, #28]
 8007bd6:	687b      	ldr	r3, [r7, #4]
 8007bd8:	2200      	movs	r2, #0
 8007bda:	655a      	str	r2, [r3, #84]	@ 0x54
 8007bdc:	687b      	ldr	r3, [r7, #4]
 8007bde:	2201      	movs	r2, #1
 8007be0:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8007be4:	2300      	movs	r3, #0
 8007be6:	4618      	mov	r0, r3
 8007be8:	3708      	adds	r7, #8
 8007bea:	46bd      	mov	sp, r7
 8007bec:	bd80      	pop	{r7, pc}

08007bee <HAL_SPI_Transmit>:
 8007bee:	b580      	push	{r7, lr}
 8007bf0:	b088      	sub	sp, #32
 8007bf2:	af00      	add	r7, sp, #0
 8007bf4:	60f8      	str	r0, [r7, #12]
 8007bf6:	60b9      	str	r1, [r7, #8]
 8007bf8:	603b      	str	r3, [r7, #0]
 8007bfa:	4613      	mov	r3, r2
 8007bfc:	80fb      	strh	r3, [r7, #6]
 8007bfe:	f7fb fd91 	bl	8003724 <HAL_GetTick>
 8007c02:	61f8      	str	r0, [r7, #28]
 8007c04:	88fb      	ldrh	r3, [r7, #6]
 8007c06:	837b      	strh	r3, [r7, #26]
 8007c08:	68fb      	ldr	r3, [r7, #12]
 8007c0a:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 8007c0e:	b2db      	uxtb	r3, r3
 8007c10:	2b01      	cmp	r3, #1
 8007c12:	d001      	beq.n	8007c18 <HAL_SPI_Transmit+0x2a>
 8007c14:	2302      	movs	r3, #2
 8007c16:	e12a      	b.n	8007e6e <HAL_SPI_Transmit+0x280>
 8007c18:	68bb      	ldr	r3, [r7, #8]
 8007c1a:	2b00      	cmp	r3, #0
 8007c1c:	d002      	beq.n	8007c24 <HAL_SPI_Transmit+0x36>
 8007c1e:	88fb      	ldrh	r3, [r7, #6]
 8007c20:	2b00      	cmp	r3, #0
 8007c22:	d101      	bne.n	8007c28 <HAL_SPI_Transmit+0x3a>
 8007c24:	2301      	movs	r3, #1
 8007c26:	e122      	b.n	8007e6e <HAL_SPI_Transmit+0x280>
 8007c28:	68fb      	ldr	r3, [r7, #12]
 8007c2a:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
 8007c2e:	2b01      	cmp	r3, #1
 8007c30:	d101      	bne.n	8007c36 <HAL_SPI_Transmit+0x48>
 8007c32:	2302      	movs	r3, #2
 8007c34:	e11b      	b.n	8007e6e <HAL_SPI_Transmit+0x280>
 8007c36:	68fb      	ldr	r3, [r7, #12]
 8007c38:	2201      	movs	r2, #1
 8007c3a:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8007c3e:	68fb      	ldr	r3, [r7, #12]
 8007c40:	2203      	movs	r2, #3
 8007c42:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8007c46:	68fb      	ldr	r3, [r7, #12]
 8007c48:	2200      	movs	r2, #0
 8007c4a:	655a      	str	r2, [r3, #84]	@ 0x54
 8007c4c:	68fb      	ldr	r3, [r7, #12]
 8007c4e:	68ba      	ldr	r2, [r7, #8]
 8007c50:	631a      	str	r2, [r3, #48]	@ 0x30
 8007c52:	68fb      	ldr	r3, [r7, #12]
 8007c54:	88fa      	ldrh	r2, [r7, #6]
 8007c56:	869a      	strh	r2, [r3, #52]	@ 0x34
 8007c58:	68fb      	ldr	r3, [r7, #12]
 8007c5a:	88fa      	ldrh	r2, [r7, #6]
 8007c5c:	86da      	strh	r2, [r3, #54]	@ 0x36
 8007c5e:	68fb      	ldr	r3, [r7, #12]
 8007c60:	2200      	movs	r2, #0
 8007c62:	639a      	str	r2, [r3, #56]	@ 0x38
 8007c64:	68fb      	ldr	r3, [r7, #12]
 8007c66:	2200      	movs	r2, #0
 8007c68:	879a      	strh	r2, [r3, #60]	@ 0x3c
 8007c6a:	68fb      	ldr	r3, [r7, #12]
 8007c6c:	2200      	movs	r2, #0
 8007c6e:	87da      	strh	r2, [r3, #62]	@ 0x3e
 8007c70:	68fb      	ldr	r3, [r7, #12]
 8007c72:	2200      	movs	r2, #0
 8007c74:	645a      	str	r2, [r3, #68]	@ 0x44
 8007c76:	68fb      	ldr	r3, [r7, #12]
 8007c78:	2200      	movs	r2, #0
 8007c7a:	641a      	str	r2, [r3, #64]	@ 0x40
 8007c7c:	68fb      	ldr	r3, [r7, #12]
 8007c7e:	689b      	ldr	r3, [r3, #8]
 8007c80:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8007c84:	d10f      	bne.n	8007ca6 <HAL_SPI_Transmit+0xb8>
 8007c86:	68fb      	ldr	r3, [r7, #12]
 8007c88:	681b      	ldr	r3, [r3, #0]
 8007c8a:	681a      	ldr	r2, [r3, #0]
 8007c8c:	68fb      	ldr	r3, [r7, #12]
 8007c8e:	681b      	ldr	r3, [r3, #0]
 8007c90:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8007c94:	601a      	str	r2, [r3, #0]
 8007c96:	68fb      	ldr	r3, [r7, #12]
 8007c98:	681b      	ldr	r3, [r3, #0]
 8007c9a:	681a      	ldr	r2, [r3, #0]
 8007c9c:	68fb      	ldr	r3, [r7, #12]
 8007c9e:	681b      	ldr	r3, [r3, #0]
 8007ca0:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8007ca4:	601a      	str	r2, [r3, #0]
 8007ca6:	68fb      	ldr	r3, [r7, #12]
 8007ca8:	681b      	ldr	r3, [r3, #0]
 8007caa:	681b      	ldr	r3, [r3, #0]
 8007cac:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8007cb0:	2b40      	cmp	r3, #64	@ 0x40
 8007cb2:	d007      	beq.n	8007cc4 <HAL_SPI_Transmit+0xd6>
 8007cb4:	68fb      	ldr	r3, [r7, #12]
 8007cb6:	681b      	ldr	r3, [r3, #0]
 8007cb8:	681a      	ldr	r2, [r3, #0]
 8007cba:	68fb      	ldr	r3, [r7, #12]
 8007cbc:	681b      	ldr	r3, [r3, #0]
 8007cbe:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8007cc2:	601a      	str	r2, [r3, #0]
 8007cc4:	68fb      	ldr	r3, [r7, #12]
 8007cc6:	68db      	ldr	r3, [r3, #12]
 8007cc8:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 8007ccc:	d152      	bne.n	8007d74 <HAL_SPI_Transmit+0x186>
 8007cce:	68fb      	ldr	r3, [r7, #12]
 8007cd0:	685b      	ldr	r3, [r3, #4]
 8007cd2:	2b00      	cmp	r3, #0
 8007cd4:	d002      	beq.n	8007cdc <HAL_SPI_Transmit+0xee>
 8007cd6:	8b7b      	ldrh	r3, [r7, #26]
 8007cd8:	2b01      	cmp	r3, #1
 8007cda:	d145      	bne.n	8007d68 <HAL_SPI_Transmit+0x17a>
 8007cdc:	68fb      	ldr	r3, [r7, #12]
 8007cde:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8007ce0:	881a      	ldrh	r2, [r3, #0]
 8007ce2:	68fb      	ldr	r3, [r7, #12]
 8007ce4:	681b      	ldr	r3, [r3, #0]
 8007ce6:	60da      	str	r2, [r3, #12]
 8007ce8:	68fb      	ldr	r3, [r7, #12]
 8007cea:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8007cec:	1c9a      	adds	r2, r3, #2
 8007cee:	68fb      	ldr	r3, [r7, #12]
 8007cf0:	631a      	str	r2, [r3, #48]	@ 0x30
 8007cf2:	68fb      	ldr	r3, [r7, #12]
 8007cf4:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8007cf6:	b29b      	uxth	r3, r3
 8007cf8:	3b01      	subs	r3, #1
 8007cfa:	b29a      	uxth	r2, r3
 8007cfc:	68fb      	ldr	r3, [r7, #12]
 8007cfe:	86da      	strh	r2, [r3, #54]	@ 0x36
 8007d00:	e032      	b.n	8007d68 <HAL_SPI_Transmit+0x17a>
 8007d02:	68fb      	ldr	r3, [r7, #12]
 8007d04:	681b      	ldr	r3, [r3, #0]
 8007d06:	689b      	ldr	r3, [r3, #8]
 8007d08:	f003 0302 	and.w	r3, r3, #2
 8007d0c:	2b02      	cmp	r3, #2
 8007d0e:	d112      	bne.n	8007d36 <HAL_SPI_Transmit+0x148>
 8007d10:	68fb      	ldr	r3, [r7, #12]
 8007d12:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8007d14:	881a      	ldrh	r2, [r3, #0]
 8007d16:	68fb      	ldr	r3, [r7, #12]
 8007d18:	681b      	ldr	r3, [r3, #0]
 8007d1a:	60da      	str	r2, [r3, #12]
 8007d1c:	68fb      	ldr	r3, [r7, #12]
 8007d1e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8007d20:	1c9a      	adds	r2, r3, #2
 8007d22:	68fb      	ldr	r3, [r7, #12]
 8007d24:	631a      	str	r2, [r3, #48]	@ 0x30
 8007d26:	68fb      	ldr	r3, [r7, #12]
 8007d28:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8007d2a:	b29b      	uxth	r3, r3
 8007d2c:	3b01      	subs	r3, #1
 8007d2e:	b29a      	uxth	r2, r3
 8007d30:	68fb      	ldr	r3, [r7, #12]
 8007d32:	86da      	strh	r2, [r3, #54]	@ 0x36
 8007d34:	e018      	b.n	8007d68 <HAL_SPI_Transmit+0x17a>
 8007d36:	f7fb fcf5 	bl	8003724 <HAL_GetTick>
 8007d3a:	4602      	mov	r2, r0
 8007d3c:	69fb      	ldr	r3, [r7, #28]
 8007d3e:	1ad3      	subs	r3, r2, r3
 8007d40:	683a      	ldr	r2, [r7, #0]
 8007d42:	429a      	cmp	r2, r3
 8007d44:	d803      	bhi.n	8007d4e <HAL_SPI_Transmit+0x160>
 8007d46:	683b      	ldr	r3, [r7, #0]
 8007d48:	f1b3 3fff 	cmp.w	r3, #4294967295	@ 0xffffffff
 8007d4c:	d102      	bne.n	8007d54 <HAL_SPI_Transmit+0x166>
 8007d4e:	683b      	ldr	r3, [r7, #0]
 8007d50:	2b00      	cmp	r3, #0
 8007d52:	d109      	bne.n	8007d68 <HAL_SPI_Transmit+0x17a>
 8007d54:	68fb      	ldr	r3, [r7, #12]
 8007d56:	2201      	movs	r2, #1
 8007d58:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8007d5c:	68fb      	ldr	r3, [r7, #12]
 8007d5e:	2200      	movs	r2, #0
 8007d60:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8007d64:	2303      	movs	r3, #3
 8007d66:	e082      	b.n	8007e6e <HAL_SPI_Transmit+0x280>
 8007d68:	68fb      	ldr	r3, [r7, #12]
 8007d6a:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8007d6c:	b29b      	uxth	r3, r3
 8007d6e:	2b00      	cmp	r3, #0
 8007d70:	d1c7      	bne.n	8007d02 <HAL_SPI_Transmit+0x114>
 8007d72:	e053      	b.n	8007e1c <HAL_SPI_Transmit+0x22e>
 8007d74:	68fb      	ldr	r3, [r7, #12]
 8007d76:	685b      	ldr	r3, [r3, #4]
 8007d78:	2b00      	cmp	r3, #0
 8007d7a:	d002      	beq.n	8007d82 <HAL_SPI_Transmit+0x194>
 8007d7c:	8b7b      	ldrh	r3, [r7, #26]
 8007d7e:	2b01      	cmp	r3, #1
 8007d80:	d147      	bne.n	8007e12 <HAL_SPI_Transmit+0x224>
 8007d82:	68fb      	ldr	r3, [r7, #12]
 8007d84:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8007d86:	68fb      	ldr	r3, [r7, #12]
 8007d88:	681b      	ldr	r3, [r3, #0]
 8007d8a:	330c      	adds	r3, #12
 8007d8c:	7812      	ldrb	r2, [r2, #0]
 8007d8e:	701a      	strb	r2, [r3, #0]
 8007d90:	68fb      	ldr	r3, [r7, #12]
 8007d92:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8007d94:	1c5a      	adds	r2, r3, #1
 8007d96:	68fb      	ldr	r3, [r7, #12]
 8007d98:	631a      	str	r2, [r3, #48]	@ 0x30
 8007d9a:	68fb      	ldr	r3, [r7, #12]
 8007d9c:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8007d9e:	b29b      	uxth	r3, r3
 8007da0:	3b01      	subs	r3, #1
 8007da2:	b29a      	uxth	r2, r3
 8007da4:	68fb      	ldr	r3, [r7, #12]
 8007da6:	86da      	strh	r2, [r3, #54]	@ 0x36
 8007da8:	e033      	b.n	8007e12 <HAL_SPI_Transmit+0x224>
 8007daa:	68fb      	ldr	r3, [r7, #12]
 8007dac:	681b      	ldr	r3, [r3, #0]
 8007dae:	689b      	ldr	r3, [r3, #8]
 8007db0:	f003 0302 	and.w	r3, r3, #2
 8007db4:	2b02      	cmp	r3, #2
 8007db6:	d113      	bne.n	8007de0 <HAL_SPI_Transmit+0x1f2>
 8007db8:	68fb      	ldr	r3, [r7, #12]
 8007dba:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8007dbc:	68fb      	ldr	r3, [r7, #12]
 8007dbe:	681b      	ldr	r3, [r3, #0]
 8007dc0:	330c      	adds	r3, #12
 8007dc2:	7812      	ldrb	r2, [r2, #0]
 8007dc4:	701a      	strb	r2, [r3, #0]
 8007dc6:	68fb      	ldr	r3, [r7, #12]
 8007dc8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8007dca:	1c5a      	adds	r2, r3, #1
 8007dcc:	68fb      	ldr	r3, [r7, #12]
 8007dce:	631a      	str	r2, [r3, #48]	@ 0x30
 8007dd0:	68fb      	ldr	r3, [r7, #12]
 8007dd2:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8007dd4:	b29b      	uxth	r3, r3
 8007dd6:	3b01      	subs	r3, #1
 8007dd8:	b29a      	uxth	r2, r3
 8007dda:	68fb      	ldr	r3, [r7, #12]
 8007ddc:	86da      	strh	r2, [r3, #54]	@ 0x36
 8007dde:	e018      	b.n	8007e12 <HAL_SPI_Transmit+0x224>
 8007de0:	f7fb fca0 	bl	8003724 <HAL_GetTick>
 8007de4:	4602      	mov	r2, r0
 8007de6:	69fb      	ldr	r3, [r7, #28]
 8007de8:	1ad3      	subs	r3, r2, r3
 8007dea:	683a      	ldr	r2, [r7, #0]
 8007dec:	429a      	cmp	r2, r3
 8007dee:	d803      	bhi.n	8007df8 <HAL_SPI_Transmit+0x20a>
 8007df0:	683b      	ldr	r3, [r7, #0]
 8007df2:	f1b3 3fff 	cmp.w	r3, #4294967295	@ 0xffffffff
 8007df6:	d102      	bne.n	8007dfe <HAL_SPI_Transmit+0x210>
 8007df8:	683b      	ldr	r3, [r7, #0]
 8007dfa:	2b00      	cmp	r3, #0
 8007dfc:	d109      	bne.n	8007e12 <HAL_SPI_Transmit+0x224>
 8007dfe:	68fb      	ldr	r3, [r7, #12]
 8007e00:	2201      	movs	r2, #1
 8007e02:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8007e06:	68fb      	ldr	r3, [r7, #12]
 8007e08:	2200      	movs	r2, #0
 8007e0a:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8007e0e:	2303      	movs	r3, #3
 8007e10:	e02d      	b.n	8007e6e <HAL_SPI_Transmit+0x280>
 8007e12:	68fb      	ldr	r3, [r7, #12]
 8007e14:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8007e16:	b29b      	uxth	r3, r3
 8007e18:	2b00      	cmp	r3, #0
 8007e1a:	d1c6      	bne.n	8007daa <HAL_SPI_Transmit+0x1bc>
 8007e1c:	69fa      	ldr	r2, [r7, #28]
 8007e1e:	6839      	ldr	r1, [r7, #0]
 8007e20:	68f8      	ldr	r0, [r7, #12]
 8007e22:	f000 fd21 	bl	8008868 <SPI_EndRxTxTransaction>
 8007e26:	4603      	mov	r3, r0
 8007e28:	2b00      	cmp	r3, #0
 8007e2a:	d002      	beq.n	8007e32 <HAL_SPI_Transmit+0x244>
 8007e2c:	68fb      	ldr	r3, [r7, #12]
 8007e2e:	2220      	movs	r2, #32
 8007e30:	655a      	str	r2, [r3, #84]	@ 0x54
 8007e32:	68fb      	ldr	r3, [r7, #12]
 8007e34:	689b      	ldr	r3, [r3, #8]
 8007e36:	2b00      	cmp	r3, #0
 8007e38:	d10a      	bne.n	8007e50 <HAL_SPI_Transmit+0x262>
 8007e3a:	2300      	movs	r3, #0
 8007e3c:	617b      	str	r3, [r7, #20]
 8007e3e:	68fb      	ldr	r3, [r7, #12]
 8007e40:	681b      	ldr	r3, [r3, #0]
 8007e42:	68db      	ldr	r3, [r3, #12]
 8007e44:	617b      	str	r3, [r7, #20]
 8007e46:	68fb      	ldr	r3, [r7, #12]
 8007e48:	681b      	ldr	r3, [r3, #0]
 8007e4a:	689b      	ldr	r3, [r3, #8]
 8007e4c:	617b      	str	r3, [r7, #20]
 8007e4e:	697b      	ldr	r3, [r7, #20]
 8007e50:	68fb      	ldr	r3, [r7, #12]
 8007e52:	2201      	movs	r2, #1
 8007e54:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8007e58:	68fb      	ldr	r3, [r7, #12]
 8007e5a:	2200      	movs	r2, #0
 8007e5c:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8007e60:	68fb      	ldr	r3, [r7, #12]
 8007e62:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8007e64:	2b00      	cmp	r3, #0
 8007e66:	d001      	beq.n	8007e6c <HAL_SPI_Transmit+0x27e>
 8007e68:	2301      	movs	r3, #1
 8007e6a:	e000      	b.n	8007e6e <HAL_SPI_Transmit+0x280>
 8007e6c:	2300      	movs	r3, #0
 8007e6e:	4618      	mov	r0, r3
 8007e70:	3720      	adds	r7, #32
 8007e72:	46bd      	mov	sp, r7
 8007e74:	bd80      	pop	{r7, pc}

08007e76 <HAL_SPI_Receive>:
 8007e76:	b580      	push	{r7, lr}
 8007e78:	b088      	sub	sp, #32
 8007e7a:	af02      	add	r7, sp, #8
 8007e7c:	60f8      	str	r0, [r7, #12]
 8007e7e:	60b9      	str	r1, [r7, #8]
 8007e80:	603b      	str	r3, [r7, #0]
 8007e82:	4613      	mov	r3, r2
 8007e84:	80fb      	strh	r3, [r7, #6]
 8007e86:	68fb      	ldr	r3, [r7, #12]
 8007e88:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 8007e8c:	b2db      	uxtb	r3, r3
 8007e8e:	2b01      	cmp	r3, #1
 8007e90:	d001      	beq.n	8007e96 <HAL_SPI_Receive+0x20>
 8007e92:	2302      	movs	r3, #2
 8007e94:	e104      	b.n	80080a0 <HAL_SPI_Receive+0x22a>
 8007e96:	68fb      	ldr	r3, [r7, #12]
 8007e98:	685b      	ldr	r3, [r3, #4]
 8007e9a:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8007e9e:	d112      	bne.n	8007ec6 <HAL_SPI_Receive+0x50>
 8007ea0:	68fb      	ldr	r3, [r7, #12]
 8007ea2:	689b      	ldr	r3, [r3, #8]
 8007ea4:	2b00      	cmp	r3, #0
 8007ea6:	d10e      	bne.n	8007ec6 <HAL_SPI_Receive+0x50>
 8007ea8:	68fb      	ldr	r3, [r7, #12]
 8007eaa:	2204      	movs	r2, #4
 8007eac:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8007eb0:	88fa      	ldrh	r2, [r7, #6]
 8007eb2:	683b      	ldr	r3, [r7, #0]
 8007eb4:	9300      	str	r3, [sp, #0]
 8007eb6:	4613      	mov	r3, r2
 8007eb8:	68ba      	ldr	r2, [r7, #8]
 8007eba:	68b9      	ldr	r1, [r7, #8]
 8007ebc:	68f8      	ldr	r0, [r7, #12]
 8007ebe:	f000 f8f3 	bl	80080a8 <HAL_SPI_TransmitReceive>
 8007ec2:	4603      	mov	r3, r0
 8007ec4:	e0ec      	b.n	80080a0 <HAL_SPI_Receive+0x22a>
 8007ec6:	f7fb fc2d 	bl	8003724 <HAL_GetTick>
 8007eca:	6178      	str	r0, [r7, #20]
 8007ecc:	68bb      	ldr	r3, [r7, #8]
 8007ece:	2b00      	cmp	r3, #0
 8007ed0:	d002      	beq.n	8007ed8 <HAL_SPI_Receive+0x62>
 8007ed2:	88fb      	ldrh	r3, [r7, #6]
 8007ed4:	2b00      	cmp	r3, #0
 8007ed6:	d101      	bne.n	8007edc <HAL_SPI_Receive+0x66>
 8007ed8:	2301      	movs	r3, #1
 8007eda:	e0e1      	b.n	80080a0 <HAL_SPI_Receive+0x22a>
 8007edc:	68fb      	ldr	r3, [r7, #12]
 8007ede:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
 8007ee2:	2b01      	cmp	r3, #1
 8007ee4:	d101      	bne.n	8007eea <HAL_SPI_Receive+0x74>
 8007ee6:	2302      	movs	r3, #2
 8007ee8:	e0da      	b.n	80080a0 <HAL_SPI_Receive+0x22a>
 8007eea:	68fb      	ldr	r3, [r7, #12]
 8007eec:	2201      	movs	r2, #1
 8007eee:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8007ef2:	68fb      	ldr	r3, [r7, #12]
 8007ef4:	2204      	movs	r2, #4
 8007ef6:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8007efa:	68fb      	ldr	r3, [r7, #12]
 8007efc:	2200      	movs	r2, #0
 8007efe:	655a      	str	r2, [r3, #84]	@ 0x54
 8007f00:	68fb      	ldr	r3, [r7, #12]
 8007f02:	68ba      	ldr	r2, [r7, #8]
 8007f04:	639a      	str	r2, [r3, #56]	@ 0x38
 8007f06:	68fb      	ldr	r3, [r7, #12]
 8007f08:	88fa      	ldrh	r2, [r7, #6]
 8007f0a:	879a      	strh	r2, [r3, #60]	@ 0x3c
 8007f0c:	68fb      	ldr	r3, [r7, #12]
 8007f0e:	88fa      	ldrh	r2, [r7, #6]
 8007f10:	87da      	strh	r2, [r3, #62]	@ 0x3e
 8007f12:	68fb      	ldr	r3, [r7, #12]
 8007f14:	2200      	movs	r2, #0
 8007f16:	631a      	str	r2, [r3, #48]	@ 0x30
 8007f18:	68fb      	ldr	r3, [r7, #12]
 8007f1a:	2200      	movs	r2, #0
 8007f1c:	869a      	strh	r2, [r3, #52]	@ 0x34
 8007f1e:	68fb      	ldr	r3, [r7, #12]
 8007f20:	2200      	movs	r2, #0
 8007f22:	86da      	strh	r2, [r3, #54]	@ 0x36
 8007f24:	68fb      	ldr	r3, [r7, #12]
 8007f26:	2200      	movs	r2, #0
 8007f28:	641a      	str	r2, [r3, #64]	@ 0x40
 8007f2a:	68fb      	ldr	r3, [r7, #12]
 8007f2c:	2200      	movs	r2, #0
 8007f2e:	645a      	str	r2, [r3, #68]	@ 0x44
 8007f30:	68fb      	ldr	r3, [r7, #12]
 8007f32:	689b      	ldr	r3, [r3, #8]
 8007f34:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8007f38:	d10f      	bne.n	8007f5a <HAL_SPI_Receive+0xe4>
 8007f3a:	68fb      	ldr	r3, [r7, #12]
 8007f3c:	681b      	ldr	r3, [r3, #0]
 8007f3e:	681a      	ldr	r2, [r3, #0]
 8007f40:	68fb      	ldr	r3, [r7, #12]
 8007f42:	681b      	ldr	r3, [r3, #0]
 8007f44:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8007f48:	601a      	str	r2, [r3, #0]
 8007f4a:	68fb      	ldr	r3, [r7, #12]
 8007f4c:	681b      	ldr	r3, [r3, #0]
 8007f4e:	681a      	ldr	r2, [r3, #0]
 8007f50:	68fb      	ldr	r3, [r7, #12]
 8007f52:	681b      	ldr	r3, [r3, #0]
 8007f54:	f422 4280 	bic.w	r2, r2, #16384	@ 0x4000
 8007f58:	601a      	str	r2, [r3, #0]
 8007f5a:	68fb      	ldr	r3, [r7, #12]
 8007f5c:	681b      	ldr	r3, [r3, #0]
 8007f5e:	681b      	ldr	r3, [r3, #0]
 8007f60:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8007f64:	2b40      	cmp	r3, #64	@ 0x40
 8007f66:	d007      	beq.n	8007f78 <HAL_SPI_Receive+0x102>
 8007f68:	68fb      	ldr	r3, [r7, #12]
 8007f6a:	681b      	ldr	r3, [r3, #0]
 8007f6c:	681a      	ldr	r2, [r3, #0]
 8007f6e:	68fb      	ldr	r3, [r7, #12]
 8007f70:	681b      	ldr	r3, [r3, #0]
 8007f72:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8007f76:	601a      	str	r2, [r3, #0]
 8007f78:	68fb      	ldr	r3, [r7, #12]
 8007f7a:	68db      	ldr	r3, [r3, #12]
 8007f7c:	2b00      	cmp	r3, #0
 8007f7e:	d170      	bne.n	8008062 <HAL_SPI_Receive+0x1ec>
 8007f80:	e035      	b.n	8007fee <HAL_SPI_Receive+0x178>
 8007f82:	68fb      	ldr	r3, [r7, #12]
 8007f84:	681b      	ldr	r3, [r3, #0]
 8007f86:	689b      	ldr	r3, [r3, #8]
 8007f88:	f003 0301 	and.w	r3, r3, #1
 8007f8c:	2b01      	cmp	r3, #1
 8007f8e:	d115      	bne.n	8007fbc <HAL_SPI_Receive+0x146>
 8007f90:	68fb      	ldr	r3, [r7, #12]
 8007f92:	681b      	ldr	r3, [r3, #0]
 8007f94:	f103 020c 	add.w	r2, r3, #12
 8007f98:	68fb      	ldr	r3, [r7, #12]
 8007f9a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8007f9c:	7812      	ldrb	r2, [r2, #0]
 8007f9e:	b2d2      	uxtb	r2, r2
 8007fa0:	701a      	strb	r2, [r3, #0]
 8007fa2:	68fb      	ldr	r3, [r7, #12]
 8007fa4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8007fa6:	1c5a      	adds	r2, r3, #1
 8007fa8:	68fb      	ldr	r3, [r7, #12]
 8007faa:	639a      	str	r2, [r3, #56]	@ 0x38
 8007fac:	68fb      	ldr	r3, [r7, #12]
 8007fae:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8007fb0:	b29b      	uxth	r3, r3
 8007fb2:	3b01      	subs	r3, #1
 8007fb4:	b29a      	uxth	r2, r3
 8007fb6:	68fb      	ldr	r3, [r7, #12]
 8007fb8:	87da      	strh	r2, [r3, #62]	@ 0x3e
 8007fba:	e018      	b.n	8007fee <HAL_SPI_Receive+0x178>
 8007fbc:	f7fb fbb2 	bl	8003724 <HAL_GetTick>
 8007fc0:	4602      	mov	r2, r0
 8007fc2:	697b      	ldr	r3, [r7, #20]
 8007fc4:	1ad3      	subs	r3, r2, r3
 8007fc6:	683a      	ldr	r2, [r7, #0]
 8007fc8:	429a      	cmp	r2, r3
 8007fca:	d803      	bhi.n	8007fd4 <HAL_SPI_Receive+0x15e>
 8007fcc:	683b      	ldr	r3, [r7, #0]
 8007fce:	f1b3 3fff 	cmp.w	r3, #4294967295	@ 0xffffffff
 8007fd2:	d102      	bne.n	8007fda <HAL_SPI_Receive+0x164>
 8007fd4:	683b      	ldr	r3, [r7, #0]
 8007fd6:	2b00      	cmp	r3, #0
 8007fd8:	d109      	bne.n	8007fee <HAL_SPI_Receive+0x178>
 8007fda:	68fb      	ldr	r3, [r7, #12]
 8007fdc:	2201      	movs	r2, #1
 8007fde:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8007fe2:	68fb      	ldr	r3, [r7, #12]
 8007fe4:	2200      	movs	r2, #0
 8007fe6:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8007fea:	2303      	movs	r3, #3
 8007fec:	e058      	b.n	80080a0 <HAL_SPI_Receive+0x22a>
 8007fee:	68fb      	ldr	r3, [r7, #12]
 8007ff0:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8007ff2:	b29b      	uxth	r3, r3
 8007ff4:	2b00      	cmp	r3, #0
 8007ff6:	d1c4      	bne.n	8007f82 <HAL_SPI_Receive+0x10c>
 8007ff8:	e038      	b.n	800806c <HAL_SPI_Receive+0x1f6>
 8007ffa:	68fb      	ldr	r3, [r7, #12]
 8007ffc:	681b      	ldr	r3, [r3, #0]
 8007ffe:	689b      	ldr	r3, [r3, #8]
 8008000:	f003 0301 	and.w	r3, r3, #1
 8008004:	2b01      	cmp	r3, #1
 8008006:	d113      	bne.n	8008030 <HAL_SPI_Receive+0x1ba>
 8008008:	68fb      	ldr	r3, [r7, #12]
 800800a:	681b      	ldr	r3, [r3, #0]
 800800c:	68da      	ldr	r2, [r3, #12]
 800800e:	68fb      	ldr	r3, [r7, #12]
 8008010:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8008012:	b292      	uxth	r2, r2
 8008014:	801a      	strh	r2, [r3, #0]
 8008016:	68fb      	ldr	r3, [r7, #12]
 8008018:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800801a:	1c9a      	adds	r2, r3, #2
 800801c:	68fb      	ldr	r3, [r7, #12]
 800801e:	639a      	str	r2, [r3, #56]	@ 0x38
 8008020:	68fb      	ldr	r3, [r7, #12]
 8008022:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8008024:	b29b      	uxth	r3, r3
 8008026:	3b01      	subs	r3, #1
 8008028:	b29a      	uxth	r2, r3
 800802a:	68fb      	ldr	r3, [r7, #12]
 800802c:	87da      	strh	r2, [r3, #62]	@ 0x3e
 800802e:	e018      	b.n	8008062 <HAL_SPI_Receive+0x1ec>
 8008030:	f7fb fb78 	bl	8003724 <HAL_GetTick>
 8008034:	4602      	mov	r2, r0
 8008036:	697b      	ldr	r3, [r7, #20]
 8008038:	1ad3      	subs	r3, r2, r3
 800803a:	683a      	ldr	r2, [r7, #0]
 800803c:	429a      	cmp	r2, r3
 800803e:	d803      	bhi.n	8008048 <HAL_SPI_Receive+0x1d2>
 8008040:	683b      	ldr	r3, [r7, #0]
 8008042:	f1b3 3fff 	cmp.w	r3, #4294967295	@ 0xffffffff
 8008046:	d102      	bne.n	800804e <HAL_SPI_Receive+0x1d8>
 8008048:	683b      	ldr	r3, [r7, #0]
 800804a:	2b00      	cmp	r3, #0
 800804c:	d109      	bne.n	8008062 <HAL_SPI_Receive+0x1ec>
 800804e:	68fb      	ldr	r3, [r7, #12]
 8008050:	2201      	movs	r2, #1
 8008052:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8008056:	68fb      	ldr	r3, [r7, #12]
 8008058:	2200      	movs	r2, #0
 800805a:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 800805e:	2303      	movs	r3, #3
 8008060:	e01e      	b.n	80080a0 <HAL_SPI_Receive+0x22a>
 8008062:	68fb      	ldr	r3, [r7, #12]
 8008064:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8008066:	b29b      	uxth	r3, r3
 8008068:	2b00      	cmp	r3, #0
 800806a:	d1c6      	bne.n	8007ffa <HAL_SPI_Receive+0x184>
 800806c:	697a      	ldr	r2, [r7, #20]
 800806e:	6839      	ldr	r1, [r7, #0]
 8008070:	68f8      	ldr	r0, [r7, #12]
 8008072:	f000 fb93 	bl	800879c <SPI_EndRxTransaction>
 8008076:	4603      	mov	r3, r0
 8008078:	2b00      	cmp	r3, #0
 800807a:	d002      	beq.n	8008082 <HAL_SPI_Receive+0x20c>
 800807c:	68fb      	ldr	r3, [r7, #12]
 800807e:	2220      	movs	r2, #32
 8008080:	655a      	str	r2, [r3, #84]	@ 0x54
 8008082:	68fb      	ldr	r3, [r7, #12]
 8008084:	2201      	movs	r2, #1
 8008086:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 800808a:	68fb      	ldr	r3, [r7, #12]
 800808c:	2200      	movs	r2, #0
 800808e:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8008092:	68fb      	ldr	r3, [r7, #12]
 8008094:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8008096:	2b00      	cmp	r3, #0
 8008098:	d001      	beq.n	800809e <HAL_SPI_Receive+0x228>
 800809a:	2301      	movs	r3, #1
 800809c:	e000      	b.n	80080a0 <HAL_SPI_Receive+0x22a>
 800809e:	2300      	movs	r3, #0
 80080a0:	4618      	mov	r0, r3
 80080a2:	3718      	adds	r7, #24
 80080a4:	46bd      	mov	sp, r7
 80080a6:	bd80      	pop	{r7, pc}

080080a8 <HAL_SPI_TransmitReceive>:
 80080a8:	b580      	push	{r7, lr}
 80080aa:	b08a      	sub	sp, #40	@ 0x28
 80080ac:	af00      	add	r7, sp, #0
 80080ae:	60f8      	str	r0, [r7, #12]
 80080b0:	60b9      	str	r1, [r7, #8]
 80080b2:	607a      	str	r2, [r7, #4]
 80080b4:	807b      	strh	r3, [r7, #2]
 80080b6:	2301      	movs	r3, #1
 80080b8:	627b      	str	r3, [r7, #36]	@ 0x24
 80080ba:	f7fb fb33 	bl	8003724 <HAL_GetTick>
 80080be:	6238      	str	r0, [r7, #32]
 80080c0:	68fb      	ldr	r3, [r7, #12]
 80080c2:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 80080c6:	77fb      	strb	r3, [r7, #31]
 80080c8:	68fb      	ldr	r3, [r7, #12]
 80080ca:	685b      	ldr	r3, [r3, #4]
 80080cc:	61bb      	str	r3, [r7, #24]
 80080ce:	887b      	ldrh	r3, [r7, #2]
 80080d0:	82fb      	strh	r3, [r7, #22]
 80080d2:	7ffb      	ldrb	r3, [r7, #31]
 80080d4:	2b01      	cmp	r3, #1
 80080d6:	d00c      	beq.n	80080f2 <HAL_SPI_TransmitReceive+0x4a>
 80080d8:	69bb      	ldr	r3, [r7, #24]
 80080da:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 80080de:	d106      	bne.n	80080ee <HAL_SPI_TransmitReceive+0x46>
 80080e0:	68fb      	ldr	r3, [r7, #12]
 80080e2:	689b      	ldr	r3, [r3, #8]
 80080e4:	2b00      	cmp	r3, #0
 80080e6:	d102      	bne.n	80080ee <HAL_SPI_TransmitReceive+0x46>
 80080e8:	7ffb      	ldrb	r3, [r7, #31]
 80080ea:	2b04      	cmp	r3, #4
 80080ec:	d001      	beq.n	80080f2 <HAL_SPI_TransmitReceive+0x4a>
 80080ee:	2302      	movs	r3, #2
 80080f0:	e17f      	b.n	80083f2 <HAL_SPI_TransmitReceive+0x34a>
 80080f2:	68bb      	ldr	r3, [r7, #8]
 80080f4:	2b00      	cmp	r3, #0
 80080f6:	d005      	beq.n	8008104 <HAL_SPI_TransmitReceive+0x5c>
 80080f8:	687b      	ldr	r3, [r7, #4]
 80080fa:	2b00      	cmp	r3, #0
 80080fc:	d002      	beq.n	8008104 <HAL_SPI_TransmitReceive+0x5c>
 80080fe:	887b      	ldrh	r3, [r7, #2]
 8008100:	2b00      	cmp	r3, #0
 8008102:	d101      	bne.n	8008108 <HAL_SPI_TransmitReceive+0x60>
 8008104:	2301      	movs	r3, #1
 8008106:	e174      	b.n	80083f2 <HAL_SPI_TransmitReceive+0x34a>
 8008108:	68fb      	ldr	r3, [r7, #12]
 800810a:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
 800810e:	2b01      	cmp	r3, #1
 8008110:	d101      	bne.n	8008116 <HAL_SPI_TransmitReceive+0x6e>
 8008112:	2302      	movs	r3, #2
 8008114:	e16d      	b.n	80083f2 <HAL_SPI_TransmitReceive+0x34a>
 8008116:	68fb      	ldr	r3, [r7, #12]
 8008118:	2201      	movs	r2, #1
 800811a:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 800811e:	68fb      	ldr	r3, [r7, #12]
 8008120:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 8008124:	b2db      	uxtb	r3, r3
 8008126:	2b04      	cmp	r3, #4
 8008128:	d003      	beq.n	8008132 <HAL_SPI_TransmitReceive+0x8a>
 800812a:	68fb      	ldr	r3, [r7, #12]
 800812c:	2205      	movs	r2, #5
 800812e:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8008132:	68fb      	ldr	r3, [r7, #12]
 8008134:	2200      	movs	r2, #0
 8008136:	655a      	str	r2, [r3, #84]	@ 0x54
 8008138:	68fb      	ldr	r3, [r7, #12]
 800813a:	687a      	ldr	r2, [r7, #4]
 800813c:	639a      	str	r2, [r3, #56]	@ 0x38
 800813e:	68fb      	ldr	r3, [r7, #12]
 8008140:	887a      	ldrh	r2, [r7, #2]
 8008142:	87da      	strh	r2, [r3, #62]	@ 0x3e
 8008144:	68fb      	ldr	r3, [r7, #12]
 8008146:	887a      	ldrh	r2, [r7, #2]
 8008148:	879a      	strh	r2, [r3, #60]	@ 0x3c
 800814a:	68fb      	ldr	r3, [r7, #12]
 800814c:	68ba      	ldr	r2, [r7, #8]
 800814e:	631a      	str	r2, [r3, #48]	@ 0x30
 8008150:	68fb      	ldr	r3, [r7, #12]
 8008152:	887a      	ldrh	r2, [r7, #2]
 8008154:	86da      	strh	r2, [r3, #54]	@ 0x36
 8008156:	68fb      	ldr	r3, [r7, #12]
 8008158:	887a      	ldrh	r2, [r7, #2]
 800815a:	869a      	strh	r2, [r3, #52]	@ 0x34
 800815c:	68fb      	ldr	r3, [r7, #12]
 800815e:	2200      	movs	r2, #0
 8008160:	641a      	str	r2, [r3, #64]	@ 0x40
 8008162:	68fb      	ldr	r3, [r7, #12]
 8008164:	2200      	movs	r2, #0
 8008166:	645a      	str	r2, [r3, #68]	@ 0x44
 8008168:	68fb      	ldr	r3, [r7, #12]
 800816a:	681b      	ldr	r3, [r3, #0]
 800816c:	681b      	ldr	r3, [r3, #0]
 800816e:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8008172:	2b40      	cmp	r3, #64	@ 0x40
 8008174:	d007      	beq.n	8008186 <HAL_SPI_TransmitReceive+0xde>
 8008176:	68fb      	ldr	r3, [r7, #12]
 8008178:	681b      	ldr	r3, [r3, #0]
 800817a:	681a      	ldr	r2, [r3, #0]
 800817c:	68fb      	ldr	r3, [r7, #12]
 800817e:	681b      	ldr	r3, [r3, #0]
 8008180:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8008184:	601a      	str	r2, [r3, #0]
 8008186:	68fb      	ldr	r3, [r7, #12]
 8008188:	68db      	ldr	r3, [r3, #12]
 800818a:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 800818e:	d17e      	bne.n	800828e <HAL_SPI_TransmitReceive+0x1e6>
 8008190:	68fb      	ldr	r3, [r7, #12]
 8008192:	685b      	ldr	r3, [r3, #4]
 8008194:	2b00      	cmp	r3, #0
 8008196:	d002      	beq.n	800819e <HAL_SPI_TransmitReceive+0xf6>
 8008198:	8afb      	ldrh	r3, [r7, #22]
 800819a:	2b01      	cmp	r3, #1
 800819c:	d16c      	bne.n	8008278 <HAL_SPI_TransmitReceive+0x1d0>
 800819e:	68fb      	ldr	r3, [r7, #12]
 80081a0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80081a2:	881a      	ldrh	r2, [r3, #0]
 80081a4:	68fb      	ldr	r3, [r7, #12]
 80081a6:	681b      	ldr	r3, [r3, #0]
 80081a8:	60da      	str	r2, [r3, #12]
 80081aa:	68fb      	ldr	r3, [r7, #12]
 80081ac:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80081ae:	1c9a      	adds	r2, r3, #2
 80081b0:	68fb      	ldr	r3, [r7, #12]
 80081b2:	631a      	str	r2, [r3, #48]	@ 0x30
 80081b4:	68fb      	ldr	r3, [r7, #12]
 80081b6:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 80081b8:	b29b      	uxth	r3, r3
 80081ba:	3b01      	subs	r3, #1
 80081bc:	b29a      	uxth	r2, r3
 80081be:	68fb      	ldr	r3, [r7, #12]
 80081c0:	86da      	strh	r2, [r3, #54]	@ 0x36
 80081c2:	e059      	b.n	8008278 <HAL_SPI_TransmitReceive+0x1d0>
 80081c4:	68fb      	ldr	r3, [r7, #12]
 80081c6:	681b      	ldr	r3, [r3, #0]
 80081c8:	689b      	ldr	r3, [r3, #8]
 80081ca:	f003 0302 	and.w	r3, r3, #2
 80081ce:	2b02      	cmp	r3, #2
 80081d0:	d11b      	bne.n	800820a <HAL_SPI_TransmitReceive+0x162>
 80081d2:	68fb      	ldr	r3, [r7, #12]
 80081d4:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 80081d6:	b29b      	uxth	r3, r3
 80081d8:	2b00      	cmp	r3, #0
 80081da:	d016      	beq.n	800820a <HAL_SPI_TransmitReceive+0x162>
 80081dc:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80081de:	2b01      	cmp	r3, #1
 80081e0:	d113      	bne.n	800820a <HAL_SPI_TransmitReceive+0x162>
 80081e2:	68fb      	ldr	r3, [r7, #12]
 80081e4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80081e6:	881a      	ldrh	r2, [r3, #0]
 80081e8:	68fb      	ldr	r3, [r7, #12]
 80081ea:	681b      	ldr	r3, [r3, #0]
 80081ec:	60da      	str	r2, [r3, #12]
 80081ee:	68fb      	ldr	r3, [r7, #12]
 80081f0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80081f2:	1c9a      	adds	r2, r3, #2
 80081f4:	68fb      	ldr	r3, [r7, #12]
 80081f6:	631a      	str	r2, [r3, #48]	@ 0x30
 80081f8:	68fb      	ldr	r3, [r7, #12]
 80081fa:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 80081fc:	b29b      	uxth	r3, r3
 80081fe:	3b01      	subs	r3, #1
 8008200:	b29a      	uxth	r2, r3
 8008202:	68fb      	ldr	r3, [r7, #12]
 8008204:	86da      	strh	r2, [r3, #54]	@ 0x36
 8008206:	2300      	movs	r3, #0
 8008208:	627b      	str	r3, [r7, #36]	@ 0x24
 800820a:	68fb      	ldr	r3, [r7, #12]
 800820c:	681b      	ldr	r3, [r3, #0]
 800820e:	689b      	ldr	r3, [r3, #8]
 8008210:	f003 0301 	and.w	r3, r3, #1
 8008214:	2b01      	cmp	r3, #1
 8008216:	d119      	bne.n	800824c <HAL_SPI_TransmitReceive+0x1a4>
 8008218:	68fb      	ldr	r3, [r7, #12]
 800821a:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 800821c:	b29b      	uxth	r3, r3
 800821e:	2b00      	cmp	r3, #0
 8008220:	d014      	beq.n	800824c <HAL_SPI_TransmitReceive+0x1a4>
 8008222:	68fb      	ldr	r3, [r7, #12]
 8008224:	681b      	ldr	r3, [r3, #0]
 8008226:	68da      	ldr	r2, [r3, #12]
 8008228:	68fb      	ldr	r3, [r7, #12]
 800822a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800822c:	b292      	uxth	r2, r2
 800822e:	801a      	strh	r2, [r3, #0]
 8008230:	68fb      	ldr	r3, [r7, #12]
 8008232:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8008234:	1c9a      	adds	r2, r3, #2
 8008236:	68fb      	ldr	r3, [r7, #12]
 8008238:	639a      	str	r2, [r3, #56]	@ 0x38
 800823a:	68fb      	ldr	r3, [r7, #12]
 800823c:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 800823e:	b29b      	uxth	r3, r3
 8008240:	3b01      	subs	r3, #1
 8008242:	b29a      	uxth	r2, r3
 8008244:	68fb      	ldr	r3, [r7, #12]
 8008246:	87da      	strh	r2, [r3, #62]	@ 0x3e
 8008248:	2301      	movs	r3, #1
 800824a:	627b      	str	r3, [r7, #36]	@ 0x24
 800824c:	f7fb fa6a 	bl	8003724 <HAL_GetTick>
 8008250:	4602      	mov	r2, r0
 8008252:	6a3b      	ldr	r3, [r7, #32]
 8008254:	1ad3      	subs	r3, r2, r3
 8008256:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8008258:	429a      	cmp	r2, r3
 800825a:	d80d      	bhi.n	8008278 <HAL_SPI_TransmitReceive+0x1d0>
 800825c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800825e:	f1b3 3fff 	cmp.w	r3, #4294967295	@ 0xffffffff
 8008262:	d009      	beq.n	8008278 <HAL_SPI_TransmitReceive+0x1d0>
 8008264:	68fb      	ldr	r3, [r7, #12]
 8008266:	2201      	movs	r2, #1
 8008268:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 800826c:	68fb      	ldr	r3, [r7, #12]
 800826e:	2200      	movs	r2, #0
 8008270:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8008274:	2303      	movs	r3, #3
 8008276:	e0bc      	b.n	80083f2 <HAL_SPI_TransmitReceive+0x34a>
 8008278:	68fb      	ldr	r3, [r7, #12]
 800827a:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 800827c:	b29b      	uxth	r3, r3
 800827e:	2b00      	cmp	r3, #0
 8008280:	d1a0      	bne.n	80081c4 <HAL_SPI_TransmitReceive+0x11c>
 8008282:	68fb      	ldr	r3, [r7, #12]
 8008284:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8008286:	b29b      	uxth	r3, r3
 8008288:	2b00      	cmp	r3, #0
 800828a:	d19b      	bne.n	80081c4 <HAL_SPI_TransmitReceive+0x11c>
 800828c:	e082      	b.n	8008394 <HAL_SPI_TransmitReceive+0x2ec>
 800828e:	68fb      	ldr	r3, [r7, #12]
 8008290:	685b      	ldr	r3, [r3, #4]
 8008292:	2b00      	cmp	r3, #0
 8008294:	d002      	beq.n	800829c <HAL_SPI_TransmitReceive+0x1f4>
 8008296:	8afb      	ldrh	r3, [r7, #22]
 8008298:	2b01      	cmp	r3, #1
 800829a:	d171      	bne.n	8008380 <HAL_SPI_TransmitReceive+0x2d8>
 800829c:	68fb      	ldr	r3, [r7, #12]
 800829e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80082a0:	68fb      	ldr	r3, [r7, #12]
 80082a2:	681b      	ldr	r3, [r3, #0]
 80082a4:	330c      	adds	r3, #12
 80082a6:	7812      	ldrb	r2, [r2, #0]
 80082a8:	701a      	strb	r2, [r3, #0]
 80082aa:	68fb      	ldr	r3, [r7, #12]
 80082ac:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80082ae:	1c5a      	adds	r2, r3, #1
 80082b0:	68fb      	ldr	r3, [r7, #12]
 80082b2:	631a      	str	r2, [r3, #48]	@ 0x30
 80082b4:	68fb      	ldr	r3, [r7, #12]
 80082b6:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 80082b8:	b29b      	uxth	r3, r3
 80082ba:	3b01      	subs	r3, #1
 80082bc:	b29a      	uxth	r2, r3
 80082be:	68fb      	ldr	r3, [r7, #12]
 80082c0:	86da      	strh	r2, [r3, #54]	@ 0x36
 80082c2:	e05d      	b.n	8008380 <HAL_SPI_TransmitReceive+0x2d8>
 80082c4:	68fb      	ldr	r3, [r7, #12]
 80082c6:	681b      	ldr	r3, [r3, #0]
 80082c8:	689b      	ldr	r3, [r3, #8]
 80082ca:	f003 0302 	and.w	r3, r3, #2
 80082ce:	2b02      	cmp	r3, #2
 80082d0:	d11c      	bne.n	800830c <HAL_SPI_TransmitReceive+0x264>
 80082d2:	68fb      	ldr	r3, [r7, #12]
 80082d4:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 80082d6:	b29b      	uxth	r3, r3
 80082d8:	2b00      	cmp	r3, #0
 80082da:	d017      	beq.n	800830c <HAL_SPI_TransmitReceive+0x264>
 80082dc:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80082de:	2b01      	cmp	r3, #1
 80082e0:	d114      	bne.n	800830c <HAL_SPI_TransmitReceive+0x264>
 80082e2:	68fb      	ldr	r3, [r7, #12]
 80082e4:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80082e6:	68fb      	ldr	r3, [r7, #12]
 80082e8:	681b      	ldr	r3, [r3, #0]
 80082ea:	330c      	adds	r3, #12
 80082ec:	7812      	ldrb	r2, [r2, #0]
 80082ee:	701a      	strb	r2, [r3, #0]
 80082f0:	68fb      	ldr	r3, [r7, #12]
 80082f2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80082f4:	1c5a      	adds	r2, r3, #1
 80082f6:	68fb      	ldr	r3, [r7, #12]
 80082f8:	631a      	str	r2, [r3, #48]	@ 0x30
 80082fa:	68fb      	ldr	r3, [r7, #12]
 80082fc:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 80082fe:	b29b      	uxth	r3, r3
 8008300:	3b01      	subs	r3, #1
 8008302:	b29a      	uxth	r2, r3
 8008304:	68fb      	ldr	r3, [r7, #12]
 8008306:	86da      	strh	r2, [r3, #54]	@ 0x36
 8008308:	2300      	movs	r3, #0
 800830a:	627b      	str	r3, [r7, #36]	@ 0x24
 800830c:	68fb      	ldr	r3, [r7, #12]
 800830e:	681b      	ldr	r3, [r3, #0]
 8008310:	689b      	ldr	r3, [r3, #8]
 8008312:	f003 0301 	and.w	r3, r3, #1
 8008316:	2b01      	cmp	r3, #1
 8008318:	d119      	bne.n	800834e <HAL_SPI_TransmitReceive+0x2a6>
 800831a:	68fb      	ldr	r3, [r7, #12]
 800831c:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 800831e:	b29b      	uxth	r3, r3
 8008320:	2b00      	cmp	r3, #0
 8008322:	d014      	beq.n	800834e <HAL_SPI_TransmitReceive+0x2a6>
 8008324:	68fb      	ldr	r3, [r7, #12]
 8008326:	681b      	ldr	r3, [r3, #0]
 8008328:	68da      	ldr	r2, [r3, #12]
 800832a:	68fb      	ldr	r3, [r7, #12]
 800832c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800832e:	b2d2      	uxtb	r2, r2
 8008330:	701a      	strb	r2, [r3, #0]
 8008332:	68fb      	ldr	r3, [r7, #12]
 8008334:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8008336:	1c5a      	adds	r2, r3, #1
 8008338:	68fb      	ldr	r3, [r7, #12]
 800833a:	639a      	str	r2, [r3, #56]	@ 0x38
 800833c:	68fb      	ldr	r3, [r7, #12]
 800833e:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8008340:	b29b      	uxth	r3, r3
 8008342:	3b01      	subs	r3, #1
 8008344:	b29a      	uxth	r2, r3
 8008346:	68fb      	ldr	r3, [r7, #12]
 8008348:	87da      	strh	r2, [r3, #62]	@ 0x3e
 800834a:	2301      	movs	r3, #1
 800834c:	627b      	str	r3, [r7, #36]	@ 0x24
 800834e:	f7fb f9e9 	bl	8003724 <HAL_GetTick>
 8008352:	4602      	mov	r2, r0
 8008354:	6a3b      	ldr	r3, [r7, #32]
 8008356:	1ad3      	subs	r3, r2, r3
 8008358:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 800835a:	429a      	cmp	r2, r3
 800835c:	d803      	bhi.n	8008366 <HAL_SPI_TransmitReceive+0x2be>
 800835e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8008360:	f1b3 3fff 	cmp.w	r3, #4294967295	@ 0xffffffff
 8008364:	d102      	bne.n	800836c <HAL_SPI_TransmitReceive+0x2c4>
 8008366:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8008368:	2b00      	cmp	r3, #0
 800836a:	d109      	bne.n	8008380 <HAL_SPI_TransmitReceive+0x2d8>
 800836c:	68fb      	ldr	r3, [r7, #12]
 800836e:	2201      	movs	r2, #1
 8008370:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8008374:	68fb      	ldr	r3, [r7, #12]
 8008376:	2200      	movs	r2, #0
 8008378:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 800837c:	2303      	movs	r3, #3
 800837e:	e038      	b.n	80083f2 <HAL_SPI_TransmitReceive+0x34a>
 8008380:	68fb      	ldr	r3, [r7, #12]
 8008382:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8008384:	b29b      	uxth	r3, r3
 8008386:	2b00      	cmp	r3, #0
 8008388:	d19c      	bne.n	80082c4 <HAL_SPI_TransmitReceive+0x21c>
 800838a:	68fb      	ldr	r3, [r7, #12]
 800838c:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 800838e:	b29b      	uxth	r3, r3
 8008390:	2b00      	cmp	r3, #0
 8008392:	d197      	bne.n	80082c4 <HAL_SPI_TransmitReceive+0x21c>
 8008394:	6a3a      	ldr	r2, [r7, #32]
 8008396:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 8008398:	68f8      	ldr	r0, [r7, #12]
 800839a:	f000 fa65 	bl	8008868 <SPI_EndRxTxTransaction>
 800839e:	4603      	mov	r3, r0
 80083a0:	2b00      	cmp	r3, #0
 80083a2:	d008      	beq.n	80083b6 <HAL_SPI_TransmitReceive+0x30e>
 80083a4:	68fb      	ldr	r3, [r7, #12]
 80083a6:	2220      	movs	r2, #32
 80083a8:	655a      	str	r2, [r3, #84]	@ 0x54
 80083aa:	68fb      	ldr	r3, [r7, #12]
 80083ac:	2200      	movs	r2, #0
 80083ae:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 80083b2:	2301      	movs	r3, #1
 80083b4:	e01d      	b.n	80083f2 <HAL_SPI_TransmitReceive+0x34a>
 80083b6:	68fb      	ldr	r3, [r7, #12]
 80083b8:	689b      	ldr	r3, [r3, #8]
 80083ba:	2b00      	cmp	r3, #0
 80083bc:	d10a      	bne.n	80083d4 <HAL_SPI_TransmitReceive+0x32c>
 80083be:	2300      	movs	r3, #0
 80083c0:	613b      	str	r3, [r7, #16]
 80083c2:	68fb      	ldr	r3, [r7, #12]
 80083c4:	681b      	ldr	r3, [r3, #0]
 80083c6:	68db      	ldr	r3, [r3, #12]
 80083c8:	613b      	str	r3, [r7, #16]
 80083ca:	68fb      	ldr	r3, [r7, #12]
 80083cc:	681b      	ldr	r3, [r3, #0]
 80083ce:	689b      	ldr	r3, [r3, #8]
 80083d0:	613b      	str	r3, [r7, #16]
 80083d2:	693b      	ldr	r3, [r7, #16]
 80083d4:	68fb      	ldr	r3, [r7, #12]
 80083d6:	2201      	movs	r2, #1
 80083d8:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 80083dc:	68fb      	ldr	r3, [r7, #12]
 80083de:	2200      	movs	r2, #0
 80083e0:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 80083e4:	68fb      	ldr	r3, [r7, #12]
 80083e6:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80083e8:	2b00      	cmp	r3, #0
 80083ea:	d001      	beq.n	80083f0 <HAL_SPI_TransmitReceive+0x348>
 80083ec:	2301      	movs	r3, #1
 80083ee:	e000      	b.n	80083f2 <HAL_SPI_TransmitReceive+0x34a>
 80083f0:	2300      	movs	r3, #0
 80083f2:	4618      	mov	r0, r3
 80083f4:	3728      	adds	r7, #40	@ 0x28
 80083f6:	46bd      	mov	sp, r7
 80083f8:	bd80      	pop	{r7, pc}
	...

080083fc <HAL_SPI_Transmit_DMA>:
 80083fc:	b580      	push	{r7, lr}
 80083fe:	b084      	sub	sp, #16
 8008400:	af00      	add	r7, sp, #0
 8008402:	60f8      	str	r0, [r7, #12]
 8008404:	60b9      	str	r1, [r7, #8]
 8008406:	4613      	mov	r3, r2
 8008408:	80fb      	strh	r3, [r7, #6]
 800840a:	68fb      	ldr	r3, [r7, #12]
 800840c:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 8008410:	b2db      	uxtb	r3, r3
 8008412:	2b01      	cmp	r3, #1
 8008414:	d001      	beq.n	800841a <HAL_SPI_Transmit_DMA+0x1e>
 8008416:	2302      	movs	r3, #2
 8008418:	e097      	b.n	800854a <HAL_SPI_Transmit_DMA+0x14e>
 800841a:	68bb      	ldr	r3, [r7, #8]
 800841c:	2b00      	cmp	r3, #0
 800841e:	d002      	beq.n	8008426 <HAL_SPI_Transmit_DMA+0x2a>
 8008420:	88fb      	ldrh	r3, [r7, #6]
 8008422:	2b00      	cmp	r3, #0
 8008424:	d101      	bne.n	800842a <HAL_SPI_Transmit_DMA+0x2e>
 8008426:	2301      	movs	r3, #1
 8008428:	e08f      	b.n	800854a <HAL_SPI_Transmit_DMA+0x14e>
 800842a:	68fb      	ldr	r3, [r7, #12]
 800842c:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
 8008430:	2b01      	cmp	r3, #1
 8008432:	d101      	bne.n	8008438 <HAL_SPI_Transmit_DMA+0x3c>
 8008434:	2302      	movs	r3, #2
 8008436:	e088      	b.n	800854a <HAL_SPI_Transmit_DMA+0x14e>
 8008438:	68fb      	ldr	r3, [r7, #12]
 800843a:	2201      	movs	r2, #1
 800843c:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8008440:	68fb      	ldr	r3, [r7, #12]
 8008442:	2203      	movs	r2, #3
 8008444:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8008448:	68fb      	ldr	r3, [r7, #12]
 800844a:	2200      	movs	r2, #0
 800844c:	655a      	str	r2, [r3, #84]	@ 0x54
 800844e:	68fb      	ldr	r3, [r7, #12]
 8008450:	68ba      	ldr	r2, [r7, #8]
 8008452:	631a      	str	r2, [r3, #48]	@ 0x30
 8008454:	68fb      	ldr	r3, [r7, #12]
 8008456:	88fa      	ldrh	r2, [r7, #6]
 8008458:	869a      	strh	r2, [r3, #52]	@ 0x34
 800845a:	68fb      	ldr	r3, [r7, #12]
 800845c:	88fa      	ldrh	r2, [r7, #6]
 800845e:	86da      	strh	r2, [r3, #54]	@ 0x36
 8008460:	68fb      	ldr	r3, [r7, #12]
 8008462:	2200      	movs	r2, #0
 8008464:	639a      	str	r2, [r3, #56]	@ 0x38
 8008466:	68fb      	ldr	r3, [r7, #12]
 8008468:	2200      	movs	r2, #0
 800846a:	645a      	str	r2, [r3, #68]	@ 0x44
 800846c:	68fb      	ldr	r3, [r7, #12]
 800846e:	2200      	movs	r2, #0
 8008470:	641a      	str	r2, [r3, #64]	@ 0x40
 8008472:	68fb      	ldr	r3, [r7, #12]
 8008474:	2200      	movs	r2, #0
 8008476:	879a      	strh	r2, [r3, #60]	@ 0x3c
 8008478:	68fb      	ldr	r3, [r7, #12]
 800847a:	2200      	movs	r2, #0
 800847c:	87da      	strh	r2, [r3, #62]	@ 0x3e
 800847e:	68fb      	ldr	r3, [r7, #12]
 8008480:	689b      	ldr	r3, [r3, #8]
 8008482:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8008486:	d10f      	bne.n	80084a8 <HAL_SPI_Transmit_DMA+0xac>
 8008488:	68fb      	ldr	r3, [r7, #12]
 800848a:	681b      	ldr	r3, [r3, #0]
 800848c:	681a      	ldr	r2, [r3, #0]
 800848e:	68fb      	ldr	r3, [r7, #12]
 8008490:	681b      	ldr	r3, [r3, #0]
 8008492:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8008496:	601a      	str	r2, [r3, #0]
 8008498:	68fb      	ldr	r3, [r7, #12]
 800849a:	681b      	ldr	r3, [r3, #0]
 800849c:	681a      	ldr	r2, [r3, #0]
 800849e:	68fb      	ldr	r3, [r7, #12]
 80084a0:	681b      	ldr	r3, [r3, #0]
 80084a2:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 80084a6:	601a      	str	r2, [r3, #0]
 80084a8:	68fb      	ldr	r3, [r7, #12]
 80084aa:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80084ac:	4a29      	ldr	r2, [pc, #164]	@ (8008554 <HAL_SPI_Transmit_DMA+0x158>)
 80084ae:	641a      	str	r2, [r3, #64]	@ 0x40
 80084b0:	68fb      	ldr	r3, [r7, #12]
 80084b2:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80084b4:	4a28      	ldr	r2, [pc, #160]	@ (8008558 <HAL_SPI_Transmit_DMA+0x15c>)
 80084b6:	63da      	str	r2, [r3, #60]	@ 0x3c
 80084b8:	68fb      	ldr	r3, [r7, #12]
 80084ba:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80084bc:	4a27      	ldr	r2, [pc, #156]	@ (800855c <HAL_SPI_Transmit_DMA+0x160>)
 80084be:	64da      	str	r2, [r3, #76]	@ 0x4c
 80084c0:	68fb      	ldr	r3, [r7, #12]
 80084c2:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80084c4:	2200      	movs	r2, #0
 80084c6:	651a      	str	r2, [r3, #80]	@ 0x50
 80084c8:	68fb      	ldr	r3, [r7, #12]
 80084ca:	6c98      	ldr	r0, [r3, #72]	@ 0x48
 80084cc:	68fb      	ldr	r3, [r7, #12]
 80084ce:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80084d0:	4619      	mov	r1, r3
 80084d2:	68fb      	ldr	r3, [r7, #12]
 80084d4:	681b      	ldr	r3, [r3, #0]
 80084d6:	330c      	adds	r3, #12
 80084d8:	461a      	mov	r2, r3
 80084da:	68fb      	ldr	r3, [r7, #12]
 80084dc:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 80084de:	b29b      	uxth	r3, r3
 80084e0:	f7fb fafc 	bl	8003adc <HAL_DMA_Start_IT>
 80084e4:	4603      	mov	r3, r0
 80084e6:	2b00      	cmp	r3, #0
 80084e8:	d00b      	beq.n	8008502 <HAL_SPI_Transmit_DMA+0x106>
 80084ea:	68fb      	ldr	r3, [r7, #12]
 80084ec:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80084ee:	f043 0210 	orr.w	r2, r3, #16
 80084f2:	68fb      	ldr	r3, [r7, #12]
 80084f4:	655a      	str	r2, [r3, #84]	@ 0x54
 80084f6:	68fb      	ldr	r3, [r7, #12]
 80084f8:	2200      	movs	r2, #0
 80084fa:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 80084fe:	2301      	movs	r3, #1
 8008500:	e023      	b.n	800854a <HAL_SPI_Transmit_DMA+0x14e>
 8008502:	68fb      	ldr	r3, [r7, #12]
 8008504:	681b      	ldr	r3, [r3, #0]
 8008506:	681b      	ldr	r3, [r3, #0]
 8008508:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800850c:	2b40      	cmp	r3, #64	@ 0x40
 800850e:	d007      	beq.n	8008520 <HAL_SPI_Transmit_DMA+0x124>
 8008510:	68fb      	ldr	r3, [r7, #12]
 8008512:	681b      	ldr	r3, [r3, #0]
 8008514:	681a      	ldr	r2, [r3, #0]
 8008516:	68fb      	ldr	r3, [r7, #12]
 8008518:	681b      	ldr	r3, [r3, #0]
 800851a:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 800851e:	601a      	str	r2, [r3, #0]
 8008520:	68fb      	ldr	r3, [r7, #12]
 8008522:	2200      	movs	r2, #0
 8008524:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8008528:	68fb      	ldr	r3, [r7, #12]
 800852a:	681b      	ldr	r3, [r3, #0]
 800852c:	685a      	ldr	r2, [r3, #4]
 800852e:	68fb      	ldr	r3, [r7, #12]
 8008530:	681b      	ldr	r3, [r3, #0]
 8008532:	f042 0220 	orr.w	r2, r2, #32
 8008536:	605a      	str	r2, [r3, #4]
 8008538:	68fb      	ldr	r3, [r7, #12]
 800853a:	681b      	ldr	r3, [r3, #0]
 800853c:	685a      	ldr	r2, [r3, #4]
 800853e:	68fb      	ldr	r3, [r7, #12]
 8008540:	681b      	ldr	r3, [r3, #0]
 8008542:	f042 0202 	orr.w	r2, r2, #2
 8008546:	605a      	str	r2, [r3, #4]
 8008548:	2300      	movs	r3, #0
 800854a:	4618      	mov	r0, r3
 800854c:	3710      	adds	r7, #16
 800854e:	46bd      	mov	sp, r7
 8008550:	bd80      	pop	{r7, pc}
 8008552:	bf00      	nop
 8008554:	08008631 	.word	0x08008631
 8008558:	08008589 	.word	0x08008589
 800855c:	0800864d 	.word	0x0800864d

08008560 <HAL_SPI_TxHalfCpltCallback>:
 8008560:	b480      	push	{r7}
 8008562:	b083      	sub	sp, #12
 8008564:	af00      	add	r7, sp, #0
 8008566:	6078      	str	r0, [r7, #4]
 8008568:	bf00      	nop
 800856a:	370c      	adds	r7, #12
 800856c:	46bd      	mov	sp, r7
 800856e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008572:	4770      	bx	lr

08008574 <HAL_SPI_ErrorCallback>:
 8008574:	b480      	push	{r7}
 8008576:	b083      	sub	sp, #12
 8008578:	af00      	add	r7, sp, #0
 800857a:	6078      	str	r0, [r7, #4]
 800857c:	bf00      	nop
 800857e:	370c      	adds	r7, #12
 8008580:	46bd      	mov	sp, r7
 8008582:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008586:	4770      	bx	lr

08008588 <SPI_DMATransmitCplt>:
 8008588:	b580      	push	{r7, lr}
 800858a:	b086      	sub	sp, #24
 800858c:	af00      	add	r7, sp, #0
 800858e:	6078      	str	r0, [r7, #4]
 8008590:	687b      	ldr	r3, [r7, #4]
 8008592:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8008594:	617b      	str	r3, [r7, #20]
 8008596:	f7fb f8c5 	bl	8003724 <HAL_GetTick>
 800859a:	6138      	str	r0, [r7, #16]
 800859c:	687b      	ldr	r3, [r7, #4]
 800859e:	681b      	ldr	r3, [r3, #0]
 80085a0:	681b      	ldr	r3, [r3, #0]
 80085a2:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80085a6:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 80085aa:	d03b      	beq.n	8008624 <SPI_DMATransmitCplt+0x9c>
 80085ac:	697b      	ldr	r3, [r7, #20]
 80085ae:	681b      	ldr	r3, [r3, #0]
 80085b0:	685a      	ldr	r2, [r3, #4]
 80085b2:	697b      	ldr	r3, [r7, #20]
 80085b4:	681b      	ldr	r3, [r3, #0]
 80085b6:	f022 0220 	bic.w	r2, r2, #32
 80085ba:	605a      	str	r2, [r3, #4]
 80085bc:	697b      	ldr	r3, [r7, #20]
 80085be:	681b      	ldr	r3, [r3, #0]
 80085c0:	685a      	ldr	r2, [r3, #4]
 80085c2:	697b      	ldr	r3, [r7, #20]
 80085c4:	681b      	ldr	r3, [r3, #0]
 80085c6:	f022 0202 	bic.w	r2, r2, #2
 80085ca:	605a      	str	r2, [r3, #4]
 80085cc:	693a      	ldr	r2, [r7, #16]
 80085ce:	2164      	movs	r1, #100	@ 0x64
 80085d0:	6978      	ldr	r0, [r7, #20]
 80085d2:	f000 f949 	bl	8008868 <SPI_EndRxTxTransaction>
 80085d6:	4603      	mov	r3, r0
 80085d8:	2b00      	cmp	r3, #0
 80085da:	d005      	beq.n	80085e8 <SPI_DMATransmitCplt+0x60>
 80085dc:	697b      	ldr	r3, [r7, #20]
 80085de:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80085e0:	f043 0220 	orr.w	r2, r3, #32
 80085e4:	697b      	ldr	r3, [r7, #20]
 80085e6:	655a      	str	r2, [r3, #84]	@ 0x54
 80085e8:	697b      	ldr	r3, [r7, #20]
 80085ea:	689b      	ldr	r3, [r3, #8]
 80085ec:	2b00      	cmp	r3, #0
 80085ee:	d10a      	bne.n	8008606 <SPI_DMATransmitCplt+0x7e>
 80085f0:	2300      	movs	r3, #0
 80085f2:	60fb      	str	r3, [r7, #12]
 80085f4:	697b      	ldr	r3, [r7, #20]
 80085f6:	681b      	ldr	r3, [r3, #0]
 80085f8:	68db      	ldr	r3, [r3, #12]
 80085fa:	60fb      	str	r3, [r7, #12]
 80085fc:	697b      	ldr	r3, [r7, #20]
 80085fe:	681b      	ldr	r3, [r3, #0]
 8008600:	689b      	ldr	r3, [r3, #8]
 8008602:	60fb      	str	r3, [r7, #12]
 8008604:	68fb      	ldr	r3, [r7, #12]
 8008606:	697b      	ldr	r3, [r7, #20]
 8008608:	2200      	movs	r2, #0
 800860a:	86da      	strh	r2, [r3, #54]	@ 0x36
 800860c:	697b      	ldr	r3, [r7, #20]
 800860e:	2201      	movs	r2, #1
 8008610:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8008614:	697b      	ldr	r3, [r7, #20]
 8008616:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8008618:	2b00      	cmp	r3, #0
 800861a:	d003      	beq.n	8008624 <SPI_DMATransmitCplt+0x9c>
 800861c:	6978      	ldr	r0, [r7, #20]
 800861e:	f7ff ffa9 	bl	8008574 <HAL_SPI_ErrorCallback>
 8008622:	e002      	b.n	800862a <SPI_DMATransmitCplt+0xa2>
 8008624:	6978      	ldr	r0, [r7, #20]
 8008626:	f7fa fb27 	bl	8002c78 <HAL_SPI_TxCpltCallback>
 800862a:	3718      	adds	r7, #24
 800862c:	46bd      	mov	sp, r7
 800862e:	bd80      	pop	{r7, pc}

08008630 <SPI_DMAHalfTransmitCplt>:
 8008630:	b580      	push	{r7, lr}
 8008632:	b084      	sub	sp, #16
 8008634:	af00      	add	r7, sp, #0
 8008636:	6078      	str	r0, [r7, #4]
 8008638:	687b      	ldr	r3, [r7, #4]
 800863a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800863c:	60fb      	str	r3, [r7, #12]
 800863e:	68f8      	ldr	r0, [r7, #12]
 8008640:	f7ff ff8e 	bl	8008560 <HAL_SPI_TxHalfCpltCallback>
 8008644:	bf00      	nop
 8008646:	3710      	adds	r7, #16
 8008648:	46bd      	mov	sp, r7
 800864a:	bd80      	pop	{r7, pc}

0800864c <SPI_DMAError>:
 800864c:	b580      	push	{r7, lr}
 800864e:	b084      	sub	sp, #16
 8008650:	af00      	add	r7, sp, #0
 8008652:	6078      	str	r0, [r7, #4]
 8008654:	687b      	ldr	r3, [r7, #4]
 8008656:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8008658:	60fb      	str	r3, [r7, #12]
 800865a:	68fb      	ldr	r3, [r7, #12]
 800865c:	681b      	ldr	r3, [r3, #0]
 800865e:	685a      	ldr	r2, [r3, #4]
 8008660:	68fb      	ldr	r3, [r7, #12]
 8008662:	681b      	ldr	r3, [r3, #0]
 8008664:	f022 0203 	bic.w	r2, r2, #3
 8008668:	605a      	str	r2, [r3, #4]
 800866a:	68fb      	ldr	r3, [r7, #12]
 800866c:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800866e:	f043 0210 	orr.w	r2, r3, #16
 8008672:	68fb      	ldr	r3, [r7, #12]
 8008674:	655a      	str	r2, [r3, #84]	@ 0x54
 8008676:	68fb      	ldr	r3, [r7, #12]
 8008678:	2201      	movs	r2, #1
 800867a:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 800867e:	68f8      	ldr	r0, [r7, #12]
 8008680:	f7ff ff78 	bl	8008574 <HAL_SPI_ErrorCallback>
 8008684:	bf00      	nop
 8008686:	3710      	adds	r7, #16
 8008688:	46bd      	mov	sp, r7
 800868a:	bd80      	pop	{r7, pc}

0800868c <SPI_WaitFlagStateUntilTimeout>:
 800868c:	b580      	push	{r7, lr}
 800868e:	b088      	sub	sp, #32
 8008690:	af00      	add	r7, sp, #0
 8008692:	60f8      	str	r0, [r7, #12]
 8008694:	60b9      	str	r1, [r7, #8]
 8008696:	603b      	str	r3, [r7, #0]
 8008698:	4613      	mov	r3, r2
 800869a:	71fb      	strb	r3, [r7, #7]
 800869c:	f7fb f842 	bl	8003724 <HAL_GetTick>
 80086a0:	4602      	mov	r2, r0
 80086a2:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80086a4:	1a9b      	subs	r3, r3, r2
 80086a6:	683a      	ldr	r2, [r7, #0]
 80086a8:	4413      	add	r3, r2
 80086aa:	61fb      	str	r3, [r7, #28]
 80086ac:	f7fb f83a 	bl	8003724 <HAL_GetTick>
 80086b0:	61b8      	str	r0, [r7, #24]
 80086b2:	4b39      	ldr	r3, [pc, #228]	@ (8008798 <SPI_WaitFlagStateUntilTimeout+0x10c>)
 80086b4:	681b      	ldr	r3, [r3, #0]
 80086b6:	015b      	lsls	r3, r3, #5
 80086b8:	0d1b      	lsrs	r3, r3, #20
 80086ba:	69fa      	ldr	r2, [r7, #28]
 80086bc:	fb02 f303 	mul.w	r3, r2, r3
 80086c0:	617b      	str	r3, [r7, #20]
 80086c2:	e054      	b.n	800876e <SPI_WaitFlagStateUntilTimeout+0xe2>
 80086c4:	683b      	ldr	r3, [r7, #0]
 80086c6:	f1b3 3fff 	cmp.w	r3, #4294967295	@ 0xffffffff
 80086ca:	d050      	beq.n	800876e <SPI_WaitFlagStateUntilTimeout+0xe2>
 80086cc:	f7fb f82a 	bl	8003724 <HAL_GetTick>
 80086d0:	4602      	mov	r2, r0
 80086d2:	69bb      	ldr	r3, [r7, #24]
 80086d4:	1ad3      	subs	r3, r2, r3
 80086d6:	69fa      	ldr	r2, [r7, #28]
 80086d8:	429a      	cmp	r2, r3
 80086da:	d902      	bls.n	80086e2 <SPI_WaitFlagStateUntilTimeout+0x56>
 80086dc:	69fb      	ldr	r3, [r7, #28]
 80086de:	2b00      	cmp	r3, #0
 80086e0:	d13d      	bne.n	800875e <SPI_WaitFlagStateUntilTimeout+0xd2>
 80086e2:	68fb      	ldr	r3, [r7, #12]
 80086e4:	681b      	ldr	r3, [r3, #0]
 80086e6:	685a      	ldr	r2, [r3, #4]
 80086e8:	68fb      	ldr	r3, [r7, #12]
 80086ea:	681b      	ldr	r3, [r3, #0]
 80086ec:	f022 02e0 	bic.w	r2, r2, #224	@ 0xe0
 80086f0:	605a      	str	r2, [r3, #4]
 80086f2:	68fb      	ldr	r3, [r7, #12]
 80086f4:	685b      	ldr	r3, [r3, #4]
 80086f6:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 80086fa:	d111      	bne.n	8008720 <SPI_WaitFlagStateUntilTimeout+0x94>
 80086fc:	68fb      	ldr	r3, [r7, #12]
 80086fe:	689b      	ldr	r3, [r3, #8]
 8008700:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8008704:	d004      	beq.n	8008710 <SPI_WaitFlagStateUntilTimeout+0x84>
 8008706:	68fb      	ldr	r3, [r7, #12]
 8008708:	689b      	ldr	r3, [r3, #8]
 800870a:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 800870e:	d107      	bne.n	8008720 <SPI_WaitFlagStateUntilTimeout+0x94>
 8008710:	68fb      	ldr	r3, [r7, #12]
 8008712:	681b      	ldr	r3, [r3, #0]
 8008714:	681a      	ldr	r2, [r3, #0]
 8008716:	68fb      	ldr	r3, [r7, #12]
 8008718:	681b      	ldr	r3, [r3, #0]
 800871a:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 800871e:	601a      	str	r2, [r3, #0]
 8008720:	68fb      	ldr	r3, [r7, #12]
 8008722:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8008724:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8008728:	d10f      	bne.n	800874a <SPI_WaitFlagStateUntilTimeout+0xbe>
 800872a:	68fb      	ldr	r3, [r7, #12]
 800872c:	681b      	ldr	r3, [r3, #0]
 800872e:	681a      	ldr	r2, [r3, #0]
 8008730:	68fb      	ldr	r3, [r7, #12]
 8008732:	681b      	ldr	r3, [r3, #0]
 8008734:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8008738:	601a      	str	r2, [r3, #0]
 800873a:	68fb      	ldr	r3, [r7, #12]
 800873c:	681b      	ldr	r3, [r3, #0]
 800873e:	681a      	ldr	r2, [r3, #0]
 8008740:	68fb      	ldr	r3, [r7, #12]
 8008742:	681b      	ldr	r3, [r3, #0]
 8008744:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8008748:	601a      	str	r2, [r3, #0]
 800874a:	68fb      	ldr	r3, [r7, #12]
 800874c:	2201      	movs	r2, #1
 800874e:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8008752:	68fb      	ldr	r3, [r7, #12]
 8008754:	2200      	movs	r2, #0
 8008756:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 800875a:	2303      	movs	r3, #3
 800875c:	e017      	b.n	800878e <SPI_WaitFlagStateUntilTimeout+0x102>
 800875e:	697b      	ldr	r3, [r7, #20]
 8008760:	2b00      	cmp	r3, #0
 8008762:	d101      	bne.n	8008768 <SPI_WaitFlagStateUntilTimeout+0xdc>
 8008764:	2300      	movs	r3, #0
 8008766:	61fb      	str	r3, [r7, #28]
 8008768:	697b      	ldr	r3, [r7, #20]
 800876a:	3b01      	subs	r3, #1
 800876c:	617b      	str	r3, [r7, #20]
 800876e:	68fb      	ldr	r3, [r7, #12]
 8008770:	681b      	ldr	r3, [r3, #0]
 8008772:	689a      	ldr	r2, [r3, #8]
 8008774:	68bb      	ldr	r3, [r7, #8]
 8008776:	4013      	ands	r3, r2
 8008778:	68ba      	ldr	r2, [r7, #8]
 800877a:	429a      	cmp	r2, r3
 800877c:	bf0c      	ite	eq
 800877e:	2301      	moveq	r3, #1
 8008780:	2300      	movne	r3, #0
 8008782:	b2db      	uxtb	r3, r3
 8008784:	461a      	mov	r2, r3
 8008786:	79fb      	ldrb	r3, [r7, #7]
 8008788:	429a      	cmp	r2, r3
 800878a:	d19b      	bne.n	80086c4 <SPI_WaitFlagStateUntilTimeout+0x38>
 800878c:	2300      	movs	r3, #0
 800878e:	4618      	mov	r0, r3
 8008790:	3720      	adds	r7, #32
 8008792:	46bd      	mov	sp, r7
 8008794:	bd80      	pop	{r7, pc}
 8008796:	bf00      	nop
 8008798:	20000008 	.word	0x20000008

0800879c <SPI_EndRxTransaction>:
 800879c:	b580      	push	{r7, lr}
 800879e:	b086      	sub	sp, #24
 80087a0:	af02      	add	r7, sp, #8
 80087a2:	60f8      	str	r0, [r7, #12]
 80087a4:	60b9      	str	r1, [r7, #8]
 80087a6:	607a      	str	r2, [r7, #4]
 80087a8:	68fb      	ldr	r3, [r7, #12]
 80087aa:	685b      	ldr	r3, [r3, #4]
 80087ac:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 80087b0:	d111      	bne.n	80087d6 <SPI_EndRxTransaction+0x3a>
 80087b2:	68fb      	ldr	r3, [r7, #12]
 80087b4:	689b      	ldr	r3, [r3, #8]
 80087b6:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 80087ba:	d004      	beq.n	80087c6 <SPI_EndRxTransaction+0x2a>
 80087bc:	68fb      	ldr	r3, [r7, #12]
 80087be:	689b      	ldr	r3, [r3, #8]
 80087c0:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80087c4:	d107      	bne.n	80087d6 <SPI_EndRxTransaction+0x3a>
 80087c6:	68fb      	ldr	r3, [r7, #12]
 80087c8:	681b      	ldr	r3, [r3, #0]
 80087ca:	681a      	ldr	r2, [r3, #0]
 80087cc:	68fb      	ldr	r3, [r7, #12]
 80087ce:	681b      	ldr	r3, [r3, #0]
 80087d0:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 80087d4:	601a      	str	r2, [r3, #0]
 80087d6:	68fb      	ldr	r3, [r7, #12]
 80087d8:	685b      	ldr	r3, [r3, #4]
 80087da:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 80087de:	d12a      	bne.n	8008836 <SPI_EndRxTransaction+0x9a>
 80087e0:	68fb      	ldr	r3, [r7, #12]
 80087e2:	689b      	ldr	r3, [r3, #8]
 80087e4:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80087e8:	d012      	beq.n	8008810 <SPI_EndRxTransaction+0x74>
 80087ea:	687b      	ldr	r3, [r7, #4]
 80087ec:	9300      	str	r3, [sp, #0]
 80087ee:	68bb      	ldr	r3, [r7, #8]
 80087f0:	2200      	movs	r2, #0
 80087f2:	2180      	movs	r1, #128	@ 0x80
 80087f4:	68f8      	ldr	r0, [r7, #12]
 80087f6:	f7ff ff49 	bl	800868c <SPI_WaitFlagStateUntilTimeout>
 80087fa:	4603      	mov	r3, r0
 80087fc:	2b00      	cmp	r3, #0
 80087fe:	d02d      	beq.n	800885c <SPI_EndRxTransaction+0xc0>
 8008800:	68fb      	ldr	r3, [r7, #12]
 8008802:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8008804:	f043 0220 	orr.w	r2, r3, #32
 8008808:	68fb      	ldr	r3, [r7, #12]
 800880a:	655a      	str	r2, [r3, #84]	@ 0x54
 800880c:	2303      	movs	r3, #3
 800880e:	e026      	b.n	800885e <SPI_EndRxTransaction+0xc2>
 8008810:	687b      	ldr	r3, [r7, #4]
 8008812:	9300      	str	r3, [sp, #0]
 8008814:	68bb      	ldr	r3, [r7, #8]
 8008816:	2200      	movs	r2, #0
 8008818:	2101      	movs	r1, #1
 800881a:	68f8      	ldr	r0, [r7, #12]
 800881c:	f7ff ff36 	bl	800868c <SPI_WaitFlagStateUntilTimeout>
 8008820:	4603      	mov	r3, r0
 8008822:	2b00      	cmp	r3, #0
 8008824:	d01a      	beq.n	800885c <SPI_EndRxTransaction+0xc0>
 8008826:	68fb      	ldr	r3, [r7, #12]
 8008828:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800882a:	f043 0220 	orr.w	r2, r3, #32
 800882e:	68fb      	ldr	r3, [r7, #12]
 8008830:	655a      	str	r2, [r3, #84]	@ 0x54
 8008832:	2303      	movs	r3, #3
 8008834:	e013      	b.n	800885e <SPI_EndRxTransaction+0xc2>
 8008836:	687b      	ldr	r3, [r7, #4]
 8008838:	9300      	str	r3, [sp, #0]
 800883a:	68bb      	ldr	r3, [r7, #8]
 800883c:	2200      	movs	r2, #0
 800883e:	2101      	movs	r1, #1
 8008840:	68f8      	ldr	r0, [r7, #12]
 8008842:	f7ff ff23 	bl	800868c <SPI_WaitFlagStateUntilTimeout>
 8008846:	4603      	mov	r3, r0
 8008848:	2b00      	cmp	r3, #0
 800884a:	d007      	beq.n	800885c <SPI_EndRxTransaction+0xc0>
 800884c:	68fb      	ldr	r3, [r7, #12]
 800884e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8008850:	f043 0220 	orr.w	r2, r3, #32
 8008854:	68fb      	ldr	r3, [r7, #12]
 8008856:	655a      	str	r2, [r3, #84]	@ 0x54
 8008858:	2303      	movs	r3, #3
 800885a:	e000      	b.n	800885e <SPI_EndRxTransaction+0xc2>
 800885c:	2300      	movs	r3, #0
 800885e:	4618      	mov	r0, r3
 8008860:	3710      	adds	r7, #16
 8008862:	46bd      	mov	sp, r7
 8008864:	bd80      	pop	{r7, pc}
	...

08008868 <SPI_EndRxTxTransaction>:
 8008868:	b580      	push	{r7, lr}
 800886a:	b088      	sub	sp, #32
 800886c:	af02      	add	r7, sp, #8
 800886e:	60f8      	str	r0, [r7, #12]
 8008870:	60b9      	str	r1, [r7, #8]
 8008872:	607a      	str	r2, [r7, #4]
 8008874:	687b      	ldr	r3, [r7, #4]
 8008876:	9300      	str	r3, [sp, #0]
 8008878:	68bb      	ldr	r3, [r7, #8]
 800887a:	2201      	movs	r2, #1
 800887c:	2102      	movs	r1, #2
 800887e:	68f8      	ldr	r0, [r7, #12]
 8008880:	f7ff ff04 	bl	800868c <SPI_WaitFlagStateUntilTimeout>
 8008884:	4603      	mov	r3, r0
 8008886:	2b00      	cmp	r3, #0
 8008888:	d007      	beq.n	800889a <SPI_EndRxTxTransaction+0x32>
 800888a:	68fb      	ldr	r3, [r7, #12]
 800888c:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800888e:	f043 0220 	orr.w	r2, r3, #32
 8008892:	68fb      	ldr	r3, [r7, #12]
 8008894:	655a      	str	r2, [r3, #84]	@ 0x54
 8008896:	2303      	movs	r3, #3
 8008898:	e032      	b.n	8008900 <SPI_EndRxTxTransaction+0x98>
 800889a:	4b1b      	ldr	r3, [pc, #108]	@ (8008908 <SPI_EndRxTxTransaction+0xa0>)
 800889c:	681b      	ldr	r3, [r3, #0]
 800889e:	4a1b      	ldr	r2, [pc, #108]	@ (800890c <SPI_EndRxTxTransaction+0xa4>)
 80088a0:	fba2 2303 	umull	r2, r3, r2, r3
 80088a4:	0d5b      	lsrs	r3, r3, #21
 80088a6:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 80088aa:	fb02 f303 	mul.w	r3, r2, r3
 80088ae:	617b      	str	r3, [r7, #20]
 80088b0:	68fb      	ldr	r3, [r7, #12]
 80088b2:	685b      	ldr	r3, [r3, #4]
 80088b4:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 80088b8:	d112      	bne.n	80088e0 <SPI_EndRxTxTransaction+0x78>
 80088ba:	687b      	ldr	r3, [r7, #4]
 80088bc:	9300      	str	r3, [sp, #0]
 80088be:	68bb      	ldr	r3, [r7, #8]
 80088c0:	2200      	movs	r2, #0
 80088c2:	2180      	movs	r1, #128	@ 0x80
 80088c4:	68f8      	ldr	r0, [r7, #12]
 80088c6:	f7ff fee1 	bl	800868c <SPI_WaitFlagStateUntilTimeout>
 80088ca:	4603      	mov	r3, r0
 80088cc:	2b00      	cmp	r3, #0
 80088ce:	d016      	beq.n	80088fe <SPI_EndRxTxTransaction+0x96>
 80088d0:	68fb      	ldr	r3, [r7, #12]
 80088d2:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80088d4:	f043 0220 	orr.w	r2, r3, #32
 80088d8:	68fb      	ldr	r3, [r7, #12]
 80088da:	655a      	str	r2, [r3, #84]	@ 0x54
 80088dc:	2303      	movs	r3, #3
 80088de:	e00f      	b.n	8008900 <SPI_EndRxTxTransaction+0x98>
 80088e0:	697b      	ldr	r3, [r7, #20]
 80088e2:	2b00      	cmp	r3, #0
 80088e4:	d00a      	beq.n	80088fc <SPI_EndRxTxTransaction+0x94>
 80088e6:	697b      	ldr	r3, [r7, #20]
 80088e8:	3b01      	subs	r3, #1
 80088ea:	617b      	str	r3, [r7, #20]
 80088ec:	68fb      	ldr	r3, [r7, #12]
 80088ee:	681b      	ldr	r3, [r3, #0]
 80088f0:	689b      	ldr	r3, [r3, #8]
 80088f2:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80088f6:	2b80      	cmp	r3, #128	@ 0x80
 80088f8:	d0f2      	beq.n	80088e0 <SPI_EndRxTxTransaction+0x78>
 80088fa:	e000      	b.n	80088fe <SPI_EndRxTxTransaction+0x96>
 80088fc:	bf00      	nop
 80088fe:	2300      	movs	r3, #0
 8008900:	4618      	mov	r0, r3
 8008902:	3718      	adds	r7, #24
 8008904:	46bd      	mov	sp, r7
 8008906:	bd80      	pop	{r7, pc}
 8008908:	20000008 	.word	0x20000008
 800890c:	165e9f81 	.word	0x165e9f81

08008910 <HAL_TIM_Base_Init>:
 8008910:	b580      	push	{r7, lr}
 8008912:	b082      	sub	sp, #8
 8008914:	af00      	add	r7, sp, #0
 8008916:	6078      	str	r0, [r7, #4]
 8008918:	687b      	ldr	r3, [r7, #4]
 800891a:	2b00      	cmp	r3, #0
 800891c:	d101      	bne.n	8008922 <HAL_TIM_Base_Init+0x12>
 800891e:	2301      	movs	r3, #1
 8008920:	e041      	b.n	80089a6 <HAL_TIM_Base_Init+0x96>
 8008922:	687b      	ldr	r3, [r7, #4]
 8008924:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8008928:	b2db      	uxtb	r3, r3
 800892a:	2b00      	cmp	r3, #0
 800892c:	d106      	bne.n	800893c <HAL_TIM_Base_Init+0x2c>
 800892e:	687b      	ldr	r3, [r7, #4]
 8008930:	2200      	movs	r2, #0
 8008932:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8008936:	6878      	ldr	r0, [r7, #4]
 8008938:	f7fa fde4 	bl	8003504 <HAL_TIM_Base_MspInit>
 800893c:	687b      	ldr	r3, [r7, #4]
 800893e:	2202      	movs	r2, #2
 8008940:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8008944:	687b      	ldr	r3, [r7, #4]
 8008946:	681a      	ldr	r2, [r3, #0]
 8008948:	687b      	ldr	r3, [r7, #4]
 800894a:	3304      	adds	r3, #4
 800894c:	4619      	mov	r1, r3
 800894e:	4610      	mov	r0, r2
 8008950:	f000 fa7e 	bl	8008e50 <TIM_Base_SetConfig>
 8008954:	687b      	ldr	r3, [r7, #4]
 8008956:	2201      	movs	r2, #1
 8008958:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 800895c:	687b      	ldr	r3, [r7, #4]
 800895e:	2201      	movs	r2, #1
 8008960:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8008964:	687b      	ldr	r3, [r7, #4]
 8008966:	2201      	movs	r2, #1
 8008968:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 800896c:	687b      	ldr	r3, [r7, #4]
 800896e:	2201      	movs	r2, #1
 8008970:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8008974:	687b      	ldr	r3, [r7, #4]
 8008976:	2201      	movs	r2, #1
 8008978:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800897c:	687b      	ldr	r3, [r7, #4]
 800897e:	2201      	movs	r2, #1
 8008980:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8008984:	687b      	ldr	r3, [r7, #4]
 8008986:	2201      	movs	r2, #1
 8008988:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 800898c:	687b      	ldr	r3, [r7, #4]
 800898e:	2201      	movs	r2, #1
 8008990:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8008994:	687b      	ldr	r3, [r7, #4]
 8008996:	2201      	movs	r2, #1
 8008998:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 800899c:	687b      	ldr	r3, [r7, #4]
 800899e:	2201      	movs	r2, #1
 80089a0:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80089a4:	2300      	movs	r3, #0
 80089a6:	4618      	mov	r0, r3
 80089a8:	3708      	adds	r7, #8
 80089aa:	46bd      	mov	sp, r7
 80089ac:	bd80      	pop	{r7, pc}
	...

080089b0 <HAL_TIM_Base_Start_IT>:
 80089b0:	b480      	push	{r7}
 80089b2:	b085      	sub	sp, #20
 80089b4:	af00      	add	r7, sp, #0
 80089b6:	6078      	str	r0, [r7, #4]
 80089b8:	687b      	ldr	r3, [r7, #4]
 80089ba:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 80089be:	b2db      	uxtb	r3, r3
 80089c0:	2b01      	cmp	r3, #1
 80089c2:	d001      	beq.n	80089c8 <HAL_TIM_Base_Start_IT+0x18>
 80089c4:	2301      	movs	r3, #1
 80089c6:	e04e      	b.n	8008a66 <HAL_TIM_Base_Start_IT+0xb6>
 80089c8:	687b      	ldr	r3, [r7, #4]
 80089ca:	2202      	movs	r2, #2
 80089cc:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80089d0:	687b      	ldr	r3, [r7, #4]
 80089d2:	681b      	ldr	r3, [r3, #0]
 80089d4:	68da      	ldr	r2, [r3, #12]
 80089d6:	687b      	ldr	r3, [r7, #4]
 80089d8:	681b      	ldr	r3, [r3, #0]
 80089da:	f042 0201 	orr.w	r2, r2, #1
 80089de:	60da      	str	r2, [r3, #12]
 80089e0:	687b      	ldr	r3, [r7, #4]
 80089e2:	681b      	ldr	r3, [r3, #0]
 80089e4:	4a23      	ldr	r2, [pc, #140]	@ (8008a74 <HAL_TIM_Base_Start_IT+0xc4>)
 80089e6:	4293      	cmp	r3, r2
 80089e8:	d022      	beq.n	8008a30 <HAL_TIM_Base_Start_IT+0x80>
 80089ea:	687b      	ldr	r3, [r7, #4]
 80089ec:	681b      	ldr	r3, [r3, #0]
 80089ee:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80089f2:	d01d      	beq.n	8008a30 <HAL_TIM_Base_Start_IT+0x80>
 80089f4:	687b      	ldr	r3, [r7, #4]
 80089f6:	681b      	ldr	r3, [r3, #0]
 80089f8:	4a1f      	ldr	r2, [pc, #124]	@ (8008a78 <HAL_TIM_Base_Start_IT+0xc8>)
 80089fa:	4293      	cmp	r3, r2
 80089fc:	d018      	beq.n	8008a30 <HAL_TIM_Base_Start_IT+0x80>
 80089fe:	687b      	ldr	r3, [r7, #4]
 8008a00:	681b      	ldr	r3, [r3, #0]
 8008a02:	4a1e      	ldr	r2, [pc, #120]	@ (8008a7c <HAL_TIM_Base_Start_IT+0xcc>)
 8008a04:	4293      	cmp	r3, r2
 8008a06:	d013      	beq.n	8008a30 <HAL_TIM_Base_Start_IT+0x80>
 8008a08:	687b      	ldr	r3, [r7, #4]
 8008a0a:	681b      	ldr	r3, [r3, #0]
 8008a0c:	4a1c      	ldr	r2, [pc, #112]	@ (8008a80 <HAL_TIM_Base_Start_IT+0xd0>)
 8008a0e:	4293      	cmp	r3, r2
 8008a10:	d00e      	beq.n	8008a30 <HAL_TIM_Base_Start_IT+0x80>
 8008a12:	687b      	ldr	r3, [r7, #4]
 8008a14:	681b      	ldr	r3, [r3, #0]
 8008a16:	4a1b      	ldr	r2, [pc, #108]	@ (8008a84 <HAL_TIM_Base_Start_IT+0xd4>)
 8008a18:	4293      	cmp	r3, r2
 8008a1a:	d009      	beq.n	8008a30 <HAL_TIM_Base_Start_IT+0x80>
 8008a1c:	687b      	ldr	r3, [r7, #4]
 8008a1e:	681b      	ldr	r3, [r3, #0]
 8008a20:	4a19      	ldr	r2, [pc, #100]	@ (8008a88 <HAL_TIM_Base_Start_IT+0xd8>)
 8008a22:	4293      	cmp	r3, r2
 8008a24:	d004      	beq.n	8008a30 <HAL_TIM_Base_Start_IT+0x80>
 8008a26:	687b      	ldr	r3, [r7, #4]
 8008a28:	681b      	ldr	r3, [r3, #0]
 8008a2a:	4a18      	ldr	r2, [pc, #96]	@ (8008a8c <HAL_TIM_Base_Start_IT+0xdc>)
 8008a2c:	4293      	cmp	r3, r2
 8008a2e:	d111      	bne.n	8008a54 <HAL_TIM_Base_Start_IT+0xa4>
 8008a30:	687b      	ldr	r3, [r7, #4]
 8008a32:	681b      	ldr	r3, [r3, #0]
 8008a34:	689b      	ldr	r3, [r3, #8]
 8008a36:	f003 0307 	and.w	r3, r3, #7
 8008a3a:	60fb      	str	r3, [r7, #12]
 8008a3c:	68fb      	ldr	r3, [r7, #12]
 8008a3e:	2b06      	cmp	r3, #6
 8008a40:	d010      	beq.n	8008a64 <HAL_TIM_Base_Start_IT+0xb4>
 8008a42:	687b      	ldr	r3, [r7, #4]
 8008a44:	681b      	ldr	r3, [r3, #0]
 8008a46:	681a      	ldr	r2, [r3, #0]
 8008a48:	687b      	ldr	r3, [r7, #4]
 8008a4a:	681b      	ldr	r3, [r3, #0]
 8008a4c:	f042 0201 	orr.w	r2, r2, #1
 8008a50:	601a      	str	r2, [r3, #0]
 8008a52:	e007      	b.n	8008a64 <HAL_TIM_Base_Start_IT+0xb4>
 8008a54:	687b      	ldr	r3, [r7, #4]
 8008a56:	681b      	ldr	r3, [r3, #0]
 8008a58:	681a      	ldr	r2, [r3, #0]
 8008a5a:	687b      	ldr	r3, [r7, #4]
 8008a5c:	681b      	ldr	r3, [r3, #0]
 8008a5e:	f042 0201 	orr.w	r2, r2, #1
 8008a62:	601a      	str	r2, [r3, #0]
 8008a64:	2300      	movs	r3, #0
 8008a66:	4618      	mov	r0, r3
 8008a68:	3714      	adds	r7, #20
 8008a6a:	46bd      	mov	sp, r7
 8008a6c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008a70:	4770      	bx	lr
 8008a72:	bf00      	nop
 8008a74:	40010000 	.word	0x40010000
 8008a78:	40000400 	.word	0x40000400
 8008a7c:	40000800 	.word	0x40000800
 8008a80:	40000c00 	.word	0x40000c00
 8008a84:	40010400 	.word	0x40010400
 8008a88:	40014000 	.word	0x40014000
 8008a8c:	40001800 	.word	0x40001800

08008a90 <HAL_TIM_IRQHandler>:
 8008a90:	b580      	push	{r7, lr}
 8008a92:	b084      	sub	sp, #16
 8008a94:	af00      	add	r7, sp, #0
 8008a96:	6078      	str	r0, [r7, #4]
 8008a98:	687b      	ldr	r3, [r7, #4]
 8008a9a:	681b      	ldr	r3, [r3, #0]
 8008a9c:	68db      	ldr	r3, [r3, #12]
 8008a9e:	60fb      	str	r3, [r7, #12]
 8008aa0:	687b      	ldr	r3, [r7, #4]
 8008aa2:	681b      	ldr	r3, [r3, #0]
 8008aa4:	691b      	ldr	r3, [r3, #16]
 8008aa6:	60bb      	str	r3, [r7, #8]
 8008aa8:	68bb      	ldr	r3, [r7, #8]
 8008aaa:	f003 0302 	and.w	r3, r3, #2
 8008aae:	2b00      	cmp	r3, #0
 8008ab0:	d020      	beq.n	8008af4 <HAL_TIM_IRQHandler+0x64>
 8008ab2:	68fb      	ldr	r3, [r7, #12]
 8008ab4:	f003 0302 	and.w	r3, r3, #2
 8008ab8:	2b00      	cmp	r3, #0
 8008aba:	d01b      	beq.n	8008af4 <HAL_TIM_IRQHandler+0x64>
 8008abc:	687b      	ldr	r3, [r7, #4]
 8008abe:	681b      	ldr	r3, [r3, #0]
 8008ac0:	f06f 0202 	mvn.w	r2, #2
 8008ac4:	611a      	str	r2, [r3, #16]
 8008ac6:	687b      	ldr	r3, [r7, #4]
 8008ac8:	2201      	movs	r2, #1
 8008aca:	771a      	strb	r2, [r3, #28]
 8008acc:	687b      	ldr	r3, [r7, #4]
 8008ace:	681b      	ldr	r3, [r3, #0]
 8008ad0:	699b      	ldr	r3, [r3, #24]
 8008ad2:	f003 0303 	and.w	r3, r3, #3
 8008ad6:	2b00      	cmp	r3, #0
 8008ad8:	d003      	beq.n	8008ae2 <HAL_TIM_IRQHandler+0x52>
 8008ada:	6878      	ldr	r0, [r7, #4]
 8008adc:	f000 f999 	bl	8008e12 <HAL_TIM_IC_CaptureCallback>
 8008ae0:	e005      	b.n	8008aee <HAL_TIM_IRQHandler+0x5e>
 8008ae2:	6878      	ldr	r0, [r7, #4]
 8008ae4:	f000 f98b 	bl	8008dfe <HAL_TIM_OC_DelayElapsedCallback>
 8008ae8:	6878      	ldr	r0, [r7, #4]
 8008aea:	f000 f99c 	bl	8008e26 <HAL_TIM_PWM_PulseFinishedCallback>
 8008aee:	687b      	ldr	r3, [r7, #4]
 8008af0:	2200      	movs	r2, #0
 8008af2:	771a      	strb	r2, [r3, #28]
 8008af4:	68bb      	ldr	r3, [r7, #8]
 8008af6:	f003 0304 	and.w	r3, r3, #4
 8008afa:	2b00      	cmp	r3, #0
 8008afc:	d020      	beq.n	8008b40 <HAL_TIM_IRQHandler+0xb0>
 8008afe:	68fb      	ldr	r3, [r7, #12]
 8008b00:	f003 0304 	and.w	r3, r3, #4
 8008b04:	2b00      	cmp	r3, #0
 8008b06:	d01b      	beq.n	8008b40 <HAL_TIM_IRQHandler+0xb0>
 8008b08:	687b      	ldr	r3, [r7, #4]
 8008b0a:	681b      	ldr	r3, [r3, #0]
 8008b0c:	f06f 0204 	mvn.w	r2, #4
 8008b10:	611a      	str	r2, [r3, #16]
 8008b12:	687b      	ldr	r3, [r7, #4]
 8008b14:	2202      	movs	r2, #2
 8008b16:	771a      	strb	r2, [r3, #28]
 8008b18:	687b      	ldr	r3, [r7, #4]
 8008b1a:	681b      	ldr	r3, [r3, #0]
 8008b1c:	699b      	ldr	r3, [r3, #24]
 8008b1e:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8008b22:	2b00      	cmp	r3, #0
 8008b24:	d003      	beq.n	8008b2e <HAL_TIM_IRQHandler+0x9e>
 8008b26:	6878      	ldr	r0, [r7, #4]
 8008b28:	f000 f973 	bl	8008e12 <HAL_TIM_IC_CaptureCallback>
 8008b2c:	e005      	b.n	8008b3a <HAL_TIM_IRQHandler+0xaa>
 8008b2e:	6878      	ldr	r0, [r7, #4]
 8008b30:	f000 f965 	bl	8008dfe <HAL_TIM_OC_DelayElapsedCallback>
 8008b34:	6878      	ldr	r0, [r7, #4]
 8008b36:	f000 f976 	bl	8008e26 <HAL_TIM_PWM_PulseFinishedCallback>
 8008b3a:	687b      	ldr	r3, [r7, #4]
 8008b3c:	2200      	movs	r2, #0
 8008b3e:	771a      	strb	r2, [r3, #28]
 8008b40:	68bb      	ldr	r3, [r7, #8]
 8008b42:	f003 0308 	and.w	r3, r3, #8
 8008b46:	2b00      	cmp	r3, #0
 8008b48:	d020      	beq.n	8008b8c <HAL_TIM_IRQHandler+0xfc>
 8008b4a:	68fb      	ldr	r3, [r7, #12]
 8008b4c:	f003 0308 	and.w	r3, r3, #8
 8008b50:	2b00      	cmp	r3, #0
 8008b52:	d01b      	beq.n	8008b8c <HAL_TIM_IRQHandler+0xfc>
 8008b54:	687b      	ldr	r3, [r7, #4]
 8008b56:	681b      	ldr	r3, [r3, #0]
 8008b58:	f06f 0208 	mvn.w	r2, #8
 8008b5c:	611a      	str	r2, [r3, #16]
 8008b5e:	687b      	ldr	r3, [r7, #4]
 8008b60:	2204      	movs	r2, #4
 8008b62:	771a      	strb	r2, [r3, #28]
 8008b64:	687b      	ldr	r3, [r7, #4]
 8008b66:	681b      	ldr	r3, [r3, #0]
 8008b68:	69db      	ldr	r3, [r3, #28]
 8008b6a:	f003 0303 	and.w	r3, r3, #3
 8008b6e:	2b00      	cmp	r3, #0
 8008b70:	d003      	beq.n	8008b7a <HAL_TIM_IRQHandler+0xea>
 8008b72:	6878      	ldr	r0, [r7, #4]
 8008b74:	f000 f94d 	bl	8008e12 <HAL_TIM_IC_CaptureCallback>
 8008b78:	e005      	b.n	8008b86 <HAL_TIM_IRQHandler+0xf6>
 8008b7a:	6878      	ldr	r0, [r7, #4]
 8008b7c:	f000 f93f 	bl	8008dfe <HAL_TIM_OC_DelayElapsedCallback>
 8008b80:	6878      	ldr	r0, [r7, #4]
 8008b82:	f000 f950 	bl	8008e26 <HAL_TIM_PWM_PulseFinishedCallback>
 8008b86:	687b      	ldr	r3, [r7, #4]
 8008b88:	2200      	movs	r2, #0
 8008b8a:	771a      	strb	r2, [r3, #28]
 8008b8c:	68bb      	ldr	r3, [r7, #8]
 8008b8e:	f003 0310 	and.w	r3, r3, #16
 8008b92:	2b00      	cmp	r3, #0
 8008b94:	d020      	beq.n	8008bd8 <HAL_TIM_IRQHandler+0x148>
 8008b96:	68fb      	ldr	r3, [r7, #12]
 8008b98:	f003 0310 	and.w	r3, r3, #16
 8008b9c:	2b00      	cmp	r3, #0
 8008b9e:	d01b      	beq.n	8008bd8 <HAL_TIM_IRQHandler+0x148>
 8008ba0:	687b      	ldr	r3, [r7, #4]
 8008ba2:	681b      	ldr	r3, [r3, #0]
 8008ba4:	f06f 0210 	mvn.w	r2, #16
 8008ba8:	611a      	str	r2, [r3, #16]
 8008baa:	687b      	ldr	r3, [r7, #4]
 8008bac:	2208      	movs	r2, #8
 8008bae:	771a      	strb	r2, [r3, #28]
 8008bb0:	687b      	ldr	r3, [r7, #4]
 8008bb2:	681b      	ldr	r3, [r3, #0]
 8008bb4:	69db      	ldr	r3, [r3, #28]
 8008bb6:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8008bba:	2b00      	cmp	r3, #0
 8008bbc:	d003      	beq.n	8008bc6 <HAL_TIM_IRQHandler+0x136>
 8008bbe:	6878      	ldr	r0, [r7, #4]
 8008bc0:	f000 f927 	bl	8008e12 <HAL_TIM_IC_CaptureCallback>
 8008bc4:	e005      	b.n	8008bd2 <HAL_TIM_IRQHandler+0x142>
 8008bc6:	6878      	ldr	r0, [r7, #4]
 8008bc8:	f000 f919 	bl	8008dfe <HAL_TIM_OC_DelayElapsedCallback>
 8008bcc:	6878      	ldr	r0, [r7, #4]
 8008bce:	f000 f92a 	bl	8008e26 <HAL_TIM_PWM_PulseFinishedCallback>
 8008bd2:	687b      	ldr	r3, [r7, #4]
 8008bd4:	2200      	movs	r2, #0
 8008bd6:	771a      	strb	r2, [r3, #28]
 8008bd8:	68bb      	ldr	r3, [r7, #8]
 8008bda:	f003 0301 	and.w	r3, r3, #1
 8008bde:	2b00      	cmp	r3, #0
 8008be0:	d00c      	beq.n	8008bfc <HAL_TIM_IRQHandler+0x16c>
 8008be2:	68fb      	ldr	r3, [r7, #12]
 8008be4:	f003 0301 	and.w	r3, r3, #1
 8008be8:	2b00      	cmp	r3, #0
 8008bea:	d007      	beq.n	8008bfc <HAL_TIM_IRQHandler+0x16c>
 8008bec:	687b      	ldr	r3, [r7, #4]
 8008bee:	681b      	ldr	r3, [r3, #0]
 8008bf0:	f06f 0201 	mvn.w	r2, #1
 8008bf4:	611a      	str	r2, [r3, #16]
 8008bf6:	6878      	ldr	r0, [r7, #4]
 8008bf8:	f7fa f938 	bl	8002e6c <HAL_TIM_PeriodElapsedCallback>
 8008bfc:	68bb      	ldr	r3, [r7, #8]
 8008bfe:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8008c02:	2b00      	cmp	r3, #0
 8008c04:	d00c      	beq.n	8008c20 <HAL_TIM_IRQHandler+0x190>
 8008c06:	68fb      	ldr	r3, [r7, #12]
 8008c08:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8008c0c:	2b00      	cmp	r3, #0
 8008c0e:	d007      	beq.n	8008c20 <HAL_TIM_IRQHandler+0x190>
 8008c10:	687b      	ldr	r3, [r7, #4]
 8008c12:	681b      	ldr	r3, [r3, #0]
 8008c14:	f06f 0280 	mvn.w	r2, #128	@ 0x80
 8008c18:	611a      	str	r2, [r3, #16]
 8008c1a:	6878      	ldr	r0, [r7, #4]
 8008c1c:	f000 fae4 	bl	80091e8 <HAL_TIMEx_BreakCallback>
 8008c20:	68bb      	ldr	r3, [r7, #8]
 8008c22:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8008c26:	2b00      	cmp	r3, #0
 8008c28:	d00c      	beq.n	8008c44 <HAL_TIM_IRQHandler+0x1b4>
 8008c2a:	68fb      	ldr	r3, [r7, #12]
 8008c2c:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8008c30:	2b00      	cmp	r3, #0
 8008c32:	d007      	beq.n	8008c44 <HAL_TIM_IRQHandler+0x1b4>
 8008c34:	687b      	ldr	r3, [r7, #4]
 8008c36:	681b      	ldr	r3, [r3, #0]
 8008c38:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 8008c3c:	611a      	str	r2, [r3, #16]
 8008c3e:	6878      	ldr	r0, [r7, #4]
 8008c40:	f000 f8fb 	bl	8008e3a <HAL_TIM_TriggerCallback>
 8008c44:	68bb      	ldr	r3, [r7, #8]
 8008c46:	f003 0320 	and.w	r3, r3, #32
 8008c4a:	2b00      	cmp	r3, #0
 8008c4c:	d00c      	beq.n	8008c68 <HAL_TIM_IRQHandler+0x1d8>
 8008c4e:	68fb      	ldr	r3, [r7, #12]
 8008c50:	f003 0320 	and.w	r3, r3, #32
 8008c54:	2b00      	cmp	r3, #0
 8008c56:	d007      	beq.n	8008c68 <HAL_TIM_IRQHandler+0x1d8>
 8008c58:	687b      	ldr	r3, [r7, #4]
 8008c5a:	681b      	ldr	r3, [r3, #0]
 8008c5c:	f06f 0220 	mvn.w	r2, #32
 8008c60:	611a      	str	r2, [r3, #16]
 8008c62:	6878      	ldr	r0, [r7, #4]
 8008c64:	f000 fab6 	bl	80091d4 <HAL_TIMEx_CommutCallback>
 8008c68:	bf00      	nop
 8008c6a:	3710      	adds	r7, #16
 8008c6c:	46bd      	mov	sp, r7
 8008c6e:	bd80      	pop	{r7, pc}

08008c70 <HAL_TIM_ConfigClockSource>:
 8008c70:	b580      	push	{r7, lr}
 8008c72:	b084      	sub	sp, #16
 8008c74:	af00      	add	r7, sp, #0
 8008c76:	6078      	str	r0, [r7, #4]
 8008c78:	6039      	str	r1, [r7, #0]
 8008c7a:	2300      	movs	r3, #0
 8008c7c:	73fb      	strb	r3, [r7, #15]
 8008c7e:	687b      	ldr	r3, [r7, #4]
 8008c80:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8008c84:	2b01      	cmp	r3, #1
 8008c86:	d101      	bne.n	8008c8c <HAL_TIM_ConfigClockSource+0x1c>
 8008c88:	2302      	movs	r3, #2
 8008c8a:	e0b4      	b.n	8008df6 <HAL_TIM_ConfigClockSource+0x186>
 8008c8c:	687b      	ldr	r3, [r7, #4]
 8008c8e:	2201      	movs	r2, #1
 8008c90:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8008c94:	687b      	ldr	r3, [r7, #4]
 8008c96:	2202      	movs	r2, #2
 8008c98:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8008c9c:	687b      	ldr	r3, [r7, #4]
 8008c9e:	681b      	ldr	r3, [r3, #0]
 8008ca0:	689b      	ldr	r3, [r3, #8]
 8008ca2:	60bb      	str	r3, [r7, #8]
 8008ca4:	68bb      	ldr	r3, [r7, #8]
 8008ca6:	f023 0377 	bic.w	r3, r3, #119	@ 0x77
 8008caa:	60bb      	str	r3, [r7, #8]
 8008cac:	68bb      	ldr	r3, [r7, #8]
 8008cae:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8008cb2:	60bb      	str	r3, [r7, #8]
 8008cb4:	687b      	ldr	r3, [r7, #4]
 8008cb6:	681b      	ldr	r3, [r3, #0]
 8008cb8:	68ba      	ldr	r2, [r7, #8]
 8008cba:	609a      	str	r2, [r3, #8]
 8008cbc:	683b      	ldr	r3, [r7, #0]
 8008cbe:	681b      	ldr	r3, [r3, #0]
 8008cc0:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8008cc4:	d03e      	beq.n	8008d44 <HAL_TIM_ConfigClockSource+0xd4>
 8008cc6:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8008cca:	f200 8087 	bhi.w	8008ddc <HAL_TIM_ConfigClockSource+0x16c>
 8008cce:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8008cd2:	f000 8086 	beq.w	8008de2 <HAL_TIM_ConfigClockSource+0x172>
 8008cd6:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8008cda:	d87f      	bhi.n	8008ddc <HAL_TIM_ConfigClockSource+0x16c>
 8008cdc:	2b70      	cmp	r3, #112	@ 0x70
 8008cde:	d01a      	beq.n	8008d16 <HAL_TIM_ConfigClockSource+0xa6>
 8008ce0:	2b70      	cmp	r3, #112	@ 0x70
 8008ce2:	d87b      	bhi.n	8008ddc <HAL_TIM_ConfigClockSource+0x16c>
 8008ce4:	2b60      	cmp	r3, #96	@ 0x60
 8008ce6:	d050      	beq.n	8008d8a <HAL_TIM_ConfigClockSource+0x11a>
 8008ce8:	2b60      	cmp	r3, #96	@ 0x60
 8008cea:	d877      	bhi.n	8008ddc <HAL_TIM_ConfigClockSource+0x16c>
 8008cec:	2b50      	cmp	r3, #80	@ 0x50
 8008cee:	d03c      	beq.n	8008d6a <HAL_TIM_ConfigClockSource+0xfa>
 8008cf0:	2b50      	cmp	r3, #80	@ 0x50
 8008cf2:	d873      	bhi.n	8008ddc <HAL_TIM_ConfigClockSource+0x16c>
 8008cf4:	2b40      	cmp	r3, #64	@ 0x40
 8008cf6:	d058      	beq.n	8008daa <HAL_TIM_ConfigClockSource+0x13a>
 8008cf8:	2b40      	cmp	r3, #64	@ 0x40
 8008cfa:	d86f      	bhi.n	8008ddc <HAL_TIM_ConfigClockSource+0x16c>
 8008cfc:	2b30      	cmp	r3, #48	@ 0x30
 8008cfe:	d064      	beq.n	8008dca <HAL_TIM_ConfigClockSource+0x15a>
 8008d00:	2b30      	cmp	r3, #48	@ 0x30
 8008d02:	d86b      	bhi.n	8008ddc <HAL_TIM_ConfigClockSource+0x16c>
 8008d04:	2b20      	cmp	r3, #32
 8008d06:	d060      	beq.n	8008dca <HAL_TIM_ConfigClockSource+0x15a>
 8008d08:	2b20      	cmp	r3, #32
 8008d0a:	d867      	bhi.n	8008ddc <HAL_TIM_ConfigClockSource+0x16c>
 8008d0c:	2b00      	cmp	r3, #0
 8008d0e:	d05c      	beq.n	8008dca <HAL_TIM_ConfigClockSource+0x15a>
 8008d10:	2b10      	cmp	r3, #16
 8008d12:	d05a      	beq.n	8008dca <HAL_TIM_ConfigClockSource+0x15a>
 8008d14:	e062      	b.n	8008ddc <HAL_TIM_ConfigClockSource+0x16c>
 8008d16:	687b      	ldr	r3, [r7, #4]
 8008d18:	6818      	ldr	r0, [r3, #0]
 8008d1a:	683b      	ldr	r3, [r7, #0]
 8008d1c:	6899      	ldr	r1, [r3, #8]
 8008d1e:	683b      	ldr	r3, [r7, #0]
 8008d20:	685a      	ldr	r2, [r3, #4]
 8008d22:	683b      	ldr	r3, [r7, #0]
 8008d24:	68db      	ldr	r3, [r3, #12]
 8008d26:	f000 f9b9 	bl	800909c <TIM_ETR_SetConfig>
 8008d2a:	687b      	ldr	r3, [r7, #4]
 8008d2c:	681b      	ldr	r3, [r3, #0]
 8008d2e:	689b      	ldr	r3, [r3, #8]
 8008d30:	60bb      	str	r3, [r7, #8]
 8008d32:	68bb      	ldr	r3, [r7, #8]
 8008d34:	f043 0377 	orr.w	r3, r3, #119	@ 0x77
 8008d38:	60bb      	str	r3, [r7, #8]
 8008d3a:	687b      	ldr	r3, [r7, #4]
 8008d3c:	681b      	ldr	r3, [r3, #0]
 8008d3e:	68ba      	ldr	r2, [r7, #8]
 8008d40:	609a      	str	r2, [r3, #8]
 8008d42:	e04f      	b.n	8008de4 <HAL_TIM_ConfigClockSource+0x174>
 8008d44:	687b      	ldr	r3, [r7, #4]
 8008d46:	6818      	ldr	r0, [r3, #0]
 8008d48:	683b      	ldr	r3, [r7, #0]
 8008d4a:	6899      	ldr	r1, [r3, #8]
 8008d4c:	683b      	ldr	r3, [r7, #0]
 8008d4e:	685a      	ldr	r2, [r3, #4]
 8008d50:	683b      	ldr	r3, [r7, #0]
 8008d52:	68db      	ldr	r3, [r3, #12]
 8008d54:	f000 f9a2 	bl	800909c <TIM_ETR_SetConfig>
 8008d58:	687b      	ldr	r3, [r7, #4]
 8008d5a:	681b      	ldr	r3, [r3, #0]
 8008d5c:	689a      	ldr	r2, [r3, #8]
 8008d5e:	687b      	ldr	r3, [r7, #4]
 8008d60:	681b      	ldr	r3, [r3, #0]
 8008d62:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8008d66:	609a      	str	r2, [r3, #8]
 8008d68:	e03c      	b.n	8008de4 <HAL_TIM_ConfigClockSource+0x174>
 8008d6a:	687b      	ldr	r3, [r7, #4]
 8008d6c:	6818      	ldr	r0, [r3, #0]
 8008d6e:	683b      	ldr	r3, [r7, #0]
 8008d70:	6859      	ldr	r1, [r3, #4]
 8008d72:	683b      	ldr	r3, [r7, #0]
 8008d74:	68db      	ldr	r3, [r3, #12]
 8008d76:	461a      	mov	r2, r3
 8008d78:	f000 f916 	bl	8008fa8 <TIM_TI1_ConfigInputStage>
 8008d7c:	687b      	ldr	r3, [r7, #4]
 8008d7e:	681b      	ldr	r3, [r3, #0]
 8008d80:	2150      	movs	r1, #80	@ 0x50
 8008d82:	4618      	mov	r0, r3
 8008d84:	f000 f96f 	bl	8009066 <TIM_ITRx_SetConfig>
 8008d88:	e02c      	b.n	8008de4 <HAL_TIM_ConfigClockSource+0x174>
 8008d8a:	687b      	ldr	r3, [r7, #4]
 8008d8c:	6818      	ldr	r0, [r3, #0]
 8008d8e:	683b      	ldr	r3, [r7, #0]
 8008d90:	6859      	ldr	r1, [r3, #4]
 8008d92:	683b      	ldr	r3, [r7, #0]
 8008d94:	68db      	ldr	r3, [r3, #12]
 8008d96:	461a      	mov	r2, r3
 8008d98:	f000 f935 	bl	8009006 <TIM_TI2_ConfigInputStage>
 8008d9c:	687b      	ldr	r3, [r7, #4]
 8008d9e:	681b      	ldr	r3, [r3, #0]
 8008da0:	2160      	movs	r1, #96	@ 0x60
 8008da2:	4618      	mov	r0, r3
 8008da4:	f000 f95f 	bl	8009066 <TIM_ITRx_SetConfig>
 8008da8:	e01c      	b.n	8008de4 <HAL_TIM_ConfigClockSource+0x174>
 8008daa:	687b      	ldr	r3, [r7, #4]
 8008dac:	6818      	ldr	r0, [r3, #0]
 8008dae:	683b      	ldr	r3, [r7, #0]
 8008db0:	6859      	ldr	r1, [r3, #4]
 8008db2:	683b      	ldr	r3, [r7, #0]
 8008db4:	68db      	ldr	r3, [r3, #12]
 8008db6:	461a      	mov	r2, r3
 8008db8:	f000 f8f6 	bl	8008fa8 <TIM_TI1_ConfigInputStage>
 8008dbc:	687b      	ldr	r3, [r7, #4]
 8008dbe:	681b      	ldr	r3, [r3, #0]
 8008dc0:	2140      	movs	r1, #64	@ 0x40
 8008dc2:	4618      	mov	r0, r3
 8008dc4:	f000 f94f 	bl	8009066 <TIM_ITRx_SetConfig>
 8008dc8:	e00c      	b.n	8008de4 <HAL_TIM_ConfigClockSource+0x174>
 8008dca:	687b      	ldr	r3, [r7, #4]
 8008dcc:	681a      	ldr	r2, [r3, #0]
 8008dce:	683b      	ldr	r3, [r7, #0]
 8008dd0:	681b      	ldr	r3, [r3, #0]
 8008dd2:	4619      	mov	r1, r3
 8008dd4:	4610      	mov	r0, r2
 8008dd6:	f000 f946 	bl	8009066 <TIM_ITRx_SetConfig>
 8008dda:	e003      	b.n	8008de4 <HAL_TIM_ConfigClockSource+0x174>
 8008ddc:	2301      	movs	r3, #1
 8008dde:	73fb      	strb	r3, [r7, #15]
 8008de0:	e000      	b.n	8008de4 <HAL_TIM_ConfigClockSource+0x174>
 8008de2:	bf00      	nop
 8008de4:	687b      	ldr	r3, [r7, #4]
 8008de6:	2201      	movs	r2, #1
 8008de8:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8008dec:	687b      	ldr	r3, [r7, #4]
 8008dee:	2200      	movs	r2, #0
 8008df0:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8008df4:	7bfb      	ldrb	r3, [r7, #15]
 8008df6:	4618      	mov	r0, r3
 8008df8:	3710      	adds	r7, #16
 8008dfa:	46bd      	mov	sp, r7
 8008dfc:	bd80      	pop	{r7, pc}

08008dfe <HAL_TIM_OC_DelayElapsedCallback>:
 8008dfe:	b480      	push	{r7}
 8008e00:	b083      	sub	sp, #12
 8008e02:	af00      	add	r7, sp, #0
 8008e04:	6078      	str	r0, [r7, #4]
 8008e06:	bf00      	nop
 8008e08:	370c      	adds	r7, #12
 8008e0a:	46bd      	mov	sp, r7
 8008e0c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008e10:	4770      	bx	lr

08008e12 <HAL_TIM_IC_CaptureCallback>:
 8008e12:	b480      	push	{r7}
 8008e14:	b083      	sub	sp, #12
 8008e16:	af00      	add	r7, sp, #0
 8008e18:	6078      	str	r0, [r7, #4]
 8008e1a:	bf00      	nop
 8008e1c:	370c      	adds	r7, #12
 8008e1e:	46bd      	mov	sp, r7
 8008e20:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008e24:	4770      	bx	lr

08008e26 <HAL_TIM_PWM_PulseFinishedCallback>:
 8008e26:	b480      	push	{r7}
 8008e28:	b083      	sub	sp, #12
 8008e2a:	af00      	add	r7, sp, #0
 8008e2c:	6078      	str	r0, [r7, #4]
 8008e2e:	bf00      	nop
 8008e30:	370c      	adds	r7, #12
 8008e32:	46bd      	mov	sp, r7
 8008e34:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008e38:	4770      	bx	lr

08008e3a <HAL_TIM_TriggerCallback>:
 8008e3a:	b480      	push	{r7}
 8008e3c:	b083      	sub	sp, #12
 8008e3e:	af00      	add	r7, sp, #0
 8008e40:	6078      	str	r0, [r7, #4]
 8008e42:	bf00      	nop
 8008e44:	370c      	adds	r7, #12
 8008e46:	46bd      	mov	sp, r7
 8008e48:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008e4c:	4770      	bx	lr
	...

08008e50 <TIM_Base_SetConfig>:
 8008e50:	b480      	push	{r7}
 8008e52:	b085      	sub	sp, #20
 8008e54:	af00      	add	r7, sp, #0
 8008e56:	6078      	str	r0, [r7, #4]
 8008e58:	6039      	str	r1, [r7, #0]
 8008e5a:	687b      	ldr	r3, [r7, #4]
 8008e5c:	681b      	ldr	r3, [r3, #0]
 8008e5e:	60fb      	str	r3, [r7, #12]
 8008e60:	687b      	ldr	r3, [r7, #4]
 8008e62:	4a46      	ldr	r2, [pc, #280]	@ (8008f7c <TIM_Base_SetConfig+0x12c>)
 8008e64:	4293      	cmp	r3, r2
 8008e66:	d013      	beq.n	8008e90 <TIM_Base_SetConfig+0x40>
 8008e68:	687b      	ldr	r3, [r7, #4]
 8008e6a:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8008e6e:	d00f      	beq.n	8008e90 <TIM_Base_SetConfig+0x40>
 8008e70:	687b      	ldr	r3, [r7, #4]
 8008e72:	4a43      	ldr	r2, [pc, #268]	@ (8008f80 <TIM_Base_SetConfig+0x130>)
 8008e74:	4293      	cmp	r3, r2
 8008e76:	d00b      	beq.n	8008e90 <TIM_Base_SetConfig+0x40>
 8008e78:	687b      	ldr	r3, [r7, #4]
 8008e7a:	4a42      	ldr	r2, [pc, #264]	@ (8008f84 <TIM_Base_SetConfig+0x134>)
 8008e7c:	4293      	cmp	r3, r2
 8008e7e:	d007      	beq.n	8008e90 <TIM_Base_SetConfig+0x40>
 8008e80:	687b      	ldr	r3, [r7, #4]
 8008e82:	4a41      	ldr	r2, [pc, #260]	@ (8008f88 <TIM_Base_SetConfig+0x138>)
 8008e84:	4293      	cmp	r3, r2
 8008e86:	d003      	beq.n	8008e90 <TIM_Base_SetConfig+0x40>
 8008e88:	687b      	ldr	r3, [r7, #4]
 8008e8a:	4a40      	ldr	r2, [pc, #256]	@ (8008f8c <TIM_Base_SetConfig+0x13c>)
 8008e8c:	4293      	cmp	r3, r2
 8008e8e:	d108      	bne.n	8008ea2 <TIM_Base_SetConfig+0x52>
 8008e90:	68fb      	ldr	r3, [r7, #12]
 8008e92:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8008e96:	60fb      	str	r3, [r7, #12]
 8008e98:	683b      	ldr	r3, [r7, #0]
 8008e9a:	685b      	ldr	r3, [r3, #4]
 8008e9c:	68fa      	ldr	r2, [r7, #12]
 8008e9e:	4313      	orrs	r3, r2
 8008ea0:	60fb      	str	r3, [r7, #12]
 8008ea2:	687b      	ldr	r3, [r7, #4]
 8008ea4:	4a35      	ldr	r2, [pc, #212]	@ (8008f7c <TIM_Base_SetConfig+0x12c>)
 8008ea6:	4293      	cmp	r3, r2
 8008ea8:	d02b      	beq.n	8008f02 <TIM_Base_SetConfig+0xb2>
 8008eaa:	687b      	ldr	r3, [r7, #4]
 8008eac:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8008eb0:	d027      	beq.n	8008f02 <TIM_Base_SetConfig+0xb2>
 8008eb2:	687b      	ldr	r3, [r7, #4]
 8008eb4:	4a32      	ldr	r2, [pc, #200]	@ (8008f80 <TIM_Base_SetConfig+0x130>)
 8008eb6:	4293      	cmp	r3, r2
 8008eb8:	d023      	beq.n	8008f02 <TIM_Base_SetConfig+0xb2>
 8008eba:	687b      	ldr	r3, [r7, #4]
 8008ebc:	4a31      	ldr	r2, [pc, #196]	@ (8008f84 <TIM_Base_SetConfig+0x134>)
 8008ebe:	4293      	cmp	r3, r2
 8008ec0:	d01f      	beq.n	8008f02 <TIM_Base_SetConfig+0xb2>
 8008ec2:	687b      	ldr	r3, [r7, #4]
 8008ec4:	4a30      	ldr	r2, [pc, #192]	@ (8008f88 <TIM_Base_SetConfig+0x138>)
 8008ec6:	4293      	cmp	r3, r2
 8008ec8:	d01b      	beq.n	8008f02 <TIM_Base_SetConfig+0xb2>
 8008eca:	687b      	ldr	r3, [r7, #4]
 8008ecc:	4a2f      	ldr	r2, [pc, #188]	@ (8008f8c <TIM_Base_SetConfig+0x13c>)
 8008ece:	4293      	cmp	r3, r2
 8008ed0:	d017      	beq.n	8008f02 <TIM_Base_SetConfig+0xb2>
 8008ed2:	687b      	ldr	r3, [r7, #4]
 8008ed4:	4a2e      	ldr	r2, [pc, #184]	@ (8008f90 <TIM_Base_SetConfig+0x140>)
 8008ed6:	4293      	cmp	r3, r2
 8008ed8:	d013      	beq.n	8008f02 <TIM_Base_SetConfig+0xb2>
 8008eda:	687b      	ldr	r3, [r7, #4]
 8008edc:	4a2d      	ldr	r2, [pc, #180]	@ (8008f94 <TIM_Base_SetConfig+0x144>)
 8008ede:	4293      	cmp	r3, r2
 8008ee0:	d00f      	beq.n	8008f02 <TIM_Base_SetConfig+0xb2>
 8008ee2:	687b      	ldr	r3, [r7, #4]
 8008ee4:	4a2c      	ldr	r2, [pc, #176]	@ (8008f98 <TIM_Base_SetConfig+0x148>)
 8008ee6:	4293      	cmp	r3, r2
 8008ee8:	d00b      	beq.n	8008f02 <TIM_Base_SetConfig+0xb2>
 8008eea:	687b      	ldr	r3, [r7, #4]
 8008eec:	4a2b      	ldr	r2, [pc, #172]	@ (8008f9c <TIM_Base_SetConfig+0x14c>)
 8008eee:	4293      	cmp	r3, r2
 8008ef0:	d007      	beq.n	8008f02 <TIM_Base_SetConfig+0xb2>
 8008ef2:	687b      	ldr	r3, [r7, #4]
 8008ef4:	4a2a      	ldr	r2, [pc, #168]	@ (8008fa0 <TIM_Base_SetConfig+0x150>)
 8008ef6:	4293      	cmp	r3, r2
 8008ef8:	d003      	beq.n	8008f02 <TIM_Base_SetConfig+0xb2>
 8008efa:	687b      	ldr	r3, [r7, #4]
 8008efc:	4a29      	ldr	r2, [pc, #164]	@ (8008fa4 <TIM_Base_SetConfig+0x154>)
 8008efe:	4293      	cmp	r3, r2
 8008f00:	d108      	bne.n	8008f14 <TIM_Base_SetConfig+0xc4>
 8008f02:	68fb      	ldr	r3, [r7, #12]
 8008f04:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8008f08:	60fb      	str	r3, [r7, #12]
 8008f0a:	683b      	ldr	r3, [r7, #0]
 8008f0c:	68db      	ldr	r3, [r3, #12]
 8008f0e:	68fa      	ldr	r2, [r7, #12]
 8008f10:	4313      	orrs	r3, r2
 8008f12:	60fb      	str	r3, [r7, #12]
 8008f14:	68fb      	ldr	r3, [r7, #12]
 8008f16:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 8008f1a:	683b      	ldr	r3, [r7, #0]
 8008f1c:	695b      	ldr	r3, [r3, #20]
 8008f1e:	4313      	orrs	r3, r2
 8008f20:	60fb      	str	r3, [r7, #12]
 8008f22:	687b      	ldr	r3, [r7, #4]
 8008f24:	68fa      	ldr	r2, [r7, #12]
 8008f26:	601a      	str	r2, [r3, #0]
 8008f28:	683b      	ldr	r3, [r7, #0]
 8008f2a:	689a      	ldr	r2, [r3, #8]
 8008f2c:	687b      	ldr	r3, [r7, #4]
 8008f2e:	62da      	str	r2, [r3, #44]	@ 0x2c
 8008f30:	683b      	ldr	r3, [r7, #0]
 8008f32:	681a      	ldr	r2, [r3, #0]
 8008f34:	687b      	ldr	r3, [r7, #4]
 8008f36:	629a      	str	r2, [r3, #40]	@ 0x28
 8008f38:	687b      	ldr	r3, [r7, #4]
 8008f3a:	4a10      	ldr	r2, [pc, #64]	@ (8008f7c <TIM_Base_SetConfig+0x12c>)
 8008f3c:	4293      	cmp	r3, r2
 8008f3e:	d003      	beq.n	8008f48 <TIM_Base_SetConfig+0xf8>
 8008f40:	687b      	ldr	r3, [r7, #4]
 8008f42:	4a12      	ldr	r2, [pc, #72]	@ (8008f8c <TIM_Base_SetConfig+0x13c>)
 8008f44:	4293      	cmp	r3, r2
 8008f46:	d103      	bne.n	8008f50 <TIM_Base_SetConfig+0x100>
 8008f48:	683b      	ldr	r3, [r7, #0]
 8008f4a:	691a      	ldr	r2, [r3, #16]
 8008f4c:	687b      	ldr	r3, [r7, #4]
 8008f4e:	631a      	str	r2, [r3, #48]	@ 0x30
 8008f50:	687b      	ldr	r3, [r7, #4]
 8008f52:	2201      	movs	r2, #1
 8008f54:	615a      	str	r2, [r3, #20]
 8008f56:	687b      	ldr	r3, [r7, #4]
 8008f58:	691b      	ldr	r3, [r3, #16]
 8008f5a:	f003 0301 	and.w	r3, r3, #1
 8008f5e:	2b01      	cmp	r3, #1
 8008f60:	d105      	bne.n	8008f6e <TIM_Base_SetConfig+0x11e>
 8008f62:	687b      	ldr	r3, [r7, #4]
 8008f64:	691b      	ldr	r3, [r3, #16]
 8008f66:	f023 0201 	bic.w	r2, r3, #1
 8008f6a:	687b      	ldr	r3, [r7, #4]
 8008f6c:	611a      	str	r2, [r3, #16]
 8008f6e:	bf00      	nop
 8008f70:	3714      	adds	r7, #20
 8008f72:	46bd      	mov	sp, r7
 8008f74:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008f78:	4770      	bx	lr
 8008f7a:	bf00      	nop
 8008f7c:	40010000 	.word	0x40010000
 8008f80:	40000400 	.word	0x40000400
 8008f84:	40000800 	.word	0x40000800
 8008f88:	40000c00 	.word	0x40000c00
 8008f8c:	40010400 	.word	0x40010400
 8008f90:	40014000 	.word	0x40014000
 8008f94:	40014400 	.word	0x40014400
 8008f98:	40014800 	.word	0x40014800
 8008f9c:	40001800 	.word	0x40001800
 8008fa0:	40001c00 	.word	0x40001c00
 8008fa4:	40002000 	.word	0x40002000

08008fa8 <TIM_TI1_ConfigInputStage>:
 8008fa8:	b480      	push	{r7}
 8008faa:	b087      	sub	sp, #28
 8008fac:	af00      	add	r7, sp, #0
 8008fae:	60f8      	str	r0, [r7, #12]
 8008fb0:	60b9      	str	r1, [r7, #8]
 8008fb2:	607a      	str	r2, [r7, #4]
 8008fb4:	68fb      	ldr	r3, [r7, #12]
 8008fb6:	6a1b      	ldr	r3, [r3, #32]
 8008fb8:	617b      	str	r3, [r7, #20]
 8008fba:	68fb      	ldr	r3, [r7, #12]
 8008fbc:	6a1b      	ldr	r3, [r3, #32]
 8008fbe:	f023 0201 	bic.w	r2, r3, #1
 8008fc2:	68fb      	ldr	r3, [r7, #12]
 8008fc4:	621a      	str	r2, [r3, #32]
 8008fc6:	68fb      	ldr	r3, [r7, #12]
 8008fc8:	699b      	ldr	r3, [r3, #24]
 8008fca:	613b      	str	r3, [r7, #16]
 8008fcc:	693b      	ldr	r3, [r7, #16]
 8008fce:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8008fd2:	613b      	str	r3, [r7, #16]
 8008fd4:	687b      	ldr	r3, [r7, #4]
 8008fd6:	011b      	lsls	r3, r3, #4
 8008fd8:	693a      	ldr	r2, [r7, #16]
 8008fda:	4313      	orrs	r3, r2
 8008fdc:	613b      	str	r3, [r7, #16]
 8008fde:	697b      	ldr	r3, [r7, #20]
 8008fe0:	f023 030a 	bic.w	r3, r3, #10
 8008fe4:	617b      	str	r3, [r7, #20]
 8008fe6:	697a      	ldr	r2, [r7, #20]
 8008fe8:	68bb      	ldr	r3, [r7, #8]
 8008fea:	4313      	orrs	r3, r2
 8008fec:	617b      	str	r3, [r7, #20]
 8008fee:	68fb      	ldr	r3, [r7, #12]
 8008ff0:	693a      	ldr	r2, [r7, #16]
 8008ff2:	619a      	str	r2, [r3, #24]
 8008ff4:	68fb      	ldr	r3, [r7, #12]
 8008ff6:	697a      	ldr	r2, [r7, #20]
 8008ff8:	621a      	str	r2, [r3, #32]
 8008ffa:	bf00      	nop
 8008ffc:	371c      	adds	r7, #28
 8008ffe:	46bd      	mov	sp, r7
 8009000:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009004:	4770      	bx	lr

08009006 <TIM_TI2_ConfigInputStage>:
 8009006:	b480      	push	{r7}
 8009008:	b087      	sub	sp, #28
 800900a:	af00      	add	r7, sp, #0
 800900c:	60f8      	str	r0, [r7, #12]
 800900e:	60b9      	str	r1, [r7, #8]
 8009010:	607a      	str	r2, [r7, #4]
 8009012:	68fb      	ldr	r3, [r7, #12]
 8009014:	6a1b      	ldr	r3, [r3, #32]
 8009016:	617b      	str	r3, [r7, #20]
 8009018:	68fb      	ldr	r3, [r7, #12]
 800901a:	6a1b      	ldr	r3, [r3, #32]
 800901c:	f023 0210 	bic.w	r2, r3, #16
 8009020:	68fb      	ldr	r3, [r7, #12]
 8009022:	621a      	str	r2, [r3, #32]
 8009024:	68fb      	ldr	r3, [r7, #12]
 8009026:	699b      	ldr	r3, [r3, #24]
 8009028:	613b      	str	r3, [r7, #16]
 800902a:	693b      	ldr	r3, [r7, #16]
 800902c:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
 8009030:	613b      	str	r3, [r7, #16]
 8009032:	687b      	ldr	r3, [r7, #4]
 8009034:	031b      	lsls	r3, r3, #12
 8009036:	693a      	ldr	r2, [r7, #16]
 8009038:	4313      	orrs	r3, r2
 800903a:	613b      	str	r3, [r7, #16]
 800903c:	697b      	ldr	r3, [r7, #20]
 800903e:	f023 03a0 	bic.w	r3, r3, #160	@ 0xa0
 8009042:	617b      	str	r3, [r7, #20]
 8009044:	68bb      	ldr	r3, [r7, #8]
 8009046:	011b      	lsls	r3, r3, #4
 8009048:	697a      	ldr	r2, [r7, #20]
 800904a:	4313      	orrs	r3, r2
 800904c:	617b      	str	r3, [r7, #20]
 800904e:	68fb      	ldr	r3, [r7, #12]
 8009050:	693a      	ldr	r2, [r7, #16]
 8009052:	619a      	str	r2, [r3, #24]
 8009054:	68fb      	ldr	r3, [r7, #12]
 8009056:	697a      	ldr	r2, [r7, #20]
 8009058:	621a      	str	r2, [r3, #32]
 800905a:	bf00      	nop
 800905c:	371c      	adds	r7, #28
 800905e:	46bd      	mov	sp, r7
 8009060:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009064:	4770      	bx	lr

08009066 <TIM_ITRx_SetConfig>:
 8009066:	b480      	push	{r7}
 8009068:	b085      	sub	sp, #20
 800906a:	af00      	add	r7, sp, #0
 800906c:	6078      	str	r0, [r7, #4]
 800906e:	6039      	str	r1, [r7, #0]
 8009070:	687b      	ldr	r3, [r7, #4]
 8009072:	689b      	ldr	r3, [r3, #8]
 8009074:	60fb      	str	r3, [r7, #12]
 8009076:	68fb      	ldr	r3, [r7, #12]
 8009078:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800907c:	60fb      	str	r3, [r7, #12]
 800907e:	683a      	ldr	r2, [r7, #0]
 8009080:	68fb      	ldr	r3, [r7, #12]
 8009082:	4313      	orrs	r3, r2
 8009084:	f043 0307 	orr.w	r3, r3, #7
 8009088:	60fb      	str	r3, [r7, #12]
 800908a:	687b      	ldr	r3, [r7, #4]
 800908c:	68fa      	ldr	r2, [r7, #12]
 800908e:	609a      	str	r2, [r3, #8]
 8009090:	bf00      	nop
 8009092:	3714      	adds	r7, #20
 8009094:	46bd      	mov	sp, r7
 8009096:	f85d 7b04 	ldr.w	r7, [sp], #4
 800909a:	4770      	bx	lr

0800909c <TIM_ETR_SetConfig>:
 800909c:	b480      	push	{r7}
 800909e:	b087      	sub	sp, #28
 80090a0:	af00      	add	r7, sp, #0
 80090a2:	60f8      	str	r0, [r7, #12]
 80090a4:	60b9      	str	r1, [r7, #8]
 80090a6:	607a      	str	r2, [r7, #4]
 80090a8:	603b      	str	r3, [r7, #0]
 80090aa:	68fb      	ldr	r3, [r7, #12]
 80090ac:	689b      	ldr	r3, [r3, #8]
 80090ae:	617b      	str	r3, [r7, #20]
 80090b0:	697b      	ldr	r3, [r7, #20]
 80090b2:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 80090b6:	617b      	str	r3, [r7, #20]
 80090b8:	683b      	ldr	r3, [r7, #0]
 80090ba:	021a      	lsls	r2, r3, #8
 80090bc:	687b      	ldr	r3, [r7, #4]
 80090be:	431a      	orrs	r2, r3
 80090c0:	68bb      	ldr	r3, [r7, #8]
 80090c2:	4313      	orrs	r3, r2
 80090c4:	697a      	ldr	r2, [r7, #20]
 80090c6:	4313      	orrs	r3, r2
 80090c8:	617b      	str	r3, [r7, #20]
 80090ca:	68fb      	ldr	r3, [r7, #12]
 80090cc:	697a      	ldr	r2, [r7, #20]
 80090ce:	609a      	str	r2, [r3, #8]
 80090d0:	bf00      	nop
 80090d2:	371c      	adds	r7, #28
 80090d4:	46bd      	mov	sp, r7
 80090d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80090da:	4770      	bx	lr

080090dc <HAL_TIMEx_MasterConfigSynchronization>:
 80090dc:	b480      	push	{r7}
 80090de:	b085      	sub	sp, #20
 80090e0:	af00      	add	r7, sp, #0
 80090e2:	6078      	str	r0, [r7, #4]
 80090e4:	6039      	str	r1, [r7, #0]
 80090e6:	687b      	ldr	r3, [r7, #4]
 80090e8:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 80090ec:	2b01      	cmp	r3, #1
 80090ee:	d101      	bne.n	80090f4 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 80090f0:	2302      	movs	r3, #2
 80090f2:	e05a      	b.n	80091aa <HAL_TIMEx_MasterConfigSynchronization+0xce>
 80090f4:	687b      	ldr	r3, [r7, #4]
 80090f6:	2201      	movs	r2, #1
 80090f8:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80090fc:	687b      	ldr	r3, [r7, #4]
 80090fe:	2202      	movs	r2, #2
 8009100:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8009104:	687b      	ldr	r3, [r7, #4]
 8009106:	681b      	ldr	r3, [r3, #0]
 8009108:	685b      	ldr	r3, [r3, #4]
 800910a:	60fb      	str	r3, [r7, #12]
 800910c:	687b      	ldr	r3, [r7, #4]
 800910e:	681b      	ldr	r3, [r3, #0]
 8009110:	689b      	ldr	r3, [r3, #8]
 8009112:	60bb      	str	r3, [r7, #8]
 8009114:	68fb      	ldr	r3, [r7, #12]
 8009116:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800911a:	60fb      	str	r3, [r7, #12]
 800911c:	683b      	ldr	r3, [r7, #0]
 800911e:	681b      	ldr	r3, [r3, #0]
 8009120:	68fa      	ldr	r2, [r7, #12]
 8009122:	4313      	orrs	r3, r2
 8009124:	60fb      	str	r3, [r7, #12]
 8009126:	687b      	ldr	r3, [r7, #4]
 8009128:	681b      	ldr	r3, [r3, #0]
 800912a:	68fa      	ldr	r2, [r7, #12]
 800912c:	605a      	str	r2, [r3, #4]
 800912e:	687b      	ldr	r3, [r7, #4]
 8009130:	681b      	ldr	r3, [r3, #0]
 8009132:	4a21      	ldr	r2, [pc, #132]	@ (80091b8 <HAL_TIMEx_MasterConfigSynchronization+0xdc>)
 8009134:	4293      	cmp	r3, r2
 8009136:	d022      	beq.n	800917e <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8009138:	687b      	ldr	r3, [r7, #4]
 800913a:	681b      	ldr	r3, [r3, #0]
 800913c:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8009140:	d01d      	beq.n	800917e <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8009142:	687b      	ldr	r3, [r7, #4]
 8009144:	681b      	ldr	r3, [r3, #0]
 8009146:	4a1d      	ldr	r2, [pc, #116]	@ (80091bc <HAL_TIMEx_MasterConfigSynchronization+0xe0>)
 8009148:	4293      	cmp	r3, r2
 800914a:	d018      	beq.n	800917e <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800914c:	687b      	ldr	r3, [r7, #4]
 800914e:	681b      	ldr	r3, [r3, #0]
 8009150:	4a1b      	ldr	r2, [pc, #108]	@ (80091c0 <HAL_TIMEx_MasterConfigSynchronization+0xe4>)
 8009152:	4293      	cmp	r3, r2
 8009154:	d013      	beq.n	800917e <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8009156:	687b      	ldr	r3, [r7, #4]
 8009158:	681b      	ldr	r3, [r3, #0]
 800915a:	4a1a      	ldr	r2, [pc, #104]	@ (80091c4 <HAL_TIMEx_MasterConfigSynchronization+0xe8>)
 800915c:	4293      	cmp	r3, r2
 800915e:	d00e      	beq.n	800917e <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8009160:	687b      	ldr	r3, [r7, #4]
 8009162:	681b      	ldr	r3, [r3, #0]
 8009164:	4a18      	ldr	r2, [pc, #96]	@ (80091c8 <HAL_TIMEx_MasterConfigSynchronization+0xec>)
 8009166:	4293      	cmp	r3, r2
 8009168:	d009      	beq.n	800917e <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800916a:	687b      	ldr	r3, [r7, #4]
 800916c:	681b      	ldr	r3, [r3, #0]
 800916e:	4a17      	ldr	r2, [pc, #92]	@ (80091cc <HAL_TIMEx_MasterConfigSynchronization+0xf0>)
 8009170:	4293      	cmp	r3, r2
 8009172:	d004      	beq.n	800917e <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8009174:	687b      	ldr	r3, [r7, #4]
 8009176:	681b      	ldr	r3, [r3, #0]
 8009178:	4a15      	ldr	r2, [pc, #84]	@ (80091d0 <HAL_TIMEx_MasterConfigSynchronization+0xf4>)
 800917a:	4293      	cmp	r3, r2
 800917c:	d10c      	bne.n	8009198 <HAL_TIMEx_MasterConfigSynchronization+0xbc>
 800917e:	68bb      	ldr	r3, [r7, #8]
 8009180:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8009184:	60bb      	str	r3, [r7, #8]
 8009186:	683b      	ldr	r3, [r7, #0]
 8009188:	685b      	ldr	r3, [r3, #4]
 800918a:	68ba      	ldr	r2, [r7, #8]
 800918c:	4313      	orrs	r3, r2
 800918e:	60bb      	str	r3, [r7, #8]
 8009190:	687b      	ldr	r3, [r7, #4]
 8009192:	681b      	ldr	r3, [r3, #0]
 8009194:	68ba      	ldr	r2, [r7, #8]
 8009196:	609a      	str	r2, [r3, #8]
 8009198:	687b      	ldr	r3, [r7, #4]
 800919a:	2201      	movs	r2, #1
 800919c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80091a0:	687b      	ldr	r3, [r7, #4]
 80091a2:	2200      	movs	r2, #0
 80091a4:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80091a8:	2300      	movs	r3, #0
 80091aa:	4618      	mov	r0, r3
 80091ac:	3714      	adds	r7, #20
 80091ae:	46bd      	mov	sp, r7
 80091b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80091b4:	4770      	bx	lr
 80091b6:	bf00      	nop
 80091b8:	40010000 	.word	0x40010000
 80091bc:	40000400 	.word	0x40000400
 80091c0:	40000800 	.word	0x40000800
 80091c4:	40000c00 	.word	0x40000c00
 80091c8:	40010400 	.word	0x40010400
 80091cc:	40014000 	.word	0x40014000
 80091d0:	40001800 	.word	0x40001800

080091d4 <HAL_TIMEx_CommutCallback>:
 80091d4:	b480      	push	{r7}
 80091d6:	b083      	sub	sp, #12
 80091d8:	af00      	add	r7, sp, #0
 80091da:	6078      	str	r0, [r7, #4]
 80091dc:	bf00      	nop
 80091de:	370c      	adds	r7, #12
 80091e0:	46bd      	mov	sp, r7
 80091e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80091e6:	4770      	bx	lr

080091e8 <HAL_TIMEx_BreakCallback>:
 80091e8:	b480      	push	{r7}
 80091ea:	b083      	sub	sp, #12
 80091ec:	af00      	add	r7, sp, #0
 80091ee:	6078      	str	r0, [r7, #4]
 80091f0:	bf00      	nop
 80091f2:	370c      	adds	r7, #12
 80091f4:	46bd      	mov	sp, r7
 80091f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80091fa:	4770      	bx	lr

080091fc <HAL_UART_Init>:
 80091fc:	b580      	push	{r7, lr}
 80091fe:	b082      	sub	sp, #8
 8009200:	af00      	add	r7, sp, #0
 8009202:	6078      	str	r0, [r7, #4]
 8009204:	687b      	ldr	r3, [r7, #4]
 8009206:	2b00      	cmp	r3, #0
 8009208:	d101      	bne.n	800920e <HAL_UART_Init+0x12>
 800920a:	2301      	movs	r3, #1
 800920c:	e042      	b.n	8009294 <HAL_UART_Init+0x98>
 800920e:	687b      	ldr	r3, [r7, #4]
 8009210:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8009214:	b2db      	uxtb	r3, r3
 8009216:	2b00      	cmp	r3, #0
 8009218:	d106      	bne.n	8009228 <HAL_UART_Init+0x2c>
 800921a:	687b      	ldr	r3, [r7, #4]
 800921c:	2200      	movs	r2, #0
 800921e:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8009222:	6878      	ldr	r0, [r7, #4]
 8009224:	f7fa f9d6 	bl	80035d4 <HAL_UART_MspInit>
 8009228:	687b      	ldr	r3, [r7, #4]
 800922a:	2224      	movs	r2, #36	@ 0x24
 800922c:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8009230:	687b      	ldr	r3, [r7, #4]
 8009232:	681b      	ldr	r3, [r3, #0]
 8009234:	68da      	ldr	r2, [r3, #12]
 8009236:	687b      	ldr	r3, [r7, #4]
 8009238:	681b      	ldr	r3, [r3, #0]
 800923a:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 800923e:	60da      	str	r2, [r3, #12]
 8009240:	6878      	ldr	r0, [r7, #4]
 8009242:	f000 f973 	bl	800952c <UART_SetConfig>
 8009246:	687b      	ldr	r3, [r7, #4]
 8009248:	681b      	ldr	r3, [r3, #0]
 800924a:	691a      	ldr	r2, [r3, #16]
 800924c:	687b      	ldr	r3, [r7, #4]
 800924e:	681b      	ldr	r3, [r3, #0]
 8009250:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 8009254:	611a      	str	r2, [r3, #16]
 8009256:	687b      	ldr	r3, [r7, #4]
 8009258:	681b      	ldr	r3, [r3, #0]
 800925a:	695a      	ldr	r2, [r3, #20]
 800925c:	687b      	ldr	r3, [r7, #4]
 800925e:	681b      	ldr	r3, [r3, #0]
 8009260:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 8009264:	615a      	str	r2, [r3, #20]
 8009266:	687b      	ldr	r3, [r7, #4]
 8009268:	681b      	ldr	r3, [r3, #0]
 800926a:	68da      	ldr	r2, [r3, #12]
 800926c:	687b      	ldr	r3, [r7, #4]
 800926e:	681b      	ldr	r3, [r3, #0]
 8009270:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8009274:	60da      	str	r2, [r3, #12]
 8009276:	687b      	ldr	r3, [r7, #4]
 8009278:	2200      	movs	r2, #0
 800927a:	645a      	str	r2, [r3, #68]	@ 0x44
 800927c:	687b      	ldr	r3, [r7, #4]
 800927e:	2220      	movs	r2, #32
 8009280:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8009284:	687b      	ldr	r3, [r7, #4]
 8009286:	2220      	movs	r2, #32
 8009288:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 800928c:	687b      	ldr	r3, [r7, #4]
 800928e:	2200      	movs	r2, #0
 8009290:	635a      	str	r2, [r3, #52]	@ 0x34
 8009292:	2300      	movs	r3, #0
 8009294:	4618      	mov	r0, r3
 8009296:	3708      	adds	r7, #8
 8009298:	46bd      	mov	sp, r7
 800929a:	bd80      	pop	{r7, pc}

0800929c <HAL_UART_Transmit>:
 800929c:	b580      	push	{r7, lr}
 800929e:	b08a      	sub	sp, #40	@ 0x28
 80092a0:	af02      	add	r7, sp, #8
 80092a2:	60f8      	str	r0, [r7, #12]
 80092a4:	60b9      	str	r1, [r7, #8]
 80092a6:	603b      	str	r3, [r7, #0]
 80092a8:	4613      	mov	r3, r2
 80092aa:	80fb      	strh	r3, [r7, #6]
 80092ac:	2300      	movs	r3, #0
 80092ae:	617b      	str	r3, [r7, #20]
 80092b0:	68fb      	ldr	r3, [r7, #12]
 80092b2:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 80092b6:	b2db      	uxtb	r3, r3
 80092b8:	2b20      	cmp	r3, #32
 80092ba:	d175      	bne.n	80093a8 <HAL_UART_Transmit+0x10c>
 80092bc:	68bb      	ldr	r3, [r7, #8]
 80092be:	2b00      	cmp	r3, #0
 80092c0:	d002      	beq.n	80092c8 <HAL_UART_Transmit+0x2c>
 80092c2:	88fb      	ldrh	r3, [r7, #6]
 80092c4:	2b00      	cmp	r3, #0
 80092c6:	d101      	bne.n	80092cc <HAL_UART_Transmit+0x30>
 80092c8:	2301      	movs	r3, #1
 80092ca:	e06e      	b.n	80093aa <HAL_UART_Transmit+0x10e>
 80092cc:	68fb      	ldr	r3, [r7, #12]
 80092ce:	2200      	movs	r2, #0
 80092d0:	645a      	str	r2, [r3, #68]	@ 0x44
 80092d2:	68fb      	ldr	r3, [r7, #12]
 80092d4:	2221      	movs	r2, #33	@ 0x21
 80092d6:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80092da:	f7fa fa23 	bl	8003724 <HAL_GetTick>
 80092de:	6178      	str	r0, [r7, #20]
 80092e0:	68fb      	ldr	r3, [r7, #12]
 80092e2:	88fa      	ldrh	r2, [r7, #6]
 80092e4:	849a      	strh	r2, [r3, #36]	@ 0x24
 80092e6:	68fb      	ldr	r3, [r7, #12]
 80092e8:	88fa      	ldrh	r2, [r7, #6]
 80092ea:	84da      	strh	r2, [r3, #38]	@ 0x26
 80092ec:	68fb      	ldr	r3, [r7, #12]
 80092ee:	689b      	ldr	r3, [r3, #8]
 80092f0:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 80092f4:	d108      	bne.n	8009308 <HAL_UART_Transmit+0x6c>
 80092f6:	68fb      	ldr	r3, [r7, #12]
 80092f8:	691b      	ldr	r3, [r3, #16]
 80092fa:	2b00      	cmp	r3, #0
 80092fc:	d104      	bne.n	8009308 <HAL_UART_Transmit+0x6c>
 80092fe:	2300      	movs	r3, #0
 8009300:	61fb      	str	r3, [r7, #28]
 8009302:	68bb      	ldr	r3, [r7, #8]
 8009304:	61bb      	str	r3, [r7, #24]
 8009306:	e003      	b.n	8009310 <HAL_UART_Transmit+0x74>
 8009308:	68bb      	ldr	r3, [r7, #8]
 800930a:	61fb      	str	r3, [r7, #28]
 800930c:	2300      	movs	r3, #0
 800930e:	61bb      	str	r3, [r7, #24]
 8009310:	e02e      	b.n	8009370 <HAL_UART_Transmit+0xd4>
 8009312:	683b      	ldr	r3, [r7, #0]
 8009314:	9300      	str	r3, [sp, #0]
 8009316:	697b      	ldr	r3, [r7, #20]
 8009318:	2200      	movs	r2, #0
 800931a:	2180      	movs	r1, #128	@ 0x80
 800931c:	68f8      	ldr	r0, [r7, #12]
 800931e:	f000 f848 	bl	80093b2 <UART_WaitOnFlagUntilTimeout>
 8009322:	4603      	mov	r3, r0
 8009324:	2b00      	cmp	r3, #0
 8009326:	d005      	beq.n	8009334 <HAL_UART_Transmit+0x98>
 8009328:	68fb      	ldr	r3, [r7, #12]
 800932a:	2220      	movs	r2, #32
 800932c:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8009330:	2303      	movs	r3, #3
 8009332:	e03a      	b.n	80093aa <HAL_UART_Transmit+0x10e>
 8009334:	69fb      	ldr	r3, [r7, #28]
 8009336:	2b00      	cmp	r3, #0
 8009338:	d10b      	bne.n	8009352 <HAL_UART_Transmit+0xb6>
 800933a:	69bb      	ldr	r3, [r7, #24]
 800933c:	881b      	ldrh	r3, [r3, #0]
 800933e:	461a      	mov	r2, r3
 8009340:	68fb      	ldr	r3, [r7, #12]
 8009342:	681b      	ldr	r3, [r3, #0]
 8009344:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8009348:	605a      	str	r2, [r3, #4]
 800934a:	69bb      	ldr	r3, [r7, #24]
 800934c:	3302      	adds	r3, #2
 800934e:	61bb      	str	r3, [r7, #24]
 8009350:	e007      	b.n	8009362 <HAL_UART_Transmit+0xc6>
 8009352:	69fb      	ldr	r3, [r7, #28]
 8009354:	781a      	ldrb	r2, [r3, #0]
 8009356:	68fb      	ldr	r3, [r7, #12]
 8009358:	681b      	ldr	r3, [r3, #0]
 800935a:	605a      	str	r2, [r3, #4]
 800935c:	69fb      	ldr	r3, [r7, #28]
 800935e:	3301      	adds	r3, #1
 8009360:	61fb      	str	r3, [r7, #28]
 8009362:	68fb      	ldr	r3, [r7, #12]
 8009364:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 8009366:	b29b      	uxth	r3, r3
 8009368:	3b01      	subs	r3, #1
 800936a:	b29a      	uxth	r2, r3
 800936c:	68fb      	ldr	r3, [r7, #12]
 800936e:	84da      	strh	r2, [r3, #38]	@ 0x26
 8009370:	68fb      	ldr	r3, [r7, #12]
 8009372:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 8009374:	b29b      	uxth	r3, r3
 8009376:	2b00      	cmp	r3, #0
 8009378:	d1cb      	bne.n	8009312 <HAL_UART_Transmit+0x76>
 800937a:	683b      	ldr	r3, [r7, #0]
 800937c:	9300      	str	r3, [sp, #0]
 800937e:	697b      	ldr	r3, [r7, #20]
 8009380:	2200      	movs	r2, #0
 8009382:	2140      	movs	r1, #64	@ 0x40
 8009384:	68f8      	ldr	r0, [r7, #12]
 8009386:	f000 f814 	bl	80093b2 <UART_WaitOnFlagUntilTimeout>
 800938a:	4603      	mov	r3, r0
 800938c:	2b00      	cmp	r3, #0
 800938e:	d005      	beq.n	800939c <HAL_UART_Transmit+0x100>
 8009390:	68fb      	ldr	r3, [r7, #12]
 8009392:	2220      	movs	r2, #32
 8009394:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8009398:	2303      	movs	r3, #3
 800939a:	e006      	b.n	80093aa <HAL_UART_Transmit+0x10e>
 800939c:	68fb      	ldr	r3, [r7, #12]
 800939e:	2220      	movs	r2, #32
 80093a0:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80093a4:	2300      	movs	r3, #0
 80093a6:	e000      	b.n	80093aa <HAL_UART_Transmit+0x10e>
 80093a8:	2302      	movs	r3, #2
 80093aa:	4618      	mov	r0, r3
 80093ac:	3720      	adds	r7, #32
 80093ae:	46bd      	mov	sp, r7
 80093b0:	bd80      	pop	{r7, pc}

080093b2 <UART_WaitOnFlagUntilTimeout>:
 80093b2:	b580      	push	{r7, lr}
 80093b4:	b086      	sub	sp, #24
 80093b6:	af00      	add	r7, sp, #0
 80093b8:	60f8      	str	r0, [r7, #12]
 80093ba:	60b9      	str	r1, [r7, #8]
 80093bc:	603b      	str	r3, [r7, #0]
 80093be:	4613      	mov	r3, r2
 80093c0:	71fb      	strb	r3, [r7, #7]
 80093c2:	e03b      	b.n	800943c <UART_WaitOnFlagUntilTimeout+0x8a>
 80093c4:	6a3b      	ldr	r3, [r7, #32]
 80093c6:	f1b3 3fff 	cmp.w	r3, #4294967295	@ 0xffffffff
 80093ca:	d037      	beq.n	800943c <UART_WaitOnFlagUntilTimeout+0x8a>
 80093cc:	f7fa f9aa 	bl	8003724 <HAL_GetTick>
 80093d0:	4602      	mov	r2, r0
 80093d2:	683b      	ldr	r3, [r7, #0]
 80093d4:	1ad3      	subs	r3, r2, r3
 80093d6:	6a3a      	ldr	r2, [r7, #32]
 80093d8:	429a      	cmp	r2, r3
 80093da:	d302      	bcc.n	80093e2 <UART_WaitOnFlagUntilTimeout+0x30>
 80093dc:	6a3b      	ldr	r3, [r7, #32]
 80093de:	2b00      	cmp	r3, #0
 80093e0:	d101      	bne.n	80093e6 <UART_WaitOnFlagUntilTimeout+0x34>
 80093e2:	2303      	movs	r3, #3
 80093e4:	e03a      	b.n	800945c <UART_WaitOnFlagUntilTimeout+0xaa>
 80093e6:	68fb      	ldr	r3, [r7, #12]
 80093e8:	681b      	ldr	r3, [r3, #0]
 80093ea:	68db      	ldr	r3, [r3, #12]
 80093ec:	f003 0304 	and.w	r3, r3, #4
 80093f0:	2b00      	cmp	r3, #0
 80093f2:	d023      	beq.n	800943c <UART_WaitOnFlagUntilTimeout+0x8a>
 80093f4:	68bb      	ldr	r3, [r7, #8]
 80093f6:	2b80      	cmp	r3, #128	@ 0x80
 80093f8:	d020      	beq.n	800943c <UART_WaitOnFlagUntilTimeout+0x8a>
 80093fa:	68bb      	ldr	r3, [r7, #8]
 80093fc:	2b40      	cmp	r3, #64	@ 0x40
 80093fe:	d01d      	beq.n	800943c <UART_WaitOnFlagUntilTimeout+0x8a>
 8009400:	68fb      	ldr	r3, [r7, #12]
 8009402:	681b      	ldr	r3, [r3, #0]
 8009404:	681b      	ldr	r3, [r3, #0]
 8009406:	f003 0308 	and.w	r3, r3, #8
 800940a:	2b08      	cmp	r3, #8
 800940c:	d116      	bne.n	800943c <UART_WaitOnFlagUntilTimeout+0x8a>
 800940e:	2300      	movs	r3, #0
 8009410:	617b      	str	r3, [r7, #20]
 8009412:	68fb      	ldr	r3, [r7, #12]
 8009414:	681b      	ldr	r3, [r3, #0]
 8009416:	681b      	ldr	r3, [r3, #0]
 8009418:	617b      	str	r3, [r7, #20]
 800941a:	68fb      	ldr	r3, [r7, #12]
 800941c:	681b      	ldr	r3, [r3, #0]
 800941e:	685b      	ldr	r3, [r3, #4]
 8009420:	617b      	str	r3, [r7, #20]
 8009422:	697b      	ldr	r3, [r7, #20]
 8009424:	68f8      	ldr	r0, [r7, #12]
 8009426:	f000 f81d 	bl	8009464 <UART_EndRxTransfer>
 800942a:	68fb      	ldr	r3, [r7, #12]
 800942c:	2208      	movs	r2, #8
 800942e:	645a      	str	r2, [r3, #68]	@ 0x44
 8009430:	68fb      	ldr	r3, [r7, #12]
 8009432:	2200      	movs	r2, #0
 8009434:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8009438:	2301      	movs	r3, #1
 800943a:	e00f      	b.n	800945c <UART_WaitOnFlagUntilTimeout+0xaa>
 800943c:	68fb      	ldr	r3, [r7, #12]
 800943e:	681b      	ldr	r3, [r3, #0]
 8009440:	681a      	ldr	r2, [r3, #0]
 8009442:	68bb      	ldr	r3, [r7, #8]
 8009444:	4013      	ands	r3, r2
 8009446:	68ba      	ldr	r2, [r7, #8]
 8009448:	429a      	cmp	r2, r3
 800944a:	bf0c      	ite	eq
 800944c:	2301      	moveq	r3, #1
 800944e:	2300      	movne	r3, #0
 8009450:	b2db      	uxtb	r3, r3
 8009452:	461a      	mov	r2, r3
 8009454:	79fb      	ldrb	r3, [r7, #7]
 8009456:	429a      	cmp	r2, r3
 8009458:	d0b4      	beq.n	80093c4 <UART_WaitOnFlagUntilTimeout+0x12>
 800945a:	2300      	movs	r3, #0
 800945c:	4618      	mov	r0, r3
 800945e:	3718      	adds	r7, #24
 8009460:	46bd      	mov	sp, r7
 8009462:	bd80      	pop	{r7, pc}

08009464 <UART_EndRxTransfer>:
 8009464:	b480      	push	{r7}
 8009466:	b095      	sub	sp, #84	@ 0x54
 8009468:	af00      	add	r7, sp, #0
 800946a:	6078      	str	r0, [r7, #4]
 800946c:	687b      	ldr	r3, [r7, #4]
 800946e:	681b      	ldr	r3, [r3, #0]
 8009470:	330c      	adds	r3, #12
 8009472:	637b      	str	r3, [r7, #52]	@ 0x34
 8009474:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8009476:	e853 3f00 	ldrex	r3, [r3]
 800947a:	633b      	str	r3, [r7, #48]	@ 0x30
 800947c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800947e:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 8009482:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8009484:	687b      	ldr	r3, [r7, #4]
 8009486:	681b      	ldr	r3, [r3, #0]
 8009488:	330c      	adds	r3, #12
 800948a:	6cfa      	ldr	r2, [r7, #76]	@ 0x4c
 800948c:	643a      	str	r2, [r7, #64]	@ 0x40
 800948e:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8009490:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
 8009492:	6c3a      	ldr	r2, [r7, #64]	@ 0x40
 8009494:	e841 2300 	strex	r3, r2, [r1]
 8009498:	63bb      	str	r3, [r7, #56]	@ 0x38
 800949a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800949c:	2b00      	cmp	r3, #0
 800949e:	d1e5      	bne.n	800946c <UART_EndRxTransfer+0x8>
 80094a0:	687b      	ldr	r3, [r7, #4]
 80094a2:	681b      	ldr	r3, [r3, #0]
 80094a4:	3314      	adds	r3, #20
 80094a6:	623b      	str	r3, [r7, #32]
 80094a8:	6a3b      	ldr	r3, [r7, #32]
 80094aa:	e853 3f00 	ldrex	r3, [r3]
 80094ae:	61fb      	str	r3, [r7, #28]
 80094b0:	69fb      	ldr	r3, [r7, #28]
 80094b2:	f023 0301 	bic.w	r3, r3, #1
 80094b6:	64bb      	str	r3, [r7, #72]	@ 0x48
 80094b8:	687b      	ldr	r3, [r7, #4]
 80094ba:	681b      	ldr	r3, [r3, #0]
 80094bc:	3314      	adds	r3, #20
 80094be:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 80094c0:	62fa      	str	r2, [r7, #44]	@ 0x2c
 80094c2:	62bb      	str	r3, [r7, #40]	@ 0x28
 80094c4:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 80094c6:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 80094c8:	e841 2300 	strex	r3, r2, [r1]
 80094cc:	627b      	str	r3, [r7, #36]	@ 0x24
 80094ce:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80094d0:	2b00      	cmp	r3, #0
 80094d2:	d1e5      	bne.n	80094a0 <UART_EndRxTransfer+0x3c>
 80094d4:	687b      	ldr	r3, [r7, #4]
 80094d6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80094d8:	2b01      	cmp	r3, #1
 80094da:	d119      	bne.n	8009510 <UART_EndRxTransfer+0xac>
 80094dc:	687b      	ldr	r3, [r7, #4]
 80094de:	681b      	ldr	r3, [r3, #0]
 80094e0:	330c      	adds	r3, #12
 80094e2:	60fb      	str	r3, [r7, #12]
 80094e4:	68fb      	ldr	r3, [r7, #12]
 80094e6:	e853 3f00 	ldrex	r3, [r3]
 80094ea:	60bb      	str	r3, [r7, #8]
 80094ec:	68bb      	ldr	r3, [r7, #8]
 80094ee:	f023 0310 	bic.w	r3, r3, #16
 80094f2:	647b      	str	r3, [r7, #68]	@ 0x44
 80094f4:	687b      	ldr	r3, [r7, #4]
 80094f6:	681b      	ldr	r3, [r3, #0]
 80094f8:	330c      	adds	r3, #12
 80094fa:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 80094fc:	61ba      	str	r2, [r7, #24]
 80094fe:	617b      	str	r3, [r7, #20]
 8009500:	6979      	ldr	r1, [r7, #20]
 8009502:	69ba      	ldr	r2, [r7, #24]
 8009504:	e841 2300 	strex	r3, r2, [r1]
 8009508:	613b      	str	r3, [r7, #16]
 800950a:	693b      	ldr	r3, [r7, #16]
 800950c:	2b00      	cmp	r3, #0
 800950e:	d1e5      	bne.n	80094dc <UART_EndRxTransfer+0x78>
 8009510:	687b      	ldr	r3, [r7, #4]
 8009512:	2220      	movs	r2, #32
 8009514:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8009518:	687b      	ldr	r3, [r7, #4]
 800951a:	2200      	movs	r2, #0
 800951c:	631a      	str	r2, [r3, #48]	@ 0x30
 800951e:	bf00      	nop
 8009520:	3754      	adds	r7, #84	@ 0x54
 8009522:	46bd      	mov	sp, r7
 8009524:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009528:	4770      	bx	lr
	...

0800952c <UART_SetConfig>:
 800952c:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8009530:	b0c0      	sub	sp, #256	@ 0x100
 8009532:	af00      	add	r7, sp, #0
 8009534:	f8c7 00f4 	str.w	r0, [r7, #244]	@ 0xf4
 8009538:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800953c:	681b      	ldr	r3, [r3, #0]
 800953e:	691b      	ldr	r3, [r3, #16]
 8009540:	f423 5040 	bic.w	r0, r3, #12288	@ 0x3000
 8009544:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8009548:	68d9      	ldr	r1, [r3, #12]
 800954a:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800954e:	681a      	ldr	r2, [r3, #0]
 8009550:	ea40 0301 	orr.w	r3, r0, r1
 8009554:	6113      	str	r3, [r2, #16]
 8009556:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800955a:	689a      	ldr	r2, [r3, #8]
 800955c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8009560:	691b      	ldr	r3, [r3, #16]
 8009562:	431a      	orrs	r2, r3
 8009564:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8009568:	695b      	ldr	r3, [r3, #20]
 800956a:	431a      	orrs	r2, r3
 800956c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8009570:	69db      	ldr	r3, [r3, #28]
 8009572:	4313      	orrs	r3, r2
 8009574:	f8c7 30f8 	str.w	r3, [r7, #248]	@ 0xf8
 8009578:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800957c:	681b      	ldr	r3, [r3, #0]
 800957e:	68db      	ldr	r3, [r3, #12]
 8009580:	f423 4116 	bic.w	r1, r3, #38400	@ 0x9600
 8009584:	f021 010c 	bic.w	r1, r1, #12
 8009588:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800958c:	681a      	ldr	r2, [r3, #0]
 800958e:	f8d7 30f8 	ldr.w	r3, [r7, #248]	@ 0xf8
 8009592:	430b      	orrs	r3, r1
 8009594:	60d3      	str	r3, [r2, #12]
 8009596:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800959a:	681b      	ldr	r3, [r3, #0]
 800959c:	695b      	ldr	r3, [r3, #20]
 800959e:	f423 7040 	bic.w	r0, r3, #768	@ 0x300
 80095a2:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80095a6:	6999      	ldr	r1, [r3, #24]
 80095a8:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80095ac:	681a      	ldr	r2, [r3, #0]
 80095ae:	ea40 0301 	orr.w	r3, r0, r1
 80095b2:	6153      	str	r3, [r2, #20]
 80095b4:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80095b8:	681a      	ldr	r2, [r3, #0]
 80095ba:	4b8f      	ldr	r3, [pc, #572]	@ (80097f8 <UART_SetConfig+0x2cc>)
 80095bc:	429a      	cmp	r2, r3
 80095be:	d005      	beq.n	80095cc <UART_SetConfig+0xa0>
 80095c0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80095c4:	681a      	ldr	r2, [r3, #0]
 80095c6:	4b8d      	ldr	r3, [pc, #564]	@ (80097fc <UART_SetConfig+0x2d0>)
 80095c8:	429a      	cmp	r2, r3
 80095ca:	d104      	bne.n	80095d6 <UART_SetConfig+0xaa>
 80095cc:	f7fe f84c 	bl	8007668 <HAL_RCC_GetPCLK2Freq>
 80095d0:	f8c7 00fc 	str.w	r0, [r7, #252]	@ 0xfc
 80095d4:	e003      	b.n	80095de <UART_SetConfig+0xb2>
 80095d6:	f7fe f833 	bl	8007640 <HAL_RCC_GetPCLK1Freq>
 80095da:	f8c7 00fc 	str.w	r0, [r7, #252]	@ 0xfc
 80095de:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80095e2:	69db      	ldr	r3, [r3, #28]
 80095e4:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 80095e8:	f040 810c 	bne.w	8009804 <UART_SetConfig+0x2d8>
 80095ec:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 80095f0:	2200      	movs	r2, #0
 80095f2:	f8c7 30e8 	str.w	r3, [r7, #232]	@ 0xe8
 80095f6:	f8c7 20ec 	str.w	r2, [r7, #236]	@ 0xec
 80095fa:	e9d7 453a 	ldrd	r4, r5, [r7, #232]	@ 0xe8
 80095fe:	4622      	mov	r2, r4
 8009600:	462b      	mov	r3, r5
 8009602:	1891      	adds	r1, r2, r2
 8009604:	65b9      	str	r1, [r7, #88]	@ 0x58
 8009606:	415b      	adcs	r3, r3
 8009608:	65fb      	str	r3, [r7, #92]	@ 0x5c
 800960a:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	@ 0x58
 800960e:	4621      	mov	r1, r4
 8009610:	eb12 0801 	adds.w	r8, r2, r1
 8009614:	4629      	mov	r1, r5
 8009616:	eb43 0901 	adc.w	r9, r3, r1
 800961a:	f04f 0200 	mov.w	r2, #0
 800961e:	f04f 0300 	mov.w	r3, #0
 8009622:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8009626:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 800962a:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 800962e:	4690      	mov	r8, r2
 8009630:	4699      	mov	r9, r3
 8009632:	4623      	mov	r3, r4
 8009634:	eb18 0303 	adds.w	r3, r8, r3
 8009638:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 800963c:	462b      	mov	r3, r5
 800963e:	eb49 0303 	adc.w	r3, r9, r3
 8009642:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 8009646:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800964a:	685b      	ldr	r3, [r3, #4]
 800964c:	2200      	movs	r2, #0
 800964e:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 8009652:	f8c7 20dc 	str.w	r2, [r7, #220]	@ 0xdc
 8009656:	e9d7 1236 	ldrd	r1, r2, [r7, #216]	@ 0xd8
 800965a:	460b      	mov	r3, r1
 800965c:	18db      	adds	r3, r3, r3
 800965e:	653b      	str	r3, [r7, #80]	@ 0x50
 8009660:	4613      	mov	r3, r2
 8009662:	eb42 0303 	adc.w	r3, r2, r3
 8009666:	657b      	str	r3, [r7, #84]	@ 0x54
 8009668:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	@ 0x50
 800966c:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	@ 0xe0
 8009670:	f7f7 faaa 	bl	8000bc8 <__aeabi_uldivmod>
 8009674:	4602      	mov	r2, r0
 8009676:	460b      	mov	r3, r1
 8009678:	4b61      	ldr	r3, [pc, #388]	@ (8009800 <UART_SetConfig+0x2d4>)
 800967a:	fba3 2302 	umull	r2, r3, r3, r2
 800967e:	095b      	lsrs	r3, r3, #5
 8009680:	011c      	lsls	r4, r3, #4
 8009682:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8009686:	2200      	movs	r2, #0
 8009688:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 800968c:	f8c7 20d4 	str.w	r2, [r7, #212]	@ 0xd4
 8009690:	e9d7 8934 	ldrd	r8, r9, [r7, #208]	@ 0xd0
 8009694:	4642      	mov	r2, r8
 8009696:	464b      	mov	r3, r9
 8009698:	1891      	adds	r1, r2, r2
 800969a:	64b9      	str	r1, [r7, #72]	@ 0x48
 800969c:	415b      	adcs	r3, r3
 800969e:	64fb      	str	r3, [r7, #76]	@ 0x4c
 80096a0:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 80096a4:	4641      	mov	r1, r8
 80096a6:	eb12 0a01 	adds.w	sl, r2, r1
 80096aa:	4649      	mov	r1, r9
 80096ac:	eb43 0b01 	adc.w	fp, r3, r1
 80096b0:	f04f 0200 	mov.w	r2, #0
 80096b4:	f04f 0300 	mov.w	r3, #0
 80096b8:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 80096bc:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 80096c0:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 80096c4:	4692      	mov	sl, r2
 80096c6:	469b      	mov	fp, r3
 80096c8:	4643      	mov	r3, r8
 80096ca:	eb1a 0303 	adds.w	r3, sl, r3
 80096ce:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 80096d2:	464b      	mov	r3, r9
 80096d4:	eb4b 0303 	adc.w	r3, fp, r3
 80096d8:	f8c7 30cc 	str.w	r3, [r7, #204]	@ 0xcc
 80096dc:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80096e0:	685b      	ldr	r3, [r3, #4]
 80096e2:	2200      	movs	r2, #0
 80096e4:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 80096e8:	f8c7 20c4 	str.w	r2, [r7, #196]	@ 0xc4
 80096ec:	e9d7 1230 	ldrd	r1, r2, [r7, #192]	@ 0xc0
 80096f0:	460b      	mov	r3, r1
 80096f2:	18db      	adds	r3, r3, r3
 80096f4:	643b      	str	r3, [r7, #64]	@ 0x40
 80096f6:	4613      	mov	r3, r2
 80096f8:	eb42 0303 	adc.w	r3, r2, r3
 80096fc:	647b      	str	r3, [r7, #68]	@ 0x44
 80096fe:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	@ 0x40
 8009702:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	@ 0xc8
 8009706:	f7f7 fa5f 	bl	8000bc8 <__aeabi_uldivmod>
 800970a:	4602      	mov	r2, r0
 800970c:	460b      	mov	r3, r1
 800970e:	4611      	mov	r1, r2
 8009710:	4b3b      	ldr	r3, [pc, #236]	@ (8009800 <UART_SetConfig+0x2d4>)
 8009712:	fba3 2301 	umull	r2, r3, r3, r1
 8009716:	095b      	lsrs	r3, r3, #5
 8009718:	2264      	movs	r2, #100	@ 0x64
 800971a:	fb02 f303 	mul.w	r3, r2, r3
 800971e:	1acb      	subs	r3, r1, r3
 8009720:	00db      	lsls	r3, r3, #3
 8009722:	f103 0232 	add.w	r2, r3, #50	@ 0x32
 8009726:	4b36      	ldr	r3, [pc, #216]	@ (8009800 <UART_SetConfig+0x2d4>)
 8009728:	fba3 2302 	umull	r2, r3, r3, r2
 800972c:	095b      	lsrs	r3, r3, #5
 800972e:	005b      	lsls	r3, r3, #1
 8009730:	f403 73f8 	and.w	r3, r3, #496	@ 0x1f0
 8009734:	441c      	add	r4, r3
 8009736:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 800973a:	2200      	movs	r2, #0
 800973c:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 8009740:	f8c7 20bc 	str.w	r2, [r7, #188]	@ 0xbc
 8009744:	e9d7 892e 	ldrd	r8, r9, [r7, #184]	@ 0xb8
 8009748:	4642      	mov	r2, r8
 800974a:	464b      	mov	r3, r9
 800974c:	1891      	adds	r1, r2, r2
 800974e:	63b9      	str	r1, [r7, #56]	@ 0x38
 8009750:	415b      	adcs	r3, r3
 8009752:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8009754:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	@ 0x38
 8009758:	4641      	mov	r1, r8
 800975a:	1851      	adds	r1, r2, r1
 800975c:	6339      	str	r1, [r7, #48]	@ 0x30
 800975e:	4649      	mov	r1, r9
 8009760:	414b      	adcs	r3, r1
 8009762:	637b      	str	r3, [r7, #52]	@ 0x34
 8009764:	f04f 0200 	mov.w	r2, #0
 8009768:	f04f 0300 	mov.w	r3, #0
 800976c:	e9d7 ab0c 	ldrd	sl, fp, [r7, #48]	@ 0x30
 8009770:	4659      	mov	r1, fp
 8009772:	00cb      	lsls	r3, r1, #3
 8009774:	4651      	mov	r1, sl
 8009776:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 800977a:	4651      	mov	r1, sl
 800977c:	00ca      	lsls	r2, r1, #3
 800977e:	4610      	mov	r0, r2
 8009780:	4619      	mov	r1, r3
 8009782:	4603      	mov	r3, r0
 8009784:	4642      	mov	r2, r8
 8009786:	189b      	adds	r3, r3, r2
 8009788:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 800978c:	464b      	mov	r3, r9
 800978e:	460a      	mov	r2, r1
 8009790:	eb42 0303 	adc.w	r3, r2, r3
 8009794:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8009798:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800979c:	685b      	ldr	r3, [r3, #4]
 800979e:	2200      	movs	r2, #0
 80097a0:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
 80097a4:	f8c7 20ac 	str.w	r2, [r7, #172]	@ 0xac
 80097a8:	e9d7 122a 	ldrd	r1, r2, [r7, #168]	@ 0xa8
 80097ac:	460b      	mov	r3, r1
 80097ae:	18db      	adds	r3, r3, r3
 80097b0:	62bb      	str	r3, [r7, #40]	@ 0x28
 80097b2:	4613      	mov	r3, r2
 80097b4:	eb42 0303 	adc.w	r3, r2, r3
 80097b8:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80097ba:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	@ 0x28
 80097be:	e9d7 012c 	ldrd	r0, r1, [r7, #176]	@ 0xb0
 80097c2:	f7f7 fa01 	bl	8000bc8 <__aeabi_uldivmod>
 80097c6:	4602      	mov	r2, r0
 80097c8:	460b      	mov	r3, r1
 80097ca:	4b0d      	ldr	r3, [pc, #52]	@ (8009800 <UART_SetConfig+0x2d4>)
 80097cc:	fba3 1302 	umull	r1, r3, r3, r2
 80097d0:	095b      	lsrs	r3, r3, #5
 80097d2:	2164      	movs	r1, #100	@ 0x64
 80097d4:	fb01 f303 	mul.w	r3, r1, r3
 80097d8:	1ad3      	subs	r3, r2, r3
 80097da:	00db      	lsls	r3, r3, #3
 80097dc:	3332      	adds	r3, #50	@ 0x32
 80097de:	4a08      	ldr	r2, [pc, #32]	@ (8009800 <UART_SetConfig+0x2d4>)
 80097e0:	fba2 2303 	umull	r2, r3, r2, r3
 80097e4:	095b      	lsrs	r3, r3, #5
 80097e6:	f003 0207 	and.w	r2, r3, #7
 80097ea:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80097ee:	681b      	ldr	r3, [r3, #0]
 80097f0:	4422      	add	r2, r4
 80097f2:	609a      	str	r2, [r3, #8]
 80097f4:	e106      	b.n	8009a04 <UART_SetConfig+0x4d8>
 80097f6:	bf00      	nop
 80097f8:	40011000 	.word	0x40011000
 80097fc:	40011400 	.word	0x40011400
 8009800:	51eb851f 	.word	0x51eb851f
 8009804:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8009808:	2200      	movs	r2, #0
 800980a:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 800980e:	f8c7 20a4 	str.w	r2, [r7, #164]	@ 0xa4
 8009812:	e9d7 8928 	ldrd	r8, r9, [r7, #160]	@ 0xa0
 8009816:	4642      	mov	r2, r8
 8009818:	464b      	mov	r3, r9
 800981a:	1891      	adds	r1, r2, r2
 800981c:	6239      	str	r1, [r7, #32]
 800981e:	415b      	adcs	r3, r3
 8009820:	627b      	str	r3, [r7, #36]	@ 0x24
 8009822:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 8009826:	4641      	mov	r1, r8
 8009828:	1854      	adds	r4, r2, r1
 800982a:	4649      	mov	r1, r9
 800982c:	eb43 0501 	adc.w	r5, r3, r1
 8009830:	f04f 0200 	mov.w	r2, #0
 8009834:	f04f 0300 	mov.w	r3, #0
 8009838:	00eb      	lsls	r3, r5, #3
 800983a:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 800983e:	00e2      	lsls	r2, r4, #3
 8009840:	4614      	mov	r4, r2
 8009842:	461d      	mov	r5, r3
 8009844:	4643      	mov	r3, r8
 8009846:	18e3      	adds	r3, r4, r3
 8009848:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 800984c:	464b      	mov	r3, r9
 800984e:	eb45 0303 	adc.w	r3, r5, r3
 8009852:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 8009856:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800985a:	685b      	ldr	r3, [r3, #4]
 800985c:	2200      	movs	r2, #0
 800985e:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8009862:	f8c7 2094 	str.w	r2, [r7, #148]	@ 0x94
 8009866:	f04f 0200 	mov.w	r2, #0
 800986a:	f04f 0300 	mov.w	r3, #0
 800986e:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	@ 0x90
 8009872:	4629      	mov	r1, r5
 8009874:	008b      	lsls	r3, r1, #2
 8009876:	4621      	mov	r1, r4
 8009878:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 800987c:	4621      	mov	r1, r4
 800987e:	008a      	lsls	r2, r1, #2
 8009880:	e9d7 0126 	ldrd	r0, r1, [r7, #152]	@ 0x98
 8009884:	f7f7 f9a0 	bl	8000bc8 <__aeabi_uldivmod>
 8009888:	4602      	mov	r2, r0
 800988a:	460b      	mov	r3, r1
 800988c:	4b60      	ldr	r3, [pc, #384]	@ (8009a10 <UART_SetConfig+0x4e4>)
 800988e:	fba3 2302 	umull	r2, r3, r3, r2
 8009892:	095b      	lsrs	r3, r3, #5
 8009894:	011c      	lsls	r4, r3, #4
 8009896:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 800989a:	2200      	movs	r2, #0
 800989c:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 80098a0:	f8c7 208c 	str.w	r2, [r7, #140]	@ 0x8c
 80098a4:	e9d7 8922 	ldrd	r8, r9, [r7, #136]	@ 0x88
 80098a8:	4642      	mov	r2, r8
 80098aa:	464b      	mov	r3, r9
 80098ac:	1891      	adds	r1, r2, r2
 80098ae:	61b9      	str	r1, [r7, #24]
 80098b0:	415b      	adcs	r3, r3
 80098b2:	61fb      	str	r3, [r7, #28]
 80098b4:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 80098b8:	4641      	mov	r1, r8
 80098ba:	1851      	adds	r1, r2, r1
 80098bc:	6139      	str	r1, [r7, #16]
 80098be:	4649      	mov	r1, r9
 80098c0:	414b      	adcs	r3, r1
 80098c2:	617b      	str	r3, [r7, #20]
 80098c4:	f04f 0200 	mov.w	r2, #0
 80098c8:	f04f 0300 	mov.w	r3, #0
 80098cc:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 80098d0:	4659      	mov	r1, fp
 80098d2:	00cb      	lsls	r3, r1, #3
 80098d4:	4651      	mov	r1, sl
 80098d6:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 80098da:	4651      	mov	r1, sl
 80098dc:	00ca      	lsls	r2, r1, #3
 80098de:	4610      	mov	r0, r2
 80098e0:	4619      	mov	r1, r3
 80098e2:	4603      	mov	r3, r0
 80098e4:	4642      	mov	r2, r8
 80098e6:	189b      	adds	r3, r3, r2
 80098e8:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
 80098ec:	464b      	mov	r3, r9
 80098ee:	460a      	mov	r2, r1
 80098f0:	eb42 0303 	adc.w	r3, r2, r3
 80098f4:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 80098f8:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80098fc:	685b      	ldr	r3, [r3, #4]
 80098fe:	2200      	movs	r2, #0
 8009900:	67bb      	str	r3, [r7, #120]	@ 0x78
 8009902:	67fa      	str	r2, [r7, #124]	@ 0x7c
 8009904:	f04f 0200 	mov.w	r2, #0
 8009908:	f04f 0300 	mov.w	r3, #0
 800990c:	e9d7 891e 	ldrd	r8, r9, [r7, #120]	@ 0x78
 8009910:	4649      	mov	r1, r9
 8009912:	008b      	lsls	r3, r1, #2
 8009914:	4641      	mov	r1, r8
 8009916:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 800991a:	4641      	mov	r1, r8
 800991c:	008a      	lsls	r2, r1, #2
 800991e:	e9d7 0120 	ldrd	r0, r1, [r7, #128]	@ 0x80
 8009922:	f7f7 f951 	bl	8000bc8 <__aeabi_uldivmod>
 8009926:	4602      	mov	r2, r0
 8009928:	460b      	mov	r3, r1
 800992a:	4611      	mov	r1, r2
 800992c:	4b38      	ldr	r3, [pc, #224]	@ (8009a10 <UART_SetConfig+0x4e4>)
 800992e:	fba3 2301 	umull	r2, r3, r3, r1
 8009932:	095b      	lsrs	r3, r3, #5
 8009934:	2264      	movs	r2, #100	@ 0x64
 8009936:	fb02 f303 	mul.w	r3, r2, r3
 800993a:	1acb      	subs	r3, r1, r3
 800993c:	011b      	lsls	r3, r3, #4
 800993e:	3332      	adds	r3, #50	@ 0x32
 8009940:	4a33      	ldr	r2, [pc, #204]	@ (8009a10 <UART_SetConfig+0x4e4>)
 8009942:	fba2 2303 	umull	r2, r3, r2, r3
 8009946:	095b      	lsrs	r3, r3, #5
 8009948:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 800994c:	441c      	add	r4, r3
 800994e:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8009952:	2200      	movs	r2, #0
 8009954:	673b      	str	r3, [r7, #112]	@ 0x70
 8009956:	677a      	str	r2, [r7, #116]	@ 0x74
 8009958:	e9d7 891c 	ldrd	r8, r9, [r7, #112]	@ 0x70
 800995c:	4642      	mov	r2, r8
 800995e:	464b      	mov	r3, r9
 8009960:	1891      	adds	r1, r2, r2
 8009962:	60b9      	str	r1, [r7, #8]
 8009964:	415b      	adcs	r3, r3
 8009966:	60fb      	str	r3, [r7, #12]
 8009968:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 800996c:	4641      	mov	r1, r8
 800996e:	1851      	adds	r1, r2, r1
 8009970:	6039      	str	r1, [r7, #0]
 8009972:	4649      	mov	r1, r9
 8009974:	414b      	adcs	r3, r1
 8009976:	607b      	str	r3, [r7, #4]
 8009978:	f04f 0200 	mov.w	r2, #0
 800997c:	f04f 0300 	mov.w	r3, #0
 8009980:	e9d7 ab00 	ldrd	sl, fp, [r7]
 8009984:	4659      	mov	r1, fp
 8009986:	00cb      	lsls	r3, r1, #3
 8009988:	4651      	mov	r1, sl
 800998a:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 800998e:	4651      	mov	r1, sl
 8009990:	00ca      	lsls	r2, r1, #3
 8009992:	4610      	mov	r0, r2
 8009994:	4619      	mov	r1, r3
 8009996:	4603      	mov	r3, r0
 8009998:	4642      	mov	r2, r8
 800999a:	189b      	adds	r3, r3, r2
 800999c:	66bb      	str	r3, [r7, #104]	@ 0x68
 800999e:	464b      	mov	r3, r9
 80099a0:	460a      	mov	r2, r1
 80099a2:	eb42 0303 	adc.w	r3, r2, r3
 80099a6:	66fb      	str	r3, [r7, #108]	@ 0x6c
 80099a8:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80099ac:	685b      	ldr	r3, [r3, #4]
 80099ae:	2200      	movs	r2, #0
 80099b0:	663b      	str	r3, [r7, #96]	@ 0x60
 80099b2:	667a      	str	r2, [r7, #100]	@ 0x64
 80099b4:	f04f 0200 	mov.w	r2, #0
 80099b8:	f04f 0300 	mov.w	r3, #0
 80099bc:	e9d7 8918 	ldrd	r8, r9, [r7, #96]	@ 0x60
 80099c0:	4649      	mov	r1, r9
 80099c2:	008b      	lsls	r3, r1, #2
 80099c4:	4641      	mov	r1, r8
 80099c6:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 80099ca:	4641      	mov	r1, r8
 80099cc:	008a      	lsls	r2, r1, #2
 80099ce:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	@ 0x68
 80099d2:	f7f7 f8f9 	bl	8000bc8 <__aeabi_uldivmod>
 80099d6:	4602      	mov	r2, r0
 80099d8:	460b      	mov	r3, r1
 80099da:	4b0d      	ldr	r3, [pc, #52]	@ (8009a10 <UART_SetConfig+0x4e4>)
 80099dc:	fba3 1302 	umull	r1, r3, r3, r2
 80099e0:	095b      	lsrs	r3, r3, #5
 80099e2:	2164      	movs	r1, #100	@ 0x64
 80099e4:	fb01 f303 	mul.w	r3, r1, r3
 80099e8:	1ad3      	subs	r3, r2, r3
 80099ea:	011b      	lsls	r3, r3, #4
 80099ec:	3332      	adds	r3, #50	@ 0x32
 80099ee:	4a08      	ldr	r2, [pc, #32]	@ (8009a10 <UART_SetConfig+0x4e4>)
 80099f0:	fba2 2303 	umull	r2, r3, r2, r3
 80099f4:	095b      	lsrs	r3, r3, #5
 80099f6:	f003 020f 	and.w	r2, r3, #15
 80099fa:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80099fe:	681b      	ldr	r3, [r3, #0]
 8009a00:	4422      	add	r2, r4
 8009a02:	609a      	str	r2, [r3, #8]
 8009a04:	bf00      	nop
 8009a06:	f507 7780 	add.w	r7, r7, #256	@ 0x100
 8009a0a:	46bd      	mov	sp, r7
 8009a0c:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8009a10:	51eb851f 	.word	0x51eb851f

08009a14 <FMC_SDRAM_Init>:
 8009a14:	b480      	push	{r7}
 8009a16:	b083      	sub	sp, #12
 8009a18:	af00      	add	r7, sp, #0
 8009a1a:	6078      	str	r0, [r7, #4]
 8009a1c:	6039      	str	r1, [r7, #0]
 8009a1e:	683b      	ldr	r3, [r7, #0]
 8009a20:	681b      	ldr	r3, [r3, #0]
 8009a22:	2b00      	cmp	r3, #0
 8009a24:	d123      	bne.n	8009a6e <FMC_SDRAM_Init+0x5a>
 8009a26:	687b      	ldr	r3, [r7, #4]
 8009a28:	681b      	ldr	r3, [r3, #0]
 8009a2a:	f423 43ff 	bic.w	r3, r3, #32640	@ 0x7f80
 8009a2e:	f023 037f 	bic.w	r3, r3, #127	@ 0x7f
 8009a32:	683a      	ldr	r2, [r7, #0]
 8009a34:	6851      	ldr	r1, [r2, #4]
 8009a36:	683a      	ldr	r2, [r7, #0]
 8009a38:	6892      	ldr	r2, [r2, #8]
 8009a3a:	4311      	orrs	r1, r2
 8009a3c:	683a      	ldr	r2, [r7, #0]
 8009a3e:	68d2      	ldr	r2, [r2, #12]
 8009a40:	4311      	orrs	r1, r2
 8009a42:	683a      	ldr	r2, [r7, #0]
 8009a44:	6912      	ldr	r2, [r2, #16]
 8009a46:	4311      	orrs	r1, r2
 8009a48:	683a      	ldr	r2, [r7, #0]
 8009a4a:	6952      	ldr	r2, [r2, #20]
 8009a4c:	4311      	orrs	r1, r2
 8009a4e:	683a      	ldr	r2, [r7, #0]
 8009a50:	6992      	ldr	r2, [r2, #24]
 8009a52:	4311      	orrs	r1, r2
 8009a54:	683a      	ldr	r2, [r7, #0]
 8009a56:	69d2      	ldr	r2, [r2, #28]
 8009a58:	4311      	orrs	r1, r2
 8009a5a:	683a      	ldr	r2, [r7, #0]
 8009a5c:	6a12      	ldr	r2, [r2, #32]
 8009a5e:	4311      	orrs	r1, r2
 8009a60:	683a      	ldr	r2, [r7, #0]
 8009a62:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 8009a64:	430a      	orrs	r2, r1
 8009a66:	431a      	orrs	r2, r3
 8009a68:	687b      	ldr	r3, [r7, #4]
 8009a6a:	601a      	str	r2, [r3, #0]
 8009a6c:	e028      	b.n	8009ac0 <FMC_SDRAM_Init+0xac>
 8009a6e:	687b      	ldr	r3, [r7, #4]
 8009a70:	681b      	ldr	r3, [r3, #0]
 8009a72:	f423 42f8 	bic.w	r2, r3, #31744	@ 0x7c00
 8009a76:	683b      	ldr	r3, [r7, #0]
 8009a78:	69d9      	ldr	r1, [r3, #28]
 8009a7a:	683b      	ldr	r3, [r7, #0]
 8009a7c:	6a1b      	ldr	r3, [r3, #32]
 8009a7e:	4319      	orrs	r1, r3
 8009a80:	683b      	ldr	r3, [r7, #0]
 8009a82:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8009a84:	430b      	orrs	r3, r1
 8009a86:	431a      	orrs	r2, r3
 8009a88:	687b      	ldr	r3, [r7, #4]
 8009a8a:	601a      	str	r2, [r3, #0]
 8009a8c:	687b      	ldr	r3, [r7, #4]
 8009a8e:	685b      	ldr	r3, [r3, #4]
 8009a90:	f423 43ff 	bic.w	r3, r3, #32640	@ 0x7f80
 8009a94:	f023 037f 	bic.w	r3, r3, #127	@ 0x7f
 8009a98:	683a      	ldr	r2, [r7, #0]
 8009a9a:	6851      	ldr	r1, [r2, #4]
 8009a9c:	683a      	ldr	r2, [r7, #0]
 8009a9e:	6892      	ldr	r2, [r2, #8]
 8009aa0:	4311      	orrs	r1, r2
 8009aa2:	683a      	ldr	r2, [r7, #0]
 8009aa4:	68d2      	ldr	r2, [r2, #12]
 8009aa6:	4311      	orrs	r1, r2
 8009aa8:	683a      	ldr	r2, [r7, #0]
 8009aaa:	6912      	ldr	r2, [r2, #16]
 8009aac:	4311      	orrs	r1, r2
 8009aae:	683a      	ldr	r2, [r7, #0]
 8009ab0:	6952      	ldr	r2, [r2, #20]
 8009ab2:	4311      	orrs	r1, r2
 8009ab4:	683a      	ldr	r2, [r7, #0]
 8009ab6:	6992      	ldr	r2, [r2, #24]
 8009ab8:	430a      	orrs	r2, r1
 8009aba:	431a      	orrs	r2, r3
 8009abc:	687b      	ldr	r3, [r7, #4]
 8009abe:	605a      	str	r2, [r3, #4]
 8009ac0:	2300      	movs	r3, #0
 8009ac2:	4618      	mov	r0, r3
 8009ac4:	370c      	adds	r7, #12
 8009ac6:	46bd      	mov	sp, r7
 8009ac8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009acc:	4770      	bx	lr

08009ace <FMC_SDRAM_Timing_Init>:
 8009ace:	b480      	push	{r7}
 8009ad0:	b085      	sub	sp, #20
 8009ad2:	af00      	add	r7, sp, #0
 8009ad4:	60f8      	str	r0, [r7, #12]
 8009ad6:	60b9      	str	r1, [r7, #8]
 8009ad8:	607a      	str	r2, [r7, #4]
 8009ada:	687b      	ldr	r3, [r7, #4]
 8009adc:	2b00      	cmp	r3, #0
 8009ade:	d128      	bne.n	8009b32 <FMC_SDRAM_Timing_Init+0x64>
 8009ae0:	68fb      	ldr	r3, [r7, #12]
 8009ae2:	689b      	ldr	r3, [r3, #8]
 8009ae4:	f003 4270 	and.w	r2, r3, #4026531840	@ 0xf0000000
 8009ae8:	68bb      	ldr	r3, [r7, #8]
 8009aea:	681b      	ldr	r3, [r3, #0]
 8009aec:	1e59      	subs	r1, r3, #1
 8009aee:	68bb      	ldr	r3, [r7, #8]
 8009af0:	685b      	ldr	r3, [r3, #4]
 8009af2:	3b01      	subs	r3, #1
 8009af4:	011b      	lsls	r3, r3, #4
 8009af6:	4319      	orrs	r1, r3
 8009af8:	68bb      	ldr	r3, [r7, #8]
 8009afa:	689b      	ldr	r3, [r3, #8]
 8009afc:	3b01      	subs	r3, #1
 8009afe:	021b      	lsls	r3, r3, #8
 8009b00:	4319      	orrs	r1, r3
 8009b02:	68bb      	ldr	r3, [r7, #8]
 8009b04:	68db      	ldr	r3, [r3, #12]
 8009b06:	3b01      	subs	r3, #1
 8009b08:	031b      	lsls	r3, r3, #12
 8009b0a:	4319      	orrs	r1, r3
 8009b0c:	68bb      	ldr	r3, [r7, #8]
 8009b0e:	691b      	ldr	r3, [r3, #16]
 8009b10:	3b01      	subs	r3, #1
 8009b12:	041b      	lsls	r3, r3, #16
 8009b14:	4319      	orrs	r1, r3
 8009b16:	68bb      	ldr	r3, [r7, #8]
 8009b18:	695b      	ldr	r3, [r3, #20]
 8009b1a:	3b01      	subs	r3, #1
 8009b1c:	051b      	lsls	r3, r3, #20
 8009b1e:	4319      	orrs	r1, r3
 8009b20:	68bb      	ldr	r3, [r7, #8]
 8009b22:	699b      	ldr	r3, [r3, #24]
 8009b24:	3b01      	subs	r3, #1
 8009b26:	061b      	lsls	r3, r3, #24
 8009b28:	430b      	orrs	r3, r1
 8009b2a:	431a      	orrs	r2, r3
 8009b2c:	68fb      	ldr	r3, [r7, #12]
 8009b2e:	609a      	str	r2, [r3, #8]
 8009b30:	e02f      	b.n	8009b92 <FMC_SDRAM_Timing_Init+0xc4>
 8009b32:	68fb      	ldr	r3, [r7, #12]
 8009b34:	689b      	ldr	r3, [r3, #8]
 8009b36:	f423 0370 	bic.w	r3, r3, #15728640	@ 0xf00000
 8009b3a:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
 8009b3e:	68ba      	ldr	r2, [r7, #8]
 8009b40:	68d2      	ldr	r2, [r2, #12]
 8009b42:	3a01      	subs	r2, #1
 8009b44:	0311      	lsls	r1, r2, #12
 8009b46:	68ba      	ldr	r2, [r7, #8]
 8009b48:	6952      	ldr	r2, [r2, #20]
 8009b4a:	3a01      	subs	r2, #1
 8009b4c:	0512      	lsls	r2, r2, #20
 8009b4e:	430a      	orrs	r2, r1
 8009b50:	431a      	orrs	r2, r3
 8009b52:	68fb      	ldr	r3, [r7, #12]
 8009b54:	609a      	str	r2, [r3, #8]
 8009b56:	68fb      	ldr	r3, [r7, #12]
 8009b58:	68db      	ldr	r3, [r3, #12]
 8009b5a:	f003 4270 	and.w	r2, r3, #4026531840	@ 0xf0000000
 8009b5e:	68bb      	ldr	r3, [r7, #8]
 8009b60:	681b      	ldr	r3, [r3, #0]
 8009b62:	1e59      	subs	r1, r3, #1
 8009b64:	68bb      	ldr	r3, [r7, #8]
 8009b66:	685b      	ldr	r3, [r3, #4]
 8009b68:	3b01      	subs	r3, #1
 8009b6a:	011b      	lsls	r3, r3, #4
 8009b6c:	4319      	orrs	r1, r3
 8009b6e:	68bb      	ldr	r3, [r7, #8]
 8009b70:	689b      	ldr	r3, [r3, #8]
 8009b72:	3b01      	subs	r3, #1
 8009b74:	021b      	lsls	r3, r3, #8
 8009b76:	4319      	orrs	r1, r3
 8009b78:	68bb      	ldr	r3, [r7, #8]
 8009b7a:	691b      	ldr	r3, [r3, #16]
 8009b7c:	3b01      	subs	r3, #1
 8009b7e:	041b      	lsls	r3, r3, #16
 8009b80:	4319      	orrs	r1, r3
 8009b82:	68bb      	ldr	r3, [r7, #8]
 8009b84:	699b      	ldr	r3, [r3, #24]
 8009b86:	3b01      	subs	r3, #1
 8009b88:	061b      	lsls	r3, r3, #24
 8009b8a:	430b      	orrs	r3, r1
 8009b8c:	431a      	orrs	r2, r3
 8009b8e:	68fb      	ldr	r3, [r7, #12]
 8009b90:	60da      	str	r2, [r3, #12]
 8009b92:	2300      	movs	r3, #0
 8009b94:	4618      	mov	r0, r3
 8009b96:	3714      	adds	r7, #20
 8009b98:	46bd      	mov	sp, r7
 8009b9a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009b9e:	4770      	bx	lr

08009ba0 <USB_EnableGlobalInt>:
 8009ba0:	b480      	push	{r7}
 8009ba2:	b083      	sub	sp, #12
 8009ba4:	af00      	add	r7, sp, #0
 8009ba6:	6078      	str	r0, [r7, #4]
 8009ba8:	687b      	ldr	r3, [r7, #4]
 8009baa:	689b      	ldr	r3, [r3, #8]
 8009bac:	f043 0201 	orr.w	r2, r3, #1
 8009bb0:	687b      	ldr	r3, [r7, #4]
 8009bb2:	609a      	str	r2, [r3, #8]
 8009bb4:	2300      	movs	r3, #0
 8009bb6:	4618      	mov	r0, r3
 8009bb8:	370c      	adds	r7, #12
 8009bba:	46bd      	mov	sp, r7
 8009bbc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009bc0:	4770      	bx	lr

08009bc2 <USB_DisableGlobalInt>:
 8009bc2:	b480      	push	{r7}
 8009bc4:	b083      	sub	sp, #12
 8009bc6:	af00      	add	r7, sp, #0
 8009bc8:	6078      	str	r0, [r7, #4]
 8009bca:	687b      	ldr	r3, [r7, #4]
 8009bcc:	689b      	ldr	r3, [r3, #8]
 8009bce:	f023 0201 	bic.w	r2, r3, #1
 8009bd2:	687b      	ldr	r3, [r7, #4]
 8009bd4:	609a      	str	r2, [r3, #8]
 8009bd6:	2300      	movs	r3, #0
 8009bd8:	4618      	mov	r0, r3
 8009bda:	370c      	adds	r7, #12
 8009bdc:	46bd      	mov	sp, r7
 8009bde:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009be2:	4770      	bx	lr

08009be4 <USB_FlushTxFifo>:
 8009be4:	b480      	push	{r7}
 8009be6:	b085      	sub	sp, #20
 8009be8:	af00      	add	r7, sp, #0
 8009bea:	6078      	str	r0, [r7, #4]
 8009bec:	6039      	str	r1, [r7, #0]
 8009bee:	2300      	movs	r3, #0
 8009bf0:	60fb      	str	r3, [r7, #12]
 8009bf2:	68fb      	ldr	r3, [r7, #12]
 8009bf4:	3301      	adds	r3, #1
 8009bf6:	60fb      	str	r3, [r7, #12]
 8009bf8:	68fb      	ldr	r3, [r7, #12]
 8009bfa:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
 8009bfe:	d901      	bls.n	8009c04 <USB_FlushTxFifo+0x20>
 8009c00:	2303      	movs	r3, #3
 8009c02:	e01b      	b.n	8009c3c <USB_FlushTxFifo+0x58>
 8009c04:	687b      	ldr	r3, [r7, #4]
 8009c06:	691b      	ldr	r3, [r3, #16]
 8009c08:	2b00      	cmp	r3, #0
 8009c0a:	daf2      	bge.n	8009bf2 <USB_FlushTxFifo+0xe>
 8009c0c:	2300      	movs	r3, #0
 8009c0e:	60fb      	str	r3, [r7, #12]
 8009c10:	683b      	ldr	r3, [r7, #0]
 8009c12:	019b      	lsls	r3, r3, #6
 8009c14:	f043 0220 	orr.w	r2, r3, #32
 8009c18:	687b      	ldr	r3, [r7, #4]
 8009c1a:	611a      	str	r2, [r3, #16]
 8009c1c:	68fb      	ldr	r3, [r7, #12]
 8009c1e:	3301      	adds	r3, #1
 8009c20:	60fb      	str	r3, [r7, #12]
 8009c22:	68fb      	ldr	r3, [r7, #12]
 8009c24:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
 8009c28:	d901      	bls.n	8009c2e <USB_FlushTxFifo+0x4a>
 8009c2a:	2303      	movs	r3, #3
 8009c2c:	e006      	b.n	8009c3c <USB_FlushTxFifo+0x58>
 8009c2e:	687b      	ldr	r3, [r7, #4]
 8009c30:	691b      	ldr	r3, [r3, #16]
 8009c32:	f003 0320 	and.w	r3, r3, #32
 8009c36:	2b20      	cmp	r3, #32
 8009c38:	d0f0      	beq.n	8009c1c <USB_FlushTxFifo+0x38>
 8009c3a:	2300      	movs	r3, #0
 8009c3c:	4618      	mov	r0, r3
 8009c3e:	3714      	adds	r7, #20
 8009c40:	46bd      	mov	sp, r7
 8009c42:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009c46:	4770      	bx	lr

08009c48 <USB_FlushRxFifo>:
 8009c48:	b480      	push	{r7}
 8009c4a:	b085      	sub	sp, #20
 8009c4c:	af00      	add	r7, sp, #0
 8009c4e:	6078      	str	r0, [r7, #4]
 8009c50:	2300      	movs	r3, #0
 8009c52:	60fb      	str	r3, [r7, #12]
 8009c54:	68fb      	ldr	r3, [r7, #12]
 8009c56:	3301      	adds	r3, #1
 8009c58:	60fb      	str	r3, [r7, #12]
 8009c5a:	68fb      	ldr	r3, [r7, #12]
 8009c5c:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
 8009c60:	d901      	bls.n	8009c66 <USB_FlushRxFifo+0x1e>
 8009c62:	2303      	movs	r3, #3
 8009c64:	e018      	b.n	8009c98 <USB_FlushRxFifo+0x50>
 8009c66:	687b      	ldr	r3, [r7, #4]
 8009c68:	691b      	ldr	r3, [r3, #16]
 8009c6a:	2b00      	cmp	r3, #0
 8009c6c:	daf2      	bge.n	8009c54 <USB_FlushRxFifo+0xc>
 8009c6e:	2300      	movs	r3, #0
 8009c70:	60fb      	str	r3, [r7, #12]
 8009c72:	687b      	ldr	r3, [r7, #4]
 8009c74:	2210      	movs	r2, #16
 8009c76:	611a      	str	r2, [r3, #16]
 8009c78:	68fb      	ldr	r3, [r7, #12]
 8009c7a:	3301      	adds	r3, #1
 8009c7c:	60fb      	str	r3, [r7, #12]
 8009c7e:	68fb      	ldr	r3, [r7, #12]
 8009c80:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
 8009c84:	d901      	bls.n	8009c8a <USB_FlushRxFifo+0x42>
 8009c86:	2303      	movs	r3, #3
 8009c88:	e006      	b.n	8009c98 <USB_FlushRxFifo+0x50>
 8009c8a:	687b      	ldr	r3, [r7, #4]
 8009c8c:	691b      	ldr	r3, [r3, #16]
 8009c8e:	f003 0310 	and.w	r3, r3, #16
 8009c92:	2b10      	cmp	r3, #16
 8009c94:	d0f0      	beq.n	8009c78 <USB_FlushRxFifo+0x30>
 8009c96:	2300      	movs	r3, #0
 8009c98:	4618      	mov	r0, r3
 8009c9a:	3714      	adds	r7, #20
 8009c9c:	46bd      	mov	sp, r7
 8009c9e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009ca2:	4770      	bx	lr

08009ca4 <USB_ReadPacket>:
 8009ca4:	b480      	push	{r7}
 8009ca6:	b08b      	sub	sp, #44	@ 0x2c
 8009ca8:	af00      	add	r7, sp, #0
 8009caa:	60f8      	str	r0, [r7, #12]
 8009cac:	60b9      	str	r1, [r7, #8]
 8009cae:	4613      	mov	r3, r2
 8009cb0:	80fb      	strh	r3, [r7, #6]
 8009cb2:	68fb      	ldr	r3, [r7, #12]
 8009cb4:	61bb      	str	r3, [r7, #24]
 8009cb6:	68bb      	ldr	r3, [r7, #8]
 8009cb8:	627b      	str	r3, [r7, #36]	@ 0x24
 8009cba:	88fb      	ldrh	r3, [r7, #6]
 8009cbc:	089b      	lsrs	r3, r3, #2
 8009cbe:	b29b      	uxth	r3, r3
 8009cc0:	617b      	str	r3, [r7, #20]
 8009cc2:	88fb      	ldrh	r3, [r7, #6]
 8009cc4:	f003 0303 	and.w	r3, r3, #3
 8009cc8:	83fb      	strh	r3, [r7, #30]
 8009cca:	2300      	movs	r3, #0
 8009ccc:	623b      	str	r3, [r7, #32]
 8009cce:	e014      	b.n	8009cfa <USB_ReadPacket+0x56>
 8009cd0:	69bb      	ldr	r3, [r7, #24]
 8009cd2:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8009cd6:	681a      	ldr	r2, [r3, #0]
 8009cd8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009cda:	601a      	str	r2, [r3, #0]
 8009cdc:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009cde:	3301      	adds	r3, #1
 8009ce0:	627b      	str	r3, [r7, #36]	@ 0x24
 8009ce2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009ce4:	3301      	adds	r3, #1
 8009ce6:	627b      	str	r3, [r7, #36]	@ 0x24
 8009ce8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009cea:	3301      	adds	r3, #1
 8009cec:	627b      	str	r3, [r7, #36]	@ 0x24
 8009cee:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009cf0:	3301      	adds	r3, #1
 8009cf2:	627b      	str	r3, [r7, #36]	@ 0x24
 8009cf4:	6a3b      	ldr	r3, [r7, #32]
 8009cf6:	3301      	adds	r3, #1
 8009cf8:	623b      	str	r3, [r7, #32]
 8009cfa:	6a3a      	ldr	r2, [r7, #32]
 8009cfc:	697b      	ldr	r3, [r7, #20]
 8009cfe:	429a      	cmp	r2, r3
 8009d00:	d3e6      	bcc.n	8009cd0 <USB_ReadPacket+0x2c>
 8009d02:	8bfb      	ldrh	r3, [r7, #30]
 8009d04:	2b00      	cmp	r3, #0
 8009d06:	d01e      	beq.n	8009d46 <USB_ReadPacket+0xa2>
 8009d08:	2300      	movs	r3, #0
 8009d0a:	623b      	str	r3, [r7, #32]
 8009d0c:	69bb      	ldr	r3, [r7, #24]
 8009d0e:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8009d12:	461a      	mov	r2, r3
 8009d14:	f107 0310 	add.w	r3, r7, #16
 8009d18:	6812      	ldr	r2, [r2, #0]
 8009d1a:	601a      	str	r2, [r3, #0]
 8009d1c:	693a      	ldr	r2, [r7, #16]
 8009d1e:	6a3b      	ldr	r3, [r7, #32]
 8009d20:	b2db      	uxtb	r3, r3
 8009d22:	00db      	lsls	r3, r3, #3
 8009d24:	fa22 f303 	lsr.w	r3, r2, r3
 8009d28:	b2da      	uxtb	r2, r3
 8009d2a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009d2c:	701a      	strb	r2, [r3, #0]
 8009d2e:	6a3b      	ldr	r3, [r7, #32]
 8009d30:	3301      	adds	r3, #1
 8009d32:	623b      	str	r3, [r7, #32]
 8009d34:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009d36:	3301      	adds	r3, #1
 8009d38:	627b      	str	r3, [r7, #36]	@ 0x24
 8009d3a:	8bfb      	ldrh	r3, [r7, #30]
 8009d3c:	3b01      	subs	r3, #1
 8009d3e:	83fb      	strh	r3, [r7, #30]
 8009d40:	8bfb      	ldrh	r3, [r7, #30]
 8009d42:	2b00      	cmp	r3, #0
 8009d44:	d1ea      	bne.n	8009d1c <USB_ReadPacket+0x78>
 8009d46:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009d48:	4618      	mov	r0, r3
 8009d4a:	372c      	adds	r7, #44	@ 0x2c
 8009d4c:	46bd      	mov	sp, r7
 8009d4e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009d52:	4770      	bx	lr

08009d54 <USB_ReadInterrupts>:
 8009d54:	b480      	push	{r7}
 8009d56:	b085      	sub	sp, #20
 8009d58:	af00      	add	r7, sp, #0
 8009d5a:	6078      	str	r0, [r7, #4]
 8009d5c:	687b      	ldr	r3, [r7, #4]
 8009d5e:	695b      	ldr	r3, [r3, #20]
 8009d60:	60fb      	str	r3, [r7, #12]
 8009d62:	687b      	ldr	r3, [r7, #4]
 8009d64:	699b      	ldr	r3, [r3, #24]
 8009d66:	68fa      	ldr	r2, [r7, #12]
 8009d68:	4013      	ands	r3, r2
 8009d6a:	60fb      	str	r3, [r7, #12]
 8009d6c:	68fb      	ldr	r3, [r7, #12]
 8009d6e:	4618      	mov	r0, r3
 8009d70:	3714      	adds	r7, #20
 8009d72:	46bd      	mov	sp, r7
 8009d74:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009d78:	4770      	bx	lr

08009d7a <USB_ReadChInterrupts>:
 8009d7a:	b480      	push	{r7}
 8009d7c:	b085      	sub	sp, #20
 8009d7e:	af00      	add	r7, sp, #0
 8009d80:	6078      	str	r0, [r7, #4]
 8009d82:	460b      	mov	r3, r1
 8009d84:	70fb      	strb	r3, [r7, #3]
 8009d86:	687b      	ldr	r3, [r7, #4]
 8009d88:	60fb      	str	r3, [r7, #12]
 8009d8a:	78fb      	ldrb	r3, [r7, #3]
 8009d8c:	015a      	lsls	r2, r3, #5
 8009d8e:	68fb      	ldr	r3, [r7, #12]
 8009d90:	4413      	add	r3, r2
 8009d92:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8009d96:	689b      	ldr	r3, [r3, #8]
 8009d98:	60bb      	str	r3, [r7, #8]
 8009d9a:	78fb      	ldrb	r3, [r7, #3]
 8009d9c:	015a      	lsls	r2, r3, #5
 8009d9e:	68fb      	ldr	r3, [r7, #12]
 8009da0:	4413      	add	r3, r2
 8009da2:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8009da6:	68db      	ldr	r3, [r3, #12]
 8009da8:	68ba      	ldr	r2, [r7, #8]
 8009daa:	4013      	ands	r3, r2
 8009dac:	60bb      	str	r3, [r7, #8]
 8009dae:	68bb      	ldr	r3, [r7, #8]
 8009db0:	4618      	mov	r0, r3
 8009db2:	3714      	adds	r7, #20
 8009db4:	46bd      	mov	sp, r7
 8009db6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009dba:	4770      	bx	lr

08009dbc <USB_GetMode>:
 8009dbc:	b480      	push	{r7}
 8009dbe:	b083      	sub	sp, #12
 8009dc0:	af00      	add	r7, sp, #0
 8009dc2:	6078      	str	r0, [r7, #4]
 8009dc4:	687b      	ldr	r3, [r7, #4]
 8009dc6:	695b      	ldr	r3, [r3, #20]
 8009dc8:	f003 0301 	and.w	r3, r3, #1
 8009dcc:	4618      	mov	r0, r3
 8009dce:	370c      	adds	r7, #12
 8009dd0:	46bd      	mov	sp, r7
 8009dd2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009dd6:	4770      	bx	lr

08009dd8 <USB_InitFSLSPClkSel>:
 8009dd8:	b480      	push	{r7}
 8009dda:	b085      	sub	sp, #20
 8009ddc:	af00      	add	r7, sp, #0
 8009dde:	6078      	str	r0, [r7, #4]
 8009de0:	460b      	mov	r3, r1
 8009de2:	70fb      	strb	r3, [r7, #3]
 8009de4:	687b      	ldr	r3, [r7, #4]
 8009de6:	60fb      	str	r3, [r7, #12]
 8009de8:	68fb      	ldr	r3, [r7, #12]
 8009dea:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8009dee:	681b      	ldr	r3, [r3, #0]
 8009df0:	68fa      	ldr	r2, [r7, #12]
 8009df2:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8009df6:	f023 0303 	bic.w	r3, r3, #3
 8009dfa:	6013      	str	r3, [r2, #0]
 8009dfc:	68fb      	ldr	r3, [r7, #12]
 8009dfe:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8009e02:	681a      	ldr	r2, [r3, #0]
 8009e04:	78fb      	ldrb	r3, [r7, #3]
 8009e06:	f003 0303 	and.w	r3, r3, #3
 8009e0a:	68f9      	ldr	r1, [r7, #12]
 8009e0c:	f501 6180 	add.w	r1, r1, #1024	@ 0x400
 8009e10:	4313      	orrs	r3, r2
 8009e12:	600b      	str	r3, [r1, #0]
 8009e14:	78fb      	ldrb	r3, [r7, #3]
 8009e16:	2b01      	cmp	r3, #1
 8009e18:	d107      	bne.n	8009e2a <USB_InitFSLSPClkSel+0x52>
 8009e1a:	68fb      	ldr	r3, [r7, #12]
 8009e1c:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8009e20:	461a      	mov	r2, r3
 8009e22:	f64b 3380 	movw	r3, #48000	@ 0xbb80
 8009e26:	6053      	str	r3, [r2, #4]
 8009e28:	e00c      	b.n	8009e44 <USB_InitFSLSPClkSel+0x6c>
 8009e2a:	78fb      	ldrb	r3, [r7, #3]
 8009e2c:	2b02      	cmp	r3, #2
 8009e2e:	d107      	bne.n	8009e40 <USB_InitFSLSPClkSel+0x68>
 8009e30:	68fb      	ldr	r3, [r7, #12]
 8009e32:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8009e36:	461a      	mov	r2, r3
 8009e38:	f241 7370 	movw	r3, #6000	@ 0x1770
 8009e3c:	6053      	str	r3, [r2, #4]
 8009e3e:	e001      	b.n	8009e44 <USB_InitFSLSPClkSel+0x6c>
 8009e40:	2301      	movs	r3, #1
 8009e42:	e000      	b.n	8009e46 <USB_InitFSLSPClkSel+0x6e>
 8009e44:	2300      	movs	r3, #0
 8009e46:	4618      	mov	r0, r3
 8009e48:	3714      	adds	r7, #20
 8009e4a:	46bd      	mov	sp, r7
 8009e4c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009e50:	4770      	bx	lr

08009e52 <USB_HC_ReadInterrupt>:
 8009e52:	b480      	push	{r7}
 8009e54:	b085      	sub	sp, #20
 8009e56:	af00      	add	r7, sp, #0
 8009e58:	6078      	str	r0, [r7, #4]
 8009e5a:	687b      	ldr	r3, [r7, #4]
 8009e5c:	60fb      	str	r3, [r7, #12]
 8009e5e:	68fb      	ldr	r3, [r7, #12]
 8009e60:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8009e64:	695b      	ldr	r3, [r3, #20]
 8009e66:	b29b      	uxth	r3, r3
 8009e68:	4618      	mov	r0, r3
 8009e6a:	3714      	adds	r7, #20
 8009e6c:	46bd      	mov	sp, r7
 8009e6e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009e72:	4770      	bx	lr

08009e74 <USB_HC_Halt>:
 8009e74:	b480      	push	{r7}
 8009e76:	b089      	sub	sp, #36	@ 0x24
 8009e78:	af00      	add	r7, sp, #0
 8009e7a:	6078      	str	r0, [r7, #4]
 8009e7c:	460b      	mov	r3, r1
 8009e7e:	70fb      	strb	r3, [r7, #3]
 8009e80:	687b      	ldr	r3, [r7, #4]
 8009e82:	61fb      	str	r3, [r7, #28]
 8009e84:	78fb      	ldrb	r3, [r7, #3]
 8009e86:	61bb      	str	r3, [r7, #24]
 8009e88:	2300      	movs	r3, #0
 8009e8a:	60bb      	str	r3, [r7, #8]
 8009e8c:	69bb      	ldr	r3, [r7, #24]
 8009e8e:	015a      	lsls	r2, r3, #5
 8009e90:	69fb      	ldr	r3, [r7, #28]
 8009e92:	4413      	add	r3, r2
 8009e94:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8009e98:	681b      	ldr	r3, [r3, #0]
 8009e9a:	0c9b      	lsrs	r3, r3, #18
 8009e9c:	f003 0303 	and.w	r3, r3, #3
 8009ea0:	617b      	str	r3, [r7, #20]
 8009ea2:	69bb      	ldr	r3, [r7, #24]
 8009ea4:	015a      	lsls	r2, r3, #5
 8009ea6:	69fb      	ldr	r3, [r7, #28]
 8009ea8:	4413      	add	r3, r2
 8009eaa:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8009eae:	681b      	ldr	r3, [r3, #0]
 8009eb0:	0fdb      	lsrs	r3, r3, #31
 8009eb2:	f003 0301 	and.w	r3, r3, #1
 8009eb6:	613b      	str	r3, [r7, #16]
 8009eb8:	69bb      	ldr	r3, [r7, #24]
 8009eba:	015a      	lsls	r2, r3, #5
 8009ebc:	69fb      	ldr	r3, [r7, #28]
 8009ebe:	4413      	add	r3, r2
 8009ec0:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8009ec4:	685b      	ldr	r3, [r3, #4]
 8009ec6:	0fdb      	lsrs	r3, r3, #31
 8009ec8:	f003 0301 	and.w	r3, r3, #1
 8009ecc:	60fb      	str	r3, [r7, #12]
 8009ece:	687b      	ldr	r3, [r7, #4]
 8009ed0:	689b      	ldr	r3, [r3, #8]
 8009ed2:	f003 0320 	and.w	r3, r3, #32
 8009ed6:	2b20      	cmp	r3, #32
 8009ed8:	d10d      	bne.n	8009ef6 <USB_HC_Halt+0x82>
 8009eda:	68fb      	ldr	r3, [r7, #12]
 8009edc:	2b00      	cmp	r3, #0
 8009ede:	d10a      	bne.n	8009ef6 <USB_HC_Halt+0x82>
 8009ee0:	693b      	ldr	r3, [r7, #16]
 8009ee2:	2b00      	cmp	r3, #0
 8009ee4:	d005      	beq.n	8009ef2 <USB_HC_Halt+0x7e>
 8009ee6:	697b      	ldr	r3, [r7, #20]
 8009ee8:	2b01      	cmp	r3, #1
 8009eea:	d002      	beq.n	8009ef2 <USB_HC_Halt+0x7e>
 8009eec:	697b      	ldr	r3, [r7, #20]
 8009eee:	2b03      	cmp	r3, #3
 8009ef0:	d101      	bne.n	8009ef6 <USB_HC_Halt+0x82>
 8009ef2:	2300      	movs	r3, #0
 8009ef4:	e0d8      	b.n	800a0a8 <USB_HC_Halt+0x234>
 8009ef6:	697b      	ldr	r3, [r7, #20]
 8009ef8:	2b00      	cmp	r3, #0
 8009efa:	d002      	beq.n	8009f02 <USB_HC_Halt+0x8e>
 8009efc:	697b      	ldr	r3, [r7, #20]
 8009efe:	2b02      	cmp	r3, #2
 8009f00:	d173      	bne.n	8009fea <USB_HC_Halt+0x176>
 8009f02:	69bb      	ldr	r3, [r7, #24]
 8009f04:	015a      	lsls	r2, r3, #5
 8009f06:	69fb      	ldr	r3, [r7, #28]
 8009f08:	4413      	add	r3, r2
 8009f0a:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8009f0e:	681b      	ldr	r3, [r3, #0]
 8009f10:	69ba      	ldr	r2, [r7, #24]
 8009f12:	0151      	lsls	r1, r2, #5
 8009f14:	69fa      	ldr	r2, [r7, #28]
 8009f16:	440a      	add	r2, r1
 8009f18:	f502 62a0 	add.w	r2, r2, #1280	@ 0x500
 8009f1c:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 8009f20:	6013      	str	r3, [r2, #0]
 8009f22:	687b      	ldr	r3, [r7, #4]
 8009f24:	689b      	ldr	r3, [r3, #8]
 8009f26:	f003 0320 	and.w	r3, r3, #32
 8009f2a:	2b00      	cmp	r3, #0
 8009f2c:	d14a      	bne.n	8009fc4 <USB_HC_Halt+0x150>
 8009f2e:	687b      	ldr	r3, [r7, #4]
 8009f30:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8009f32:	f403 037f 	and.w	r3, r3, #16711680	@ 0xff0000
 8009f36:	2b00      	cmp	r3, #0
 8009f38:	d133      	bne.n	8009fa2 <USB_HC_Halt+0x12e>
 8009f3a:	69bb      	ldr	r3, [r7, #24]
 8009f3c:	015a      	lsls	r2, r3, #5
 8009f3e:	69fb      	ldr	r3, [r7, #28]
 8009f40:	4413      	add	r3, r2
 8009f42:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8009f46:	681b      	ldr	r3, [r3, #0]
 8009f48:	69ba      	ldr	r2, [r7, #24]
 8009f4a:	0151      	lsls	r1, r2, #5
 8009f4c:	69fa      	ldr	r2, [r7, #28]
 8009f4e:	440a      	add	r2, r1
 8009f50:	f502 62a0 	add.w	r2, r2, #1280	@ 0x500
 8009f54:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8009f58:	6013      	str	r3, [r2, #0]
 8009f5a:	69bb      	ldr	r3, [r7, #24]
 8009f5c:	015a      	lsls	r2, r3, #5
 8009f5e:	69fb      	ldr	r3, [r7, #28]
 8009f60:	4413      	add	r3, r2
 8009f62:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8009f66:	681b      	ldr	r3, [r3, #0]
 8009f68:	69ba      	ldr	r2, [r7, #24]
 8009f6a:	0151      	lsls	r1, r2, #5
 8009f6c:	69fa      	ldr	r2, [r7, #28]
 8009f6e:	440a      	add	r2, r1
 8009f70:	f502 62a0 	add.w	r2, r2, #1280	@ 0x500
 8009f74:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8009f78:	6013      	str	r3, [r2, #0]
 8009f7a:	68bb      	ldr	r3, [r7, #8]
 8009f7c:	3301      	adds	r3, #1
 8009f7e:	60bb      	str	r3, [r7, #8]
 8009f80:	68bb      	ldr	r3, [r7, #8]
 8009f82:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 8009f86:	d82e      	bhi.n	8009fe6 <USB_HC_Halt+0x172>
 8009f88:	69bb      	ldr	r3, [r7, #24]
 8009f8a:	015a      	lsls	r2, r3, #5
 8009f8c:	69fb      	ldr	r3, [r7, #28]
 8009f8e:	4413      	add	r3, r2
 8009f90:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8009f94:	681b      	ldr	r3, [r3, #0]
 8009f96:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 8009f9a:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 8009f9e:	d0ec      	beq.n	8009f7a <USB_HC_Halt+0x106>
 8009fa0:	e081      	b.n	800a0a6 <USB_HC_Halt+0x232>
 8009fa2:	69bb      	ldr	r3, [r7, #24]
 8009fa4:	015a      	lsls	r2, r3, #5
 8009fa6:	69fb      	ldr	r3, [r7, #28]
 8009fa8:	4413      	add	r3, r2
 8009faa:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8009fae:	681b      	ldr	r3, [r3, #0]
 8009fb0:	69ba      	ldr	r2, [r7, #24]
 8009fb2:	0151      	lsls	r1, r2, #5
 8009fb4:	69fa      	ldr	r2, [r7, #28]
 8009fb6:	440a      	add	r2, r1
 8009fb8:	f502 62a0 	add.w	r2, r2, #1280	@ 0x500
 8009fbc:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8009fc0:	6013      	str	r3, [r2, #0]
 8009fc2:	e070      	b.n	800a0a6 <USB_HC_Halt+0x232>
 8009fc4:	69bb      	ldr	r3, [r7, #24]
 8009fc6:	015a      	lsls	r2, r3, #5
 8009fc8:	69fb      	ldr	r3, [r7, #28]
 8009fca:	4413      	add	r3, r2
 8009fcc:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8009fd0:	681b      	ldr	r3, [r3, #0]
 8009fd2:	69ba      	ldr	r2, [r7, #24]
 8009fd4:	0151      	lsls	r1, r2, #5
 8009fd6:	69fa      	ldr	r2, [r7, #28]
 8009fd8:	440a      	add	r2, r1
 8009fda:	f502 62a0 	add.w	r2, r2, #1280	@ 0x500
 8009fde:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8009fe2:	6013      	str	r3, [r2, #0]
 8009fe4:	e05f      	b.n	800a0a6 <USB_HC_Halt+0x232>
 8009fe6:	bf00      	nop
 8009fe8:	e05d      	b.n	800a0a6 <USB_HC_Halt+0x232>
 8009fea:	69bb      	ldr	r3, [r7, #24]
 8009fec:	015a      	lsls	r2, r3, #5
 8009fee:	69fb      	ldr	r3, [r7, #28]
 8009ff0:	4413      	add	r3, r2
 8009ff2:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 8009ff6:	681b      	ldr	r3, [r3, #0]
 8009ff8:	69ba      	ldr	r2, [r7, #24]
 8009ffa:	0151      	lsls	r1, r2, #5
 8009ffc:	69fa      	ldr	r2, [r7, #28]
 8009ffe:	440a      	add	r2, r1
 800a000:	f502 62a0 	add.w	r2, r2, #1280	@ 0x500
 800a004:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 800a008:	6013      	str	r3, [r2, #0]
 800a00a:	69fb      	ldr	r3, [r7, #28]
 800a00c:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 800a010:	691b      	ldr	r3, [r3, #16]
 800a012:	f403 037f 	and.w	r3, r3, #16711680	@ 0xff0000
 800a016:	2b00      	cmp	r3, #0
 800a018:	d133      	bne.n	800a082 <USB_HC_Halt+0x20e>
 800a01a:	69bb      	ldr	r3, [r7, #24]
 800a01c:	015a      	lsls	r2, r3, #5
 800a01e:	69fb      	ldr	r3, [r7, #28]
 800a020:	4413      	add	r3, r2
 800a022:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 800a026:	681b      	ldr	r3, [r3, #0]
 800a028:	69ba      	ldr	r2, [r7, #24]
 800a02a:	0151      	lsls	r1, r2, #5
 800a02c:	69fa      	ldr	r2, [r7, #28]
 800a02e:	440a      	add	r2, r1
 800a030:	f502 62a0 	add.w	r2, r2, #1280	@ 0x500
 800a034:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 800a038:	6013      	str	r3, [r2, #0]
 800a03a:	69bb      	ldr	r3, [r7, #24]
 800a03c:	015a      	lsls	r2, r3, #5
 800a03e:	69fb      	ldr	r3, [r7, #28]
 800a040:	4413      	add	r3, r2
 800a042:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 800a046:	681b      	ldr	r3, [r3, #0]
 800a048:	69ba      	ldr	r2, [r7, #24]
 800a04a:	0151      	lsls	r1, r2, #5
 800a04c:	69fa      	ldr	r2, [r7, #28]
 800a04e:	440a      	add	r2, r1
 800a050:	f502 62a0 	add.w	r2, r2, #1280	@ 0x500
 800a054:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 800a058:	6013      	str	r3, [r2, #0]
 800a05a:	68bb      	ldr	r3, [r7, #8]
 800a05c:	3301      	adds	r3, #1
 800a05e:	60bb      	str	r3, [r7, #8]
 800a060:	68bb      	ldr	r3, [r7, #8]
 800a062:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 800a066:	d81d      	bhi.n	800a0a4 <USB_HC_Halt+0x230>
 800a068:	69bb      	ldr	r3, [r7, #24]
 800a06a:	015a      	lsls	r2, r3, #5
 800a06c:	69fb      	ldr	r3, [r7, #28]
 800a06e:	4413      	add	r3, r2
 800a070:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 800a074:	681b      	ldr	r3, [r3, #0]
 800a076:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 800a07a:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 800a07e:	d0ec      	beq.n	800a05a <USB_HC_Halt+0x1e6>
 800a080:	e011      	b.n	800a0a6 <USB_HC_Halt+0x232>
 800a082:	69bb      	ldr	r3, [r7, #24]
 800a084:	015a      	lsls	r2, r3, #5
 800a086:	69fb      	ldr	r3, [r7, #28]
 800a088:	4413      	add	r3, r2
 800a08a:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 800a08e:	681b      	ldr	r3, [r3, #0]
 800a090:	69ba      	ldr	r2, [r7, #24]
 800a092:	0151      	lsls	r1, r2, #5
 800a094:	69fa      	ldr	r2, [r7, #28]
 800a096:	440a      	add	r2, r1
 800a098:	f502 62a0 	add.w	r2, r2, #1280	@ 0x500
 800a09c:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 800a0a0:	6013      	str	r3, [r2, #0]
 800a0a2:	e000      	b.n	800a0a6 <USB_HC_Halt+0x232>
 800a0a4:	bf00      	nop
 800a0a6:	2300      	movs	r3, #0
 800a0a8:	4618      	mov	r0, r3
 800a0aa:	3724      	adds	r7, #36	@ 0x24
 800a0ac:	46bd      	mov	sp, r7
 800a0ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a0b2:	4770      	bx	lr

0800a0b4 <USB_StopHost>:
 800a0b4:	b580      	push	{r7, lr}
 800a0b6:	b088      	sub	sp, #32
 800a0b8:	af00      	add	r7, sp, #0
 800a0ba:	6078      	str	r0, [r7, #4]
 800a0bc:	2300      	movs	r3, #0
 800a0be:	77fb      	strb	r3, [r7, #31]
 800a0c0:	687b      	ldr	r3, [r7, #4]
 800a0c2:	617b      	str	r3, [r7, #20]
 800a0c4:	2300      	movs	r3, #0
 800a0c6:	60fb      	str	r3, [r7, #12]
 800a0c8:	6878      	ldr	r0, [r7, #4]
 800a0ca:	f7ff fd7a 	bl	8009bc2 <USB_DisableGlobalInt>
 800a0ce:	2110      	movs	r1, #16
 800a0d0:	6878      	ldr	r0, [r7, #4]
 800a0d2:	f7ff fd87 	bl	8009be4 <USB_FlushTxFifo>
 800a0d6:	4603      	mov	r3, r0
 800a0d8:	2b00      	cmp	r3, #0
 800a0da:	d001      	beq.n	800a0e0 <USB_StopHost+0x2c>
 800a0dc:	2301      	movs	r3, #1
 800a0de:	77fb      	strb	r3, [r7, #31]
 800a0e0:	6878      	ldr	r0, [r7, #4]
 800a0e2:	f7ff fdb1 	bl	8009c48 <USB_FlushRxFifo>
 800a0e6:	4603      	mov	r3, r0
 800a0e8:	2b00      	cmp	r3, #0
 800a0ea:	d001      	beq.n	800a0f0 <USB_StopHost+0x3c>
 800a0ec:	2301      	movs	r3, #1
 800a0ee:	77fb      	strb	r3, [r7, #31]
 800a0f0:	2300      	movs	r3, #0
 800a0f2:	61bb      	str	r3, [r7, #24]
 800a0f4:	e01f      	b.n	800a136 <USB_StopHost+0x82>
 800a0f6:	69bb      	ldr	r3, [r7, #24]
 800a0f8:	015a      	lsls	r2, r3, #5
 800a0fa:	697b      	ldr	r3, [r7, #20]
 800a0fc:	4413      	add	r3, r2
 800a0fe:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 800a102:	681b      	ldr	r3, [r3, #0]
 800a104:	613b      	str	r3, [r7, #16]
 800a106:	693b      	ldr	r3, [r7, #16]
 800a108:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 800a10c:	613b      	str	r3, [r7, #16]
 800a10e:	693b      	ldr	r3, [r7, #16]
 800a110:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 800a114:	613b      	str	r3, [r7, #16]
 800a116:	693b      	ldr	r3, [r7, #16]
 800a118:	f423 4300 	bic.w	r3, r3, #32768	@ 0x8000
 800a11c:	613b      	str	r3, [r7, #16]
 800a11e:	69bb      	ldr	r3, [r7, #24]
 800a120:	015a      	lsls	r2, r3, #5
 800a122:	697b      	ldr	r3, [r7, #20]
 800a124:	4413      	add	r3, r2
 800a126:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 800a12a:	461a      	mov	r2, r3
 800a12c:	693b      	ldr	r3, [r7, #16]
 800a12e:	6013      	str	r3, [r2, #0]
 800a130:	69bb      	ldr	r3, [r7, #24]
 800a132:	3301      	adds	r3, #1
 800a134:	61bb      	str	r3, [r7, #24]
 800a136:	69bb      	ldr	r3, [r7, #24]
 800a138:	2b0f      	cmp	r3, #15
 800a13a:	d9dc      	bls.n	800a0f6 <USB_StopHost+0x42>
 800a13c:	2300      	movs	r3, #0
 800a13e:	61bb      	str	r3, [r7, #24]
 800a140:	e034      	b.n	800a1ac <USB_StopHost+0xf8>
 800a142:	69bb      	ldr	r3, [r7, #24]
 800a144:	015a      	lsls	r2, r3, #5
 800a146:	697b      	ldr	r3, [r7, #20]
 800a148:	4413      	add	r3, r2
 800a14a:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 800a14e:	681b      	ldr	r3, [r3, #0]
 800a150:	613b      	str	r3, [r7, #16]
 800a152:	693b      	ldr	r3, [r7, #16]
 800a154:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 800a158:	613b      	str	r3, [r7, #16]
 800a15a:	693b      	ldr	r3, [r7, #16]
 800a15c:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 800a160:	613b      	str	r3, [r7, #16]
 800a162:	693b      	ldr	r3, [r7, #16]
 800a164:	f423 4300 	bic.w	r3, r3, #32768	@ 0x8000
 800a168:	613b      	str	r3, [r7, #16]
 800a16a:	69bb      	ldr	r3, [r7, #24]
 800a16c:	015a      	lsls	r2, r3, #5
 800a16e:	697b      	ldr	r3, [r7, #20]
 800a170:	4413      	add	r3, r2
 800a172:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 800a176:	461a      	mov	r2, r3
 800a178:	693b      	ldr	r3, [r7, #16]
 800a17a:	6013      	str	r3, [r2, #0]
 800a17c:	68fb      	ldr	r3, [r7, #12]
 800a17e:	3301      	adds	r3, #1
 800a180:	60fb      	str	r3, [r7, #12]
 800a182:	68fb      	ldr	r3, [r7, #12]
 800a184:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 800a188:	d80c      	bhi.n	800a1a4 <USB_StopHost+0xf0>
 800a18a:	69bb      	ldr	r3, [r7, #24]
 800a18c:	015a      	lsls	r2, r3, #5
 800a18e:	697b      	ldr	r3, [r7, #20]
 800a190:	4413      	add	r3, r2
 800a192:	f503 63a0 	add.w	r3, r3, #1280	@ 0x500
 800a196:	681b      	ldr	r3, [r3, #0]
 800a198:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 800a19c:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 800a1a0:	d0ec      	beq.n	800a17c <USB_StopHost+0xc8>
 800a1a2:	e000      	b.n	800a1a6 <USB_StopHost+0xf2>
 800a1a4:	bf00      	nop
 800a1a6:	69bb      	ldr	r3, [r7, #24]
 800a1a8:	3301      	adds	r3, #1
 800a1aa:	61bb      	str	r3, [r7, #24]
 800a1ac:	69bb      	ldr	r3, [r7, #24]
 800a1ae:	2b0f      	cmp	r3, #15
 800a1b0:	d9c7      	bls.n	800a142 <USB_StopHost+0x8e>
 800a1b2:	697b      	ldr	r3, [r7, #20]
 800a1b4:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 800a1b8:	461a      	mov	r2, r3
 800a1ba:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 800a1be:	6153      	str	r3, [r2, #20]
 800a1c0:	687b      	ldr	r3, [r7, #4]
 800a1c2:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 800a1c6:	615a      	str	r2, [r3, #20]
 800a1c8:	6878      	ldr	r0, [r7, #4]
 800a1ca:	f7ff fce9 	bl	8009ba0 <USB_EnableGlobalInt>
 800a1ce:	7ffb      	ldrb	r3, [r7, #31]
 800a1d0:	4618      	mov	r0, r3
 800a1d2:	3720      	adds	r7, #32
 800a1d4:	46bd      	mov	sp, r7
 800a1d6:	bd80      	pop	{r7, pc}

0800a1d8 <USBH_LL_IncTimer>:
  *         Increment Host Timer tick
  * @param  phost: Host Handle
  * @retval None
  */
void USBH_LL_IncTimer(USBH_HandleTypeDef *phost)
{
 800a1d8:	b580      	push	{r7, lr}
 800a1da:	b082      	sub	sp, #8
 800a1dc:	af00      	add	r7, sp, #0
 800a1de:	6078      	str	r0, [r7, #4]
  phost->Timer++;
 800a1e0:	687b      	ldr	r3, [r7, #4]
 800a1e2:	f8d3 33c4 	ldr.w	r3, [r3, #964]	@ 0x3c4
 800a1e6:	1c5a      	adds	r2, r3, #1
 800a1e8:	687b      	ldr	r3, [r7, #4]
 800a1ea:	f8c3 23c4 	str.w	r2, [r3, #964]	@ 0x3c4
  USBH_HandleSof(phost);
 800a1ee:	6878      	ldr	r0, [r7, #4]
 800a1f0:	f000 f804 	bl	800a1fc <USBH_HandleSof>
}
 800a1f4:	bf00      	nop
 800a1f6:	3708      	adds	r7, #8
 800a1f8:	46bd      	mov	sp, r7
 800a1fa:	bd80      	pop	{r7, pc}

0800a1fc <USBH_HandleSof>:
  *         Call SOF process
  * @param  phost: Host Handle
  * @retval None
  */
static void USBH_HandleSof(USBH_HandleTypeDef *phost)
{
 800a1fc:	b580      	push	{r7, lr}
 800a1fe:	b082      	sub	sp, #8
 800a200:	af00      	add	r7, sp, #0
 800a202:	6078      	str	r0, [r7, #4]
  if ((phost->gState == HOST_CLASS) && (phost->pActiveClass != NULL))
 800a204:	687b      	ldr	r3, [r7, #4]
 800a206:	781b      	ldrb	r3, [r3, #0]
 800a208:	b2db      	uxtb	r3, r3
 800a20a:	2b0b      	cmp	r3, #11
 800a20c:	d10a      	bne.n	800a224 <USBH_HandleSof+0x28>
 800a20e:	687b      	ldr	r3, [r7, #4]
 800a210:	f8d3 337c 	ldr.w	r3, [r3, #892]	@ 0x37c
 800a214:	2b00      	cmp	r3, #0
 800a216:	d005      	beq.n	800a224 <USBH_HandleSof+0x28>
  {
    phost->pActiveClass->SOFProcess(phost);
 800a218:	687b      	ldr	r3, [r7, #4]
 800a21a:	f8d3 337c 	ldr.w	r3, [r3, #892]	@ 0x37c
 800a21e:	699b      	ldr	r3, [r3, #24]
 800a220:	6878      	ldr	r0, [r7, #4]
 800a222:	4798      	blx	r3
  }
}
 800a224:	bf00      	nop
 800a226:	3708      	adds	r7, #8
 800a228:	46bd      	mov	sp, r7
 800a22a:	bd80      	pop	{r7, pc}

0800a22c <USBH_LL_PortEnabled>:
  *         Port Enabled
  * @param  phost: Host Handle
  * @retval None
  */
void USBH_LL_PortEnabled(USBH_HandleTypeDef *phost)
{
 800a22c:	b580      	push	{r7, lr}
 800a22e:	b082      	sub	sp, #8
 800a230:	af00      	add	r7, sp, #0
 800a232:	6078      	str	r0, [r7, #4]
  phost->device.PortEnabled = 1U;
 800a234:	687b      	ldr	r3, [r7, #4]
 800a236:	2201      	movs	r2, #1
 800a238:	f883 2323 	strb.w	r2, [r3, #803]	@ 0x323

#if (USBH_USE_OS == 1U)
  phost->os_msg = (uint32_t)USBH_PORT_EVENT;
 800a23c:	687b      	ldr	r3, [r7, #4]
 800a23e:	2201      	movs	r2, #1
 800a240:	f8c3 23e0 	str.w	r2, [r3, #992]	@ 0x3e0
#if (osCMSIS < 0x20000U)
  (void)osMessagePut(phost->os_event, phost->os_msg, 0U);
 800a244:	687b      	ldr	r3, [r7, #4]
 800a246:	f8d3 03d8 	ldr.w	r0, [r3, #984]	@ 0x3d8
 800a24a:	687b      	ldr	r3, [r7, #4]
 800a24c:	f8d3 33e0 	ldr.w	r3, [r3, #992]	@ 0x3e0
 800a250:	2200      	movs	r2, #0
 800a252:	4619      	mov	r1, r3
 800a254:	f000 f8ae 	bl	800a3b4 <osMessagePut>
#else
  (void)osMessageQueuePut(phost->os_event, &phost->os_msg, 0U, 0U);
#endif
#endif

  return;
 800a258:	bf00      	nop
}
 800a25a:	3708      	adds	r7, #8
 800a25c:	46bd      	mov	sp, r7
 800a25e:	bd80      	pop	{r7, pc}

0800a260 <USBH_LL_PortDisabled>:
  *         Port Disabled
  * @param  phost: Host Handle
  * @retval None
  */
void USBH_LL_PortDisabled(USBH_HandleTypeDef *phost)
{
 800a260:	b480      	push	{r7}
 800a262:	b083      	sub	sp, #12
 800a264:	af00      	add	r7, sp, #0
 800a266:	6078      	str	r0, [r7, #4]
  phost->device.PortEnabled = 0U;
 800a268:	687b      	ldr	r3, [r7, #4]
 800a26a:	2200      	movs	r2, #0
 800a26c:	f883 2323 	strb.w	r2, [r3, #803]	@ 0x323

  return;
 800a270:	bf00      	nop
}
 800a272:	370c      	adds	r7, #12
 800a274:	46bd      	mov	sp, r7
 800a276:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a27a:	4770      	bx	lr

0800a27c <USBH_LL_Connect>:
  *         Handle USB Host connection event
  * @param  phost: Host Handle
  * @retval USBH_Status
  */
USBH_StatusTypeDef USBH_LL_Connect(USBH_HandleTypeDef *phost)
{
 800a27c:	b580      	push	{r7, lr}
 800a27e:	b082      	sub	sp, #8
 800a280:	af00      	add	r7, sp, #0
 800a282:	6078      	str	r0, [r7, #4]
  phost->device.is_connected = 1U;
 800a284:	687b      	ldr	r3, [r7, #4]
 800a286:	2201      	movs	r2, #1
 800a288:	f883 2320 	strb.w	r2, [r3, #800]	@ 0x320
  phost->device.is_disconnected = 0U;
 800a28c:	687b      	ldr	r3, [r7, #4]
 800a28e:	2200      	movs	r2, #0
 800a290:	f883 2321 	strb.w	r2, [r3, #801]	@ 0x321
  phost->device.is_ReEnumerated = 0U;
 800a294:	687b      	ldr	r3, [r7, #4]
 800a296:	2200      	movs	r2, #0
 800a298:	f883 2322 	strb.w	r2, [r3, #802]	@ 0x322


#if (USBH_USE_OS == 1U)
  phost->os_msg = (uint32_t)USBH_PORT_EVENT;
 800a29c:	687b      	ldr	r3, [r7, #4]
 800a29e:	2201      	movs	r2, #1
 800a2a0:	f8c3 23e0 	str.w	r2, [r3, #992]	@ 0x3e0
#if (osCMSIS < 0x20000U)
  (void)osMessagePut(phost->os_event, phost->os_msg, 0U);
 800a2a4:	687b      	ldr	r3, [r7, #4]
 800a2a6:	f8d3 03d8 	ldr.w	r0, [r3, #984]	@ 0x3d8
 800a2aa:	687b      	ldr	r3, [r7, #4]
 800a2ac:	f8d3 33e0 	ldr.w	r3, [r3, #992]	@ 0x3e0
 800a2b0:	2200      	movs	r2, #0
 800a2b2:	4619      	mov	r1, r3
 800a2b4:	f000 f87e 	bl	800a3b4 <osMessagePut>
#else
  (void)osMessageQueuePut(phost->os_event, &phost->os_msg, 0U, 0U);
#endif
#endif

  return USBH_OK;
 800a2b8:	2300      	movs	r3, #0
}
 800a2ba:	4618      	mov	r0, r3
 800a2bc:	3708      	adds	r7, #8
 800a2be:	46bd      	mov	sp, r7
 800a2c0:	bd80      	pop	{r7, pc}

0800a2c2 <USBH_LL_Disconnect>:
  *         Handle USB Host disconnection event
  * @param  phost: Host Handle
  * @retval USBH_Status
  */
USBH_StatusTypeDef USBH_LL_Disconnect(USBH_HandleTypeDef *phost)
{
 800a2c2:	b580      	push	{r7, lr}
 800a2c4:	b082      	sub	sp, #8
 800a2c6:	af00      	add	r7, sp, #0
 800a2c8:	6078      	str	r0, [r7, #4]
  /* update device connection states */
  phost->device.is_disconnected = 1U;
 800a2ca:	687b      	ldr	r3, [r7, #4]
 800a2cc:	2201      	movs	r2, #1
 800a2ce:	f883 2321 	strb.w	r2, [r3, #801]	@ 0x321
  phost->device.is_connected = 0U;
 800a2d2:	687b      	ldr	r3, [r7, #4]
 800a2d4:	2200      	movs	r2, #0
 800a2d6:	f883 2320 	strb.w	r2, [r3, #800]	@ 0x320
  phost->device.PortEnabled = 0U;
 800a2da:	687b      	ldr	r3, [r7, #4]
 800a2dc:	2200      	movs	r2, #0
 800a2de:	f883 2323 	strb.w	r2, [r3, #803]	@ 0x323

  /* Stop Host */
  (void)USBH_LL_Stop(phost);
 800a2e2:	6878      	ldr	r0, [r7, #4]
 800a2e4:	f001 f904 	bl	800b4f0 <USBH_LL_Stop>

  /* FRee Control Pipes */
  (void)USBH_FreePipe(phost, phost->Control.pipe_in);
 800a2e8:	687b      	ldr	r3, [r7, #4]
 800a2ea:	791b      	ldrb	r3, [r3, #4]
 800a2ec:	4619      	mov	r1, r3
 800a2ee:	6878      	ldr	r0, [r7, #4]
 800a2f0:	f000 f830 	bl	800a354 <USBH_FreePipe>
  (void)USBH_FreePipe(phost, phost->Control.pipe_out);
 800a2f4:	687b      	ldr	r3, [r7, #4]
 800a2f6:	795b      	ldrb	r3, [r3, #5]
 800a2f8:	4619      	mov	r1, r3
 800a2fa:	6878      	ldr	r0, [r7, #4]
 800a2fc:	f000 f82a 	bl	800a354 <USBH_FreePipe>
#if (USBH_USE_OS == 1U)
  phost->os_msg = (uint32_t)USBH_PORT_EVENT;
 800a300:	687b      	ldr	r3, [r7, #4]
 800a302:	2201      	movs	r2, #1
 800a304:	f8c3 23e0 	str.w	r2, [r3, #992]	@ 0x3e0
#if (osCMSIS < 0x20000U)
  (void)osMessagePut(phost->os_event, phost->os_msg, 0U);
 800a308:	687b      	ldr	r3, [r7, #4]
 800a30a:	f8d3 03d8 	ldr.w	r0, [r3, #984]	@ 0x3d8
 800a30e:	687b      	ldr	r3, [r7, #4]
 800a310:	f8d3 33e0 	ldr.w	r3, [r3, #992]	@ 0x3e0
 800a314:	2200      	movs	r2, #0
 800a316:	4619      	mov	r1, r3
 800a318:	f000 f84c 	bl	800a3b4 <osMessagePut>
#else
  (void)osMessageQueuePut(phost->os_event, &phost->os_msg, 0U, 0U);
#endif
#endif

  return USBH_OK;
 800a31c:	2300      	movs	r3, #0
}
 800a31e:	4618      	mov	r0, r3
 800a320:	3708      	adds	r7, #8
 800a322:	46bd      	mov	sp, r7
 800a324:	bd80      	pop	{r7, pc}

0800a326 <USBH_LL_NotifyURBChange>:
  *         Notify URB state Change
  * @param  phost: Host handle
  * @retval USBH Status
  */
USBH_StatusTypeDef USBH_LL_NotifyURBChange(USBH_HandleTypeDef *phost)
{
 800a326:	b580      	push	{r7, lr}
 800a328:	b082      	sub	sp, #8
 800a32a:	af00      	add	r7, sp, #0
 800a32c:	6078      	str	r0, [r7, #4]
  phost->os_msg = (uint32_t)USBH_PORT_EVENT;
 800a32e:	687b      	ldr	r3, [r7, #4]
 800a330:	2201      	movs	r2, #1
 800a332:	f8c3 23e0 	str.w	r2, [r3, #992]	@ 0x3e0

#if (osCMSIS < 0x20000U)
  (void)osMessagePut(phost->os_event, phost->os_msg, 0U);
 800a336:	687b      	ldr	r3, [r7, #4]
 800a338:	f8d3 03d8 	ldr.w	r0, [r3, #984]	@ 0x3d8
 800a33c:	687b      	ldr	r3, [r7, #4]
 800a33e:	f8d3 33e0 	ldr.w	r3, [r3, #992]	@ 0x3e0
 800a342:	2200      	movs	r2, #0
 800a344:	4619      	mov	r1, r3
 800a346:	f000 f835 	bl	800a3b4 <osMessagePut>
#else
  (void)osMessageQueuePut(phost->os_event, &phost->os_msg, 0U, 0U);
#endif

  return USBH_OK;
 800a34a:	2300      	movs	r3, #0
}
 800a34c:	4618      	mov	r0, r3
 800a34e:	3708      	adds	r7, #8
 800a350:	46bd      	mov	sp, r7
 800a352:	bd80      	pop	{r7, pc}

0800a354 <USBH_FreePipe>:
  * @param  phost: Host Handle
  * @param  idx: Pipe number to be freed
  * @retval USBH Status
  */
USBH_StatusTypeDef USBH_FreePipe(USBH_HandleTypeDef *phost, uint8_t idx)
{
 800a354:	b480      	push	{r7}
 800a356:	b083      	sub	sp, #12
 800a358:	af00      	add	r7, sp, #0
 800a35a:	6078      	str	r0, [r7, #4]
 800a35c:	460b      	mov	r3, r1
 800a35e:	70fb      	strb	r3, [r7, #3]
  if (idx < USBH_MAX_PIPES_NBR)
 800a360:	78fb      	ldrb	r3, [r7, #3]
 800a362:	2b0f      	cmp	r3, #15
 800a364:	d80d      	bhi.n	800a382 <USBH_FreePipe+0x2e>
  {
    phost->Pipes[idx] &= 0x7FFFU;
 800a366:	78fb      	ldrb	r3, [r7, #3]
 800a368:	687a      	ldr	r2, [r7, #4]
 800a36a:	33e0      	adds	r3, #224	@ 0xe0
 800a36c:	009b      	lsls	r3, r3, #2
 800a36e:	4413      	add	r3, r2
 800a370:	685a      	ldr	r2, [r3, #4]
 800a372:	78fb      	ldrb	r3, [r7, #3]
 800a374:	f3c2 020e 	ubfx	r2, r2, #0, #15
 800a378:	6879      	ldr	r1, [r7, #4]
 800a37a:	33e0      	adds	r3, #224	@ 0xe0
 800a37c:	009b      	lsls	r3, r3, #2
 800a37e:	440b      	add	r3, r1
 800a380:	605a      	str	r2, [r3, #4]
  }

  return USBH_OK;
 800a382:	2300      	movs	r3, #0
}
 800a384:	4618      	mov	r0, r3
 800a386:	370c      	adds	r7, #12
 800a388:	46bd      	mov	sp, r7
 800a38a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a38e:	4770      	bx	lr

0800a390 <inHandlerMode>:
 800a390:	b480      	push	{r7}
 800a392:	b083      	sub	sp, #12
 800a394:	af00      	add	r7, sp, #0
 800a396:	f3ef 8305 	mrs	r3, IPSR
 800a39a:	607b      	str	r3, [r7, #4]
 800a39c:	687b      	ldr	r3, [r7, #4]
 800a39e:	2b00      	cmp	r3, #0
 800a3a0:	bf14      	ite	ne
 800a3a2:	2301      	movne	r3, #1
 800a3a4:	2300      	moveq	r3, #0
 800a3a6:	b2db      	uxtb	r3, r3
 800a3a8:	4618      	mov	r0, r3
 800a3aa:	370c      	adds	r7, #12
 800a3ac:	46bd      	mov	sp, r7
 800a3ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a3b2:	4770      	bx	lr

0800a3b4 <osMessagePut>:
 800a3b4:	b580      	push	{r7, lr}
 800a3b6:	b086      	sub	sp, #24
 800a3b8:	af00      	add	r7, sp, #0
 800a3ba:	60f8      	str	r0, [r7, #12]
 800a3bc:	60b9      	str	r1, [r7, #8]
 800a3be:	607a      	str	r2, [r7, #4]
 800a3c0:	2300      	movs	r3, #0
 800a3c2:	613b      	str	r3, [r7, #16]
 800a3c4:	687b      	ldr	r3, [r7, #4]
 800a3c6:	617b      	str	r3, [r7, #20]
 800a3c8:	697b      	ldr	r3, [r7, #20]
 800a3ca:	2b00      	cmp	r3, #0
 800a3cc:	d101      	bne.n	800a3d2 <osMessagePut+0x1e>
 800a3ce:	2301      	movs	r3, #1
 800a3d0:	617b      	str	r3, [r7, #20]
 800a3d2:	f7ff ffdd 	bl	800a390 <inHandlerMode>
 800a3d6:	4603      	mov	r3, r0
 800a3d8:	2b00      	cmp	r3, #0
 800a3da:	d018      	beq.n	800a40e <osMessagePut+0x5a>
 800a3dc:	f107 0210 	add.w	r2, r7, #16
 800a3e0:	f107 0108 	add.w	r1, r7, #8
 800a3e4:	2300      	movs	r3, #0
 800a3e6:	68f8      	ldr	r0, [r7, #12]
 800a3e8:	f000 f9ae 	bl	800a748 <xQueueGenericSendFromISR>
 800a3ec:	4603      	mov	r3, r0
 800a3ee:	2b01      	cmp	r3, #1
 800a3f0:	d001      	beq.n	800a3f6 <osMessagePut+0x42>
 800a3f2:	23ff      	movs	r3, #255	@ 0xff
 800a3f4:	e018      	b.n	800a428 <osMessagePut+0x74>
 800a3f6:	693b      	ldr	r3, [r7, #16]
 800a3f8:	2b00      	cmp	r3, #0
 800a3fa:	d014      	beq.n	800a426 <osMessagePut+0x72>
 800a3fc:	4b0c      	ldr	r3, [pc, #48]	@ (800a430 <osMessagePut+0x7c>)
 800a3fe:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800a402:	601a      	str	r2, [r3, #0]
 800a404:	f3bf 8f4f 	dsb	sy
 800a408:	f3bf 8f6f 	isb	sy
 800a40c:	e00b      	b.n	800a426 <osMessagePut+0x72>
 800a40e:	f107 0108 	add.w	r1, r7, #8
 800a412:	2300      	movs	r3, #0
 800a414:	697a      	ldr	r2, [r7, #20]
 800a416:	68f8      	ldr	r0, [r7, #12]
 800a418:	f000 f894 	bl	800a544 <xQueueGenericSend>
 800a41c:	4603      	mov	r3, r0
 800a41e:	2b01      	cmp	r3, #1
 800a420:	d001      	beq.n	800a426 <osMessagePut+0x72>
 800a422:	23ff      	movs	r3, #255	@ 0xff
 800a424:	e000      	b.n	800a428 <osMessagePut+0x74>
 800a426:	2300      	movs	r3, #0
 800a428:	4618      	mov	r0, r3
 800a42a:	3718      	adds	r7, #24
 800a42c:	46bd      	mov	sp, r7
 800a42e:	bd80      	pop	{r7, pc}
 800a430:	e000ed04 	.word	0xe000ed04

0800a434 <vListInsertEnd>:
 800a434:	b480      	push	{r7}
 800a436:	b085      	sub	sp, #20
 800a438:	af00      	add	r7, sp, #0
 800a43a:	6078      	str	r0, [r7, #4]
 800a43c:	6039      	str	r1, [r7, #0]
 800a43e:	687b      	ldr	r3, [r7, #4]
 800a440:	685b      	ldr	r3, [r3, #4]
 800a442:	60fb      	str	r3, [r7, #12]
 800a444:	683b      	ldr	r3, [r7, #0]
 800a446:	68fa      	ldr	r2, [r7, #12]
 800a448:	605a      	str	r2, [r3, #4]
 800a44a:	68fb      	ldr	r3, [r7, #12]
 800a44c:	689a      	ldr	r2, [r3, #8]
 800a44e:	683b      	ldr	r3, [r7, #0]
 800a450:	609a      	str	r2, [r3, #8]
 800a452:	68fb      	ldr	r3, [r7, #12]
 800a454:	689b      	ldr	r3, [r3, #8]
 800a456:	683a      	ldr	r2, [r7, #0]
 800a458:	605a      	str	r2, [r3, #4]
 800a45a:	68fb      	ldr	r3, [r7, #12]
 800a45c:	683a      	ldr	r2, [r7, #0]
 800a45e:	609a      	str	r2, [r3, #8]
 800a460:	683b      	ldr	r3, [r7, #0]
 800a462:	687a      	ldr	r2, [r7, #4]
 800a464:	611a      	str	r2, [r3, #16]
 800a466:	687b      	ldr	r3, [r7, #4]
 800a468:	681b      	ldr	r3, [r3, #0]
 800a46a:	1c5a      	adds	r2, r3, #1
 800a46c:	687b      	ldr	r3, [r7, #4]
 800a46e:	601a      	str	r2, [r3, #0]
 800a470:	bf00      	nop
 800a472:	3714      	adds	r7, #20
 800a474:	46bd      	mov	sp, r7
 800a476:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a47a:	4770      	bx	lr

0800a47c <vListInsert>:
 800a47c:	b480      	push	{r7}
 800a47e:	b085      	sub	sp, #20
 800a480:	af00      	add	r7, sp, #0
 800a482:	6078      	str	r0, [r7, #4]
 800a484:	6039      	str	r1, [r7, #0]
 800a486:	683b      	ldr	r3, [r7, #0]
 800a488:	681b      	ldr	r3, [r3, #0]
 800a48a:	60bb      	str	r3, [r7, #8]
 800a48c:	68bb      	ldr	r3, [r7, #8]
 800a48e:	f1b3 3fff 	cmp.w	r3, #4294967295	@ 0xffffffff
 800a492:	d103      	bne.n	800a49c <vListInsert+0x20>
 800a494:	687b      	ldr	r3, [r7, #4]
 800a496:	691b      	ldr	r3, [r3, #16]
 800a498:	60fb      	str	r3, [r7, #12]
 800a49a:	e00c      	b.n	800a4b6 <vListInsert+0x3a>
 800a49c:	687b      	ldr	r3, [r7, #4]
 800a49e:	3308      	adds	r3, #8
 800a4a0:	60fb      	str	r3, [r7, #12]
 800a4a2:	e002      	b.n	800a4aa <vListInsert+0x2e>
 800a4a4:	68fb      	ldr	r3, [r7, #12]
 800a4a6:	685b      	ldr	r3, [r3, #4]
 800a4a8:	60fb      	str	r3, [r7, #12]
 800a4aa:	68fb      	ldr	r3, [r7, #12]
 800a4ac:	685b      	ldr	r3, [r3, #4]
 800a4ae:	681b      	ldr	r3, [r3, #0]
 800a4b0:	68ba      	ldr	r2, [r7, #8]
 800a4b2:	429a      	cmp	r2, r3
 800a4b4:	d2f6      	bcs.n	800a4a4 <vListInsert+0x28>
 800a4b6:	68fb      	ldr	r3, [r7, #12]
 800a4b8:	685a      	ldr	r2, [r3, #4]
 800a4ba:	683b      	ldr	r3, [r7, #0]
 800a4bc:	605a      	str	r2, [r3, #4]
 800a4be:	683b      	ldr	r3, [r7, #0]
 800a4c0:	685b      	ldr	r3, [r3, #4]
 800a4c2:	683a      	ldr	r2, [r7, #0]
 800a4c4:	609a      	str	r2, [r3, #8]
 800a4c6:	683b      	ldr	r3, [r7, #0]
 800a4c8:	68fa      	ldr	r2, [r7, #12]
 800a4ca:	609a      	str	r2, [r3, #8]
 800a4cc:	68fb      	ldr	r3, [r7, #12]
 800a4ce:	683a      	ldr	r2, [r7, #0]
 800a4d0:	605a      	str	r2, [r3, #4]
 800a4d2:	683b      	ldr	r3, [r7, #0]
 800a4d4:	687a      	ldr	r2, [r7, #4]
 800a4d6:	611a      	str	r2, [r3, #16]
 800a4d8:	687b      	ldr	r3, [r7, #4]
 800a4da:	681b      	ldr	r3, [r3, #0]
 800a4dc:	1c5a      	adds	r2, r3, #1
 800a4de:	687b      	ldr	r3, [r7, #4]
 800a4e0:	601a      	str	r2, [r3, #0]
 800a4e2:	bf00      	nop
 800a4e4:	3714      	adds	r7, #20
 800a4e6:	46bd      	mov	sp, r7
 800a4e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a4ec:	4770      	bx	lr

0800a4ee <uxListRemove>:
 800a4ee:	b480      	push	{r7}
 800a4f0:	b085      	sub	sp, #20
 800a4f2:	af00      	add	r7, sp, #0
 800a4f4:	6078      	str	r0, [r7, #4]
 800a4f6:	687b      	ldr	r3, [r7, #4]
 800a4f8:	691b      	ldr	r3, [r3, #16]
 800a4fa:	60fb      	str	r3, [r7, #12]
 800a4fc:	687b      	ldr	r3, [r7, #4]
 800a4fe:	685b      	ldr	r3, [r3, #4]
 800a500:	687a      	ldr	r2, [r7, #4]
 800a502:	6892      	ldr	r2, [r2, #8]
 800a504:	609a      	str	r2, [r3, #8]
 800a506:	687b      	ldr	r3, [r7, #4]
 800a508:	689b      	ldr	r3, [r3, #8]
 800a50a:	687a      	ldr	r2, [r7, #4]
 800a50c:	6852      	ldr	r2, [r2, #4]
 800a50e:	605a      	str	r2, [r3, #4]
 800a510:	68fb      	ldr	r3, [r7, #12]
 800a512:	685b      	ldr	r3, [r3, #4]
 800a514:	687a      	ldr	r2, [r7, #4]
 800a516:	429a      	cmp	r2, r3
 800a518:	d103      	bne.n	800a522 <uxListRemove+0x34>
 800a51a:	687b      	ldr	r3, [r7, #4]
 800a51c:	689a      	ldr	r2, [r3, #8]
 800a51e:	68fb      	ldr	r3, [r7, #12]
 800a520:	605a      	str	r2, [r3, #4]
 800a522:	687b      	ldr	r3, [r7, #4]
 800a524:	2200      	movs	r2, #0
 800a526:	611a      	str	r2, [r3, #16]
 800a528:	68fb      	ldr	r3, [r7, #12]
 800a52a:	681b      	ldr	r3, [r3, #0]
 800a52c:	1e5a      	subs	r2, r3, #1
 800a52e:	68fb      	ldr	r3, [r7, #12]
 800a530:	601a      	str	r2, [r3, #0]
 800a532:	68fb      	ldr	r3, [r7, #12]
 800a534:	681b      	ldr	r3, [r3, #0]
 800a536:	4618      	mov	r0, r3
 800a538:	3714      	adds	r7, #20
 800a53a:	46bd      	mov	sp, r7
 800a53c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a540:	4770      	bx	lr
	...

0800a544 <xQueueGenericSend>:
 800a544:	b580      	push	{r7, lr}
 800a546:	b08e      	sub	sp, #56	@ 0x38
 800a548:	af00      	add	r7, sp, #0
 800a54a:	60f8      	str	r0, [r7, #12]
 800a54c:	60b9      	str	r1, [r7, #8]
 800a54e:	607a      	str	r2, [r7, #4]
 800a550:	603b      	str	r3, [r7, #0]
 800a552:	2300      	movs	r3, #0
 800a554:	637b      	str	r3, [r7, #52]	@ 0x34
 800a556:	68fb      	ldr	r3, [r7, #12]
 800a558:	633b      	str	r3, [r7, #48]	@ 0x30
 800a55a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800a55c:	2b00      	cmp	r3, #0
 800a55e:	d10b      	bne.n	800a578 <xQueueGenericSend+0x34>
 800a560:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a564:	f383 8811 	msr	BASEPRI, r3
 800a568:	f3bf 8f6f 	isb	sy
 800a56c:	f3bf 8f4f 	dsb	sy
 800a570:	62bb      	str	r3, [r7, #40]	@ 0x28
 800a572:	bf00      	nop
 800a574:	bf00      	nop
 800a576:	e7fd      	b.n	800a574 <xQueueGenericSend+0x30>
 800a578:	68bb      	ldr	r3, [r7, #8]
 800a57a:	2b00      	cmp	r3, #0
 800a57c:	d103      	bne.n	800a586 <xQueueGenericSend+0x42>
 800a57e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800a580:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800a582:	2b00      	cmp	r3, #0
 800a584:	d101      	bne.n	800a58a <xQueueGenericSend+0x46>
 800a586:	2301      	movs	r3, #1
 800a588:	e000      	b.n	800a58c <xQueueGenericSend+0x48>
 800a58a:	2300      	movs	r3, #0
 800a58c:	2b00      	cmp	r3, #0
 800a58e:	d10b      	bne.n	800a5a8 <xQueueGenericSend+0x64>
 800a590:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a594:	f383 8811 	msr	BASEPRI, r3
 800a598:	f3bf 8f6f 	isb	sy
 800a59c:	f3bf 8f4f 	dsb	sy
 800a5a0:	627b      	str	r3, [r7, #36]	@ 0x24
 800a5a2:	bf00      	nop
 800a5a4:	bf00      	nop
 800a5a6:	e7fd      	b.n	800a5a4 <xQueueGenericSend+0x60>
 800a5a8:	683b      	ldr	r3, [r7, #0]
 800a5aa:	2b02      	cmp	r3, #2
 800a5ac:	d103      	bne.n	800a5b6 <xQueueGenericSend+0x72>
 800a5ae:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800a5b0:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800a5b2:	2b01      	cmp	r3, #1
 800a5b4:	d101      	bne.n	800a5ba <xQueueGenericSend+0x76>
 800a5b6:	2301      	movs	r3, #1
 800a5b8:	e000      	b.n	800a5bc <xQueueGenericSend+0x78>
 800a5ba:	2300      	movs	r3, #0
 800a5bc:	2b00      	cmp	r3, #0
 800a5be:	d10b      	bne.n	800a5d8 <xQueueGenericSend+0x94>
 800a5c0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a5c4:	f383 8811 	msr	BASEPRI, r3
 800a5c8:	f3bf 8f6f 	isb	sy
 800a5cc:	f3bf 8f4f 	dsb	sy
 800a5d0:	623b      	str	r3, [r7, #32]
 800a5d2:	bf00      	nop
 800a5d4:	bf00      	nop
 800a5d6:	e7fd      	b.n	800a5d4 <xQueueGenericSend+0x90>
 800a5d8:	f000 fd1a 	bl	800b010 <xTaskGetSchedulerState>
 800a5dc:	4603      	mov	r3, r0
 800a5de:	2b00      	cmp	r3, #0
 800a5e0:	d102      	bne.n	800a5e8 <xQueueGenericSend+0xa4>
 800a5e2:	687b      	ldr	r3, [r7, #4]
 800a5e4:	2b00      	cmp	r3, #0
 800a5e6:	d101      	bne.n	800a5ec <xQueueGenericSend+0xa8>
 800a5e8:	2301      	movs	r3, #1
 800a5ea:	e000      	b.n	800a5ee <xQueueGenericSend+0xaa>
 800a5ec:	2300      	movs	r3, #0
 800a5ee:	2b00      	cmp	r3, #0
 800a5f0:	d10b      	bne.n	800a60a <xQueueGenericSend+0xc6>
 800a5f2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a5f6:	f383 8811 	msr	BASEPRI, r3
 800a5fa:	f3bf 8f6f 	isb	sy
 800a5fe:	f3bf 8f4f 	dsb	sy
 800a602:	61fb      	str	r3, [r7, #28]
 800a604:	bf00      	nop
 800a606:	bf00      	nop
 800a608:	e7fd      	b.n	800a606 <xQueueGenericSend+0xc2>
 800a60a:	f000 fe25 	bl	800b258 <vPortEnterCritical>
 800a60e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800a610:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 800a612:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800a614:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800a616:	429a      	cmp	r2, r3
 800a618:	d302      	bcc.n	800a620 <xQueueGenericSend+0xdc>
 800a61a:	683b      	ldr	r3, [r7, #0]
 800a61c:	2b02      	cmp	r3, #2
 800a61e:	d129      	bne.n	800a674 <xQueueGenericSend+0x130>
 800a620:	683a      	ldr	r2, [r7, #0]
 800a622:	68b9      	ldr	r1, [r7, #8]
 800a624:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 800a626:	f000 f92d 	bl	800a884 <prvCopyDataToQueue>
 800a62a:	62f8      	str	r0, [r7, #44]	@ 0x2c
 800a62c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800a62e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800a630:	2b00      	cmp	r3, #0
 800a632:	d010      	beq.n	800a656 <xQueueGenericSend+0x112>
 800a634:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800a636:	3324      	adds	r3, #36	@ 0x24
 800a638:	4618      	mov	r0, r3
 800a63a:	f000 fbdf 	bl	800adfc <xTaskRemoveFromEventList>
 800a63e:	4603      	mov	r3, r0
 800a640:	2b00      	cmp	r3, #0
 800a642:	d013      	beq.n	800a66c <xQueueGenericSend+0x128>
 800a644:	4b3f      	ldr	r3, [pc, #252]	@ (800a744 <xQueueGenericSend+0x200>)
 800a646:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800a64a:	601a      	str	r2, [r3, #0]
 800a64c:	f3bf 8f4f 	dsb	sy
 800a650:	f3bf 8f6f 	isb	sy
 800a654:	e00a      	b.n	800a66c <xQueueGenericSend+0x128>
 800a656:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800a658:	2b00      	cmp	r3, #0
 800a65a:	d007      	beq.n	800a66c <xQueueGenericSend+0x128>
 800a65c:	4b39      	ldr	r3, [pc, #228]	@ (800a744 <xQueueGenericSend+0x200>)
 800a65e:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800a662:	601a      	str	r2, [r3, #0]
 800a664:	f3bf 8f4f 	dsb	sy
 800a668:	f3bf 8f6f 	isb	sy
 800a66c:	f000 fe26 	bl	800b2bc <vPortExitCritical>
 800a670:	2301      	movs	r3, #1
 800a672:	e063      	b.n	800a73c <xQueueGenericSend+0x1f8>
 800a674:	687b      	ldr	r3, [r7, #4]
 800a676:	2b00      	cmp	r3, #0
 800a678:	d103      	bne.n	800a682 <xQueueGenericSend+0x13e>
 800a67a:	f000 fe1f 	bl	800b2bc <vPortExitCritical>
 800a67e:	2300      	movs	r3, #0
 800a680:	e05c      	b.n	800a73c <xQueueGenericSend+0x1f8>
 800a682:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800a684:	2b00      	cmp	r3, #0
 800a686:	d106      	bne.n	800a696 <xQueueGenericSend+0x152>
 800a688:	f107 0314 	add.w	r3, r7, #20
 800a68c:	4618      	mov	r0, r3
 800a68e:	f000 fc19 	bl	800aec4 <vTaskInternalSetTimeOutState>
 800a692:	2301      	movs	r3, #1
 800a694:	637b      	str	r3, [r7, #52]	@ 0x34
 800a696:	f000 fe11 	bl	800b2bc <vPortExitCritical>
 800a69a:	f000 f9c7 	bl	800aa2c <vTaskSuspendAll>
 800a69e:	f000 fddb 	bl	800b258 <vPortEnterCritical>
 800a6a2:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800a6a4:	f893 3044 	ldrb.w	r3, [r3, #68]	@ 0x44
 800a6a8:	b25b      	sxtb	r3, r3
 800a6aa:	f1b3 3fff 	cmp.w	r3, #4294967295	@ 0xffffffff
 800a6ae:	d103      	bne.n	800a6b8 <xQueueGenericSend+0x174>
 800a6b0:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800a6b2:	2200      	movs	r2, #0
 800a6b4:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 800a6b8:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800a6ba:	f893 3045 	ldrb.w	r3, [r3, #69]	@ 0x45
 800a6be:	b25b      	sxtb	r3, r3
 800a6c0:	f1b3 3fff 	cmp.w	r3, #4294967295	@ 0xffffffff
 800a6c4:	d103      	bne.n	800a6ce <xQueueGenericSend+0x18a>
 800a6c6:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800a6c8:	2200      	movs	r2, #0
 800a6ca:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 800a6ce:	f000 fdf5 	bl	800b2bc <vPortExitCritical>
 800a6d2:	1d3a      	adds	r2, r7, #4
 800a6d4:	f107 0314 	add.w	r3, r7, #20
 800a6d8:	4611      	mov	r1, r2
 800a6da:	4618      	mov	r0, r3
 800a6dc:	f000 fc08 	bl	800aef0 <xTaskCheckForTimeOut>
 800a6e0:	4603      	mov	r3, r0
 800a6e2:	2b00      	cmp	r3, #0
 800a6e4:	d124      	bne.n	800a730 <xQueueGenericSend+0x1ec>
 800a6e6:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 800a6e8:	f000 f988 	bl	800a9fc <prvIsQueueFull>
 800a6ec:	4603      	mov	r3, r0
 800a6ee:	2b00      	cmp	r3, #0
 800a6f0:	d018      	beq.n	800a724 <xQueueGenericSend+0x1e0>
 800a6f2:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800a6f4:	3310      	adds	r3, #16
 800a6f6:	687a      	ldr	r2, [r7, #4]
 800a6f8:	4611      	mov	r1, r2
 800a6fa:	4618      	mov	r0, r3
 800a6fc:	f000 fb58 	bl	800adb0 <vTaskPlaceOnEventList>
 800a700:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 800a702:	f000 f929 	bl	800a958 <prvUnlockQueue>
 800a706:	f000 f99f 	bl	800aa48 <xTaskResumeAll>
 800a70a:	4603      	mov	r3, r0
 800a70c:	2b00      	cmp	r3, #0
 800a70e:	f47f af7c 	bne.w	800a60a <xQueueGenericSend+0xc6>
 800a712:	4b0c      	ldr	r3, [pc, #48]	@ (800a744 <xQueueGenericSend+0x200>)
 800a714:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800a718:	601a      	str	r2, [r3, #0]
 800a71a:	f3bf 8f4f 	dsb	sy
 800a71e:	f3bf 8f6f 	isb	sy
 800a722:	e772      	b.n	800a60a <xQueueGenericSend+0xc6>
 800a724:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 800a726:	f000 f917 	bl	800a958 <prvUnlockQueue>
 800a72a:	f000 f98d 	bl	800aa48 <xTaskResumeAll>
 800a72e:	e76c      	b.n	800a60a <xQueueGenericSend+0xc6>
 800a730:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 800a732:	f000 f911 	bl	800a958 <prvUnlockQueue>
 800a736:	f000 f987 	bl	800aa48 <xTaskResumeAll>
 800a73a:	2300      	movs	r3, #0
 800a73c:	4618      	mov	r0, r3
 800a73e:	3738      	adds	r7, #56	@ 0x38
 800a740:	46bd      	mov	sp, r7
 800a742:	bd80      	pop	{r7, pc}
 800a744:	e000ed04 	.word	0xe000ed04

0800a748 <xQueueGenericSendFromISR>:
 800a748:	b580      	push	{r7, lr}
 800a74a:	b090      	sub	sp, #64	@ 0x40
 800a74c:	af00      	add	r7, sp, #0
 800a74e:	60f8      	str	r0, [r7, #12]
 800a750:	60b9      	str	r1, [r7, #8]
 800a752:	607a      	str	r2, [r7, #4]
 800a754:	603b      	str	r3, [r7, #0]
 800a756:	68fb      	ldr	r3, [r7, #12]
 800a758:	63bb      	str	r3, [r7, #56]	@ 0x38
 800a75a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800a75c:	2b00      	cmp	r3, #0
 800a75e:	d10b      	bne.n	800a778 <xQueueGenericSendFromISR+0x30>
 800a760:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a764:	f383 8811 	msr	BASEPRI, r3
 800a768:	f3bf 8f6f 	isb	sy
 800a76c:	f3bf 8f4f 	dsb	sy
 800a770:	62bb      	str	r3, [r7, #40]	@ 0x28
 800a772:	bf00      	nop
 800a774:	bf00      	nop
 800a776:	e7fd      	b.n	800a774 <xQueueGenericSendFromISR+0x2c>
 800a778:	68bb      	ldr	r3, [r7, #8]
 800a77a:	2b00      	cmp	r3, #0
 800a77c:	d103      	bne.n	800a786 <xQueueGenericSendFromISR+0x3e>
 800a77e:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800a780:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800a782:	2b00      	cmp	r3, #0
 800a784:	d101      	bne.n	800a78a <xQueueGenericSendFromISR+0x42>
 800a786:	2301      	movs	r3, #1
 800a788:	e000      	b.n	800a78c <xQueueGenericSendFromISR+0x44>
 800a78a:	2300      	movs	r3, #0
 800a78c:	2b00      	cmp	r3, #0
 800a78e:	d10b      	bne.n	800a7a8 <xQueueGenericSendFromISR+0x60>
 800a790:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a794:	f383 8811 	msr	BASEPRI, r3
 800a798:	f3bf 8f6f 	isb	sy
 800a79c:	f3bf 8f4f 	dsb	sy
 800a7a0:	627b      	str	r3, [r7, #36]	@ 0x24
 800a7a2:	bf00      	nop
 800a7a4:	bf00      	nop
 800a7a6:	e7fd      	b.n	800a7a4 <xQueueGenericSendFromISR+0x5c>
 800a7a8:	683b      	ldr	r3, [r7, #0]
 800a7aa:	2b02      	cmp	r3, #2
 800a7ac:	d103      	bne.n	800a7b6 <xQueueGenericSendFromISR+0x6e>
 800a7ae:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800a7b0:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800a7b2:	2b01      	cmp	r3, #1
 800a7b4:	d101      	bne.n	800a7ba <xQueueGenericSendFromISR+0x72>
 800a7b6:	2301      	movs	r3, #1
 800a7b8:	e000      	b.n	800a7bc <xQueueGenericSendFromISR+0x74>
 800a7ba:	2300      	movs	r3, #0
 800a7bc:	2b00      	cmp	r3, #0
 800a7be:	d10b      	bne.n	800a7d8 <xQueueGenericSendFromISR+0x90>
 800a7c0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a7c4:	f383 8811 	msr	BASEPRI, r3
 800a7c8:	f3bf 8f6f 	isb	sy
 800a7cc:	f3bf 8f4f 	dsb	sy
 800a7d0:	623b      	str	r3, [r7, #32]
 800a7d2:	bf00      	nop
 800a7d4:	bf00      	nop
 800a7d6:	e7fd      	b.n	800a7d4 <xQueueGenericSendFromISR+0x8c>
 800a7d8:	f000 fdf0 	bl	800b3bc <vPortValidateInterruptPriority>
 800a7dc:	f3ef 8211 	mrs	r2, BASEPRI
 800a7e0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800a7e4:	f383 8811 	msr	BASEPRI, r3
 800a7e8:	f3bf 8f6f 	isb	sy
 800a7ec:	f3bf 8f4f 	dsb	sy
 800a7f0:	61fa      	str	r2, [r7, #28]
 800a7f2:	61bb      	str	r3, [r7, #24]
 800a7f4:	69fb      	ldr	r3, [r7, #28]
 800a7f6:	637b      	str	r3, [r7, #52]	@ 0x34
 800a7f8:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800a7fa:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 800a7fc:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800a7fe:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800a800:	429a      	cmp	r2, r3
 800a802:	d302      	bcc.n	800a80a <xQueueGenericSendFromISR+0xc2>
 800a804:	683b      	ldr	r3, [r7, #0]
 800a806:	2b02      	cmp	r3, #2
 800a808:	d12f      	bne.n	800a86a <xQueueGenericSendFromISR+0x122>
 800a80a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800a80c:	f893 3045 	ldrb.w	r3, [r3, #69]	@ 0x45
 800a810:	f887 3033 	strb.w	r3, [r7, #51]	@ 0x33
 800a814:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800a816:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800a818:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800a81a:	683a      	ldr	r2, [r7, #0]
 800a81c:	68b9      	ldr	r1, [r7, #8]
 800a81e:	6bb8      	ldr	r0, [r7, #56]	@ 0x38
 800a820:	f000 f830 	bl	800a884 <prvCopyDataToQueue>
 800a824:	f997 3033 	ldrsb.w	r3, [r7, #51]	@ 0x33
 800a828:	f1b3 3fff 	cmp.w	r3, #4294967295	@ 0xffffffff
 800a82c:	d112      	bne.n	800a854 <xQueueGenericSendFromISR+0x10c>
 800a82e:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800a830:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800a832:	2b00      	cmp	r3, #0
 800a834:	d016      	beq.n	800a864 <xQueueGenericSendFromISR+0x11c>
 800a836:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800a838:	3324      	adds	r3, #36	@ 0x24
 800a83a:	4618      	mov	r0, r3
 800a83c:	f000 fade 	bl	800adfc <xTaskRemoveFromEventList>
 800a840:	4603      	mov	r3, r0
 800a842:	2b00      	cmp	r3, #0
 800a844:	d00e      	beq.n	800a864 <xQueueGenericSendFromISR+0x11c>
 800a846:	687b      	ldr	r3, [r7, #4]
 800a848:	2b00      	cmp	r3, #0
 800a84a:	d00b      	beq.n	800a864 <xQueueGenericSendFromISR+0x11c>
 800a84c:	687b      	ldr	r3, [r7, #4]
 800a84e:	2201      	movs	r2, #1
 800a850:	601a      	str	r2, [r3, #0]
 800a852:	e007      	b.n	800a864 <xQueueGenericSendFromISR+0x11c>
 800a854:	f897 3033 	ldrb.w	r3, [r7, #51]	@ 0x33
 800a858:	3301      	adds	r3, #1
 800a85a:	b2db      	uxtb	r3, r3
 800a85c:	b25a      	sxtb	r2, r3
 800a85e:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800a860:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 800a864:	2301      	movs	r3, #1
 800a866:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800a868:	e001      	b.n	800a86e <xQueueGenericSendFromISR+0x126>
 800a86a:	2300      	movs	r3, #0
 800a86c:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800a86e:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800a870:	617b      	str	r3, [r7, #20]
 800a872:	697b      	ldr	r3, [r7, #20]
 800a874:	f383 8811 	msr	BASEPRI, r3
 800a878:	bf00      	nop
 800a87a:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800a87c:	4618      	mov	r0, r3
 800a87e:	3740      	adds	r7, #64	@ 0x40
 800a880:	46bd      	mov	sp, r7
 800a882:	bd80      	pop	{r7, pc}

0800a884 <prvCopyDataToQueue>:
 800a884:	b580      	push	{r7, lr}
 800a886:	b086      	sub	sp, #24
 800a888:	af00      	add	r7, sp, #0
 800a88a:	60f8      	str	r0, [r7, #12]
 800a88c:	60b9      	str	r1, [r7, #8]
 800a88e:	607a      	str	r2, [r7, #4]
 800a890:	2300      	movs	r3, #0
 800a892:	617b      	str	r3, [r7, #20]
 800a894:	68fb      	ldr	r3, [r7, #12]
 800a896:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800a898:	613b      	str	r3, [r7, #16]
 800a89a:	68fb      	ldr	r3, [r7, #12]
 800a89c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800a89e:	2b00      	cmp	r3, #0
 800a8a0:	d10d      	bne.n	800a8be <prvCopyDataToQueue+0x3a>
 800a8a2:	68fb      	ldr	r3, [r7, #12]
 800a8a4:	681b      	ldr	r3, [r3, #0]
 800a8a6:	2b00      	cmp	r3, #0
 800a8a8:	d14d      	bne.n	800a946 <prvCopyDataToQueue+0xc2>
 800a8aa:	68fb      	ldr	r3, [r7, #12]
 800a8ac:	689b      	ldr	r3, [r3, #8]
 800a8ae:	4618      	mov	r0, r3
 800a8b0:	f000 fbcc 	bl	800b04c <xTaskPriorityDisinherit>
 800a8b4:	6178      	str	r0, [r7, #20]
 800a8b6:	68fb      	ldr	r3, [r7, #12]
 800a8b8:	2200      	movs	r2, #0
 800a8ba:	609a      	str	r2, [r3, #8]
 800a8bc:	e043      	b.n	800a946 <prvCopyDataToQueue+0xc2>
 800a8be:	687b      	ldr	r3, [r7, #4]
 800a8c0:	2b00      	cmp	r3, #0
 800a8c2:	d119      	bne.n	800a8f8 <prvCopyDataToQueue+0x74>
 800a8c4:	68fb      	ldr	r3, [r7, #12]
 800a8c6:	6858      	ldr	r0, [r3, #4]
 800a8c8:	68fb      	ldr	r3, [r7, #12]
 800a8ca:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800a8cc:	461a      	mov	r2, r3
 800a8ce:	68b9      	ldr	r1, [r7, #8]
 800a8d0:	f001 fdfb 	bl	800c4ca <memcpy>
 800a8d4:	68fb      	ldr	r3, [r7, #12]
 800a8d6:	685a      	ldr	r2, [r3, #4]
 800a8d8:	68fb      	ldr	r3, [r7, #12]
 800a8da:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800a8dc:	441a      	add	r2, r3
 800a8de:	68fb      	ldr	r3, [r7, #12]
 800a8e0:	605a      	str	r2, [r3, #4]
 800a8e2:	68fb      	ldr	r3, [r7, #12]
 800a8e4:	685a      	ldr	r2, [r3, #4]
 800a8e6:	68fb      	ldr	r3, [r7, #12]
 800a8e8:	689b      	ldr	r3, [r3, #8]
 800a8ea:	429a      	cmp	r2, r3
 800a8ec:	d32b      	bcc.n	800a946 <prvCopyDataToQueue+0xc2>
 800a8ee:	68fb      	ldr	r3, [r7, #12]
 800a8f0:	681a      	ldr	r2, [r3, #0]
 800a8f2:	68fb      	ldr	r3, [r7, #12]
 800a8f4:	605a      	str	r2, [r3, #4]
 800a8f6:	e026      	b.n	800a946 <prvCopyDataToQueue+0xc2>
 800a8f8:	68fb      	ldr	r3, [r7, #12]
 800a8fa:	68d8      	ldr	r0, [r3, #12]
 800a8fc:	68fb      	ldr	r3, [r7, #12]
 800a8fe:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800a900:	461a      	mov	r2, r3
 800a902:	68b9      	ldr	r1, [r7, #8]
 800a904:	f001 fde1 	bl	800c4ca <memcpy>
 800a908:	68fb      	ldr	r3, [r7, #12]
 800a90a:	68da      	ldr	r2, [r3, #12]
 800a90c:	68fb      	ldr	r3, [r7, #12]
 800a90e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800a910:	425b      	negs	r3, r3
 800a912:	441a      	add	r2, r3
 800a914:	68fb      	ldr	r3, [r7, #12]
 800a916:	60da      	str	r2, [r3, #12]
 800a918:	68fb      	ldr	r3, [r7, #12]
 800a91a:	68da      	ldr	r2, [r3, #12]
 800a91c:	68fb      	ldr	r3, [r7, #12]
 800a91e:	681b      	ldr	r3, [r3, #0]
 800a920:	429a      	cmp	r2, r3
 800a922:	d207      	bcs.n	800a934 <prvCopyDataToQueue+0xb0>
 800a924:	68fb      	ldr	r3, [r7, #12]
 800a926:	689a      	ldr	r2, [r3, #8]
 800a928:	68fb      	ldr	r3, [r7, #12]
 800a92a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800a92c:	425b      	negs	r3, r3
 800a92e:	441a      	add	r2, r3
 800a930:	68fb      	ldr	r3, [r7, #12]
 800a932:	60da      	str	r2, [r3, #12]
 800a934:	687b      	ldr	r3, [r7, #4]
 800a936:	2b02      	cmp	r3, #2
 800a938:	d105      	bne.n	800a946 <prvCopyDataToQueue+0xc2>
 800a93a:	693b      	ldr	r3, [r7, #16]
 800a93c:	2b00      	cmp	r3, #0
 800a93e:	d002      	beq.n	800a946 <prvCopyDataToQueue+0xc2>
 800a940:	693b      	ldr	r3, [r7, #16]
 800a942:	3b01      	subs	r3, #1
 800a944:	613b      	str	r3, [r7, #16]
 800a946:	693b      	ldr	r3, [r7, #16]
 800a948:	1c5a      	adds	r2, r3, #1
 800a94a:	68fb      	ldr	r3, [r7, #12]
 800a94c:	639a      	str	r2, [r3, #56]	@ 0x38
 800a94e:	697b      	ldr	r3, [r7, #20]
 800a950:	4618      	mov	r0, r3
 800a952:	3718      	adds	r7, #24
 800a954:	46bd      	mov	sp, r7
 800a956:	bd80      	pop	{r7, pc}

0800a958 <prvUnlockQueue>:
 800a958:	b580      	push	{r7, lr}
 800a95a:	b084      	sub	sp, #16
 800a95c:	af00      	add	r7, sp, #0
 800a95e:	6078      	str	r0, [r7, #4]
 800a960:	f000 fc7a 	bl	800b258 <vPortEnterCritical>
 800a964:	687b      	ldr	r3, [r7, #4]
 800a966:	f893 3045 	ldrb.w	r3, [r3, #69]	@ 0x45
 800a96a:	73fb      	strb	r3, [r7, #15]
 800a96c:	e011      	b.n	800a992 <prvUnlockQueue+0x3a>
 800a96e:	687b      	ldr	r3, [r7, #4]
 800a970:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800a972:	2b00      	cmp	r3, #0
 800a974:	d012      	beq.n	800a99c <prvUnlockQueue+0x44>
 800a976:	687b      	ldr	r3, [r7, #4]
 800a978:	3324      	adds	r3, #36	@ 0x24
 800a97a:	4618      	mov	r0, r3
 800a97c:	f000 fa3e 	bl	800adfc <xTaskRemoveFromEventList>
 800a980:	4603      	mov	r3, r0
 800a982:	2b00      	cmp	r3, #0
 800a984:	d001      	beq.n	800a98a <prvUnlockQueue+0x32>
 800a986:	f000 fb17 	bl	800afb8 <vTaskMissedYield>
 800a98a:	7bfb      	ldrb	r3, [r7, #15]
 800a98c:	3b01      	subs	r3, #1
 800a98e:	b2db      	uxtb	r3, r3
 800a990:	73fb      	strb	r3, [r7, #15]
 800a992:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800a996:	2b00      	cmp	r3, #0
 800a998:	dce9      	bgt.n	800a96e <prvUnlockQueue+0x16>
 800a99a:	e000      	b.n	800a99e <prvUnlockQueue+0x46>
 800a99c:	bf00      	nop
 800a99e:	687b      	ldr	r3, [r7, #4]
 800a9a0:	22ff      	movs	r2, #255	@ 0xff
 800a9a2:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 800a9a6:	f000 fc89 	bl	800b2bc <vPortExitCritical>
 800a9aa:	f000 fc55 	bl	800b258 <vPortEnterCritical>
 800a9ae:	687b      	ldr	r3, [r7, #4]
 800a9b0:	f893 3044 	ldrb.w	r3, [r3, #68]	@ 0x44
 800a9b4:	73bb      	strb	r3, [r7, #14]
 800a9b6:	e011      	b.n	800a9dc <prvUnlockQueue+0x84>
 800a9b8:	687b      	ldr	r3, [r7, #4]
 800a9ba:	691b      	ldr	r3, [r3, #16]
 800a9bc:	2b00      	cmp	r3, #0
 800a9be:	d012      	beq.n	800a9e6 <prvUnlockQueue+0x8e>
 800a9c0:	687b      	ldr	r3, [r7, #4]
 800a9c2:	3310      	adds	r3, #16
 800a9c4:	4618      	mov	r0, r3
 800a9c6:	f000 fa19 	bl	800adfc <xTaskRemoveFromEventList>
 800a9ca:	4603      	mov	r3, r0
 800a9cc:	2b00      	cmp	r3, #0
 800a9ce:	d001      	beq.n	800a9d4 <prvUnlockQueue+0x7c>
 800a9d0:	f000 faf2 	bl	800afb8 <vTaskMissedYield>
 800a9d4:	7bbb      	ldrb	r3, [r7, #14]
 800a9d6:	3b01      	subs	r3, #1
 800a9d8:	b2db      	uxtb	r3, r3
 800a9da:	73bb      	strb	r3, [r7, #14]
 800a9dc:	f997 300e 	ldrsb.w	r3, [r7, #14]
 800a9e0:	2b00      	cmp	r3, #0
 800a9e2:	dce9      	bgt.n	800a9b8 <prvUnlockQueue+0x60>
 800a9e4:	e000      	b.n	800a9e8 <prvUnlockQueue+0x90>
 800a9e6:	bf00      	nop
 800a9e8:	687b      	ldr	r3, [r7, #4]
 800a9ea:	22ff      	movs	r2, #255	@ 0xff
 800a9ec:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 800a9f0:	f000 fc64 	bl	800b2bc <vPortExitCritical>
 800a9f4:	bf00      	nop
 800a9f6:	3710      	adds	r7, #16
 800a9f8:	46bd      	mov	sp, r7
 800a9fa:	bd80      	pop	{r7, pc}

0800a9fc <prvIsQueueFull>:
 800a9fc:	b580      	push	{r7, lr}
 800a9fe:	b084      	sub	sp, #16
 800aa00:	af00      	add	r7, sp, #0
 800aa02:	6078      	str	r0, [r7, #4]
 800aa04:	f000 fc28 	bl	800b258 <vPortEnterCritical>
 800aa08:	687b      	ldr	r3, [r7, #4]
 800aa0a:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 800aa0c:	687b      	ldr	r3, [r7, #4]
 800aa0e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800aa10:	429a      	cmp	r2, r3
 800aa12:	d102      	bne.n	800aa1a <prvIsQueueFull+0x1e>
 800aa14:	2301      	movs	r3, #1
 800aa16:	60fb      	str	r3, [r7, #12]
 800aa18:	e001      	b.n	800aa1e <prvIsQueueFull+0x22>
 800aa1a:	2300      	movs	r3, #0
 800aa1c:	60fb      	str	r3, [r7, #12]
 800aa1e:	f000 fc4d 	bl	800b2bc <vPortExitCritical>
 800aa22:	68fb      	ldr	r3, [r7, #12]
 800aa24:	4618      	mov	r0, r3
 800aa26:	3710      	adds	r7, #16
 800aa28:	46bd      	mov	sp, r7
 800aa2a:	bd80      	pop	{r7, pc}

0800aa2c <vTaskSuspendAll>:
 800aa2c:	b480      	push	{r7}
 800aa2e:	af00      	add	r7, sp, #0
 800aa30:	4b04      	ldr	r3, [pc, #16]	@ (800aa44 <vTaskSuspendAll+0x18>)
 800aa32:	681b      	ldr	r3, [r3, #0]
 800aa34:	3301      	adds	r3, #1
 800aa36:	4a03      	ldr	r2, [pc, #12]	@ (800aa44 <vTaskSuspendAll+0x18>)
 800aa38:	6013      	str	r3, [r2, #0]
 800aa3a:	bf00      	nop
 800aa3c:	46bd      	mov	sp, r7
 800aa3e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aa42:	4770      	bx	lr
 800aa44:	20025f58 	.word	0x20025f58

0800aa48 <xTaskResumeAll>:
 800aa48:	b580      	push	{r7, lr}
 800aa4a:	b084      	sub	sp, #16
 800aa4c:	af00      	add	r7, sp, #0
 800aa4e:	2300      	movs	r3, #0
 800aa50:	60fb      	str	r3, [r7, #12]
 800aa52:	2300      	movs	r3, #0
 800aa54:	60bb      	str	r3, [r7, #8]
 800aa56:	4b42      	ldr	r3, [pc, #264]	@ (800ab60 <xTaskResumeAll+0x118>)
 800aa58:	681b      	ldr	r3, [r3, #0]
 800aa5a:	2b00      	cmp	r3, #0
 800aa5c:	d10b      	bne.n	800aa76 <xTaskResumeAll+0x2e>
 800aa5e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800aa62:	f383 8811 	msr	BASEPRI, r3
 800aa66:	f3bf 8f6f 	isb	sy
 800aa6a:	f3bf 8f4f 	dsb	sy
 800aa6e:	603b      	str	r3, [r7, #0]
 800aa70:	bf00      	nop
 800aa72:	bf00      	nop
 800aa74:	e7fd      	b.n	800aa72 <xTaskResumeAll+0x2a>
 800aa76:	f000 fbef 	bl	800b258 <vPortEnterCritical>
 800aa7a:	4b39      	ldr	r3, [pc, #228]	@ (800ab60 <xTaskResumeAll+0x118>)
 800aa7c:	681b      	ldr	r3, [r3, #0]
 800aa7e:	3b01      	subs	r3, #1
 800aa80:	4a37      	ldr	r2, [pc, #220]	@ (800ab60 <xTaskResumeAll+0x118>)
 800aa82:	6013      	str	r3, [r2, #0]
 800aa84:	4b36      	ldr	r3, [pc, #216]	@ (800ab60 <xTaskResumeAll+0x118>)
 800aa86:	681b      	ldr	r3, [r3, #0]
 800aa88:	2b00      	cmp	r3, #0
 800aa8a:	d161      	bne.n	800ab50 <xTaskResumeAll+0x108>
 800aa8c:	4b35      	ldr	r3, [pc, #212]	@ (800ab64 <xTaskResumeAll+0x11c>)
 800aa8e:	681b      	ldr	r3, [r3, #0]
 800aa90:	2b00      	cmp	r3, #0
 800aa92:	d05d      	beq.n	800ab50 <xTaskResumeAll+0x108>
 800aa94:	e02e      	b.n	800aaf4 <xTaskResumeAll+0xac>
 800aa96:	4b34      	ldr	r3, [pc, #208]	@ (800ab68 <xTaskResumeAll+0x120>)
 800aa98:	68db      	ldr	r3, [r3, #12]
 800aa9a:	68db      	ldr	r3, [r3, #12]
 800aa9c:	60fb      	str	r3, [r7, #12]
 800aa9e:	68fb      	ldr	r3, [r7, #12]
 800aaa0:	3318      	adds	r3, #24
 800aaa2:	4618      	mov	r0, r3
 800aaa4:	f7ff fd23 	bl	800a4ee <uxListRemove>
 800aaa8:	68fb      	ldr	r3, [r7, #12]
 800aaaa:	3304      	adds	r3, #4
 800aaac:	4618      	mov	r0, r3
 800aaae:	f7ff fd1e 	bl	800a4ee <uxListRemove>
 800aab2:	68fb      	ldr	r3, [r7, #12]
 800aab4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800aab6:	2201      	movs	r2, #1
 800aab8:	409a      	lsls	r2, r3
 800aaba:	4b2c      	ldr	r3, [pc, #176]	@ (800ab6c <xTaskResumeAll+0x124>)
 800aabc:	681b      	ldr	r3, [r3, #0]
 800aabe:	4313      	orrs	r3, r2
 800aac0:	4a2a      	ldr	r2, [pc, #168]	@ (800ab6c <xTaskResumeAll+0x124>)
 800aac2:	6013      	str	r3, [r2, #0]
 800aac4:	68fb      	ldr	r3, [r7, #12]
 800aac6:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800aac8:	4613      	mov	r3, r2
 800aaca:	009b      	lsls	r3, r3, #2
 800aacc:	4413      	add	r3, r2
 800aace:	009b      	lsls	r3, r3, #2
 800aad0:	4a27      	ldr	r2, [pc, #156]	@ (800ab70 <xTaskResumeAll+0x128>)
 800aad2:	441a      	add	r2, r3
 800aad4:	68fb      	ldr	r3, [r7, #12]
 800aad6:	3304      	adds	r3, #4
 800aad8:	4619      	mov	r1, r3
 800aada:	4610      	mov	r0, r2
 800aadc:	f7ff fcaa 	bl	800a434 <vListInsertEnd>
 800aae0:	68fb      	ldr	r3, [r7, #12]
 800aae2:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800aae4:	4b23      	ldr	r3, [pc, #140]	@ (800ab74 <xTaskResumeAll+0x12c>)
 800aae6:	681b      	ldr	r3, [r3, #0]
 800aae8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800aaea:	429a      	cmp	r2, r3
 800aaec:	d302      	bcc.n	800aaf4 <xTaskResumeAll+0xac>
 800aaee:	4b22      	ldr	r3, [pc, #136]	@ (800ab78 <xTaskResumeAll+0x130>)
 800aaf0:	2201      	movs	r2, #1
 800aaf2:	601a      	str	r2, [r3, #0]
 800aaf4:	4b1c      	ldr	r3, [pc, #112]	@ (800ab68 <xTaskResumeAll+0x120>)
 800aaf6:	681b      	ldr	r3, [r3, #0]
 800aaf8:	2b00      	cmp	r3, #0
 800aafa:	d1cc      	bne.n	800aa96 <xTaskResumeAll+0x4e>
 800aafc:	68fb      	ldr	r3, [r7, #12]
 800aafe:	2b00      	cmp	r3, #0
 800ab00:	d001      	beq.n	800ab06 <xTaskResumeAll+0xbe>
 800ab02:	f000 fa65 	bl	800afd0 <prvResetNextTaskUnblockTime>
 800ab06:	4b1d      	ldr	r3, [pc, #116]	@ (800ab7c <xTaskResumeAll+0x134>)
 800ab08:	681b      	ldr	r3, [r3, #0]
 800ab0a:	607b      	str	r3, [r7, #4]
 800ab0c:	687b      	ldr	r3, [r7, #4]
 800ab0e:	2b00      	cmp	r3, #0
 800ab10:	d010      	beq.n	800ab34 <xTaskResumeAll+0xec>
 800ab12:	f000 f837 	bl	800ab84 <xTaskIncrementTick>
 800ab16:	4603      	mov	r3, r0
 800ab18:	2b00      	cmp	r3, #0
 800ab1a:	d002      	beq.n	800ab22 <xTaskResumeAll+0xda>
 800ab1c:	4b16      	ldr	r3, [pc, #88]	@ (800ab78 <xTaskResumeAll+0x130>)
 800ab1e:	2201      	movs	r2, #1
 800ab20:	601a      	str	r2, [r3, #0]
 800ab22:	687b      	ldr	r3, [r7, #4]
 800ab24:	3b01      	subs	r3, #1
 800ab26:	607b      	str	r3, [r7, #4]
 800ab28:	687b      	ldr	r3, [r7, #4]
 800ab2a:	2b00      	cmp	r3, #0
 800ab2c:	d1f1      	bne.n	800ab12 <xTaskResumeAll+0xca>
 800ab2e:	4b13      	ldr	r3, [pc, #76]	@ (800ab7c <xTaskResumeAll+0x134>)
 800ab30:	2200      	movs	r2, #0
 800ab32:	601a      	str	r2, [r3, #0]
 800ab34:	4b10      	ldr	r3, [pc, #64]	@ (800ab78 <xTaskResumeAll+0x130>)
 800ab36:	681b      	ldr	r3, [r3, #0]
 800ab38:	2b00      	cmp	r3, #0
 800ab3a:	d009      	beq.n	800ab50 <xTaskResumeAll+0x108>
 800ab3c:	2301      	movs	r3, #1
 800ab3e:	60bb      	str	r3, [r7, #8]
 800ab40:	4b0f      	ldr	r3, [pc, #60]	@ (800ab80 <xTaskResumeAll+0x138>)
 800ab42:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800ab46:	601a      	str	r2, [r3, #0]
 800ab48:	f3bf 8f4f 	dsb	sy
 800ab4c:	f3bf 8f6f 	isb	sy
 800ab50:	f000 fbb4 	bl	800b2bc <vPortExitCritical>
 800ab54:	68bb      	ldr	r3, [r7, #8]
 800ab56:	4618      	mov	r0, r3
 800ab58:	3710      	adds	r7, #16
 800ab5a:	46bd      	mov	sp, r7
 800ab5c:	bd80      	pop	{r7, pc}
 800ab5e:	bf00      	nop
 800ab60:	20025f58 	.word	0x20025f58
 800ab64:	20025f38 	.word	0x20025f38
 800ab68:	20025f10 	.word	0x20025f10
 800ab6c:	20025f40 	.word	0x20025f40
 800ab70:	20025e7c 	.word	0x20025e7c
 800ab74:	20025e78 	.word	0x20025e78
 800ab78:	20025f4c 	.word	0x20025f4c
 800ab7c:	20025f48 	.word	0x20025f48
 800ab80:	e000ed04 	.word	0xe000ed04

0800ab84 <xTaskIncrementTick>:
 800ab84:	b580      	push	{r7, lr}
 800ab86:	b086      	sub	sp, #24
 800ab88:	af00      	add	r7, sp, #0
 800ab8a:	2300      	movs	r3, #0
 800ab8c:	617b      	str	r3, [r7, #20]
 800ab8e:	4b4f      	ldr	r3, [pc, #316]	@ (800accc <xTaskIncrementTick+0x148>)
 800ab90:	681b      	ldr	r3, [r3, #0]
 800ab92:	2b00      	cmp	r3, #0
 800ab94:	f040 808f 	bne.w	800acb6 <xTaskIncrementTick+0x132>
 800ab98:	4b4d      	ldr	r3, [pc, #308]	@ (800acd0 <xTaskIncrementTick+0x14c>)
 800ab9a:	681b      	ldr	r3, [r3, #0]
 800ab9c:	3301      	adds	r3, #1
 800ab9e:	613b      	str	r3, [r7, #16]
 800aba0:	4a4b      	ldr	r2, [pc, #300]	@ (800acd0 <xTaskIncrementTick+0x14c>)
 800aba2:	693b      	ldr	r3, [r7, #16]
 800aba4:	6013      	str	r3, [r2, #0]
 800aba6:	693b      	ldr	r3, [r7, #16]
 800aba8:	2b00      	cmp	r3, #0
 800abaa:	d121      	bne.n	800abf0 <xTaskIncrementTick+0x6c>
 800abac:	4b49      	ldr	r3, [pc, #292]	@ (800acd4 <xTaskIncrementTick+0x150>)
 800abae:	681b      	ldr	r3, [r3, #0]
 800abb0:	681b      	ldr	r3, [r3, #0]
 800abb2:	2b00      	cmp	r3, #0
 800abb4:	d00b      	beq.n	800abce <xTaskIncrementTick+0x4a>
 800abb6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800abba:	f383 8811 	msr	BASEPRI, r3
 800abbe:	f3bf 8f6f 	isb	sy
 800abc2:	f3bf 8f4f 	dsb	sy
 800abc6:	603b      	str	r3, [r7, #0]
 800abc8:	bf00      	nop
 800abca:	bf00      	nop
 800abcc:	e7fd      	b.n	800abca <xTaskIncrementTick+0x46>
 800abce:	4b41      	ldr	r3, [pc, #260]	@ (800acd4 <xTaskIncrementTick+0x150>)
 800abd0:	681b      	ldr	r3, [r3, #0]
 800abd2:	60fb      	str	r3, [r7, #12]
 800abd4:	4b40      	ldr	r3, [pc, #256]	@ (800acd8 <xTaskIncrementTick+0x154>)
 800abd6:	681b      	ldr	r3, [r3, #0]
 800abd8:	4a3e      	ldr	r2, [pc, #248]	@ (800acd4 <xTaskIncrementTick+0x150>)
 800abda:	6013      	str	r3, [r2, #0]
 800abdc:	4a3e      	ldr	r2, [pc, #248]	@ (800acd8 <xTaskIncrementTick+0x154>)
 800abde:	68fb      	ldr	r3, [r7, #12]
 800abe0:	6013      	str	r3, [r2, #0]
 800abe2:	4b3e      	ldr	r3, [pc, #248]	@ (800acdc <xTaskIncrementTick+0x158>)
 800abe4:	681b      	ldr	r3, [r3, #0]
 800abe6:	3301      	adds	r3, #1
 800abe8:	4a3c      	ldr	r2, [pc, #240]	@ (800acdc <xTaskIncrementTick+0x158>)
 800abea:	6013      	str	r3, [r2, #0]
 800abec:	f000 f9f0 	bl	800afd0 <prvResetNextTaskUnblockTime>
 800abf0:	4b3b      	ldr	r3, [pc, #236]	@ (800ace0 <xTaskIncrementTick+0x15c>)
 800abf2:	681b      	ldr	r3, [r3, #0]
 800abf4:	693a      	ldr	r2, [r7, #16]
 800abf6:	429a      	cmp	r2, r3
 800abf8:	d348      	bcc.n	800ac8c <xTaskIncrementTick+0x108>
 800abfa:	4b36      	ldr	r3, [pc, #216]	@ (800acd4 <xTaskIncrementTick+0x150>)
 800abfc:	681b      	ldr	r3, [r3, #0]
 800abfe:	681b      	ldr	r3, [r3, #0]
 800ac00:	2b00      	cmp	r3, #0
 800ac02:	d104      	bne.n	800ac0e <xTaskIncrementTick+0x8a>
 800ac04:	4b36      	ldr	r3, [pc, #216]	@ (800ace0 <xTaskIncrementTick+0x15c>)
 800ac06:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 800ac0a:	601a      	str	r2, [r3, #0]
 800ac0c:	e03e      	b.n	800ac8c <xTaskIncrementTick+0x108>
 800ac0e:	4b31      	ldr	r3, [pc, #196]	@ (800acd4 <xTaskIncrementTick+0x150>)
 800ac10:	681b      	ldr	r3, [r3, #0]
 800ac12:	68db      	ldr	r3, [r3, #12]
 800ac14:	68db      	ldr	r3, [r3, #12]
 800ac16:	60bb      	str	r3, [r7, #8]
 800ac18:	68bb      	ldr	r3, [r7, #8]
 800ac1a:	685b      	ldr	r3, [r3, #4]
 800ac1c:	607b      	str	r3, [r7, #4]
 800ac1e:	693a      	ldr	r2, [r7, #16]
 800ac20:	687b      	ldr	r3, [r7, #4]
 800ac22:	429a      	cmp	r2, r3
 800ac24:	d203      	bcs.n	800ac2e <xTaskIncrementTick+0xaa>
 800ac26:	4a2e      	ldr	r2, [pc, #184]	@ (800ace0 <xTaskIncrementTick+0x15c>)
 800ac28:	687b      	ldr	r3, [r7, #4]
 800ac2a:	6013      	str	r3, [r2, #0]
 800ac2c:	e02e      	b.n	800ac8c <xTaskIncrementTick+0x108>
 800ac2e:	68bb      	ldr	r3, [r7, #8]
 800ac30:	3304      	adds	r3, #4
 800ac32:	4618      	mov	r0, r3
 800ac34:	f7ff fc5b 	bl	800a4ee <uxListRemove>
 800ac38:	68bb      	ldr	r3, [r7, #8]
 800ac3a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800ac3c:	2b00      	cmp	r3, #0
 800ac3e:	d004      	beq.n	800ac4a <xTaskIncrementTick+0xc6>
 800ac40:	68bb      	ldr	r3, [r7, #8]
 800ac42:	3318      	adds	r3, #24
 800ac44:	4618      	mov	r0, r3
 800ac46:	f7ff fc52 	bl	800a4ee <uxListRemove>
 800ac4a:	68bb      	ldr	r3, [r7, #8]
 800ac4c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800ac4e:	2201      	movs	r2, #1
 800ac50:	409a      	lsls	r2, r3
 800ac52:	4b24      	ldr	r3, [pc, #144]	@ (800ace4 <xTaskIncrementTick+0x160>)
 800ac54:	681b      	ldr	r3, [r3, #0]
 800ac56:	4313      	orrs	r3, r2
 800ac58:	4a22      	ldr	r2, [pc, #136]	@ (800ace4 <xTaskIncrementTick+0x160>)
 800ac5a:	6013      	str	r3, [r2, #0]
 800ac5c:	68bb      	ldr	r3, [r7, #8]
 800ac5e:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800ac60:	4613      	mov	r3, r2
 800ac62:	009b      	lsls	r3, r3, #2
 800ac64:	4413      	add	r3, r2
 800ac66:	009b      	lsls	r3, r3, #2
 800ac68:	4a1f      	ldr	r2, [pc, #124]	@ (800ace8 <xTaskIncrementTick+0x164>)
 800ac6a:	441a      	add	r2, r3
 800ac6c:	68bb      	ldr	r3, [r7, #8]
 800ac6e:	3304      	adds	r3, #4
 800ac70:	4619      	mov	r1, r3
 800ac72:	4610      	mov	r0, r2
 800ac74:	f7ff fbde 	bl	800a434 <vListInsertEnd>
 800ac78:	68bb      	ldr	r3, [r7, #8]
 800ac7a:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800ac7c:	4b1b      	ldr	r3, [pc, #108]	@ (800acec <xTaskIncrementTick+0x168>)
 800ac7e:	681b      	ldr	r3, [r3, #0]
 800ac80:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800ac82:	429a      	cmp	r2, r3
 800ac84:	d3b9      	bcc.n	800abfa <xTaskIncrementTick+0x76>
 800ac86:	2301      	movs	r3, #1
 800ac88:	617b      	str	r3, [r7, #20]
 800ac8a:	e7b6      	b.n	800abfa <xTaskIncrementTick+0x76>
 800ac8c:	4b17      	ldr	r3, [pc, #92]	@ (800acec <xTaskIncrementTick+0x168>)
 800ac8e:	681b      	ldr	r3, [r3, #0]
 800ac90:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800ac92:	4915      	ldr	r1, [pc, #84]	@ (800ace8 <xTaskIncrementTick+0x164>)
 800ac94:	4613      	mov	r3, r2
 800ac96:	009b      	lsls	r3, r3, #2
 800ac98:	4413      	add	r3, r2
 800ac9a:	009b      	lsls	r3, r3, #2
 800ac9c:	440b      	add	r3, r1
 800ac9e:	681b      	ldr	r3, [r3, #0]
 800aca0:	2b01      	cmp	r3, #1
 800aca2:	d901      	bls.n	800aca8 <xTaskIncrementTick+0x124>
 800aca4:	2301      	movs	r3, #1
 800aca6:	617b      	str	r3, [r7, #20]
 800aca8:	4b11      	ldr	r3, [pc, #68]	@ (800acf0 <xTaskIncrementTick+0x16c>)
 800acaa:	681b      	ldr	r3, [r3, #0]
 800acac:	2b00      	cmp	r3, #0
 800acae:	d007      	beq.n	800acc0 <xTaskIncrementTick+0x13c>
 800acb0:	2301      	movs	r3, #1
 800acb2:	617b      	str	r3, [r7, #20]
 800acb4:	e004      	b.n	800acc0 <xTaskIncrementTick+0x13c>
 800acb6:	4b0f      	ldr	r3, [pc, #60]	@ (800acf4 <xTaskIncrementTick+0x170>)
 800acb8:	681b      	ldr	r3, [r3, #0]
 800acba:	3301      	adds	r3, #1
 800acbc:	4a0d      	ldr	r2, [pc, #52]	@ (800acf4 <xTaskIncrementTick+0x170>)
 800acbe:	6013      	str	r3, [r2, #0]
 800acc0:	697b      	ldr	r3, [r7, #20]
 800acc2:	4618      	mov	r0, r3
 800acc4:	3718      	adds	r7, #24
 800acc6:	46bd      	mov	sp, r7
 800acc8:	bd80      	pop	{r7, pc}
 800acca:	bf00      	nop
 800accc:	20025f58 	.word	0x20025f58
 800acd0:	20025f3c 	.word	0x20025f3c
 800acd4:	20025f08 	.word	0x20025f08
 800acd8:	20025f0c 	.word	0x20025f0c
 800acdc:	20025f50 	.word	0x20025f50
 800ace0:	20025f54 	.word	0x20025f54
 800ace4:	20025f40 	.word	0x20025f40
 800ace8:	20025e7c 	.word	0x20025e7c
 800acec:	20025e78 	.word	0x20025e78
 800acf0:	20025f4c 	.word	0x20025f4c
 800acf4:	20025f48 	.word	0x20025f48

0800acf8 <vTaskSwitchContext>:
 800acf8:	b480      	push	{r7}
 800acfa:	b087      	sub	sp, #28
 800acfc:	af00      	add	r7, sp, #0
 800acfe:	4b27      	ldr	r3, [pc, #156]	@ (800ad9c <vTaskSwitchContext+0xa4>)
 800ad00:	681b      	ldr	r3, [r3, #0]
 800ad02:	2b00      	cmp	r3, #0
 800ad04:	d003      	beq.n	800ad0e <vTaskSwitchContext+0x16>
 800ad06:	4b26      	ldr	r3, [pc, #152]	@ (800ada0 <vTaskSwitchContext+0xa8>)
 800ad08:	2201      	movs	r2, #1
 800ad0a:	601a      	str	r2, [r3, #0]
 800ad0c:	e040      	b.n	800ad90 <vTaskSwitchContext+0x98>
 800ad0e:	4b24      	ldr	r3, [pc, #144]	@ (800ada0 <vTaskSwitchContext+0xa8>)
 800ad10:	2200      	movs	r2, #0
 800ad12:	601a      	str	r2, [r3, #0]
 800ad14:	4b23      	ldr	r3, [pc, #140]	@ (800ada4 <vTaskSwitchContext+0xac>)
 800ad16:	681b      	ldr	r3, [r3, #0]
 800ad18:	60fb      	str	r3, [r7, #12]
 800ad1a:	68fb      	ldr	r3, [r7, #12]
 800ad1c:	fab3 f383 	clz	r3, r3
 800ad20:	72fb      	strb	r3, [r7, #11]
 800ad22:	7afb      	ldrb	r3, [r7, #11]
 800ad24:	f1c3 031f 	rsb	r3, r3, #31
 800ad28:	617b      	str	r3, [r7, #20]
 800ad2a:	491f      	ldr	r1, [pc, #124]	@ (800ada8 <vTaskSwitchContext+0xb0>)
 800ad2c:	697a      	ldr	r2, [r7, #20]
 800ad2e:	4613      	mov	r3, r2
 800ad30:	009b      	lsls	r3, r3, #2
 800ad32:	4413      	add	r3, r2
 800ad34:	009b      	lsls	r3, r3, #2
 800ad36:	440b      	add	r3, r1
 800ad38:	681b      	ldr	r3, [r3, #0]
 800ad3a:	2b00      	cmp	r3, #0
 800ad3c:	d10b      	bne.n	800ad56 <vTaskSwitchContext+0x5e>
 800ad3e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800ad42:	f383 8811 	msr	BASEPRI, r3
 800ad46:	f3bf 8f6f 	isb	sy
 800ad4a:	f3bf 8f4f 	dsb	sy
 800ad4e:	607b      	str	r3, [r7, #4]
 800ad50:	bf00      	nop
 800ad52:	bf00      	nop
 800ad54:	e7fd      	b.n	800ad52 <vTaskSwitchContext+0x5a>
 800ad56:	697a      	ldr	r2, [r7, #20]
 800ad58:	4613      	mov	r3, r2
 800ad5a:	009b      	lsls	r3, r3, #2
 800ad5c:	4413      	add	r3, r2
 800ad5e:	009b      	lsls	r3, r3, #2
 800ad60:	4a11      	ldr	r2, [pc, #68]	@ (800ada8 <vTaskSwitchContext+0xb0>)
 800ad62:	4413      	add	r3, r2
 800ad64:	613b      	str	r3, [r7, #16]
 800ad66:	693b      	ldr	r3, [r7, #16]
 800ad68:	685b      	ldr	r3, [r3, #4]
 800ad6a:	685a      	ldr	r2, [r3, #4]
 800ad6c:	693b      	ldr	r3, [r7, #16]
 800ad6e:	605a      	str	r2, [r3, #4]
 800ad70:	693b      	ldr	r3, [r7, #16]
 800ad72:	685a      	ldr	r2, [r3, #4]
 800ad74:	693b      	ldr	r3, [r7, #16]
 800ad76:	3308      	adds	r3, #8
 800ad78:	429a      	cmp	r2, r3
 800ad7a:	d104      	bne.n	800ad86 <vTaskSwitchContext+0x8e>
 800ad7c:	693b      	ldr	r3, [r7, #16]
 800ad7e:	685b      	ldr	r3, [r3, #4]
 800ad80:	685a      	ldr	r2, [r3, #4]
 800ad82:	693b      	ldr	r3, [r7, #16]
 800ad84:	605a      	str	r2, [r3, #4]
 800ad86:	693b      	ldr	r3, [r7, #16]
 800ad88:	685b      	ldr	r3, [r3, #4]
 800ad8a:	68db      	ldr	r3, [r3, #12]
 800ad8c:	4a07      	ldr	r2, [pc, #28]	@ (800adac <vTaskSwitchContext+0xb4>)
 800ad8e:	6013      	str	r3, [r2, #0]
 800ad90:	bf00      	nop
 800ad92:	371c      	adds	r7, #28
 800ad94:	46bd      	mov	sp, r7
 800ad96:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ad9a:	4770      	bx	lr
 800ad9c:	20025f58 	.word	0x20025f58
 800ada0:	20025f4c 	.word	0x20025f4c
 800ada4:	20025f40 	.word	0x20025f40
 800ada8:	20025e7c 	.word	0x20025e7c
 800adac:	20025e78 	.word	0x20025e78

0800adb0 <vTaskPlaceOnEventList>:
 800adb0:	b580      	push	{r7, lr}
 800adb2:	b084      	sub	sp, #16
 800adb4:	af00      	add	r7, sp, #0
 800adb6:	6078      	str	r0, [r7, #4]
 800adb8:	6039      	str	r1, [r7, #0]
 800adba:	687b      	ldr	r3, [r7, #4]
 800adbc:	2b00      	cmp	r3, #0
 800adbe:	d10b      	bne.n	800add8 <vTaskPlaceOnEventList+0x28>
 800adc0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800adc4:	f383 8811 	msr	BASEPRI, r3
 800adc8:	f3bf 8f6f 	isb	sy
 800adcc:	f3bf 8f4f 	dsb	sy
 800add0:	60fb      	str	r3, [r7, #12]
 800add2:	bf00      	nop
 800add4:	bf00      	nop
 800add6:	e7fd      	b.n	800add4 <vTaskPlaceOnEventList+0x24>
 800add8:	4b07      	ldr	r3, [pc, #28]	@ (800adf8 <vTaskPlaceOnEventList+0x48>)
 800adda:	681b      	ldr	r3, [r3, #0]
 800addc:	3318      	adds	r3, #24
 800adde:	4619      	mov	r1, r3
 800ade0:	6878      	ldr	r0, [r7, #4]
 800ade2:	f7ff fb4b 	bl	800a47c <vListInsert>
 800ade6:	2101      	movs	r1, #1
 800ade8:	6838      	ldr	r0, [r7, #0]
 800adea:	f000 f9b7 	bl	800b15c <prvAddCurrentTaskToDelayedList>
 800adee:	bf00      	nop
 800adf0:	3710      	adds	r7, #16
 800adf2:	46bd      	mov	sp, r7
 800adf4:	bd80      	pop	{r7, pc}
 800adf6:	bf00      	nop
 800adf8:	20025e78 	.word	0x20025e78

0800adfc <xTaskRemoveFromEventList>:
 800adfc:	b580      	push	{r7, lr}
 800adfe:	b086      	sub	sp, #24
 800ae00:	af00      	add	r7, sp, #0
 800ae02:	6078      	str	r0, [r7, #4]
 800ae04:	687b      	ldr	r3, [r7, #4]
 800ae06:	68db      	ldr	r3, [r3, #12]
 800ae08:	68db      	ldr	r3, [r3, #12]
 800ae0a:	613b      	str	r3, [r7, #16]
 800ae0c:	693b      	ldr	r3, [r7, #16]
 800ae0e:	2b00      	cmp	r3, #0
 800ae10:	d10b      	bne.n	800ae2a <xTaskRemoveFromEventList+0x2e>
 800ae12:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800ae16:	f383 8811 	msr	BASEPRI, r3
 800ae1a:	f3bf 8f6f 	isb	sy
 800ae1e:	f3bf 8f4f 	dsb	sy
 800ae22:	60fb      	str	r3, [r7, #12]
 800ae24:	bf00      	nop
 800ae26:	bf00      	nop
 800ae28:	e7fd      	b.n	800ae26 <xTaskRemoveFromEventList+0x2a>
 800ae2a:	693b      	ldr	r3, [r7, #16]
 800ae2c:	3318      	adds	r3, #24
 800ae2e:	4618      	mov	r0, r3
 800ae30:	f7ff fb5d 	bl	800a4ee <uxListRemove>
 800ae34:	4b1d      	ldr	r3, [pc, #116]	@ (800aeac <xTaskRemoveFromEventList+0xb0>)
 800ae36:	681b      	ldr	r3, [r3, #0]
 800ae38:	2b00      	cmp	r3, #0
 800ae3a:	d11c      	bne.n	800ae76 <xTaskRemoveFromEventList+0x7a>
 800ae3c:	693b      	ldr	r3, [r7, #16]
 800ae3e:	3304      	adds	r3, #4
 800ae40:	4618      	mov	r0, r3
 800ae42:	f7ff fb54 	bl	800a4ee <uxListRemove>
 800ae46:	693b      	ldr	r3, [r7, #16]
 800ae48:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800ae4a:	2201      	movs	r2, #1
 800ae4c:	409a      	lsls	r2, r3
 800ae4e:	4b18      	ldr	r3, [pc, #96]	@ (800aeb0 <xTaskRemoveFromEventList+0xb4>)
 800ae50:	681b      	ldr	r3, [r3, #0]
 800ae52:	4313      	orrs	r3, r2
 800ae54:	4a16      	ldr	r2, [pc, #88]	@ (800aeb0 <xTaskRemoveFromEventList+0xb4>)
 800ae56:	6013      	str	r3, [r2, #0]
 800ae58:	693b      	ldr	r3, [r7, #16]
 800ae5a:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800ae5c:	4613      	mov	r3, r2
 800ae5e:	009b      	lsls	r3, r3, #2
 800ae60:	4413      	add	r3, r2
 800ae62:	009b      	lsls	r3, r3, #2
 800ae64:	4a13      	ldr	r2, [pc, #76]	@ (800aeb4 <xTaskRemoveFromEventList+0xb8>)
 800ae66:	441a      	add	r2, r3
 800ae68:	693b      	ldr	r3, [r7, #16]
 800ae6a:	3304      	adds	r3, #4
 800ae6c:	4619      	mov	r1, r3
 800ae6e:	4610      	mov	r0, r2
 800ae70:	f7ff fae0 	bl	800a434 <vListInsertEnd>
 800ae74:	e005      	b.n	800ae82 <xTaskRemoveFromEventList+0x86>
 800ae76:	693b      	ldr	r3, [r7, #16]
 800ae78:	3318      	adds	r3, #24
 800ae7a:	4619      	mov	r1, r3
 800ae7c:	480e      	ldr	r0, [pc, #56]	@ (800aeb8 <xTaskRemoveFromEventList+0xbc>)
 800ae7e:	f7ff fad9 	bl	800a434 <vListInsertEnd>
 800ae82:	693b      	ldr	r3, [r7, #16]
 800ae84:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800ae86:	4b0d      	ldr	r3, [pc, #52]	@ (800aebc <xTaskRemoveFromEventList+0xc0>)
 800ae88:	681b      	ldr	r3, [r3, #0]
 800ae8a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800ae8c:	429a      	cmp	r2, r3
 800ae8e:	d905      	bls.n	800ae9c <xTaskRemoveFromEventList+0xa0>
 800ae90:	2301      	movs	r3, #1
 800ae92:	617b      	str	r3, [r7, #20]
 800ae94:	4b0a      	ldr	r3, [pc, #40]	@ (800aec0 <xTaskRemoveFromEventList+0xc4>)
 800ae96:	2201      	movs	r2, #1
 800ae98:	601a      	str	r2, [r3, #0]
 800ae9a:	e001      	b.n	800aea0 <xTaskRemoveFromEventList+0xa4>
 800ae9c:	2300      	movs	r3, #0
 800ae9e:	617b      	str	r3, [r7, #20]
 800aea0:	697b      	ldr	r3, [r7, #20]
 800aea2:	4618      	mov	r0, r3
 800aea4:	3718      	adds	r7, #24
 800aea6:	46bd      	mov	sp, r7
 800aea8:	bd80      	pop	{r7, pc}
 800aeaa:	bf00      	nop
 800aeac:	20025f58 	.word	0x20025f58
 800aeb0:	20025f40 	.word	0x20025f40
 800aeb4:	20025e7c 	.word	0x20025e7c
 800aeb8:	20025f10 	.word	0x20025f10
 800aebc:	20025e78 	.word	0x20025e78
 800aec0:	20025f4c 	.word	0x20025f4c

0800aec4 <vTaskInternalSetTimeOutState>:
 800aec4:	b480      	push	{r7}
 800aec6:	b083      	sub	sp, #12
 800aec8:	af00      	add	r7, sp, #0
 800aeca:	6078      	str	r0, [r7, #4]
 800aecc:	4b06      	ldr	r3, [pc, #24]	@ (800aee8 <vTaskInternalSetTimeOutState+0x24>)
 800aece:	681a      	ldr	r2, [r3, #0]
 800aed0:	687b      	ldr	r3, [r7, #4]
 800aed2:	601a      	str	r2, [r3, #0]
 800aed4:	4b05      	ldr	r3, [pc, #20]	@ (800aeec <vTaskInternalSetTimeOutState+0x28>)
 800aed6:	681a      	ldr	r2, [r3, #0]
 800aed8:	687b      	ldr	r3, [r7, #4]
 800aeda:	605a      	str	r2, [r3, #4]
 800aedc:	bf00      	nop
 800aede:	370c      	adds	r7, #12
 800aee0:	46bd      	mov	sp, r7
 800aee2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aee6:	4770      	bx	lr
 800aee8:	20025f50 	.word	0x20025f50
 800aeec:	20025f3c 	.word	0x20025f3c

0800aef0 <xTaskCheckForTimeOut>:
 800aef0:	b580      	push	{r7, lr}
 800aef2:	b088      	sub	sp, #32
 800aef4:	af00      	add	r7, sp, #0
 800aef6:	6078      	str	r0, [r7, #4]
 800aef8:	6039      	str	r1, [r7, #0]
 800aefa:	687b      	ldr	r3, [r7, #4]
 800aefc:	2b00      	cmp	r3, #0
 800aefe:	d10b      	bne.n	800af18 <xTaskCheckForTimeOut+0x28>
 800af00:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800af04:	f383 8811 	msr	BASEPRI, r3
 800af08:	f3bf 8f6f 	isb	sy
 800af0c:	f3bf 8f4f 	dsb	sy
 800af10:	613b      	str	r3, [r7, #16]
 800af12:	bf00      	nop
 800af14:	bf00      	nop
 800af16:	e7fd      	b.n	800af14 <xTaskCheckForTimeOut+0x24>
 800af18:	683b      	ldr	r3, [r7, #0]
 800af1a:	2b00      	cmp	r3, #0
 800af1c:	d10b      	bne.n	800af36 <xTaskCheckForTimeOut+0x46>
 800af1e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800af22:	f383 8811 	msr	BASEPRI, r3
 800af26:	f3bf 8f6f 	isb	sy
 800af2a:	f3bf 8f4f 	dsb	sy
 800af2e:	60fb      	str	r3, [r7, #12]
 800af30:	bf00      	nop
 800af32:	bf00      	nop
 800af34:	e7fd      	b.n	800af32 <xTaskCheckForTimeOut+0x42>
 800af36:	f000 f98f 	bl	800b258 <vPortEnterCritical>
 800af3a:	4b1d      	ldr	r3, [pc, #116]	@ (800afb0 <xTaskCheckForTimeOut+0xc0>)
 800af3c:	681b      	ldr	r3, [r3, #0]
 800af3e:	61bb      	str	r3, [r7, #24]
 800af40:	687b      	ldr	r3, [r7, #4]
 800af42:	685b      	ldr	r3, [r3, #4]
 800af44:	69ba      	ldr	r2, [r7, #24]
 800af46:	1ad3      	subs	r3, r2, r3
 800af48:	617b      	str	r3, [r7, #20]
 800af4a:	683b      	ldr	r3, [r7, #0]
 800af4c:	681b      	ldr	r3, [r3, #0]
 800af4e:	f1b3 3fff 	cmp.w	r3, #4294967295	@ 0xffffffff
 800af52:	d102      	bne.n	800af5a <xTaskCheckForTimeOut+0x6a>
 800af54:	2300      	movs	r3, #0
 800af56:	61fb      	str	r3, [r7, #28]
 800af58:	e023      	b.n	800afa2 <xTaskCheckForTimeOut+0xb2>
 800af5a:	687b      	ldr	r3, [r7, #4]
 800af5c:	681a      	ldr	r2, [r3, #0]
 800af5e:	4b15      	ldr	r3, [pc, #84]	@ (800afb4 <xTaskCheckForTimeOut+0xc4>)
 800af60:	681b      	ldr	r3, [r3, #0]
 800af62:	429a      	cmp	r2, r3
 800af64:	d007      	beq.n	800af76 <xTaskCheckForTimeOut+0x86>
 800af66:	687b      	ldr	r3, [r7, #4]
 800af68:	685b      	ldr	r3, [r3, #4]
 800af6a:	69ba      	ldr	r2, [r7, #24]
 800af6c:	429a      	cmp	r2, r3
 800af6e:	d302      	bcc.n	800af76 <xTaskCheckForTimeOut+0x86>
 800af70:	2301      	movs	r3, #1
 800af72:	61fb      	str	r3, [r7, #28]
 800af74:	e015      	b.n	800afa2 <xTaskCheckForTimeOut+0xb2>
 800af76:	683b      	ldr	r3, [r7, #0]
 800af78:	681b      	ldr	r3, [r3, #0]
 800af7a:	697a      	ldr	r2, [r7, #20]
 800af7c:	429a      	cmp	r2, r3
 800af7e:	d20b      	bcs.n	800af98 <xTaskCheckForTimeOut+0xa8>
 800af80:	683b      	ldr	r3, [r7, #0]
 800af82:	681a      	ldr	r2, [r3, #0]
 800af84:	697b      	ldr	r3, [r7, #20]
 800af86:	1ad2      	subs	r2, r2, r3
 800af88:	683b      	ldr	r3, [r7, #0]
 800af8a:	601a      	str	r2, [r3, #0]
 800af8c:	6878      	ldr	r0, [r7, #4]
 800af8e:	f7ff ff99 	bl	800aec4 <vTaskInternalSetTimeOutState>
 800af92:	2300      	movs	r3, #0
 800af94:	61fb      	str	r3, [r7, #28]
 800af96:	e004      	b.n	800afa2 <xTaskCheckForTimeOut+0xb2>
 800af98:	683b      	ldr	r3, [r7, #0]
 800af9a:	2200      	movs	r2, #0
 800af9c:	601a      	str	r2, [r3, #0]
 800af9e:	2301      	movs	r3, #1
 800afa0:	61fb      	str	r3, [r7, #28]
 800afa2:	f000 f98b 	bl	800b2bc <vPortExitCritical>
 800afa6:	69fb      	ldr	r3, [r7, #28]
 800afa8:	4618      	mov	r0, r3
 800afaa:	3720      	adds	r7, #32
 800afac:	46bd      	mov	sp, r7
 800afae:	bd80      	pop	{r7, pc}
 800afb0:	20025f3c 	.word	0x20025f3c
 800afb4:	20025f50 	.word	0x20025f50

0800afb8 <vTaskMissedYield>:
 800afb8:	b480      	push	{r7}
 800afba:	af00      	add	r7, sp, #0
 800afbc:	4b03      	ldr	r3, [pc, #12]	@ (800afcc <vTaskMissedYield+0x14>)
 800afbe:	2201      	movs	r2, #1
 800afc0:	601a      	str	r2, [r3, #0]
 800afc2:	bf00      	nop
 800afc4:	46bd      	mov	sp, r7
 800afc6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800afca:	4770      	bx	lr
 800afcc:	20025f4c 	.word	0x20025f4c

0800afd0 <prvResetNextTaskUnblockTime>:
 800afd0:	b480      	push	{r7}
 800afd2:	b083      	sub	sp, #12
 800afd4:	af00      	add	r7, sp, #0
 800afd6:	4b0c      	ldr	r3, [pc, #48]	@ (800b008 <prvResetNextTaskUnblockTime+0x38>)
 800afd8:	681b      	ldr	r3, [r3, #0]
 800afda:	681b      	ldr	r3, [r3, #0]
 800afdc:	2b00      	cmp	r3, #0
 800afde:	d104      	bne.n	800afea <prvResetNextTaskUnblockTime+0x1a>
 800afe0:	4b0a      	ldr	r3, [pc, #40]	@ (800b00c <prvResetNextTaskUnblockTime+0x3c>)
 800afe2:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 800afe6:	601a      	str	r2, [r3, #0]
 800afe8:	e008      	b.n	800affc <prvResetNextTaskUnblockTime+0x2c>
 800afea:	4b07      	ldr	r3, [pc, #28]	@ (800b008 <prvResetNextTaskUnblockTime+0x38>)
 800afec:	681b      	ldr	r3, [r3, #0]
 800afee:	68db      	ldr	r3, [r3, #12]
 800aff0:	68db      	ldr	r3, [r3, #12]
 800aff2:	607b      	str	r3, [r7, #4]
 800aff4:	687b      	ldr	r3, [r7, #4]
 800aff6:	685b      	ldr	r3, [r3, #4]
 800aff8:	4a04      	ldr	r2, [pc, #16]	@ (800b00c <prvResetNextTaskUnblockTime+0x3c>)
 800affa:	6013      	str	r3, [r2, #0]
 800affc:	bf00      	nop
 800affe:	370c      	adds	r7, #12
 800b000:	46bd      	mov	sp, r7
 800b002:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b006:	4770      	bx	lr
 800b008:	20025f08 	.word	0x20025f08
 800b00c:	20025f54 	.word	0x20025f54

0800b010 <xTaskGetSchedulerState>:
 800b010:	b480      	push	{r7}
 800b012:	b083      	sub	sp, #12
 800b014:	af00      	add	r7, sp, #0
 800b016:	4b0b      	ldr	r3, [pc, #44]	@ (800b044 <xTaskGetSchedulerState+0x34>)
 800b018:	681b      	ldr	r3, [r3, #0]
 800b01a:	2b00      	cmp	r3, #0
 800b01c:	d102      	bne.n	800b024 <xTaskGetSchedulerState+0x14>
 800b01e:	2301      	movs	r3, #1
 800b020:	607b      	str	r3, [r7, #4]
 800b022:	e008      	b.n	800b036 <xTaskGetSchedulerState+0x26>
 800b024:	4b08      	ldr	r3, [pc, #32]	@ (800b048 <xTaskGetSchedulerState+0x38>)
 800b026:	681b      	ldr	r3, [r3, #0]
 800b028:	2b00      	cmp	r3, #0
 800b02a:	d102      	bne.n	800b032 <xTaskGetSchedulerState+0x22>
 800b02c:	2302      	movs	r3, #2
 800b02e:	607b      	str	r3, [r7, #4]
 800b030:	e001      	b.n	800b036 <xTaskGetSchedulerState+0x26>
 800b032:	2300      	movs	r3, #0
 800b034:	607b      	str	r3, [r7, #4]
 800b036:	687b      	ldr	r3, [r7, #4]
 800b038:	4618      	mov	r0, r3
 800b03a:	370c      	adds	r7, #12
 800b03c:	46bd      	mov	sp, r7
 800b03e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b042:	4770      	bx	lr
 800b044:	20025f44 	.word	0x20025f44
 800b048:	20025f58 	.word	0x20025f58

0800b04c <xTaskPriorityDisinherit>:
 800b04c:	b580      	push	{r7, lr}
 800b04e:	b086      	sub	sp, #24
 800b050:	af00      	add	r7, sp, #0
 800b052:	6078      	str	r0, [r7, #4]
 800b054:	687b      	ldr	r3, [r7, #4]
 800b056:	613b      	str	r3, [r7, #16]
 800b058:	2300      	movs	r3, #0
 800b05a:	617b      	str	r3, [r7, #20]
 800b05c:	687b      	ldr	r3, [r7, #4]
 800b05e:	2b00      	cmp	r3, #0
 800b060:	d070      	beq.n	800b144 <xTaskPriorityDisinherit+0xf8>
 800b062:	4b3b      	ldr	r3, [pc, #236]	@ (800b150 <xTaskPriorityDisinherit+0x104>)
 800b064:	681b      	ldr	r3, [r3, #0]
 800b066:	693a      	ldr	r2, [r7, #16]
 800b068:	429a      	cmp	r2, r3
 800b06a:	d00b      	beq.n	800b084 <xTaskPriorityDisinherit+0x38>
 800b06c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800b070:	f383 8811 	msr	BASEPRI, r3
 800b074:	f3bf 8f6f 	isb	sy
 800b078:	f3bf 8f4f 	dsb	sy
 800b07c:	60fb      	str	r3, [r7, #12]
 800b07e:	bf00      	nop
 800b080:	bf00      	nop
 800b082:	e7fd      	b.n	800b080 <xTaskPriorityDisinherit+0x34>
 800b084:	693b      	ldr	r3, [r7, #16]
 800b086:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800b088:	2b00      	cmp	r3, #0
 800b08a:	d10b      	bne.n	800b0a4 <xTaskPriorityDisinherit+0x58>
 800b08c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800b090:	f383 8811 	msr	BASEPRI, r3
 800b094:	f3bf 8f6f 	isb	sy
 800b098:	f3bf 8f4f 	dsb	sy
 800b09c:	60bb      	str	r3, [r7, #8]
 800b09e:	bf00      	nop
 800b0a0:	bf00      	nop
 800b0a2:	e7fd      	b.n	800b0a0 <xTaskPriorityDisinherit+0x54>
 800b0a4:	693b      	ldr	r3, [r7, #16]
 800b0a6:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800b0a8:	1e5a      	subs	r2, r3, #1
 800b0aa:	693b      	ldr	r3, [r7, #16]
 800b0ac:	649a      	str	r2, [r3, #72]	@ 0x48
 800b0ae:	693b      	ldr	r3, [r7, #16]
 800b0b0:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800b0b2:	693b      	ldr	r3, [r7, #16]
 800b0b4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800b0b6:	429a      	cmp	r2, r3
 800b0b8:	d044      	beq.n	800b144 <xTaskPriorityDisinherit+0xf8>
 800b0ba:	693b      	ldr	r3, [r7, #16]
 800b0bc:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800b0be:	2b00      	cmp	r3, #0
 800b0c0:	d140      	bne.n	800b144 <xTaskPriorityDisinherit+0xf8>
 800b0c2:	693b      	ldr	r3, [r7, #16]
 800b0c4:	3304      	adds	r3, #4
 800b0c6:	4618      	mov	r0, r3
 800b0c8:	f7ff fa11 	bl	800a4ee <uxListRemove>
 800b0cc:	4603      	mov	r3, r0
 800b0ce:	2b00      	cmp	r3, #0
 800b0d0:	d115      	bne.n	800b0fe <xTaskPriorityDisinherit+0xb2>
 800b0d2:	693b      	ldr	r3, [r7, #16]
 800b0d4:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800b0d6:	491f      	ldr	r1, [pc, #124]	@ (800b154 <xTaskPriorityDisinherit+0x108>)
 800b0d8:	4613      	mov	r3, r2
 800b0da:	009b      	lsls	r3, r3, #2
 800b0dc:	4413      	add	r3, r2
 800b0de:	009b      	lsls	r3, r3, #2
 800b0e0:	440b      	add	r3, r1
 800b0e2:	681b      	ldr	r3, [r3, #0]
 800b0e4:	2b00      	cmp	r3, #0
 800b0e6:	d10a      	bne.n	800b0fe <xTaskPriorityDisinherit+0xb2>
 800b0e8:	693b      	ldr	r3, [r7, #16]
 800b0ea:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b0ec:	2201      	movs	r2, #1
 800b0ee:	fa02 f303 	lsl.w	r3, r2, r3
 800b0f2:	43da      	mvns	r2, r3
 800b0f4:	4b18      	ldr	r3, [pc, #96]	@ (800b158 <xTaskPriorityDisinherit+0x10c>)
 800b0f6:	681b      	ldr	r3, [r3, #0]
 800b0f8:	4013      	ands	r3, r2
 800b0fa:	4a17      	ldr	r2, [pc, #92]	@ (800b158 <xTaskPriorityDisinherit+0x10c>)
 800b0fc:	6013      	str	r3, [r2, #0]
 800b0fe:	693b      	ldr	r3, [r7, #16]
 800b100:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 800b102:	693b      	ldr	r3, [r7, #16]
 800b104:	62da      	str	r2, [r3, #44]	@ 0x2c
 800b106:	693b      	ldr	r3, [r7, #16]
 800b108:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b10a:	f1c3 0207 	rsb	r2, r3, #7
 800b10e:	693b      	ldr	r3, [r7, #16]
 800b110:	619a      	str	r2, [r3, #24]
 800b112:	693b      	ldr	r3, [r7, #16]
 800b114:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b116:	2201      	movs	r2, #1
 800b118:	409a      	lsls	r2, r3
 800b11a:	4b0f      	ldr	r3, [pc, #60]	@ (800b158 <xTaskPriorityDisinherit+0x10c>)
 800b11c:	681b      	ldr	r3, [r3, #0]
 800b11e:	4313      	orrs	r3, r2
 800b120:	4a0d      	ldr	r2, [pc, #52]	@ (800b158 <xTaskPriorityDisinherit+0x10c>)
 800b122:	6013      	str	r3, [r2, #0]
 800b124:	693b      	ldr	r3, [r7, #16]
 800b126:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800b128:	4613      	mov	r3, r2
 800b12a:	009b      	lsls	r3, r3, #2
 800b12c:	4413      	add	r3, r2
 800b12e:	009b      	lsls	r3, r3, #2
 800b130:	4a08      	ldr	r2, [pc, #32]	@ (800b154 <xTaskPriorityDisinherit+0x108>)
 800b132:	441a      	add	r2, r3
 800b134:	693b      	ldr	r3, [r7, #16]
 800b136:	3304      	adds	r3, #4
 800b138:	4619      	mov	r1, r3
 800b13a:	4610      	mov	r0, r2
 800b13c:	f7ff f97a 	bl	800a434 <vListInsertEnd>
 800b140:	2301      	movs	r3, #1
 800b142:	617b      	str	r3, [r7, #20]
 800b144:	697b      	ldr	r3, [r7, #20]
 800b146:	4618      	mov	r0, r3
 800b148:	3718      	adds	r7, #24
 800b14a:	46bd      	mov	sp, r7
 800b14c:	bd80      	pop	{r7, pc}
 800b14e:	bf00      	nop
 800b150:	20025e78 	.word	0x20025e78
 800b154:	20025e7c 	.word	0x20025e7c
 800b158:	20025f40 	.word	0x20025f40

0800b15c <prvAddCurrentTaskToDelayedList>:
 800b15c:	b580      	push	{r7, lr}
 800b15e:	b084      	sub	sp, #16
 800b160:	af00      	add	r7, sp, #0
 800b162:	6078      	str	r0, [r7, #4]
 800b164:	6039      	str	r1, [r7, #0]
 800b166:	4b29      	ldr	r3, [pc, #164]	@ (800b20c <prvAddCurrentTaskToDelayedList+0xb0>)
 800b168:	681b      	ldr	r3, [r3, #0]
 800b16a:	60fb      	str	r3, [r7, #12]
 800b16c:	4b28      	ldr	r3, [pc, #160]	@ (800b210 <prvAddCurrentTaskToDelayedList+0xb4>)
 800b16e:	681b      	ldr	r3, [r3, #0]
 800b170:	3304      	adds	r3, #4
 800b172:	4618      	mov	r0, r3
 800b174:	f7ff f9bb 	bl	800a4ee <uxListRemove>
 800b178:	4603      	mov	r3, r0
 800b17a:	2b00      	cmp	r3, #0
 800b17c:	d10b      	bne.n	800b196 <prvAddCurrentTaskToDelayedList+0x3a>
 800b17e:	4b24      	ldr	r3, [pc, #144]	@ (800b210 <prvAddCurrentTaskToDelayedList+0xb4>)
 800b180:	681b      	ldr	r3, [r3, #0]
 800b182:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b184:	2201      	movs	r2, #1
 800b186:	fa02 f303 	lsl.w	r3, r2, r3
 800b18a:	43da      	mvns	r2, r3
 800b18c:	4b21      	ldr	r3, [pc, #132]	@ (800b214 <prvAddCurrentTaskToDelayedList+0xb8>)
 800b18e:	681b      	ldr	r3, [r3, #0]
 800b190:	4013      	ands	r3, r2
 800b192:	4a20      	ldr	r2, [pc, #128]	@ (800b214 <prvAddCurrentTaskToDelayedList+0xb8>)
 800b194:	6013      	str	r3, [r2, #0]
 800b196:	687b      	ldr	r3, [r7, #4]
 800b198:	f1b3 3fff 	cmp.w	r3, #4294967295	@ 0xffffffff
 800b19c:	d10a      	bne.n	800b1b4 <prvAddCurrentTaskToDelayedList+0x58>
 800b19e:	683b      	ldr	r3, [r7, #0]
 800b1a0:	2b00      	cmp	r3, #0
 800b1a2:	d007      	beq.n	800b1b4 <prvAddCurrentTaskToDelayedList+0x58>
 800b1a4:	4b1a      	ldr	r3, [pc, #104]	@ (800b210 <prvAddCurrentTaskToDelayedList+0xb4>)
 800b1a6:	681b      	ldr	r3, [r3, #0]
 800b1a8:	3304      	adds	r3, #4
 800b1aa:	4619      	mov	r1, r3
 800b1ac:	481a      	ldr	r0, [pc, #104]	@ (800b218 <prvAddCurrentTaskToDelayedList+0xbc>)
 800b1ae:	f7ff f941 	bl	800a434 <vListInsertEnd>
 800b1b2:	e026      	b.n	800b202 <prvAddCurrentTaskToDelayedList+0xa6>
 800b1b4:	68fa      	ldr	r2, [r7, #12]
 800b1b6:	687b      	ldr	r3, [r7, #4]
 800b1b8:	4413      	add	r3, r2
 800b1ba:	60bb      	str	r3, [r7, #8]
 800b1bc:	4b14      	ldr	r3, [pc, #80]	@ (800b210 <prvAddCurrentTaskToDelayedList+0xb4>)
 800b1be:	681b      	ldr	r3, [r3, #0]
 800b1c0:	68ba      	ldr	r2, [r7, #8]
 800b1c2:	605a      	str	r2, [r3, #4]
 800b1c4:	68ba      	ldr	r2, [r7, #8]
 800b1c6:	68fb      	ldr	r3, [r7, #12]
 800b1c8:	429a      	cmp	r2, r3
 800b1ca:	d209      	bcs.n	800b1e0 <prvAddCurrentTaskToDelayedList+0x84>
 800b1cc:	4b13      	ldr	r3, [pc, #76]	@ (800b21c <prvAddCurrentTaskToDelayedList+0xc0>)
 800b1ce:	681a      	ldr	r2, [r3, #0]
 800b1d0:	4b0f      	ldr	r3, [pc, #60]	@ (800b210 <prvAddCurrentTaskToDelayedList+0xb4>)
 800b1d2:	681b      	ldr	r3, [r3, #0]
 800b1d4:	3304      	adds	r3, #4
 800b1d6:	4619      	mov	r1, r3
 800b1d8:	4610      	mov	r0, r2
 800b1da:	f7ff f94f 	bl	800a47c <vListInsert>
 800b1de:	e010      	b.n	800b202 <prvAddCurrentTaskToDelayedList+0xa6>
 800b1e0:	4b0f      	ldr	r3, [pc, #60]	@ (800b220 <prvAddCurrentTaskToDelayedList+0xc4>)
 800b1e2:	681a      	ldr	r2, [r3, #0]
 800b1e4:	4b0a      	ldr	r3, [pc, #40]	@ (800b210 <prvAddCurrentTaskToDelayedList+0xb4>)
 800b1e6:	681b      	ldr	r3, [r3, #0]
 800b1e8:	3304      	adds	r3, #4
 800b1ea:	4619      	mov	r1, r3
 800b1ec:	4610      	mov	r0, r2
 800b1ee:	f7ff f945 	bl	800a47c <vListInsert>
 800b1f2:	4b0c      	ldr	r3, [pc, #48]	@ (800b224 <prvAddCurrentTaskToDelayedList+0xc8>)
 800b1f4:	681b      	ldr	r3, [r3, #0]
 800b1f6:	68ba      	ldr	r2, [r7, #8]
 800b1f8:	429a      	cmp	r2, r3
 800b1fa:	d202      	bcs.n	800b202 <prvAddCurrentTaskToDelayedList+0xa6>
 800b1fc:	4a09      	ldr	r2, [pc, #36]	@ (800b224 <prvAddCurrentTaskToDelayedList+0xc8>)
 800b1fe:	68bb      	ldr	r3, [r7, #8]
 800b200:	6013      	str	r3, [r2, #0]
 800b202:	bf00      	nop
 800b204:	3710      	adds	r7, #16
 800b206:	46bd      	mov	sp, r7
 800b208:	bd80      	pop	{r7, pc}
 800b20a:	bf00      	nop
 800b20c:	20025f3c 	.word	0x20025f3c
 800b210:	20025e78 	.word	0x20025e78
 800b214:	20025f40 	.word	0x20025f40
 800b218:	20025f24 	.word	0x20025f24
 800b21c:	20025f0c 	.word	0x20025f0c
 800b220:	20025f08 	.word	0x20025f08
 800b224:	20025f54 	.word	0x20025f54
	...

0800b230 <SVC_Handler>:
 800b230:	4b07      	ldr	r3, [pc, #28]	@ (800b250 <pxCurrentTCBConst2>)
 800b232:	6819      	ldr	r1, [r3, #0]
 800b234:	6808      	ldr	r0, [r1, #0]
 800b236:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b23a:	f380 8809 	msr	PSP, r0
 800b23e:	f3bf 8f6f 	isb	sy
 800b242:	f04f 0000 	mov.w	r0, #0
 800b246:	f380 8811 	msr	BASEPRI, r0
 800b24a:	4770      	bx	lr
 800b24c:	f3af 8000 	nop.w

0800b250 <pxCurrentTCBConst2>:
 800b250:	20025e78 	.word	0x20025e78
 800b254:	bf00      	nop
 800b256:	bf00      	nop

0800b258 <vPortEnterCritical>:
 800b258:	b480      	push	{r7}
 800b25a:	b083      	sub	sp, #12
 800b25c:	af00      	add	r7, sp, #0
 800b25e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800b262:	f383 8811 	msr	BASEPRI, r3
 800b266:	f3bf 8f6f 	isb	sy
 800b26a:	f3bf 8f4f 	dsb	sy
 800b26e:	607b      	str	r3, [r7, #4]
 800b270:	bf00      	nop
 800b272:	4b10      	ldr	r3, [pc, #64]	@ (800b2b4 <vPortEnterCritical+0x5c>)
 800b274:	681b      	ldr	r3, [r3, #0]
 800b276:	3301      	adds	r3, #1
 800b278:	4a0e      	ldr	r2, [pc, #56]	@ (800b2b4 <vPortEnterCritical+0x5c>)
 800b27a:	6013      	str	r3, [r2, #0]
 800b27c:	4b0d      	ldr	r3, [pc, #52]	@ (800b2b4 <vPortEnterCritical+0x5c>)
 800b27e:	681b      	ldr	r3, [r3, #0]
 800b280:	2b01      	cmp	r3, #1
 800b282:	d110      	bne.n	800b2a6 <vPortEnterCritical+0x4e>
 800b284:	4b0c      	ldr	r3, [pc, #48]	@ (800b2b8 <vPortEnterCritical+0x60>)
 800b286:	681b      	ldr	r3, [r3, #0]
 800b288:	b2db      	uxtb	r3, r3
 800b28a:	2b00      	cmp	r3, #0
 800b28c:	d00b      	beq.n	800b2a6 <vPortEnterCritical+0x4e>
 800b28e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800b292:	f383 8811 	msr	BASEPRI, r3
 800b296:	f3bf 8f6f 	isb	sy
 800b29a:	f3bf 8f4f 	dsb	sy
 800b29e:	603b      	str	r3, [r7, #0]
 800b2a0:	bf00      	nop
 800b2a2:	bf00      	nop
 800b2a4:	e7fd      	b.n	800b2a2 <vPortEnterCritical+0x4a>
 800b2a6:	bf00      	nop
 800b2a8:	370c      	adds	r7, #12
 800b2aa:	46bd      	mov	sp, r7
 800b2ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b2b0:	4770      	bx	lr
 800b2b2:	bf00      	nop
 800b2b4:	20000014 	.word	0x20000014
 800b2b8:	e000ed04 	.word	0xe000ed04

0800b2bc <vPortExitCritical>:
 800b2bc:	b480      	push	{r7}
 800b2be:	b083      	sub	sp, #12
 800b2c0:	af00      	add	r7, sp, #0
 800b2c2:	4b12      	ldr	r3, [pc, #72]	@ (800b30c <vPortExitCritical+0x50>)
 800b2c4:	681b      	ldr	r3, [r3, #0]
 800b2c6:	2b00      	cmp	r3, #0
 800b2c8:	d10b      	bne.n	800b2e2 <vPortExitCritical+0x26>
 800b2ca:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800b2ce:	f383 8811 	msr	BASEPRI, r3
 800b2d2:	f3bf 8f6f 	isb	sy
 800b2d6:	f3bf 8f4f 	dsb	sy
 800b2da:	607b      	str	r3, [r7, #4]
 800b2dc:	bf00      	nop
 800b2de:	bf00      	nop
 800b2e0:	e7fd      	b.n	800b2de <vPortExitCritical+0x22>
 800b2e2:	4b0a      	ldr	r3, [pc, #40]	@ (800b30c <vPortExitCritical+0x50>)
 800b2e4:	681b      	ldr	r3, [r3, #0]
 800b2e6:	3b01      	subs	r3, #1
 800b2e8:	4a08      	ldr	r2, [pc, #32]	@ (800b30c <vPortExitCritical+0x50>)
 800b2ea:	6013      	str	r3, [r2, #0]
 800b2ec:	4b07      	ldr	r3, [pc, #28]	@ (800b30c <vPortExitCritical+0x50>)
 800b2ee:	681b      	ldr	r3, [r3, #0]
 800b2f0:	2b00      	cmp	r3, #0
 800b2f2:	d105      	bne.n	800b300 <vPortExitCritical+0x44>
 800b2f4:	2300      	movs	r3, #0
 800b2f6:	603b      	str	r3, [r7, #0]
 800b2f8:	683b      	ldr	r3, [r7, #0]
 800b2fa:	f383 8811 	msr	BASEPRI, r3
 800b2fe:	bf00      	nop
 800b300:	bf00      	nop
 800b302:	370c      	adds	r7, #12
 800b304:	46bd      	mov	sp, r7
 800b306:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b30a:	4770      	bx	lr
 800b30c:	20000014 	.word	0x20000014

0800b310 <PendSV_Handler>:
 800b310:	f3ef 8009 	mrs	r0, PSP
 800b314:	f3bf 8f6f 	isb	sy
 800b318:	4b15      	ldr	r3, [pc, #84]	@ (800b370 <pxCurrentTCBConst>)
 800b31a:	681a      	ldr	r2, [r3, #0]
 800b31c:	f01e 0f10 	tst.w	lr, #16
 800b320:	bf08      	it	eq
 800b322:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 800b326:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b32a:	6010      	str	r0, [r2, #0]
 800b32c:	e92d 0009 	stmdb	sp!, {r0, r3}
 800b330:	f04f 0050 	mov.w	r0, #80	@ 0x50
 800b334:	f380 8811 	msr	BASEPRI, r0
 800b338:	f3bf 8f4f 	dsb	sy
 800b33c:	f3bf 8f6f 	isb	sy
 800b340:	f7ff fcda 	bl	800acf8 <vTaskSwitchContext>
 800b344:	f04f 0000 	mov.w	r0, #0
 800b348:	f380 8811 	msr	BASEPRI, r0
 800b34c:	bc09      	pop	{r0, r3}
 800b34e:	6819      	ldr	r1, [r3, #0]
 800b350:	6808      	ldr	r0, [r1, #0]
 800b352:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b356:	f01e 0f10 	tst.w	lr, #16
 800b35a:	bf08      	it	eq
 800b35c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 800b360:	f380 8809 	msr	PSP, r0
 800b364:	f3bf 8f6f 	isb	sy
 800b368:	4770      	bx	lr
 800b36a:	bf00      	nop
 800b36c:	f3af 8000 	nop.w

0800b370 <pxCurrentTCBConst>:
 800b370:	20025e78 	.word	0x20025e78
 800b374:	bf00      	nop
 800b376:	bf00      	nop

0800b378 <SysTick_Handler>:
 800b378:	b580      	push	{r7, lr}
 800b37a:	b082      	sub	sp, #8
 800b37c:	af00      	add	r7, sp, #0
 800b37e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800b382:	f383 8811 	msr	BASEPRI, r3
 800b386:	f3bf 8f6f 	isb	sy
 800b38a:	f3bf 8f4f 	dsb	sy
 800b38e:	607b      	str	r3, [r7, #4]
 800b390:	bf00      	nop
 800b392:	f7ff fbf7 	bl	800ab84 <xTaskIncrementTick>
 800b396:	4603      	mov	r3, r0
 800b398:	2b00      	cmp	r3, #0
 800b39a:	d003      	beq.n	800b3a4 <SysTick_Handler+0x2c>
 800b39c:	4b06      	ldr	r3, [pc, #24]	@ (800b3b8 <SysTick_Handler+0x40>)
 800b39e:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800b3a2:	601a      	str	r2, [r3, #0]
 800b3a4:	2300      	movs	r3, #0
 800b3a6:	603b      	str	r3, [r7, #0]
 800b3a8:	683b      	ldr	r3, [r7, #0]
 800b3aa:	f383 8811 	msr	BASEPRI, r3
 800b3ae:	bf00      	nop
 800b3b0:	bf00      	nop
 800b3b2:	3708      	adds	r7, #8
 800b3b4:	46bd      	mov	sp, r7
 800b3b6:	bd80      	pop	{r7, pc}
 800b3b8:	e000ed04 	.word	0xe000ed04

0800b3bc <vPortValidateInterruptPriority>:
 800b3bc:	b480      	push	{r7}
 800b3be:	b085      	sub	sp, #20
 800b3c0:	af00      	add	r7, sp, #0
 800b3c2:	f3ef 8305 	mrs	r3, IPSR
 800b3c6:	60fb      	str	r3, [r7, #12]
 800b3c8:	68fb      	ldr	r3, [r7, #12]
 800b3ca:	2b0f      	cmp	r3, #15
 800b3cc:	d915      	bls.n	800b3fa <vPortValidateInterruptPriority+0x3e>
 800b3ce:	4a18      	ldr	r2, [pc, #96]	@ (800b430 <vPortValidateInterruptPriority+0x74>)
 800b3d0:	68fb      	ldr	r3, [r7, #12]
 800b3d2:	4413      	add	r3, r2
 800b3d4:	781b      	ldrb	r3, [r3, #0]
 800b3d6:	72fb      	strb	r3, [r7, #11]
 800b3d8:	4b16      	ldr	r3, [pc, #88]	@ (800b434 <vPortValidateInterruptPriority+0x78>)
 800b3da:	781b      	ldrb	r3, [r3, #0]
 800b3dc:	7afa      	ldrb	r2, [r7, #11]
 800b3de:	429a      	cmp	r2, r3
 800b3e0:	d20b      	bcs.n	800b3fa <vPortValidateInterruptPriority+0x3e>
 800b3e2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800b3e6:	f383 8811 	msr	BASEPRI, r3
 800b3ea:	f3bf 8f6f 	isb	sy
 800b3ee:	f3bf 8f4f 	dsb	sy
 800b3f2:	607b      	str	r3, [r7, #4]
 800b3f4:	bf00      	nop
 800b3f6:	bf00      	nop
 800b3f8:	e7fd      	b.n	800b3f6 <vPortValidateInterruptPriority+0x3a>
 800b3fa:	4b0f      	ldr	r3, [pc, #60]	@ (800b438 <vPortValidateInterruptPriority+0x7c>)
 800b3fc:	681b      	ldr	r3, [r3, #0]
 800b3fe:	f403 62e0 	and.w	r2, r3, #1792	@ 0x700
 800b402:	4b0e      	ldr	r3, [pc, #56]	@ (800b43c <vPortValidateInterruptPriority+0x80>)
 800b404:	681b      	ldr	r3, [r3, #0]
 800b406:	429a      	cmp	r2, r3
 800b408:	d90b      	bls.n	800b422 <vPortValidateInterruptPriority+0x66>
 800b40a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800b40e:	f383 8811 	msr	BASEPRI, r3
 800b412:	f3bf 8f6f 	isb	sy
 800b416:	f3bf 8f4f 	dsb	sy
 800b41a:	603b      	str	r3, [r7, #0]
 800b41c:	bf00      	nop
 800b41e:	bf00      	nop
 800b420:	e7fd      	b.n	800b41e <vPortValidateInterruptPriority+0x62>
 800b422:	bf00      	nop
 800b424:	3714      	adds	r7, #20
 800b426:	46bd      	mov	sp, r7
 800b428:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b42c:	4770      	bx	lr
 800b42e:	bf00      	nop
 800b430:	e000e3f0 	.word	0xe000e3f0
 800b434:	20025f5c 	.word	0x20025f5c
 800b438:	e000ed0c 	.word	0xe000ed0c
 800b43c:	20025f60 	.word	0x20025f60

0800b440 <HAL_HCD_SOF_Callback>:
  * @brief  SOF callback.
  * @param  hhcd: HCD handle
  * @retval None
  */
void HAL_HCD_SOF_Callback(HCD_HandleTypeDef *hhcd)
{
 800b440:	b580      	push	{r7, lr}
 800b442:	b082      	sub	sp, #8
 800b444:	af00      	add	r7, sp, #0
 800b446:	6078      	str	r0, [r7, #4]
  USBH_LL_IncTimer(hhcd->pData);
 800b448:	687b      	ldr	r3, [r7, #4]
 800b44a:	f8d3 33dc 	ldr.w	r3, [r3, #988]	@ 0x3dc
 800b44e:	4618      	mov	r0, r3
 800b450:	f7fe fec2 	bl	800a1d8 <USBH_LL_IncTimer>
}
 800b454:	bf00      	nop
 800b456:	3708      	adds	r7, #8
 800b458:	46bd      	mov	sp, r7
 800b45a:	bd80      	pop	{r7, pc}

0800b45c <HAL_HCD_Connect_Callback>:
  * @brief  SOF callback.
  * @param  hhcd: HCD handle
  * @retval None
  */
void HAL_HCD_Connect_Callback(HCD_HandleTypeDef *hhcd)
{
 800b45c:	b580      	push	{r7, lr}
 800b45e:	b082      	sub	sp, #8
 800b460:	af00      	add	r7, sp, #0
 800b462:	6078      	str	r0, [r7, #4]
  USBH_LL_Connect(hhcd->pData);
 800b464:	687b      	ldr	r3, [r7, #4]
 800b466:	f8d3 33dc 	ldr.w	r3, [r3, #988]	@ 0x3dc
 800b46a:	4618      	mov	r0, r3
 800b46c:	f7fe ff06 	bl	800a27c <USBH_LL_Connect>
}
 800b470:	bf00      	nop
 800b472:	3708      	adds	r7, #8
 800b474:	46bd      	mov	sp, r7
 800b476:	bd80      	pop	{r7, pc}

0800b478 <HAL_HCD_Disconnect_Callback>:
  * @brief  SOF callback.
  * @param  hhcd: HCD handle
  * @retval None
  */
void HAL_HCD_Disconnect_Callback(HCD_HandleTypeDef *hhcd)
{
 800b478:	b580      	push	{r7, lr}
 800b47a:	b082      	sub	sp, #8
 800b47c:	af00      	add	r7, sp, #0
 800b47e:	6078      	str	r0, [r7, #4]
  USBH_LL_Disconnect(hhcd->pData);
 800b480:	687b      	ldr	r3, [r7, #4]
 800b482:	f8d3 33dc 	ldr.w	r3, [r3, #988]	@ 0x3dc
 800b486:	4618      	mov	r0, r3
 800b488:	f7fe ff1b 	bl	800a2c2 <USBH_LL_Disconnect>
}
 800b48c:	bf00      	nop
 800b48e:	3708      	adds	r7, #8
 800b490:	46bd      	mov	sp, r7
 800b492:	bd80      	pop	{r7, pc}

0800b494 <HAL_HCD_HC_NotifyURBChange_Callback>:
  * @param  chnum: channel number
  * @param  urb_state: state
  * @retval None
  */
void HAL_HCD_HC_NotifyURBChange_Callback(HCD_HandleTypeDef *hhcd, uint8_t chnum, HCD_URBStateTypeDef urb_state)
{
 800b494:	b580      	push	{r7, lr}
 800b496:	b082      	sub	sp, #8
 800b498:	af00      	add	r7, sp, #0
 800b49a:	6078      	str	r0, [r7, #4]
 800b49c:	460b      	mov	r3, r1
 800b49e:	70fb      	strb	r3, [r7, #3]
 800b4a0:	4613      	mov	r3, r2
 800b4a2:	70bb      	strb	r3, [r7, #2]
  /* To be used with OS to sync URB state with the global state machine */
#if (USBH_USE_OS == 1)
  USBH_LL_NotifyURBChange(hhcd->pData);
 800b4a4:	687b      	ldr	r3, [r7, #4]
 800b4a6:	f8d3 33dc 	ldr.w	r3, [r3, #988]	@ 0x3dc
 800b4aa:	4618      	mov	r0, r3
 800b4ac:	f7fe ff3b 	bl	800a326 <USBH_LL_NotifyURBChange>
#endif
}
 800b4b0:	bf00      	nop
 800b4b2:	3708      	adds	r7, #8
 800b4b4:	46bd      	mov	sp, r7
 800b4b6:	bd80      	pop	{r7, pc}

0800b4b8 <HAL_HCD_PortEnabled_Callback>:
* @brief  Port Port Enabled callback.
  * @param  hhcd: HCD handle
  * @retval None
  */
void HAL_HCD_PortEnabled_Callback(HCD_HandleTypeDef *hhcd)
{
 800b4b8:	b580      	push	{r7, lr}
 800b4ba:	b082      	sub	sp, #8
 800b4bc:	af00      	add	r7, sp, #0
 800b4be:	6078      	str	r0, [r7, #4]
  USBH_LL_PortEnabled(hhcd->pData);
 800b4c0:	687b      	ldr	r3, [r7, #4]
 800b4c2:	f8d3 33dc 	ldr.w	r3, [r3, #988]	@ 0x3dc
 800b4c6:	4618      	mov	r0, r3
 800b4c8:	f7fe feb0 	bl	800a22c <USBH_LL_PortEnabled>
}
 800b4cc:	bf00      	nop
 800b4ce:	3708      	adds	r7, #8
 800b4d0:	46bd      	mov	sp, r7
 800b4d2:	bd80      	pop	{r7, pc}

0800b4d4 <HAL_HCD_PortDisabled_Callback>:
  * @brief  Port Port Disabled callback.
  * @param  hhcd: HCD handle
  * @retval None
  */
void HAL_HCD_PortDisabled_Callback(HCD_HandleTypeDef *hhcd)
{
 800b4d4:	b580      	push	{r7, lr}
 800b4d6:	b082      	sub	sp, #8
 800b4d8:	af00      	add	r7, sp, #0
 800b4da:	6078      	str	r0, [r7, #4]
  USBH_LL_PortDisabled(hhcd->pData);
 800b4dc:	687b      	ldr	r3, [r7, #4]
 800b4de:	f8d3 33dc 	ldr.w	r3, [r3, #988]	@ 0x3dc
 800b4e2:	4618      	mov	r0, r3
 800b4e4:	f7fe febc 	bl	800a260 <USBH_LL_PortDisabled>
}
 800b4e8:	bf00      	nop
 800b4ea:	3708      	adds	r7, #8
 800b4ec:	46bd      	mov	sp, r7
 800b4ee:	bd80      	pop	{r7, pc}

0800b4f0 <USBH_LL_Stop>:
  * @brief  Stop the low level portion of the host driver.
  * @param  phost: Host handle
  * @retval USBH status
  */
USBH_StatusTypeDef USBH_LL_Stop(USBH_HandleTypeDef *phost)
{
 800b4f0:	b580      	push	{r7, lr}
 800b4f2:	b084      	sub	sp, #16
 800b4f4:	af00      	add	r7, sp, #0
 800b4f6:	6078      	str	r0, [r7, #4]
  HAL_StatusTypeDef hal_status = HAL_OK;
 800b4f8:	2300      	movs	r3, #0
 800b4fa:	73fb      	strb	r3, [r7, #15]
  USBH_StatusTypeDef usb_status = USBH_OK;
 800b4fc:	2300      	movs	r3, #0
 800b4fe:	73bb      	strb	r3, [r7, #14]

  hal_status = HAL_HCD_Stop(phost->pData);
 800b500:	687b      	ldr	r3, [r7, #4]
 800b502:	f8d3 33d0 	ldr.w	r3, [r3, #976]	@ 0x3d0
 800b506:	4618      	mov	r0, r3
 800b508:	f7f9 fa6b 	bl	80049e2 <HAL_HCD_Stop>
 800b50c:	4603      	mov	r3, r0
 800b50e:	73fb      	strb	r3, [r7, #15]

  usb_status = USBH_Get_USB_Status(hal_status);
 800b510:	7bfb      	ldrb	r3, [r7, #15]
 800b512:	4618      	mov	r0, r3
 800b514:	f000 f808 	bl	800b528 <USBH_Get_USB_Status>
 800b518:	4603      	mov	r3, r0
 800b51a:	73bb      	strb	r3, [r7, #14]

  return usb_status;
 800b51c:	7bbb      	ldrb	r3, [r7, #14]
}
 800b51e:	4618      	mov	r0, r3
 800b520:	3710      	adds	r7, #16
 800b522:	46bd      	mov	sp, r7
 800b524:	bd80      	pop	{r7, pc}
	...

0800b528 <USBH_Get_USB_Status>:
  * @brief  Returns the USB status depending on the HAL status:
  * @param  hal_status: HAL status
  * @retval USB status
  */
USBH_StatusTypeDef USBH_Get_USB_Status(HAL_StatusTypeDef hal_status)
{
 800b528:	b480      	push	{r7}
 800b52a:	b085      	sub	sp, #20
 800b52c:	af00      	add	r7, sp, #0
 800b52e:	4603      	mov	r3, r0
 800b530:	71fb      	strb	r3, [r7, #7]
  USBH_StatusTypeDef usb_status = USBH_OK;
 800b532:	2300      	movs	r3, #0
 800b534:	73fb      	strb	r3, [r7, #15]

  switch (hal_status)
 800b536:	79fb      	ldrb	r3, [r7, #7]
 800b538:	2b03      	cmp	r3, #3
 800b53a:	d817      	bhi.n	800b56c <USBH_Get_USB_Status+0x44>
 800b53c:	a201      	add	r2, pc, #4	@ (adr r2, 800b544 <USBH_Get_USB_Status+0x1c>)
 800b53e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800b542:	bf00      	nop
 800b544:	0800b555 	.word	0x0800b555
 800b548:	0800b55b 	.word	0x0800b55b
 800b54c:	0800b561 	.word	0x0800b561
 800b550:	0800b567 	.word	0x0800b567
  {
    case HAL_OK :
      usb_status = USBH_OK;
 800b554:	2300      	movs	r3, #0
 800b556:	73fb      	strb	r3, [r7, #15]
    break;
 800b558:	e00b      	b.n	800b572 <USBH_Get_USB_Status+0x4a>
    case HAL_ERROR :
      usb_status = USBH_FAIL;
 800b55a:	2302      	movs	r3, #2
 800b55c:	73fb      	strb	r3, [r7, #15]
    break;
 800b55e:	e008      	b.n	800b572 <USBH_Get_USB_Status+0x4a>
    case HAL_BUSY :
      usb_status = USBH_BUSY;
 800b560:	2301      	movs	r3, #1
 800b562:	73fb      	strb	r3, [r7, #15]
    break;
 800b564:	e005      	b.n	800b572 <USBH_Get_USB_Status+0x4a>
    case HAL_TIMEOUT :
      usb_status = USBH_FAIL;
 800b566:	2302      	movs	r3, #2
 800b568:	73fb      	strb	r3, [r7, #15]
    break;
 800b56a:	e002      	b.n	800b572 <USBH_Get_USB_Status+0x4a>
    default :
      usb_status = USBH_FAIL;
 800b56c:	2302      	movs	r3, #2
 800b56e:	73fb      	strb	r3, [r7, #15]
    break;
 800b570:	bf00      	nop
  }
  return usb_status;
 800b572:	7bfb      	ldrb	r3, [r7, #15]
}
 800b574:	4618      	mov	r0, r3
 800b576:	3714      	adds	r7, #20
 800b578:	46bd      	mov	sp, r7
 800b57a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b57e:	4770      	bx	lr

0800b580 <malloc>:
 800b580:	4b02      	ldr	r3, [pc, #8]	@ (800b58c <malloc+0xc>)
 800b582:	4601      	mov	r1, r0
 800b584:	6818      	ldr	r0, [r3, #0]
 800b586:	f000 b825 	b.w	800b5d4 <_malloc_r>
 800b58a:	bf00      	nop
 800b58c:	20000024 	.word	0x20000024

0800b590 <sbrk_aligned>:
 800b590:	b570      	push	{r4, r5, r6, lr}
 800b592:	4e0f      	ldr	r6, [pc, #60]	@ (800b5d0 <sbrk_aligned+0x40>)
 800b594:	460c      	mov	r4, r1
 800b596:	6831      	ldr	r1, [r6, #0]
 800b598:	4605      	mov	r5, r0
 800b59a:	b911      	cbnz	r1, 800b5a2 <sbrk_aligned+0x12>
 800b59c:	f000 ff46 	bl	800c42c <_sbrk_r>
 800b5a0:	6030      	str	r0, [r6, #0]
 800b5a2:	4621      	mov	r1, r4
 800b5a4:	4628      	mov	r0, r5
 800b5a6:	f000 ff41 	bl	800c42c <_sbrk_r>
 800b5aa:	1c43      	adds	r3, r0, #1
 800b5ac:	d103      	bne.n	800b5b6 <sbrk_aligned+0x26>
 800b5ae:	f04f 34ff 	mov.w	r4, #4294967295	@ 0xffffffff
 800b5b2:	4620      	mov	r0, r4
 800b5b4:	bd70      	pop	{r4, r5, r6, pc}
 800b5b6:	1cc4      	adds	r4, r0, #3
 800b5b8:	f024 0403 	bic.w	r4, r4, #3
 800b5bc:	42a0      	cmp	r0, r4
 800b5be:	d0f8      	beq.n	800b5b2 <sbrk_aligned+0x22>
 800b5c0:	1a21      	subs	r1, r4, r0
 800b5c2:	4628      	mov	r0, r5
 800b5c4:	f000 ff32 	bl	800c42c <_sbrk_r>
 800b5c8:	3001      	adds	r0, #1
 800b5ca:	d1f2      	bne.n	800b5b2 <sbrk_aligned+0x22>
 800b5cc:	e7ef      	b.n	800b5ae <sbrk_aligned+0x1e>
 800b5ce:	bf00      	nop
 800b5d0:	20026344 	.word	0x20026344

0800b5d4 <_malloc_r>:
 800b5d4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800b5d8:	1ccd      	adds	r5, r1, #3
 800b5da:	f025 0503 	bic.w	r5, r5, #3
 800b5de:	3508      	adds	r5, #8
 800b5e0:	2d0c      	cmp	r5, #12
 800b5e2:	bf38      	it	cc
 800b5e4:	250c      	movcc	r5, #12
 800b5e6:	2d00      	cmp	r5, #0
 800b5e8:	4606      	mov	r6, r0
 800b5ea:	db01      	blt.n	800b5f0 <_malloc_r+0x1c>
 800b5ec:	42a9      	cmp	r1, r5
 800b5ee:	d904      	bls.n	800b5fa <_malloc_r+0x26>
 800b5f0:	230c      	movs	r3, #12
 800b5f2:	6033      	str	r3, [r6, #0]
 800b5f4:	2000      	movs	r0, #0
 800b5f6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800b5fa:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 800b6d0 <_malloc_r+0xfc>
 800b5fe:	f000 f869 	bl	800b6d4 <__malloc_lock>
 800b602:	f8d8 3000 	ldr.w	r3, [r8]
 800b606:	461c      	mov	r4, r3
 800b608:	bb44      	cbnz	r4, 800b65c <_malloc_r+0x88>
 800b60a:	4629      	mov	r1, r5
 800b60c:	4630      	mov	r0, r6
 800b60e:	f7ff ffbf 	bl	800b590 <sbrk_aligned>
 800b612:	1c43      	adds	r3, r0, #1
 800b614:	4604      	mov	r4, r0
 800b616:	d158      	bne.n	800b6ca <_malloc_r+0xf6>
 800b618:	f8d8 4000 	ldr.w	r4, [r8]
 800b61c:	4627      	mov	r7, r4
 800b61e:	2f00      	cmp	r7, #0
 800b620:	d143      	bne.n	800b6aa <_malloc_r+0xd6>
 800b622:	2c00      	cmp	r4, #0
 800b624:	d04b      	beq.n	800b6be <_malloc_r+0xea>
 800b626:	6823      	ldr	r3, [r4, #0]
 800b628:	4639      	mov	r1, r7
 800b62a:	4630      	mov	r0, r6
 800b62c:	eb04 0903 	add.w	r9, r4, r3
 800b630:	f000 fefc 	bl	800c42c <_sbrk_r>
 800b634:	4581      	cmp	r9, r0
 800b636:	d142      	bne.n	800b6be <_malloc_r+0xea>
 800b638:	6821      	ldr	r1, [r4, #0]
 800b63a:	1a6d      	subs	r5, r5, r1
 800b63c:	4629      	mov	r1, r5
 800b63e:	4630      	mov	r0, r6
 800b640:	f7ff ffa6 	bl	800b590 <sbrk_aligned>
 800b644:	3001      	adds	r0, #1
 800b646:	d03a      	beq.n	800b6be <_malloc_r+0xea>
 800b648:	6823      	ldr	r3, [r4, #0]
 800b64a:	442b      	add	r3, r5
 800b64c:	6023      	str	r3, [r4, #0]
 800b64e:	f8d8 3000 	ldr.w	r3, [r8]
 800b652:	685a      	ldr	r2, [r3, #4]
 800b654:	bb62      	cbnz	r2, 800b6b0 <_malloc_r+0xdc>
 800b656:	f8c8 7000 	str.w	r7, [r8]
 800b65a:	e00f      	b.n	800b67c <_malloc_r+0xa8>
 800b65c:	6822      	ldr	r2, [r4, #0]
 800b65e:	1b52      	subs	r2, r2, r5
 800b660:	d420      	bmi.n	800b6a4 <_malloc_r+0xd0>
 800b662:	2a0b      	cmp	r2, #11
 800b664:	d917      	bls.n	800b696 <_malloc_r+0xc2>
 800b666:	1961      	adds	r1, r4, r5
 800b668:	42a3      	cmp	r3, r4
 800b66a:	6025      	str	r5, [r4, #0]
 800b66c:	bf18      	it	ne
 800b66e:	6059      	strne	r1, [r3, #4]
 800b670:	6863      	ldr	r3, [r4, #4]
 800b672:	bf08      	it	eq
 800b674:	f8c8 1000 	streq.w	r1, [r8]
 800b678:	5162      	str	r2, [r4, r5]
 800b67a:	604b      	str	r3, [r1, #4]
 800b67c:	4630      	mov	r0, r6
 800b67e:	f000 f82f 	bl	800b6e0 <__malloc_unlock>
 800b682:	f104 000b 	add.w	r0, r4, #11
 800b686:	1d23      	adds	r3, r4, #4
 800b688:	f020 0007 	bic.w	r0, r0, #7
 800b68c:	1ac2      	subs	r2, r0, r3
 800b68e:	bf1c      	itt	ne
 800b690:	1a1b      	subne	r3, r3, r0
 800b692:	50a3      	strne	r3, [r4, r2]
 800b694:	e7af      	b.n	800b5f6 <_malloc_r+0x22>
 800b696:	6862      	ldr	r2, [r4, #4]
 800b698:	42a3      	cmp	r3, r4
 800b69a:	bf0c      	ite	eq
 800b69c:	f8c8 2000 	streq.w	r2, [r8]
 800b6a0:	605a      	strne	r2, [r3, #4]
 800b6a2:	e7eb      	b.n	800b67c <_malloc_r+0xa8>
 800b6a4:	4623      	mov	r3, r4
 800b6a6:	6864      	ldr	r4, [r4, #4]
 800b6a8:	e7ae      	b.n	800b608 <_malloc_r+0x34>
 800b6aa:	463c      	mov	r4, r7
 800b6ac:	687f      	ldr	r7, [r7, #4]
 800b6ae:	e7b6      	b.n	800b61e <_malloc_r+0x4a>
 800b6b0:	461a      	mov	r2, r3
 800b6b2:	685b      	ldr	r3, [r3, #4]
 800b6b4:	42a3      	cmp	r3, r4
 800b6b6:	d1fb      	bne.n	800b6b0 <_malloc_r+0xdc>
 800b6b8:	2300      	movs	r3, #0
 800b6ba:	6053      	str	r3, [r2, #4]
 800b6bc:	e7de      	b.n	800b67c <_malloc_r+0xa8>
 800b6be:	230c      	movs	r3, #12
 800b6c0:	6033      	str	r3, [r6, #0]
 800b6c2:	4630      	mov	r0, r6
 800b6c4:	f000 f80c 	bl	800b6e0 <__malloc_unlock>
 800b6c8:	e794      	b.n	800b5f4 <_malloc_r+0x20>
 800b6ca:	6005      	str	r5, [r0, #0]
 800b6cc:	e7d6      	b.n	800b67c <_malloc_r+0xa8>
 800b6ce:	bf00      	nop
 800b6d0:	20026348 	.word	0x20026348

0800b6d4 <__malloc_lock>:
 800b6d4:	4801      	ldr	r0, [pc, #4]	@ (800b6dc <__malloc_lock+0x8>)
 800b6d6:	f000 bef6 	b.w	800c4c6 <__retarget_lock_acquire_recursive>
 800b6da:	bf00      	nop
 800b6dc:	2002648c 	.word	0x2002648c

0800b6e0 <__malloc_unlock>:
 800b6e0:	4801      	ldr	r0, [pc, #4]	@ (800b6e8 <__malloc_unlock+0x8>)
 800b6e2:	f000 bef1 	b.w	800c4c8 <__retarget_lock_release_recursive>
 800b6e6:	bf00      	nop
 800b6e8:	2002648c 	.word	0x2002648c

0800b6ec <__cvt>:
 800b6ec:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800b6f0:	ec57 6b10 	vmov	r6, r7, d0
 800b6f4:	2f00      	cmp	r7, #0
 800b6f6:	460c      	mov	r4, r1
 800b6f8:	4619      	mov	r1, r3
 800b6fa:	463b      	mov	r3, r7
 800b6fc:	bfbb      	ittet	lt
 800b6fe:	f107 4300 	addlt.w	r3, r7, #2147483648	@ 0x80000000
 800b702:	461f      	movlt	r7, r3
 800b704:	2300      	movge	r3, #0
 800b706:	232d      	movlt	r3, #45	@ 0x2d
 800b708:	700b      	strb	r3, [r1, #0]
 800b70a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800b70c:	f8dd a030 	ldr.w	sl, [sp, #48]	@ 0x30
 800b710:	4691      	mov	r9, r2
 800b712:	f023 0820 	bic.w	r8, r3, #32
 800b716:	bfbc      	itt	lt
 800b718:	4632      	movlt	r2, r6
 800b71a:	4616      	movlt	r6, r2
 800b71c:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 800b720:	d005      	beq.n	800b72e <__cvt+0x42>
 800b722:	f1b8 0f45 	cmp.w	r8, #69	@ 0x45
 800b726:	d100      	bne.n	800b72a <__cvt+0x3e>
 800b728:	3401      	adds	r4, #1
 800b72a:	2102      	movs	r1, #2
 800b72c:	e000      	b.n	800b730 <__cvt+0x44>
 800b72e:	2103      	movs	r1, #3
 800b730:	ab03      	add	r3, sp, #12
 800b732:	9301      	str	r3, [sp, #4]
 800b734:	ab02      	add	r3, sp, #8
 800b736:	9300      	str	r3, [sp, #0]
 800b738:	ec47 6b10 	vmov	d0, r6, r7
 800b73c:	4653      	mov	r3, sl
 800b73e:	4622      	mov	r2, r4
 800b740:	f000 ff5a 	bl	800c5f8 <_dtoa_r>
 800b744:	f1b8 0f47 	cmp.w	r8, #71	@ 0x47
 800b748:	4605      	mov	r5, r0
 800b74a:	d119      	bne.n	800b780 <__cvt+0x94>
 800b74c:	f019 0f01 	tst.w	r9, #1
 800b750:	d00e      	beq.n	800b770 <__cvt+0x84>
 800b752:	eb00 0904 	add.w	r9, r0, r4
 800b756:	2200      	movs	r2, #0
 800b758:	2300      	movs	r3, #0
 800b75a:	4630      	mov	r0, r6
 800b75c:	4639      	mov	r1, r7
 800b75e:	f7f5 f9c3 	bl	8000ae8 <__aeabi_dcmpeq>
 800b762:	b108      	cbz	r0, 800b768 <__cvt+0x7c>
 800b764:	f8cd 900c 	str.w	r9, [sp, #12]
 800b768:	2230      	movs	r2, #48	@ 0x30
 800b76a:	9b03      	ldr	r3, [sp, #12]
 800b76c:	454b      	cmp	r3, r9
 800b76e:	d31e      	bcc.n	800b7ae <__cvt+0xc2>
 800b770:	9b03      	ldr	r3, [sp, #12]
 800b772:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 800b774:	1b5b      	subs	r3, r3, r5
 800b776:	4628      	mov	r0, r5
 800b778:	6013      	str	r3, [r2, #0]
 800b77a:	b004      	add	sp, #16
 800b77c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800b780:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 800b784:	eb00 0904 	add.w	r9, r0, r4
 800b788:	d1e5      	bne.n	800b756 <__cvt+0x6a>
 800b78a:	7803      	ldrb	r3, [r0, #0]
 800b78c:	2b30      	cmp	r3, #48	@ 0x30
 800b78e:	d10a      	bne.n	800b7a6 <__cvt+0xba>
 800b790:	2200      	movs	r2, #0
 800b792:	2300      	movs	r3, #0
 800b794:	4630      	mov	r0, r6
 800b796:	4639      	mov	r1, r7
 800b798:	f7f5 f9a6 	bl	8000ae8 <__aeabi_dcmpeq>
 800b79c:	b918      	cbnz	r0, 800b7a6 <__cvt+0xba>
 800b79e:	f1c4 0401 	rsb	r4, r4, #1
 800b7a2:	f8ca 4000 	str.w	r4, [sl]
 800b7a6:	f8da 3000 	ldr.w	r3, [sl]
 800b7aa:	4499      	add	r9, r3
 800b7ac:	e7d3      	b.n	800b756 <__cvt+0x6a>
 800b7ae:	1c59      	adds	r1, r3, #1
 800b7b0:	9103      	str	r1, [sp, #12]
 800b7b2:	701a      	strb	r2, [r3, #0]
 800b7b4:	e7d9      	b.n	800b76a <__cvt+0x7e>

0800b7b6 <__exponent>:
 800b7b6:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800b7b8:	2900      	cmp	r1, #0
 800b7ba:	bfba      	itte	lt
 800b7bc:	4249      	neglt	r1, r1
 800b7be:	232d      	movlt	r3, #45	@ 0x2d
 800b7c0:	232b      	movge	r3, #43	@ 0x2b
 800b7c2:	2909      	cmp	r1, #9
 800b7c4:	7002      	strb	r2, [r0, #0]
 800b7c6:	7043      	strb	r3, [r0, #1]
 800b7c8:	dd29      	ble.n	800b81e <__exponent+0x68>
 800b7ca:	f10d 0307 	add.w	r3, sp, #7
 800b7ce:	461d      	mov	r5, r3
 800b7d0:	270a      	movs	r7, #10
 800b7d2:	461a      	mov	r2, r3
 800b7d4:	fbb1 f6f7 	udiv	r6, r1, r7
 800b7d8:	fb07 1416 	mls	r4, r7, r6, r1
 800b7dc:	3430      	adds	r4, #48	@ 0x30
 800b7de:	f802 4c01 	strb.w	r4, [r2, #-1]
 800b7e2:	460c      	mov	r4, r1
 800b7e4:	2c63      	cmp	r4, #99	@ 0x63
 800b7e6:	f103 33ff 	add.w	r3, r3, #4294967295	@ 0xffffffff
 800b7ea:	4631      	mov	r1, r6
 800b7ec:	dcf1      	bgt.n	800b7d2 <__exponent+0x1c>
 800b7ee:	3130      	adds	r1, #48	@ 0x30
 800b7f0:	1e94      	subs	r4, r2, #2
 800b7f2:	f803 1c01 	strb.w	r1, [r3, #-1]
 800b7f6:	1c41      	adds	r1, r0, #1
 800b7f8:	4623      	mov	r3, r4
 800b7fa:	42ab      	cmp	r3, r5
 800b7fc:	d30a      	bcc.n	800b814 <__exponent+0x5e>
 800b7fe:	f10d 0309 	add.w	r3, sp, #9
 800b802:	1a9b      	subs	r3, r3, r2
 800b804:	42ac      	cmp	r4, r5
 800b806:	bf88      	it	hi
 800b808:	2300      	movhi	r3, #0
 800b80a:	3302      	adds	r3, #2
 800b80c:	4403      	add	r3, r0
 800b80e:	1a18      	subs	r0, r3, r0
 800b810:	b003      	add	sp, #12
 800b812:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b814:	f813 6b01 	ldrb.w	r6, [r3], #1
 800b818:	f801 6f01 	strb.w	r6, [r1, #1]!
 800b81c:	e7ed      	b.n	800b7fa <__exponent+0x44>
 800b81e:	2330      	movs	r3, #48	@ 0x30
 800b820:	3130      	adds	r1, #48	@ 0x30
 800b822:	7083      	strb	r3, [r0, #2]
 800b824:	70c1      	strb	r1, [r0, #3]
 800b826:	1d03      	adds	r3, r0, #4
 800b828:	e7f1      	b.n	800b80e <__exponent+0x58>
	...

0800b82c <_printf_float>:
 800b82c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b830:	b08d      	sub	sp, #52	@ 0x34
 800b832:	460c      	mov	r4, r1
 800b834:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 800b838:	4616      	mov	r6, r2
 800b83a:	461f      	mov	r7, r3
 800b83c:	4605      	mov	r5, r0
 800b83e:	f000 fdbd 	bl	800c3bc <_localeconv_r>
 800b842:	6803      	ldr	r3, [r0, #0]
 800b844:	9304      	str	r3, [sp, #16]
 800b846:	4618      	mov	r0, r3
 800b848:	f7f4 fd22 	bl	8000290 <strlen>
 800b84c:	2300      	movs	r3, #0
 800b84e:	930a      	str	r3, [sp, #40]	@ 0x28
 800b850:	f8d8 3000 	ldr.w	r3, [r8]
 800b854:	9005      	str	r0, [sp, #20]
 800b856:	3307      	adds	r3, #7
 800b858:	f023 0307 	bic.w	r3, r3, #7
 800b85c:	f103 0208 	add.w	r2, r3, #8
 800b860:	f894 a018 	ldrb.w	sl, [r4, #24]
 800b864:	f8d4 b000 	ldr.w	fp, [r4]
 800b868:	f8c8 2000 	str.w	r2, [r8]
 800b86c:	e9d3 8900 	ldrd	r8, r9, [r3]
 800b870:	f029 4300 	bic.w	r3, r9, #2147483648	@ 0x80000000
 800b874:	9307      	str	r3, [sp, #28]
 800b876:	f8cd 8018 	str.w	r8, [sp, #24]
 800b87a:	e9c4 8912 	strd	r8, r9, [r4, #72]	@ 0x48
 800b87e:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 800b882:	4b9c      	ldr	r3, [pc, #624]	@ (800baf4 <_printf_float+0x2c8>)
 800b884:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 800b888:	f7f5 f960 	bl	8000b4c <__aeabi_dcmpun>
 800b88c:	bb70      	cbnz	r0, 800b8ec <_printf_float+0xc0>
 800b88e:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 800b892:	4b98      	ldr	r3, [pc, #608]	@ (800baf4 <_printf_float+0x2c8>)
 800b894:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 800b898:	f7f5 f93a 	bl	8000b10 <__aeabi_dcmple>
 800b89c:	bb30      	cbnz	r0, 800b8ec <_printf_float+0xc0>
 800b89e:	2200      	movs	r2, #0
 800b8a0:	2300      	movs	r3, #0
 800b8a2:	4640      	mov	r0, r8
 800b8a4:	4649      	mov	r1, r9
 800b8a6:	f7f5 f929 	bl	8000afc <__aeabi_dcmplt>
 800b8aa:	b110      	cbz	r0, 800b8b2 <_printf_float+0x86>
 800b8ac:	232d      	movs	r3, #45	@ 0x2d
 800b8ae:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800b8b2:	4a91      	ldr	r2, [pc, #580]	@ (800baf8 <_printf_float+0x2cc>)
 800b8b4:	4b91      	ldr	r3, [pc, #580]	@ (800bafc <_printf_float+0x2d0>)
 800b8b6:	f1ba 0f47 	cmp.w	sl, #71	@ 0x47
 800b8ba:	bf8c      	ite	hi
 800b8bc:	4690      	movhi	r8, r2
 800b8be:	4698      	movls	r8, r3
 800b8c0:	2303      	movs	r3, #3
 800b8c2:	6123      	str	r3, [r4, #16]
 800b8c4:	f02b 0304 	bic.w	r3, fp, #4
 800b8c8:	6023      	str	r3, [r4, #0]
 800b8ca:	f04f 0900 	mov.w	r9, #0
 800b8ce:	9700      	str	r7, [sp, #0]
 800b8d0:	4633      	mov	r3, r6
 800b8d2:	aa0b      	add	r2, sp, #44	@ 0x2c
 800b8d4:	4621      	mov	r1, r4
 800b8d6:	4628      	mov	r0, r5
 800b8d8:	f000 f9d2 	bl	800bc80 <_printf_common>
 800b8dc:	3001      	adds	r0, #1
 800b8de:	f040 808d 	bne.w	800b9fc <_printf_float+0x1d0>
 800b8e2:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 800b8e6:	b00d      	add	sp, #52	@ 0x34
 800b8e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b8ec:	4642      	mov	r2, r8
 800b8ee:	464b      	mov	r3, r9
 800b8f0:	4640      	mov	r0, r8
 800b8f2:	4649      	mov	r1, r9
 800b8f4:	f7f5 f92a 	bl	8000b4c <__aeabi_dcmpun>
 800b8f8:	b140      	cbz	r0, 800b90c <_printf_float+0xe0>
 800b8fa:	464b      	mov	r3, r9
 800b8fc:	2b00      	cmp	r3, #0
 800b8fe:	bfbc      	itt	lt
 800b900:	232d      	movlt	r3, #45	@ 0x2d
 800b902:	f884 3043 	strblt.w	r3, [r4, #67]	@ 0x43
 800b906:	4a7e      	ldr	r2, [pc, #504]	@ (800bb00 <_printf_float+0x2d4>)
 800b908:	4b7e      	ldr	r3, [pc, #504]	@ (800bb04 <_printf_float+0x2d8>)
 800b90a:	e7d4      	b.n	800b8b6 <_printf_float+0x8a>
 800b90c:	6863      	ldr	r3, [r4, #4]
 800b90e:	f00a 02df 	and.w	r2, sl, #223	@ 0xdf
 800b912:	9206      	str	r2, [sp, #24]
 800b914:	1c5a      	adds	r2, r3, #1
 800b916:	d13b      	bne.n	800b990 <_printf_float+0x164>
 800b918:	2306      	movs	r3, #6
 800b91a:	6063      	str	r3, [r4, #4]
 800b91c:	f44b 6280 	orr.w	r2, fp, #1024	@ 0x400
 800b920:	2300      	movs	r3, #0
 800b922:	6022      	str	r2, [r4, #0]
 800b924:	9303      	str	r3, [sp, #12]
 800b926:	ab0a      	add	r3, sp, #40	@ 0x28
 800b928:	e9cd a301 	strd	sl, r3, [sp, #4]
 800b92c:	ab09      	add	r3, sp, #36	@ 0x24
 800b92e:	9300      	str	r3, [sp, #0]
 800b930:	6861      	ldr	r1, [r4, #4]
 800b932:	ec49 8b10 	vmov	d0, r8, r9
 800b936:	f10d 0323 	add.w	r3, sp, #35	@ 0x23
 800b93a:	4628      	mov	r0, r5
 800b93c:	f7ff fed6 	bl	800b6ec <__cvt>
 800b940:	9b06      	ldr	r3, [sp, #24]
 800b942:	9909      	ldr	r1, [sp, #36]	@ 0x24
 800b944:	2b47      	cmp	r3, #71	@ 0x47
 800b946:	4680      	mov	r8, r0
 800b948:	d129      	bne.n	800b99e <_printf_float+0x172>
 800b94a:	1cc8      	adds	r0, r1, #3
 800b94c:	db02      	blt.n	800b954 <_printf_float+0x128>
 800b94e:	6863      	ldr	r3, [r4, #4]
 800b950:	4299      	cmp	r1, r3
 800b952:	dd41      	ble.n	800b9d8 <_printf_float+0x1ac>
 800b954:	f1aa 0a02 	sub.w	sl, sl, #2
 800b958:	fa5f fa8a 	uxtb.w	sl, sl
 800b95c:	3901      	subs	r1, #1
 800b95e:	4652      	mov	r2, sl
 800b960:	f104 0050 	add.w	r0, r4, #80	@ 0x50
 800b964:	9109      	str	r1, [sp, #36]	@ 0x24
 800b966:	f7ff ff26 	bl	800b7b6 <__exponent>
 800b96a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800b96c:	1813      	adds	r3, r2, r0
 800b96e:	2a01      	cmp	r2, #1
 800b970:	4681      	mov	r9, r0
 800b972:	6123      	str	r3, [r4, #16]
 800b974:	dc02      	bgt.n	800b97c <_printf_float+0x150>
 800b976:	6822      	ldr	r2, [r4, #0]
 800b978:	07d2      	lsls	r2, r2, #31
 800b97a:	d501      	bpl.n	800b980 <_printf_float+0x154>
 800b97c:	3301      	adds	r3, #1
 800b97e:	6123      	str	r3, [r4, #16]
 800b980:	f89d 3023 	ldrb.w	r3, [sp, #35]	@ 0x23
 800b984:	2b00      	cmp	r3, #0
 800b986:	d0a2      	beq.n	800b8ce <_printf_float+0xa2>
 800b988:	232d      	movs	r3, #45	@ 0x2d
 800b98a:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800b98e:	e79e      	b.n	800b8ce <_printf_float+0xa2>
 800b990:	9a06      	ldr	r2, [sp, #24]
 800b992:	2a47      	cmp	r2, #71	@ 0x47
 800b994:	d1c2      	bne.n	800b91c <_printf_float+0xf0>
 800b996:	2b00      	cmp	r3, #0
 800b998:	d1c0      	bne.n	800b91c <_printf_float+0xf0>
 800b99a:	2301      	movs	r3, #1
 800b99c:	e7bd      	b.n	800b91a <_printf_float+0xee>
 800b99e:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 800b9a2:	d9db      	bls.n	800b95c <_printf_float+0x130>
 800b9a4:	f1ba 0f66 	cmp.w	sl, #102	@ 0x66
 800b9a8:	d118      	bne.n	800b9dc <_printf_float+0x1b0>
 800b9aa:	2900      	cmp	r1, #0
 800b9ac:	6863      	ldr	r3, [r4, #4]
 800b9ae:	dd0b      	ble.n	800b9c8 <_printf_float+0x19c>
 800b9b0:	6121      	str	r1, [r4, #16]
 800b9b2:	b913      	cbnz	r3, 800b9ba <_printf_float+0x18e>
 800b9b4:	6822      	ldr	r2, [r4, #0]
 800b9b6:	07d0      	lsls	r0, r2, #31
 800b9b8:	d502      	bpl.n	800b9c0 <_printf_float+0x194>
 800b9ba:	3301      	adds	r3, #1
 800b9bc:	440b      	add	r3, r1
 800b9be:	6123      	str	r3, [r4, #16]
 800b9c0:	65a1      	str	r1, [r4, #88]	@ 0x58
 800b9c2:	f04f 0900 	mov.w	r9, #0
 800b9c6:	e7db      	b.n	800b980 <_printf_float+0x154>
 800b9c8:	b913      	cbnz	r3, 800b9d0 <_printf_float+0x1a4>
 800b9ca:	6822      	ldr	r2, [r4, #0]
 800b9cc:	07d2      	lsls	r2, r2, #31
 800b9ce:	d501      	bpl.n	800b9d4 <_printf_float+0x1a8>
 800b9d0:	3302      	adds	r3, #2
 800b9d2:	e7f4      	b.n	800b9be <_printf_float+0x192>
 800b9d4:	2301      	movs	r3, #1
 800b9d6:	e7f2      	b.n	800b9be <_printf_float+0x192>
 800b9d8:	f04f 0a67 	mov.w	sl, #103	@ 0x67
 800b9dc:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800b9de:	4299      	cmp	r1, r3
 800b9e0:	db05      	blt.n	800b9ee <_printf_float+0x1c2>
 800b9e2:	6823      	ldr	r3, [r4, #0]
 800b9e4:	6121      	str	r1, [r4, #16]
 800b9e6:	07d8      	lsls	r0, r3, #31
 800b9e8:	d5ea      	bpl.n	800b9c0 <_printf_float+0x194>
 800b9ea:	1c4b      	adds	r3, r1, #1
 800b9ec:	e7e7      	b.n	800b9be <_printf_float+0x192>
 800b9ee:	2900      	cmp	r1, #0
 800b9f0:	bfd4      	ite	le
 800b9f2:	f1c1 0202 	rsble	r2, r1, #2
 800b9f6:	2201      	movgt	r2, #1
 800b9f8:	4413      	add	r3, r2
 800b9fa:	e7e0      	b.n	800b9be <_printf_float+0x192>
 800b9fc:	6823      	ldr	r3, [r4, #0]
 800b9fe:	055a      	lsls	r2, r3, #21
 800ba00:	d407      	bmi.n	800ba12 <_printf_float+0x1e6>
 800ba02:	6923      	ldr	r3, [r4, #16]
 800ba04:	4642      	mov	r2, r8
 800ba06:	4631      	mov	r1, r6
 800ba08:	4628      	mov	r0, r5
 800ba0a:	47b8      	blx	r7
 800ba0c:	3001      	adds	r0, #1
 800ba0e:	d12b      	bne.n	800ba68 <_printf_float+0x23c>
 800ba10:	e767      	b.n	800b8e2 <_printf_float+0xb6>
 800ba12:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 800ba16:	f240 80dd 	bls.w	800bbd4 <_printf_float+0x3a8>
 800ba1a:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 800ba1e:	2200      	movs	r2, #0
 800ba20:	2300      	movs	r3, #0
 800ba22:	f7f5 f861 	bl	8000ae8 <__aeabi_dcmpeq>
 800ba26:	2800      	cmp	r0, #0
 800ba28:	d033      	beq.n	800ba92 <_printf_float+0x266>
 800ba2a:	4a37      	ldr	r2, [pc, #220]	@ (800bb08 <_printf_float+0x2dc>)
 800ba2c:	2301      	movs	r3, #1
 800ba2e:	4631      	mov	r1, r6
 800ba30:	4628      	mov	r0, r5
 800ba32:	47b8      	blx	r7
 800ba34:	3001      	adds	r0, #1
 800ba36:	f43f af54 	beq.w	800b8e2 <_printf_float+0xb6>
 800ba3a:	e9dd 3809 	ldrd	r3, r8, [sp, #36]	@ 0x24
 800ba3e:	4543      	cmp	r3, r8
 800ba40:	db02      	blt.n	800ba48 <_printf_float+0x21c>
 800ba42:	6823      	ldr	r3, [r4, #0]
 800ba44:	07d8      	lsls	r0, r3, #31
 800ba46:	d50f      	bpl.n	800ba68 <_printf_float+0x23c>
 800ba48:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800ba4c:	4631      	mov	r1, r6
 800ba4e:	4628      	mov	r0, r5
 800ba50:	47b8      	blx	r7
 800ba52:	3001      	adds	r0, #1
 800ba54:	f43f af45 	beq.w	800b8e2 <_printf_float+0xb6>
 800ba58:	f04f 0900 	mov.w	r9, #0
 800ba5c:	f108 38ff 	add.w	r8, r8, #4294967295	@ 0xffffffff
 800ba60:	f104 0a1a 	add.w	sl, r4, #26
 800ba64:	45c8      	cmp	r8, r9
 800ba66:	dc09      	bgt.n	800ba7c <_printf_float+0x250>
 800ba68:	6823      	ldr	r3, [r4, #0]
 800ba6a:	079b      	lsls	r3, r3, #30
 800ba6c:	f100 8103 	bmi.w	800bc76 <_printf_float+0x44a>
 800ba70:	68e0      	ldr	r0, [r4, #12]
 800ba72:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800ba74:	4298      	cmp	r0, r3
 800ba76:	bfb8      	it	lt
 800ba78:	4618      	movlt	r0, r3
 800ba7a:	e734      	b.n	800b8e6 <_printf_float+0xba>
 800ba7c:	2301      	movs	r3, #1
 800ba7e:	4652      	mov	r2, sl
 800ba80:	4631      	mov	r1, r6
 800ba82:	4628      	mov	r0, r5
 800ba84:	47b8      	blx	r7
 800ba86:	3001      	adds	r0, #1
 800ba88:	f43f af2b 	beq.w	800b8e2 <_printf_float+0xb6>
 800ba8c:	f109 0901 	add.w	r9, r9, #1
 800ba90:	e7e8      	b.n	800ba64 <_printf_float+0x238>
 800ba92:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800ba94:	2b00      	cmp	r3, #0
 800ba96:	dc39      	bgt.n	800bb0c <_printf_float+0x2e0>
 800ba98:	4a1b      	ldr	r2, [pc, #108]	@ (800bb08 <_printf_float+0x2dc>)
 800ba9a:	2301      	movs	r3, #1
 800ba9c:	4631      	mov	r1, r6
 800ba9e:	4628      	mov	r0, r5
 800baa0:	47b8      	blx	r7
 800baa2:	3001      	adds	r0, #1
 800baa4:	f43f af1d 	beq.w	800b8e2 <_printf_float+0xb6>
 800baa8:	e9dd 3909 	ldrd	r3, r9, [sp, #36]	@ 0x24
 800baac:	ea59 0303 	orrs.w	r3, r9, r3
 800bab0:	d102      	bne.n	800bab8 <_printf_float+0x28c>
 800bab2:	6823      	ldr	r3, [r4, #0]
 800bab4:	07d9      	lsls	r1, r3, #31
 800bab6:	d5d7      	bpl.n	800ba68 <_printf_float+0x23c>
 800bab8:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800babc:	4631      	mov	r1, r6
 800babe:	4628      	mov	r0, r5
 800bac0:	47b8      	blx	r7
 800bac2:	3001      	adds	r0, #1
 800bac4:	f43f af0d 	beq.w	800b8e2 <_printf_float+0xb6>
 800bac8:	f04f 0a00 	mov.w	sl, #0
 800bacc:	f104 0b1a 	add.w	fp, r4, #26
 800bad0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800bad2:	425b      	negs	r3, r3
 800bad4:	4553      	cmp	r3, sl
 800bad6:	dc01      	bgt.n	800badc <_printf_float+0x2b0>
 800bad8:	464b      	mov	r3, r9
 800bada:	e793      	b.n	800ba04 <_printf_float+0x1d8>
 800badc:	2301      	movs	r3, #1
 800bade:	465a      	mov	r2, fp
 800bae0:	4631      	mov	r1, r6
 800bae2:	4628      	mov	r0, r5
 800bae4:	47b8      	blx	r7
 800bae6:	3001      	adds	r0, #1
 800bae8:	f43f aefb 	beq.w	800b8e2 <_printf_float+0xb6>
 800baec:	f10a 0a01 	add.w	sl, sl, #1
 800baf0:	e7ee      	b.n	800bad0 <_printf_float+0x2a4>
 800baf2:	bf00      	nop
 800baf4:	7fefffff 	.word	0x7fefffff
 800baf8:	0800e0e4 	.word	0x0800e0e4
 800bafc:	0800e0e0 	.word	0x0800e0e0
 800bb00:	0800e0ec 	.word	0x0800e0ec
 800bb04:	0800e0e8 	.word	0x0800e0e8
 800bb08:	0800e0f0 	.word	0x0800e0f0
 800bb0c:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 800bb0e:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 800bb12:	4553      	cmp	r3, sl
 800bb14:	bfa8      	it	ge
 800bb16:	4653      	movge	r3, sl
 800bb18:	2b00      	cmp	r3, #0
 800bb1a:	4699      	mov	r9, r3
 800bb1c:	dc36      	bgt.n	800bb8c <_printf_float+0x360>
 800bb1e:	f04f 0b00 	mov.w	fp, #0
 800bb22:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 800bb26:	f104 021a 	add.w	r2, r4, #26
 800bb2a:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 800bb2c:	9306      	str	r3, [sp, #24]
 800bb2e:	eba3 0309 	sub.w	r3, r3, r9
 800bb32:	455b      	cmp	r3, fp
 800bb34:	dc31      	bgt.n	800bb9a <_printf_float+0x36e>
 800bb36:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800bb38:	459a      	cmp	sl, r3
 800bb3a:	dc3a      	bgt.n	800bbb2 <_printf_float+0x386>
 800bb3c:	6823      	ldr	r3, [r4, #0]
 800bb3e:	07da      	lsls	r2, r3, #31
 800bb40:	d437      	bmi.n	800bbb2 <_printf_float+0x386>
 800bb42:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800bb44:	ebaa 0903 	sub.w	r9, sl, r3
 800bb48:	9b06      	ldr	r3, [sp, #24]
 800bb4a:	ebaa 0303 	sub.w	r3, sl, r3
 800bb4e:	4599      	cmp	r9, r3
 800bb50:	bfa8      	it	ge
 800bb52:	4699      	movge	r9, r3
 800bb54:	f1b9 0f00 	cmp.w	r9, #0
 800bb58:	dc33      	bgt.n	800bbc2 <_printf_float+0x396>
 800bb5a:	f04f 0800 	mov.w	r8, #0
 800bb5e:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 800bb62:	f104 0b1a 	add.w	fp, r4, #26
 800bb66:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800bb68:	ebaa 0303 	sub.w	r3, sl, r3
 800bb6c:	eba3 0309 	sub.w	r3, r3, r9
 800bb70:	4543      	cmp	r3, r8
 800bb72:	f77f af79 	ble.w	800ba68 <_printf_float+0x23c>
 800bb76:	2301      	movs	r3, #1
 800bb78:	465a      	mov	r2, fp
 800bb7a:	4631      	mov	r1, r6
 800bb7c:	4628      	mov	r0, r5
 800bb7e:	47b8      	blx	r7
 800bb80:	3001      	adds	r0, #1
 800bb82:	f43f aeae 	beq.w	800b8e2 <_printf_float+0xb6>
 800bb86:	f108 0801 	add.w	r8, r8, #1
 800bb8a:	e7ec      	b.n	800bb66 <_printf_float+0x33a>
 800bb8c:	4642      	mov	r2, r8
 800bb8e:	4631      	mov	r1, r6
 800bb90:	4628      	mov	r0, r5
 800bb92:	47b8      	blx	r7
 800bb94:	3001      	adds	r0, #1
 800bb96:	d1c2      	bne.n	800bb1e <_printf_float+0x2f2>
 800bb98:	e6a3      	b.n	800b8e2 <_printf_float+0xb6>
 800bb9a:	2301      	movs	r3, #1
 800bb9c:	4631      	mov	r1, r6
 800bb9e:	4628      	mov	r0, r5
 800bba0:	9206      	str	r2, [sp, #24]
 800bba2:	47b8      	blx	r7
 800bba4:	3001      	adds	r0, #1
 800bba6:	f43f ae9c 	beq.w	800b8e2 <_printf_float+0xb6>
 800bbaa:	9a06      	ldr	r2, [sp, #24]
 800bbac:	f10b 0b01 	add.w	fp, fp, #1
 800bbb0:	e7bb      	b.n	800bb2a <_printf_float+0x2fe>
 800bbb2:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800bbb6:	4631      	mov	r1, r6
 800bbb8:	4628      	mov	r0, r5
 800bbba:	47b8      	blx	r7
 800bbbc:	3001      	adds	r0, #1
 800bbbe:	d1c0      	bne.n	800bb42 <_printf_float+0x316>
 800bbc0:	e68f      	b.n	800b8e2 <_printf_float+0xb6>
 800bbc2:	9a06      	ldr	r2, [sp, #24]
 800bbc4:	464b      	mov	r3, r9
 800bbc6:	4442      	add	r2, r8
 800bbc8:	4631      	mov	r1, r6
 800bbca:	4628      	mov	r0, r5
 800bbcc:	47b8      	blx	r7
 800bbce:	3001      	adds	r0, #1
 800bbd0:	d1c3      	bne.n	800bb5a <_printf_float+0x32e>
 800bbd2:	e686      	b.n	800b8e2 <_printf_float+0xb6>
 800bbd4:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 800bbd8:	f1ba 0f01 	cmp.w	sl, #1
 800bbdc:	dc01      	bgt.n	800bbe2 <_printf_float+0x3b6>
 800bbde:	07db      	lsls	r3, r3, #31
 800bbe0:	d536      	bpl.n	800bc50 <_printf_float+0x424>
 800bbe2:	2301      	movs	r3, #1
 800bbe4:	4642      	mov	r2, r8
 800bbe6:	4631      	mov	r1, r6
 800bbe8:	4628      	mov	r0, r5
 800bbea:	47b8      	blx	r7
 800bbec:	3001      	adds	r0, #1
 800bbee:	f43f ae78 	beq.w	800b8e2 <_printf_float+0xb6>
 800bbf2:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800bbf6:	4631      	mov	r1, r6
 800bbf8:	4628      	mov	r0, r5
 800bbfa:	47b8      	blx	r7
 800bbfc:	3001      	adds	r0, #1
 800bbfe:	f43f ae70 	beq.w	800b8e2 <_printf_float+0xb6>
 800bc02:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 800bc06:	2200      	movs	r2, #0
 800bc08:	2300      	movs	r3, #0
 800bc0a:	f10a 3aff 	add.w	sl, sl, #4294967295	@ 0xffffffff
 800bc0e:	f7f4 ff6b 	bl	8000ae8 <__aeabi_dcmpeq>
 800bc12:	b9c0      	cbnz	r0, 800bc46 <_printf_float+0x41a>
 800bc14:	4653      	mov	r3, sl
 800bc16:	f108 0201 	add.w	r2, r8, #1
 800bc1a:	4631      	mov	r1, r6
 800bc1c:	4628      	mov	r0, r5
 800bc1e:	47b8      	blx	r7
 800bc20:	3001      	adds	r0, #1
 800bc22:	d10c      	bne.n	800bc3e <_printf_float+0x412>
 800bc24:	e65d      	b.n	800b8e2 <_printf_float+0xb6>
 800bc26:	2301      	movs	r3, #1
 800bc28:	465a      	mov	r2, fp
 800bc2a:	4631      	mov	r1, r6
 800bc2c:	4628      	mov	r0, r5
 800bc2e:	47b8      	blx	r7
 800bc30:	3001      	adds	r0, #1
 800bc32:	f43f ae56 	beq.w	800b8e2 <_printf_float+0xb6>
 800bc36:	f108 0801 	add.w	r8, r8, #1
 800bc3a:	45d0      	cmp	r8, sl
 800bc3c:	dbf3      	blt.n	800bc26 <_printf_float+0x3fa>
 800bc3e:	464b      	mov	r3, r9
 800bc40:	f104 0250 	add.w	r2, r4, #80	@ 0x50
 800bc44:	e6df      	b.n	800ba06 <_printf_float+0x1da>
 800bc46:	f04f 0800 	mov.w	r8, #0
 800bc4a:	f104 0b1a 	add.w	fp, r4, #26
 800bc4e:	e7f4      	b.n	800bc3a <_printf_float+0x40e>
 800bc50:	2301      	movs	r3, #1
 800bc52:	4642      	mov	r2, r8
 800bc54:	e7e1      	b.n	800bc1a <_printf_float+0x3ee>
 800bc56:	2301      	movs	r3, #1
 800bc58:	464a      	mov	r2, r9
 800bc5a:	4631      	mov	r1, r6
 800bc5c:	4628      	mov	r0, r5
 800bc5e:	47b8      	blx	r7
 800bc60:	3001      	adds	r0, #1
 800bc62:	f43f ae3e 	beq.w	800b8e2 <_printf_float+0xb6>
 800bc66:	f108 0801 	add.w	r8, r8, #1
 800bc6a:	68e3      	ldr	r3, [r4, #12]
 800bc6c:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 800bc6e:	1a5b      	subs	r3, r3, r1
 800bc70:	4543      	cmp	r3, r8
 800bc72:	dcf0      	bgt.n	800bc56 <_printf_float+0x42a>
 800bc74:	e6fc      	b.n	800ba70 <_printf_float+0x244>
 800bc76:	f04f 0800 	mov.w	r8, #0
 800bc7a:	f104 0919 	add.w	r9, r4, #25
 800bc7e:	e7f4      	b.n	800bc6a <_printf_float+0x43e>

0800bc80 <_printf_common>:
 800bc80:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800bc84:	4616      	mov	r6, r2
 800bc86:	4698      	mov	r8, r3
 800bc88:	688a      	ldr	r2, [r1, #8]
 800bc8a:	690b      	ldr	r3, [r1, #16]
 800bc8c:	f8dd 9020 	ldr.w	r9, [sp, #32]
 800bc90:	4293      	cmp	r3, r2
 800bc92:	bfb8      	it	lt
 800bc94:	4613      	movlt	r3, r2
 800bc96:	6033      	str	r3, [r6, #0]
 800bc98:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 800bc9c:	4607      	mov	r7, r0
 800bc9e:	460c      	mov	r4, r1
 800bca0:	b10a      	cbz	r2, 800bca6 <_printf_common+0x26>
 800bca2:	3301      	adds	r3, #1
 800bca4:	6033      	str	r3, [r6, #0]
 800bca6:	6823      	ldr	r3, [r4, #0]
 800bca8:	0699      	lsls	r1, r3, #26
 800bcaa:	bf42      	ittt	mi
 800bcac:	6833      	ldrmi	r3, [r6, #0]
 800bcae:	3302      	addmi	r3, #2
 800bcb0:	6033      	strmi	r3, [r6, #0]
 800bcb2:	6825      	ldr	r5, [r4, #0]
 800bcb4:	f015 0506 	ands.w	r5, r5, #6
 800bcb8:	d106      	bne.n	800bcc8 <_printf_common+0x48>
 800bcba:	f104 0a19 	add.w	sl, r4, #25
 800bcbe:	68e3      	ldr	r3, [r4, #12]
 800bcc0:	6832      	ldr	r2, [r6, #0]
 800bcc2:	1a9b      	subs	r3, r3, r2
 800bcc4:	42ab      	cmp	r3, r5
 800bcc6:	dc26      	bgt.n	800bd16 <_printf_common+0x96>
 800bcc8:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 800bccc:	6822      	ldr	r2, [r4, #0]
 800bcce:	3b00      	subs	r3, #0
 800bcd0:	bf18      	it	ne
 800bcd2:	2301      	movne	r3, #1
 800bcd4:	0692      	lsls	r2, r2, #26
 800bcd6:	d42b      	bmi.n	800bd30 <_printf_common+0xb0>
 800bcd8:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 800bcdc:	4641      	mov	r1, r8
 800bcde:	4638      	mov	r0, r7
 800bce0:	47c8      	blx	r9
 800bce2:	3001      	adds	r0, #1
 800bce4:	d01e      	beq.n	800bd24 <_printf_common+0xa4>
 800bce6:	6823      	ldr	r3, [r4, #0]
 800bce8:	6922      	ldr	r2, [r4, #16]
 800bcea:	f003 0306 	and.w	r3, r3, #6
 800bcee:	2b04      	cmp	r3, #4
 800bcf0:	bf02      	ittt	eq
 800bcf2:	68e5      	ldreq	r5, [r4, #12]
 800bcf4:	6833      	ldreq	r3, [r6, #0]
 800bcf6:	1aed      	subeq	r5, r5, r3
 800bcf8:	68a3      	ldr	r3, [r4, #8]
 800bcfa:	bf0c      	ite	eq
 800bcfc:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 800bd00:	2500      	movne	r5, #0
 800bd02:	4293      	cmp	r3, r2
 800bd04:	bfc4      	itt	gt
 800bd06:	1a9b      	subgt	r3, r3, r2
 800bd08:	18ed      	addgt	r5, r5, r3
 800bd0a:	2600      	movs	r6, #0
 800bd0c:	341a      	adds	r4, #26
 800bd0e:	42b5      	cmp	r5, r6
 800bd10:	d11a      	bne.n	800bd48 <_printf_common+0xc8>
 800bd12:	2000      	movs	r0, #0
 800bd14:	e008      	b.n	800bd28 <_printf_common+0xa8>
 800bd16:	2301      	movs	r3, #1
 800bd18:	4652      	mov	r2, sl
 800bd1a:	4641      	mov	r1, r8
 800bd1c:	4638      	mov	r0, r7
 800bd1e:	47c8      	blx	r9
 800bd20:	3001      	adds	r0, #1
 800bd22:	d103      	bne.n	800bd2c <_printf_common+0xac>
 800bd24:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 800bd28:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800bd2c:	3501      	adds	r5, #1
 800bd2e:	e7c6      	b.n	800bcbe <_printf_common+0x3e>
 800bd30:	18e1      	adds	r1, r4, r3
 800bd32:	1c5a      	adds	r2, r3, #1
 800bd34:	2030      	movs	r0, #48	@ 0x30
 800bd36:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 800bd3a:	4422      	add	r2, r4
 800bd3c:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 800bd40:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 800bd44:	3302      	adds	r3, #2
 800bd46:	e7c7      	b.n	800bcd8 <_printf_common+0x58>
 800bd48:	2301      	movs	r3, #1
 800bd4a:	4622      	mov	r2, r4
 800bd4c:	4641      	mov	r1, r8
 800bd4e:	4638      	mov	r0, r7
 800bd50:	47c8      	blx	r9
 800bd52:	3001      	adds	r0, #1
 800bd54:	d0e6      	beq.n	800bd24 <_printf_common+0xa4>
 800bd56:	3601      	adds	r6, #1
 800bd58:	e7d9      	b.n	800bd0e <_printf_common+0x8e>
	...

0800bd5c <_printf_i>:
 800bd5c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800bd60:	7e0f      	ldrb	r7, [r1, #24]
 800bd62:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 800bd64:	2f78      	cmp	r7, #120	@ 0x78
 800bd66:	4691      	mov	r9, r2
 800bd68:	4680      	mov	r8, r0
 800bd6a:	460c      	mov	r4, r1
 800bd6c:	469a      	mov	sl, r3
 800bd6e:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 800bd72:	d807      	bhi.n	800bd84 <_printf_i+0x28>
 800bd74:	2f62      	cmp	r7, #98	@ 0x62
 800bd76:	d80a      	bhi.n	800bd8e <_printf_i+0x32>
 800bd78:	2f00      	cmp	r7, #0
 800bd7a:	f000 80d1 	beq.w	800bf20 <_printf_i+0x1c4>
 800bd7e:	2f58      	cmp	r7, #88	@ 0x58
 800bd80:	f000 80b8 	beq.w	800bef4 <_printf_i+0x198>
 800bd84:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 800bd88:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 800bd8c:	e03a      	b.n	800be04 <_printf_i+0xa8>
 800bd8e:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 800bd92:	2b15      	cmp	r3, #21
 800bd94:	d8f6      	bhi.n	800bd84 <_printf_i+0x28>
 800bd96:	a101      	add	r1, pc, #4	@ (adr r1, 800bd9c <_printf_i+0x40>)
 800bd98:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 800bd9c:	0800bdf5 	.word	0x0800bdf5
 800bda0:	0800be09 	.word	0x0800be09
 800bda4:	0800bd85 	.word	0x0800bd85
 800bda8:	0800bd85 	.word	0x0800bd85
 800bdac:	0800bd85 	.word	0x0800bd85
 800bdb0:	0800bd85 	.word	0x0800bd85
 800bdb4:	0800be09 	.word	0x0800be09
 800bdb8:	0800bd85 	.word	0x0800bd85
 800bdbc:	0800bd85 	.word	0x0800bd85
 800bdc0:	0800bd85 	.word	0x0800bd85
 800bdc4:	0800bd85 	.word	0x0800bd85
 800bdc8:	0800bf07 	.word	0x0800bf07
 800bdcc:	0800be33 	.word	0x0800be33
 800bdd0:	0800bec1 	.word	0x0800bec1
 800bdd4:	0800bd85 	.word	0x0800bd85
 800bdd8:	0800bd85 	.word	0x0800bd85
 800bddc:	0800bf29 	.word	0x0800bf29
 800bde0:	0800bd85 	.word	0x0800bd85
 800bde4:	0800be33 	.word	0x0800be33
 800bde8:	0800bd85 	.word	0x0800bd85
 800bdec:	0800bd85 	.word	0x0800bd85
 800bdf0:	0800bec9 	.word	0x0800bec9
 800bdf4:	6833      	ldr	r3, [r6, #0]
 800bdf6:	1d1a      	adds	r2, r3, #4
 800bdf8:	681b      	ldr	r3, [r3, #0]
 800bdfa:	6032      	str	r2, [r6, #0]
 800bdfc:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 800be00:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 800be04:	2301      	movs	r3, #1
 800be06:	e09c      	b.n	800bf42 <_printf_i+0x1e6>
 800be08:	6833      	ldr	r3, [r6, #0]
 800be0a:	6820      	ldr	r0, [r4, #0]
 800be0c:	1d19      	adds	r1, r3, #4
 800be0e:	6031      	str	r1, [r6, #0]
 800be10:	0606      	lsls	r6, r0, #24
 800be12:	d501      	bpl.n	800be18 <_printf_i+0xbc>
 800be14:	681d      	ldr	r5, [r3, #0]
 800be16:	e003      	b.n	800be20 <_printf_i+0xc4>
 800be18:	0645      	lsls	r5, r0, #25
 800be1a:	d5fb      	bpl.n	800be14 <_printf_i+0xb8>
 800be1c:	f9b3 5000 	ldrsh.w	r5, [r3]
 800be20:	2d00      	cmp	r5, #0
 800be22:	da03      	bge.n	800be2c <_printf_i+0xd0>
 800be24:	232d      	movs	r3, #45	@ 0x2d
 800be26:	426d      	negs	r5, r5
 800be28:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800be2c:	4858      	ldr	r0, [pc, #352]	@ (800bf90 <_printf_i+0x234>)
 800be2e:	230a      	movs	r3, #10
 800be30:	e011      	b.n	800be56 <_printf_i+0xfa>
 800be32:	6821      	ldr	r1, [r4, #0]
 800be34:	6833      	ldr	r3, [r6, #0]
 800be36:	0608      	lsls	r0, r1, #24
 800be38:	f853 5b04 	ldr.w	r5, [r3], #4
 800be3c:	d402      	bmi.n	800be44 <_printf_i+0xe8>
 800be3e:	0649      	lsls	r1, r1, #25
 800be40:	bf48      	it	mi
 800be42:	b2ad      	uxthmi	r5, r5
 800be44:	2f6f      	cmp	r7, #111	@ 0x6f
 800be46:	4852      	ldr	r0, [pc, #328]	@ (800bf90 <_printf_i+0x234>)
 800be48:	6033      	str	r3, [r6, #0]
 800be4a:	bf14      	ite	ne
 800be4c:	230a      	movne	r3, #10
 800be4e:	2308      	moveq	r3, #8
 800be50:	2100      	movs	r1, #0
 800be52:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 800be56:	6866      	ldr	r6, [r4, #4]
 800be58:	60a6      	str	r6, [r4, #8]
 800be5a:	2e00      	cmp	r6, #0
 800be5c:	db05      	blt.n	800be6a <_printf_i+0x10e>
 800be5e:	6821      	ldr	r1, [r4, #0]
 800be60:	432e      	orrs	r6, r5
 800be62:	f021 0104 	bic.w	r1, r1, #4
 800be66:	6021      	str	r1, [r4, #0]
 800be68:	d04b      	beq.n	800bf02 <_printf_i+0x1a6>
 800be6a:	4616      	mov	r6, r2
 800be6c:	fbb5 f1f3 	udiv	r1, r5, r3
 800be70:	fb03 5711 	mls	r7, r3, r1, r5
 800be74:	5dc7      	ldrb	r7, [r0, r7]
 800be76:	f806 7d01 	strb.w	r7, [r6, #-1]!
 800be7a:	462f      	mov	r7, r5
 800be7c:	42bb      	cmp	r3, r7
 800be7e:	460d      	mov	r5, r1
 800be80:	d9f4      	bls.n	800be6c <_printf_i+0x110>
 800be82:	2b08      	cmp	r3, #8
 800be84:	d10b      	bne.n	800be9e <_printf_i+0x142>
 800be86:	6823      	ldr	r3, [r4, #0]
 800be88:	07df      	lsls	r7, r3, #31
 800be8a:	d508      	bpl.n	800be9e <_printf_i+0x142>
 800be8c:	6923      	ldr	r3, [r4, #16]
 800be8e:	6861      	ldr	r1, [r4, #4]
 800be90:	4299      	cmp	r1, r3
 800be92:	bfde      	ittt	le
 800be94:	2330      	movle	r3, #48	@ 0x30
 800be96:	f806 3c01 	strble.w	r3, [r6, #-1]
 800be9a:	f106 36ff 	addle.w	r6, r6, #4294967295	@ 0xffffffff
 800be9e:	1b92      	subs	r2, r2, r6
 800bea0:	6122      	str	r2, [r4, #16]
 800bea2:	f8cd a000 	str.w	sl, [sp]
 800bea6:	464b      	mov	r3, r9
 800bea8:	aa03      	add	r2, sp, #12
 800beaa:	4621      	mov	r1, r4
 800beac:	4640      	mov	r0, r8
 800beae:	f7ff fee7 	bl	800bc80 <_printf_common>
 800beb2:	3001      	adds	r0, #1
 800beb4:	d14a      	bne.n	800bf4c <_printf_i+0x1f0>
 800beb6:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 800beba:	b004      	add	sp, #16
 800bebc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800bec0:	6823      	ldr	r3, [r4, #0]
 800bec2:	f043 0320 	orr.w	r3, r3, #32
 800bec6:	6023      	str	r3, [r4, #0]
 800bec8:	4832      	ldr	r0, [pc, #200]	@ (800bf94 <_printf_i+0x238>)
 800beca:	2778      	movs	r7, #120	@ 0x78
 800becc:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 800bed0:	6823      	ldr	r3, [r4, #0]
 800bed2:	6831      	ldr	r1, [r6, #0]
 800bed4:	061f      	lsls	r7, r3, #24
 800bed6:	f851 5b04 	ldr.w	r5, [r1], #4
 800beda:	d402      	bmi.n	800bee2 <_printf_i+0x186>
 800bedc:	065f      	lsls	r7, r3, #25
 800bede:	bf48      	it	mi
 800bee0:	b2ad      	uxthmi	r5, r5
 800bee2:	6031      	str	r1, [r6, #0]
 800bee4:	07d9      	lsls	r1, r3, #31
 800bee6:	bf44      	itt	mi
 800bee8:	f043 0320 	orrmi.w	r3, r3, #32
 800beec:	6023      	strmi	r3, [r4, #0]
 800beee:	b11d      	cbz	r5, 800bef8 <_printf_i+0x19c>
 800bef0:	2310      	movs	r3, #16
 800bef2:	e7ad      	b.n	800be50 <_printf_i+0xf4>
 800bef4:	4826      	ldr	r0, [pc, #152]	@ (800bf90 <_printf_i+0x234>)
 800bef6:	e7e9      	b.n	800becc <_printf_i+0x170>
 800bef8:	6823      	ldr	r3, [r4, #0]
 800befa:	f023 0320 	bic.w	r3, r3, #32
 800befe:	6023      	str	r3, [r4, #0]
 800bf00:	e7f6      	b.n	800bef0 <_printf_i+0x194>
 800bf02:	4616      	mov	r6, r2
 800bf04:	e7bd      	b.n	800be82 <_printf_i+0x126>
 800bf06:	6833      	ldr	r3, [r6, #0]
 800bf08:	6825      	ldr	r5, [r4, #0]
 800bf0a:	6961      	ldr	r1, [r4, #20]
 800bf0c:	1d18      	adds	r0, r3, #4
 800bf0e:	6030      	str	r0, [r6, #0]
 800bf10:	062e      	lsls	r6, r5, #24
 800bf12:	681b      	ldr	r3, [r3, #0]
 800bf14:	d501      	bpl.n	800bf1a <_printf_i+0x1be>
 800bf16:	6019      	str	r1, [r3, #0]
 800bf18:	e002      	b.n	800bf20 <_printf_i+0x1c4>
 800bf1a:	0668      	lsls	r0, r5, #25
 800bf1c:	d5fb      	bpl.n	800bf16 <_printf_i+0x1ba>
 800bf1e:	8019      	strh	r1, [r3, #0]
 800bf20:	2300      	movs	r3, #0
 800bf22:	6123      	str	r3, [r4, #16]
 800bf24:	4616      	mov	r6, r2
 800bf26:	e7bc      	b.n	800bea2 <_printf_i+0x146>
 800bf28:	6833      	ldr	r3, [r6, #0]
 800bf2a:	1d1a      	adds	r2, r3, #4
 800bf2c:	6032      	str	r2, [r6, #0]
 800bf2e:	681e      	ldr	r6, [r3, #0]
 800bf30:	6862      	ldr	r2, [r4, #4]
 800bf32:	2100      	movs	r1, #0
 800bf34:	4630      	mov	r0, r6
 800bf36:	f7f4 f95b 	bl	80001f0 <memchr>
 800bf3a:	b108      	cbz	r0, 800bf40 <_printf_i+0x1e4>
 800bf3c:	1b80      	subs	r0, r0, r6
 800bf3e:	6060      	str	r0, [r4, #4]
 800bf40:	6863      	ldr	r3, [r4, #4]
 800bf42:	6123      	str	r3, [r4, #16]
 800bf44:	2300      	movs	r3, #0
 800bf46:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800bf4a:	e7aa      	b.n	800bea2 <_printf_i+0x146>
 800bf4c:	6923      	ldr	r3, [r4, #16]
 800bf4e:	4632      	mov	r2, r6
 800bf50:	4649      	mov	r1, r9
 800bf52:	4640      	mov	r0, r8
 800bf54:	47d0      	blx	sl
 800bf56:	3001      	adds	r0, #1
 800bf58:	d0ad      	beq.n	800beb6 <_printf_i+0x15a>
 800bf5a:	6823      	ldr	r3, [r4, #0]
 800bf5c:	079b      	lsls	r3, r3, #30
 800bf5e:	d413      	bmi.n	800bf88 <_printf_i+0x22c>
 800bf60:	68e0      	ldr	r0, [r4, #12]
 800bf62:	9b03      	ldr	r3, [sp, #12]
 800bf64:	4298      	cmp	r0, r3
 800bf66:	bfb8      	it	lt
 800bf68:	4618      	movlt	r0, r3
 800bf6a:	e7a6      	b.n	800beba <_printf_i+0x15e>
 800bf6c:	2301      	movs	r3, #1
 800bf6e:	4632      	mov	r2, r6
 800bf70:	4649      	mov	r1, r9
 800bf72:	4640      	mov	r0, r8
 800bf74:	47d0      	blx	sl
 800bf76:	3001      	adds	r0, #1
 800bf78:	d09d      	beq.n	800beb6 <_printf_i+0x15a>
 800bf7a:	3501      	adds	r5, #1
 800bf7c:	68e3      	ldr	r3, [r4, #12]
 800bf7e:	9903      	ldr	r1, [sp, #12]
 800bf80:	1a5b      	subs	r3, r3, r1
 800bf82:	42ab      	cmp	r3, r5
 800bf84:	dcf2      	bgt.n	800bf6c <_printf_i+0x210>
 800bf86:	e7eb      	b.n	800bf60 <_printf_i+0x204>
 800bf88:	2500      	movs	r5, #0
 800bf8a:	f104 0619 	add.w	r6, r4, #25
 800bf8e:	e7f5      	b.n	800bf7c <_printf_i+0x220>
 800bf90:	0800e0f2 	.word	0x0800e0f2
 800bf94:	0800e103 	.word	0x0800e103

0800bf98 <std>:
 800bf98:	2300      	movs	r3, #0
 800bf9a:	b510      	push	{r4, lr}
 800bf9c:	4604      	mov	r4, r0
 800bf9e:	e9c0 3300 	strd	r3, r3, [r0]
 800bfa2:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800bfa6:	6083      	str	r3, [r0, #8]
 800bfa8:	8181      	strh	r1, [r0, #12]
 800bfaa:	6643      	str	r3, [r0, #100]	@ 0x64
 800bfac:	81c2      	strh	r2, [r0, #14]
 800bfae:	6183      	str	r3, [r0, #24]
 800bfb0:	4619      	mov	r1, r3
 800bfb2:	2208      	movs	r2, #8
 800bfb4:	305c      	adds	r0, #92	@ 0x5c
 800bfb6:	f000 f9f9 	bl	800c3ac <memset>
 800bfba:	4b0d      	ldr	r3, [pc, #52]	@ (800bff0 <std+0x58>)
 800bfbc:	6263      	str	r3, [r4, #36]	@ 0x24
 800bfbe:	4b0d      	ldr	r3, [pc, #52]	@ (800bff4 <std+0x5c>)
 800bfc0:	62a3      	str	r3, [r4, #40]	@ 0x28
 800bfc2:	4b0d      	ldr	r3, [pc, #52]	@ (800bff8 <std+0x60>)
 800bfc4:	62e3      	str	r3, [r4, #44]	@ 0x2c
 800bfc6:	4b0d      	ldr	r3, [pc, #52]	@ (800bffc <std+0x64>)
 800bfc8:	6323      	str	r3, [r4, #48]	@ 0x30
 800bfca:	4b0d      	ldr	r3, [pc, #52]	@ (800c000 <std+0x68>)
 800bfcc:	6224      	str	r4, [r4, #32]
 800bfce:	429c      	cmp	r4, r3
 800bfd0:	d006      	beq.n	800bfe0 <std+0x48>
 800bfd2:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 800bfd6:	4294      	cmp	r4, r2
 800bfd8:	d002      	beq.n	800bfe0 <std+0x48>
 800bfda:	33d0      	adds	r3, #208	@ 0xd0
 800bfdc:	429c      	cmp	r4, r3
 800bfde:	d105      	bne.n	800bfec <std+0x54>
 800bfe0:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 800bfe4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800bfe8:	f000 ba6c 	b.w	800c4c4 <__retarget_lock_init_recursive>
 800bfec:	bd10      	pop	{r4, pc}
 800bfee:	bf00      	nop
 800bff0:	0800c1fd 	.word	0x0800c1fd
 800bff4:	0800c21f 	.word	0x0800c21f
 800bff8:	0800c257 	.word	0x0800c257
 800bffc:	0800c27b 	.word	0x0800c27b
 800c000:	2002634c 	.word	0x2002634c

0800c004 <stdio_exit_handler>:
 800c004:	4a02      	ldr	r2, [pc, #8]	@ (800c010 <stdio_exit_handler+0xc>)
 800c006:	4903      	ldr	r1, [pc, #12]	@ (800c014 <stdio_exit_handler+0x10>)
 800c008:	4803      	ldr	r0, [pc, #12]	@ (800c018 <stdio_exit_handler+0x14>)
 800c00a:	f000 b869 	b.w	800c0e0 <_fwalk_sglue>
 800c00e:	bf00      	nop
 800c010:	20000018 	.word	0x20000018
 800c014:	0800dcad 	.word	0x0800dcad
 800c018:	20000028 	.word	0x20000028

0800c01c <cleanup_stdio>:
 800c01c:	6841      	ldr	r1, [r0, #4]
 800c01e:	4b0c      	ldr	r3, [pc, #48]	@ (800c050 <cleanup_stdio+0x34>)
 800c020:	4299      	cmp	r1, r3
 800c022:	b510      	push	{r4, lr}
 800c024:	4604      	mov	r4, r0
 800c026:	d001      	beq.n	800c02c <cleanup_stdio+0x10>
 800c028:	f001 fe40 	bl	800dcac <_fflush_r>
 800c02c:	68a1      	ldr	r1, [r4, #8]
 800c02e:	4b09      	ldr	r3, [pc, #36]	@ (800c054 <cleanup_stdio+0x38>)
 800c030:	4299      	cmp	r1, r3
 800c032:	d002      	beq.n	800c03a <cleanup_stdio+0x1e>
 800c034:	4620      	mov	r0, r4
 800c036:	f001 fe39 	bl	800dcac <_fflush_r>
 800c03a:	68e1      	ldr	r1, [r4, #12]
 800c03c:	4b06      	ldr	r3, [pc, #24]	@ (800c058 <cleanup_stdio+0x3c>)
 800c03e:	4299      	cmp	r1, r3
 800c040:	d004      	beq.n	800c04c <cleanup_stdio+0x30>
 800c042:	4620      	mov	r0, r4
 800c044:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c048:	f001 be30 	b.w	800dcac <_fflush_r>
 800c04c:	bd10      	pop	{r4, pc}
 800c04e:	bf00      	nop
 800c050:	2002634c 	.word	0x2002634c
 800c054:	200263b4 	.word	0x200263b4
 800c058:	2002641c 	.word	0x2002641c

0800c05c <global_stdio_init.part.0>:
 800c05c:	b510      	push	{r4, lr}
 800c05e:	4b0b      	ldr	r3, [pc, #44]	@ (800c08c <global_stdio_init.part.0+0x30>)
 800c060:	4c0b      	ldr	r4, [pc, #44]	@ (800c090 <global_stdio_init.part.0+0x34>)
 800c062:	4a0c      	ldr	r2, [pc, #48]	@ (800c094 <global_stdio_init.part.0+0x38>)
 800c064:	601a      	str	r2, [r3, #0]
 800c066:	4620      	mov	r0, r4
 800c068:	2200      	movs	r2, #0
 800c06a:	2104      	movs	r1, #4
 800c06c:	f7ff ff94 	bl	800bf98 <std>
 800c070:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 800c074:	2201      	movs	r2, #1
 800c076:	2109      	movs	r1, #9
 800c078:	f7ff ff8e 	bl	800bf98 <std>
 800c07c:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 800c080:	2202      	movs	r2, #2
 800c082:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c086:	2112      	movs	r1, #18
 800c088:	f7ff bf86 	b.w	800bf98 <std>
 800c08c:	20026484 	.word	0x20026484
 800c090:	2002634c 	.word	0x2002634c
 800c094:	0800c005 	.word	0x0800c005

0800c098 <__sfp_lock_acquire>:
 800c098:	4801      	ldr	r0, [pc, #4]	@ (800c0a0 <__sfp_lock_acquire+0x8>)
 800c09a:	f000 ba14 	b.w	800c4c6 <__retarget_lock_acquire_recursive>
 800c09e:	bf00      	nop
 800c0a0:	2002648d 	.word	0x2002648d

0800c0a4 <__sfp_lock_release>:
 800c0a4:	4801      	ldr	r0, [pc, #4]	@ (800c0ac <__sfp_lock_release+0x8>)
 800c0a6:	f000 ba0f 	b.w	800c4c8 <__retarget_lock_release_recursive>
 800c0aa:	bf00      	nop
 800c0ac:	2002648d 	.word	0x2002648d

0800c0b0 <__sinit>:
 800c0b0:	b510      	push	{r4, lr}
 800c0b2:	4604      	mov	r4, r0
 800c0b4:	f7ff fff0 	bl	800c098 <__sfp_lock_acquire>
 800c0b8:	6a23      	ldr	r3, [r4, #32]
 800c0ba:	b11b      	cbz	r3, 800c0c4 <__sinit+0x14>
 800c0bc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c0c0:	f7ff bff0 	b.w	800c0a4 <__sfp_lock_release>
 800c0c4:	4b04      	ldr	r3, [pc, #16]	@ (800c0d8 <__sinit+0x28>)
 800c0c6:	6223      	str	r3, [r4, #32]
 800c0c8:	4b04      	ldr	r3, [pc, #16]	@ (800c0dc <__sinit+0x2c>)
 800c0ca:	681b      	ldr	r3, [r3, #0]
 800c0cc:	2b00      	cmp	r3, #0
 800c0ce:	d1f5      	bne.n	800c0bc <__sinit+0xc>
 800c0d0:	f7ff ffc4 	bl	800c05c <global_stdio_init.part.0>
 800c0d4:	e7f2      	b.n	800c0bc <__sinit+0xc>
 800c0d6:	bf00      	nop
 800c0d8:	0800c01d 	.word	0x0800c01d
 800c0dc:	20026484 	.word	0x20026484

0800c0e0 <_fwalk_sglue>:
 800c0e0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800c0e4:	4607      	mov	r7, r0
 800c0e6:	4688      	mov	r8, r1
 800c0e8:	4614      	mov	r4, r2
 800c0ea:	2600      	movs	r6, #0
 800c0ec:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 800c0f0:	f1b9 0901 	subs.w	r9, r9, #1
 800c0f4:	d505      	bpl.n	800c102 <_fwalk_sglue+0x22>
 800c0f6:	6824      	ldr	r4, [r4, #0]
 800c0f8:	2c00      	cmp	r4, #0
 800c0fa:	d1f7      	bne.n	800c0ec <_fwalk_sglue+0xc>
 800c0fc:	4630      	mov	r0, r6
 800c0fe:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800c102:	89ab      	ldrh	r3, [r5, #12]
 800c104:	2b01      	cmp	r3, #1
 800c106:	d907      	bls.n	800c118 <_fwalk_sglue+0x38>
 800c108:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 800c10c:	3301      	adds	r3, #1
 800c10e:	d003      	beq.n	800c118 <_fwalk_sglue+0x38>
 800c110:	4629      	mov	r1, r5
 800c112:	4638      	mov	r0, r7
 800c114:	47c0      	blx	r8
 800c116:	4306      	orrs	r6, r0
 800c118:	3568      	adds	r5, #104	@ 0x68
 800c11a:	e7e9      	b.n	800c0f0 <_fwalk_sglue+0x10>

0800c11c <iprintf>:
 800c11c:	b40f      	push	{r0, r1, r2, r3}
 800c11e:	b507      	push	{r0, r1, r2, lr}
 800c120:	4906      	ldr	r1, [pc, #24]	@ (800c13c <iprintf+0x20>)
 800c122:	ab04      	add	r3, sp, #16
 800c124:	6808      	ldr	r0, [r1, #0]
 800c126:	f853 2b04 	ldr.w	r2, [r3], #4
 800c12a:	6881      	ldr	r1, [r0, #8]
 800c12c:	9301      	str	r3, [sp, #4]
 800c12e:	f001 fc21 	bl	800d974 <_vfiprintf_r>
 800c132:	b003      	add	sp, #12
 800c134:	f85d eb04 	ldr.w	lr, [sp], #4
 800c138:	b004      	add	sp, #16
 800c13a:	4770      	bx	lr
 800c13c:	20000024 	.word	0x20000024

0800c140 <_puts_r>:
 800c140:	6a03      	ldr	r3, [r0, #32]
 800c142:	b570      	push	{r4, r5, r6, lr}
 800c144:	6884      	ldr	r4, [r0, #8]
 800c146:	4605      	mov	r5, r0
 800c148:	460e      	mov	r6, r1
 800c14a:	b90b      	cbnz	r3, 800c150 <_puts_r+0x10>
 800c14c:	f7ff ffb0 	bl	800c0b0 <__sinit>
 800c150:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 800c152:	07db      	lsls	r3, r3, #31
 800c154:	d405      	bmi.n	800c162 <_puts_r+0x22>
 800c156:	89a3      	ldrh	r3, [r4, #12]
 800c158:	0598      	lsls	r0, r3, #22
 800c15a:	d402      	bmi.n	800c162 <_puts_r+0x22>
 800c15c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800c15e:	f000 f9b2 	bl	800c4c6 <__retarget_lock_acquire_recursive>
 800c162:	89a3      	ldrh	r3, [r4, #12]
 800c164:	0719      	lsls	r1, r3, #28
 800c166:	d502      	bpl.n	800c16e <_puts_r+0x2e>
 800c168:	6923      	ldr	r3, [r4, #16]
 800c16a:	2b00      	cmp	r3, #0
 800c16c:	d135      	bne.n	800c1da <_puts_r+0x9a>
 800c16e:	4621      	mov	r1, r4
 800c170:	4628      	mov	r0, r5
 800c172:	f000 f8c5 	bl	800c300 <__swsetup_r>
 800c176:	b380      	cbz	r0, 800c1da <_puts_r+0x9a>
 800c178:	f04f 35ff 	mov.w	r5, #4294967295	@ 0xffffffff
 800c17c:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 800c17e:	07da      	lsls	r2, r3, #31
 800c180:	d405      	bmi.n	800c18e <_puts_r+0x4e>
 800c182:	89a3      	ldrh	r3, [r4, #12]
 800c184:	059b      	lsls	r3, r3, #22
 800c186:	d402      	bmi.n	800c18e <_puts_r+0x4e>
 800c188:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800c18a:	f000 f99d 	bl	800c4c8 <__retarget_lock_release_recursive>
 800c18e:	4628      	mov	r0, r5
 800c190:	bd70      	pop	{r4, r5, r6, pc}
 800c192:	2b00      	cmp	r3, #0
 800c194:	da04      	bge.n	800c1a0 <_puts_r+0x60>
 800c196:	69a2      	ldr	r2, [r4, #24]
 800c198:	429a      	cmp	r2, r3
 800c19a:	dc17      	bgt.n	800c1cc <_puts_r+0x8c>
 800c19c:	290a      	cmp	r1, #10
 800c19e:	d015      	beq.n	800c1cc <_puts_r+0x8c>
 800c1a0:	6823      	ldr	r3, [r4, #0]
 800c1a2:	1c5a      	adds	r2, r3, #1
 800c1a4:	6022      	str	r2, [r4, #0]
 800c1a6:	7019      	strb	r1, [r3, #0]
 800c1a8:	68a3      	ldr	r3, [r4, #8]
 800c1aa:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 800c1ae:	3b01      	subs	r3, #1
 800c1b0:	60a3      	str	r3, [r4, #8]
 800c1b2:	2900      	cmp	r1, #0
 800c1b4:	d1ed      	bne.n	800c192 <_puts_r+0x52>
 800c1b6:	2b00      	cmp	r3, #0
 800c1b8:	da11      	bge.n	800c1de <_puts_r+0x9e>
 800c1ba:	4622      	mov	r2, r4
 800c1bc:	210a      	movs	r1, #10
 800c1be:	4628      	mov	r0, r5
 800c1c0:	f000 f85f 	bl	800c282 <__swbuf_r>
 800c1c4:	3001      	adds	r0, #1
 800c1c6:	d0d7      	beq.n	800c178 <_puts_r+0x38>
 800c1c8:	250a      	movs	r5, #10
 800c1ca:	e7d7      	b.n	800c17c <_puts_r+0x3c>
 800c1cc:	4622      	mov	r2, r4
 800c1ce:	4628      	mov	r0, r5
 800c1d0:	f000 f857 	bl	800c282 <__swbuf_r>
 800c1d4:	3001      	adds	r0, #1
 800c1d6:	d1e7      	bne.n	800c1a8 <_puts_r+0x68>
 800c1d8:	e7ce      	b.n	800c178 <_puts_r+0x38>
 800c1da:	3e01      	subs	r6, #1
 800c1dc:	e7e4      	b.n	800c1a8 <_puts_r+0x68>
 800c1de:	6823      	ldr	r3, [r4, #0]
 800c1e0:	1c5a      	adds	r2, r3, #1
 800c1e2:	6022      	str	r2, [r4, #0]
 800c1e4:	220a      	movs	r2, #10
 800c1e6:	701a      	strb	r2, [r3, #0]
 800c1e8:	e7ee      	b.n	800c1c8 <_puts_r+0x88>
	...

0800c1ec <puts>:
 800c1ec:	4b02      	ldr	r3, [pc, #8]	@ (800c1f8 <puts+0xc>)
 800c1ee:	4601      	mov	r1, r0
 800c1f0:	6818      	ldr	r0, [r3, #0]
 800c1f2:	f7ff bfa5 	b.w	800c140 <_puts_r>
 800c1f6:	bf00      	nop
 800c1f8:	20000024 	.word	0x20000024

0800c1fc <__sread>:
 800c1fc:	b510      	push	{r4, lr}
 800c1fe:	460c      	mov	r4, r1
 800c200:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800c204:	f000 f900 	bl	800c408 <_read_r>
 800c208:	2800      	cmp	r0, #0
 800c20a:	bfab      	itete	ge
 800c20c:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 800c20e:	89a3      	ldrhlt	r3, [r4, #12]
 800c210:	181b      	addge	r3, r3, r0
 800c212:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 800c216:	bfac      	ite	ge
 800c218:	6563      	strge	r3, [r4, #84]	@ 0x54
 800c21a:	81a3      	strhlt	r3, [r4, #12]
 800c21c:	bd10      	pop	{r4, pc}

0800c21e <__swrite>:
 800c21e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c222:	461f      	mov	r7, r3
 800c224:	898b      	ldrh	r3, [r1, #12]
 800c226:	05db      	lsls	r3, r3, #23
 800c228:	4605      	mov	r5, r0
 800c22a:	460c      	mov	r4, r1
 800c22c:	4616      	mov	r6, r2
 800c22e:	d505      	bpl.n	800c23c <__swrite+0x1e>
 800c230:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800c234:	2302      	movs	r3, #2
 800c236:	2200      	movs	r2, #0
 800c238:	f000 f8d4 	bl	800c3e4 <_lseek_r>
 800c23c:	89a3      	ldrh	r3, [r4, #12]
 800c23e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800c242:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 800c246:	81a3      	strh	r3, [r4, #12]
 800c248:	4632      	mov	r2, r6
 800c24a:	463b      	mov	r3, r7
 800c24c:	4628      	mov	r0, r5
 800c24e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800c252:	f000 b8fb 	b.w	800c44c <_write_r>

0800c256 <__sseek>:
 800c256:	b510      	push	{r4, lr}
 800c258:	460c      	mov	r4, r1
 800c25a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800c25e:	f000 f8c1 	bl	800c3e4 <_lseek_r>
 800c262:	1c43      	adds	r3, r0, #1
 800c264:	89a3      	ldrh	r3, [r4, #12]
 800c266:	bf15      	itete	ne
 800c268:	6560      	strne	r0, [r4, #84]	@ 0x54
 800c26a:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 800c26e:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 800c272:	81a3      	strheq	r3, [r4, #12]
 800c274:	bf18      	it	ne
 800c276:	81a3      	strhne	r3, [r4, #12]
 800c278:	bd10      	pop	{r4, pc}

0800c27a <__sclose>:
 800c27a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800c27e:	f000 b8a1 	b.w	800c3c4 <_close_r>

0800c282 <__swbuf_r>:
 800c282:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c284:	460e      	mov	r6, r1
 800c286:	4614      	mov	r4, r2
 800c288:	4605      	mov	r5, r0
 800c28a:	b118      	cbz	r0, 800c294 <__swbuf_r+0x12>
 800c28c:	6a03      	ldr	r3, [r0, #32]
 800c28e:	b90b      	cbnz	r3, 800c294 <__swbuf_r+0x12>
 800c290:	f7ff ff0e 	bl	800c0b0 <__sinit>
 800c294:	69a3      	ldr	r3, [r4, #24]
 800c296:	60a3      	str	r3, [r4, #8]
 800c298:	89a3      	ldrh	r3, [r4, #12]
 800c29a:	071a      	lsls	r2, r3, #28
 800c29c:	d501      	bpl.n	800c2a2 <__swbuf_r+0x20>
 800c29e:	6923      	ldr	r3, [r4, #16]
 800c2a0:	b943      	cbnz	r3, 800c2b4 <__swbuf_r+0x32>
 800c2a2:	4621      	mov	r1, r4
 800c2a4:	4628      	mov	r0, r5
 800c2a6:	f000 f82b 	bl	800c300 <__swsetup_r>
 800c2aa:	b118      	cbz	r0, 800c2b4 <__swbuf_r+0x32>
 800c2ac:	f04f 37ff 	mov.w	r7, #4294967295	@ 0xffffffff
 800c2b0:	4638      	mov	r0, r7
 800c2b2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800c2b4:	6823      	ldr	r3, [r4, #0]
 800c2b6:	6922      	ldr	r2, [r4, #16]
 800c2b8:	1a98      	subs	r0, r3, r2
 800c2ba:	6963      	ldr	r3, [r4, #20]
 800c2bc:	b2f6      	uxtb	r6, r6
 800c2be:	4283      	cmp	r3, r0
 800c2c0:	4637      	mov	r7, r6
 800c2c2:	dc05      	bgt.n	800c2d0 <__swbuf_r+0x4e>
 800c2c4:	4621      	mov	r1, r4
 800c2c6:	4628      	mov	r0, r5
 800c2c8:	f001 fcf0 	bl	800dcac <_fflush_r>
 800c2cc:	2800      	cmp	r0, #0
 800c2ce:	d1ed      	bne.n	800c2ac <__swbuf_r+0x2a>
 800c2d0:	68a3      	ldr	r3, [r4, #8]
 800c2d2:	3b01      	subs	r3, #1
 800c2d4:	60a3      	str	r3, [r4, #8]
 800c2d6:	6823      	ldr	r3, [r4, #0]
 800c2d8:	1c5a      	adds	r2, r3, #1
 800c2da:	6022      	str	r2, [r4, #0]
 800c2dc:	701e      	strb	r6, [r3, #0]
 800c2de:	6962      	ldr	r2, [r4, #20]
 800c2e0:	1c43      	adds	r3, r0, #1
 800c2e2:	429a      	cmp	r2, r3
 800c2e4:	d004      	beq.n	800c2f0 <__swbuf_r+0x6e>
 800c2e6:	89a3      	ldrh	r3, [r4, #12]
 800c2e8:	07db      	lsls	r3, r3, #31
 800c2ea:	d5e1      	bpl.n	800c2b0 <__swbuf_r+0x2e>
 800c2ec:	2e0a      	cmp	r6, #10
 800c2ee:	d1df      	bne.n	800c2b0 <__swbuf_r+0x2e>
 800c2f0:	4621      	mov	r1, r4
 800c2f2:	4628      	mov	r0, r5
 800c2f4:	f001 fcda 	bl	800dcac <_fflush_r>
 800c2f8:	2800      	cmp	r0, #0
 800c2fa:	d0d9      	beq.n	800c2b0 <__swbuf_r+0x2e>
 800c2fc:	e7d6      	b.n	800c2ac <__swbuf_r+0x2a>
	...

0800c300 <__swsetup_r>:
 800c300:	b538      	push	{r3, r4, r5, lr}
 800c302:	4b29      	ldr	r3, [pc, #164]	@ (800c3a8 <__swsetup_r+0xa8>)
 800c304:	4605      	mov	r5, r0
 800c306:	6818      	ldr	r0, [r3, #0]
 800c308:	460c      	mov	r4, r1
 800c30a:	b118      	cbz	r0, 800c314 <__swsetup_r+0x14>
 800c30c:	6a03      	ldr	r3, [r0, #32]
 800c30e:	b90b      	cbnz	r3, 800c314 <__swsetup_r+0x14>
 800c310:	f7ff fece 	bl	800c0b0 <__sinit>
 800c314:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800c318:	0719      	lsls	r1, r3, #28
 800c31a:	d422      	bmi.n	800c362 <__swsetup_r+0x62>
 800c31c:	06da      	lsls	r2, r3, #27
 800c31e:	d407      	bmi.n	800c330 <__swsetup_r+0x30>
 800c320:	2209      	movs	r2, #9
 800c322:	602a      	str	r2, [r5, #0]
 800c324:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800c328:	81a3      	strh	r3, [r4, #12]
 800c32a:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 800c32e:	e033      	b.n	800c398 <__swsetup_r+0x98>
 800c330:	0758      	lsls	r0, r3, #29
 800c332:	d512      	bpl.n	800c35a <__swsetup_r+0x5a>
 800c334:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 800c336:	b141      	cbz	r1, 800c34a <__swsetup_r+0x4a>
 800c338:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 800c33c:	4299      	cmp	r1, r3
 800c33e:	d002      	beq.n	800c346 <__swsetup_r+0x46>
 800c340:	4628      	mov	r0, r5
 800c342:	f000 ff29 	bl	800d198 <_free_r>
 800c346:	2300      	movs	r3, #0
 800c348:	6363      	str	r3, [r4, #52]	@ 0x34
 800c34a:	89a3      	ldrh	r3, [r4, #12]
 800c34c:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 800c350:	81a3      	strh	r3, [r4, #12]
 800c352:	2300      	movs	r3, #0
 800c354:	6063      	str	r3, [r4, #4]
 800c356:	6923      	ldr	r3, [r4, #16]
 800c358:	6023      	str	r3, [r4, #0]
 800c35a:	89a3      	ldrh	r3, [r4, #12]
 800c35c:	f043 0308 	orr.w	r3, r3, #8
 800c360:	81a3      	strh	r3, [r4, #12]
 800c362:	6923      	ldr	r3, [r4, #16]
 800c364:	b94b      	cbnz	r3, 800c37a <__swsetup_r+0x7a>
 800c366:	89a3      	ldrh	r3, [r4, #12]
 800c368:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 800c36c:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800c370:	d003      	beq.n	800c37a <__swsetup_r+0x7a>
 800c372:	4621      	mov	r1, r4
 800c374:	4628      	mov	r0, r5
 800c376:	f001 fce7 	bl	800dd48 <__smakebuf_r>
 800c37a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800c37e:	f013 0201 	ands.w	r2, r3, #1
 800c382:	d00a      	beq.n	800c39a <__swsetup_r+0x9a>
 800c384:	2200      	movs	r2, #0
 800c386:	60a2      	str	r2, [r4, #8]
 800c388:	6962      	ldr	r2, [r4, #20]
 800c38a:	4252      	negs	r2, r2
 800c38c:	61a2      	str	r2, [r4, #24]
 800c38e:	6922      	ldr	r2, [r4, #16]
 800c390:	b942      	cbnz	r2, 800c3a4 <__swsetup_r+0xa4>
 800c392:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 800c396:	d1c5      	bne.n	800c324 <__swsetup_r+0x24>
 800c398:	bd38      	pop	{r3, r4, r5, pc}
 800c39a:	0799      	lsls	r1, r3, #30
 800c39c:	bf58      	it	pl
 800c39e:	6962      	ldrpl	r2, [r4, #20]
 800c3a0:	60a2      	str	r2, [r4, #8]
 800c3a2:	e7f4      	b.n	800c38e <__swsetup_r+0x8e>
 800c3a4:	2000      	movs	r0, #0
 800c3a6:	e7f7      	b.n	800c398 <__swsetup_r+0x98>
 800c3a8:	20000024 	.word	0x20000024

0800c3ac <memset>:
 800c3ac:	4402      	add	r2, r0
 800c3ae:	4603      	mov	r3, r0
 800c3b0:	4293      	cmp	r3, r2
 800c3b2:	d100      	bne.n	800c3b6 <memset+0xa>
 800c3b4:	4770      	bx	lr
 800c3b6:	f803 1b01 	strb.w	r1, [r3], #1
 800c3ba:	e7f9      	b.n	800c3b0 <memset+0x4>

0800c3bc <_localeconv_r>:
 800c3bc:	4800      	ldr	r0, [pc, #0]	@ (800c3c0 <_localeconv_r+0x4>)
 800c3be:	4770      	bx	lr
 800c3c0:	20000164 	.word	0x20000164

0800c3c4 <_close_r>:
 800c3c4:	b538      	push	{r3, r4, r5, lr}
 800c3c6:	4d06      	ldr	r5, [pc, #24]	@ (800c3e0 <_close_r+0x1c>)
 800c3c8:	2300      	movs	r3, #0
 800c3ca:	4604      	mov	r4, r0
 800c3cc:	4608      	mov	r0, r1
 800c3ce:	602b      	str	r3, [r5, #0]
 800c3d0:	f7f6 ff96 	bl	8003300 <_close>
 800c3d4:	1c43      	adds	r3, r0, #1
 800c3d6:	d102      	bne.n	800c3de <_close_r+0x1a>
 800c3d8:	682b      	ldr	r3, [r5, #0]
 800c3da:	b103      	cbz	r3, 800c3de <_close_r+0x1a>
 800c3dc:	6023      	str	r3, [r4, #0]
 800c3de:	bd38      	pop	{r3, r4, r5, pc}
 800c3e0:	20026488 	.word	0x20026488

0800c3e4 <_lseek_r>:
 800c3e4:	b538      	push	{r3, r4, r5, lr}
 800c3e6:	4d07      	ldr	r5, [pc, #28]	@ (800c404 <_lseek_r+0x20>)
 800c3e8:	4604      	mov	r4, r0
 800c3ea:	4608      	mov	r0, r1
 800c3ec:	4611      	mov	r1, r2
 800c3ee:	2200      	movs	r2, #0
 800c3f0:	602a      	str	r2, [r5, #0]
 800c3f2:	461a      	mov	r2, r3
 800c3f4:	f7f6 ffab 	bl	800334e <_lseek>
 800c3f8:	1c43      	adds	r3, r0, #1
 800c3fa:	d102      	bne.n	800c402 <_lseek_r+0x1e>
 800c3fc:	682b      	ldr	r3, [r5, #0]
 800c3fe:	b103      	cbz	r3, 800c402 <_lseek_r+0x1e>
 800c400:	6023      	str	r3, [r4, #0]
 800c402:	bd38      	pop	{r3, r4, r5, pc}
 800c404:	20026488 	.word	0x20026488

0800c408 <_read_r>:
 800c408:	b538      	push	{r3, r4, r5, lr}
 800c40a:	4d07      	ldr	r5, [pc, #28]	@ (800c428 <_read_r+0x20>)
 800c40c:	4604      	mov	r4, r0
 800c40e:	4608      	mov	r0, r1
 800c410:	4611      	mov	r1, r2
 800c412:	2200      	movs	r2, #0
 800c414:	602a      	str	r2, [r5, #0]
 800c416:	461a      	mov	r2, r3
 800c418:	f7f6 ff55 	bl	80032c6 <_read>
 800c41c:	1c43      	adds	r3, r0, #1
 800c41e:	d102      	bne.n	800c426 <_read_r+0x1e>
 800c420:	682b      	ldr	r3, [r5, #0]
 800c422:	b103      	cbz	r3, 800c426 <_read_r+0x1e>
 800c424:	6023      	str	r3, [r4, #0]
 800c426:	bd38      	pop	{r3, r4, r5, pc}
 800c428:	20026488 	.word	0x20026488

0800c42c <_sbrk_r>:
 800c42c:	b538      	push	{r3, r4, r5, lr}
 800c42e:	4d06      	ldr	r5, [pc, #24]	@ (800c448 <_sbrk_r+0x1c>)
 800c430:	2300      	movs	r3, #0
 800c432:	4604      	mov	r4, r0
 800c434:	4608      	mov	r0, r1
 800c436:	602b      	str	r3, [r5, #0]
 800c438:	f7f6 ff96 	bl	8003368 <_sbrk>
 800c43c:	1c43      	adds	r3, r0, #1
 800c43e:	d102      	bne.n	800c446 <_sbrk_r+0x1a>
 800c440:	682b      	ldr	r3, [r5, #0]
 800c442:	b103      	cbz	r3, 800c446 <_sbrk_r+0x1a>
 800c444:	6023      	str	r3, [r4, #0]
 800c446:	bd38      	pop	{r3, r4, r5, pc}
 800c448:	20026488 	.word	0x20026488

0800c44c <_write_r>:
 800c44c:	b538      	push	{r3, r4, r5, lr}
 800c44e:	4d07      	ldr	r5, [pc, #28]	@ (800c46c <_write_r+0x20>)
 800c450:	4604      	mov	r4, r0
 800c452:	4608      	mov	r0, r1
 800c454:	4611      	mov	r1, r2
 800c456:	2200      	movs	r2, #0
 800c458:	602a      	str	r2, [r5, #0]
 800c45a:	461a      	mov	r2, r3
 800c45c:	f7f5 f9f6 	bl	800184c <_write>
 800c460:	1c43      	adds	r3, r0, #1
 800c462:	d102      	bne.n	800c46a <_write_r+0x1e>
 800c464:	682b      	ldr	r3, [r5, #0]
 800c466:	b103      	cbz	r3, 800c46a <_write_r+0x1e>
 800c468:	6023      	str	r3, [r4, #0]
 800c46a:	bd38      	pop	{r3, r4, r5, pc}
 800c46c:	20026488 	.word	0x20026488

0800c470 <__errno>:
 800c470:	4b01      	ldr	r3, [pc, #4]	@ (800c478 <__errno+0x8>)
 800c472:	6818      	ldr	r0, [r3, #0]
 800c474:	4770      	bx	lr
 800c476:	bf00      	nop
 800c478:	20000024 	.word	0x20000024

0800c47c <__libc_init_array>:
 800c47c:	b570      	push	{r4, r5, r6, lr}
 800c47e:	4d0d      	ldr	r5, [pc, #52]	@ (800c4b4 <__libc_init_array+0x38>)
 800c480:	4c0d      	ldr	r4, [pc, #52]	@ (800c4b8 <__libc_init_array+0x3c>)
 800c482:	1b64      	subs	r4, r4, r5
 800c484:	10a4      	asrs	r4, r4, #2
 800c486:	2600      	movs	r6, #0
 800c488:	42a6      	cmp	r6, r4
 800c48a:	d109      	bne.n	800c4a0 <__libc_init_array+0x24>
 800c48c:	4d0b      	ldr	r5, [pc, #44]	@ (800c4bc <__libc_init_array+0x40>)
 800c48e:	4c0c      	ldr	r4, [pc, #48]	@ (800c4c0 <__libc_init_array+0x44>)
 800c490:	f001 fd68 	bl	800df64 <_init>
 800c494:	1b64      	subs	r4, r4, r5
 800c496:	10a4      	asrs	r4, r4, #2
 800c498:	2600      	movs	r6, #0
 800c49a:	42a6      	cmp	r6, r4
 800c49c:	d105      	bne.n	800c4aa <__libc_init_array+0x2e>
 800c49e:	bd70      	pop	{r4, r5, r6, pc}
 800c4a0:	f855 3b04 	ldr.w	r3, [r5], #4
 800c4a4:	4798      	blx	r3
 800c4a6:	3601      	adds	r6, #1
 800c4a8:	e7ee      	b.n	800c488 <__libc_init_array+0xc>
 800c4aa:	f855 3b04 	ldr.w	r3, [r5], #4
 800c4ae:	4798      	blx	r3
 800c4b0:	3601      	adds	r6, #1
 800c4b2:	e7f2      	b.n	800c49a <__libc_init_array+0x1e>
 800c4b4:	0800e45c 	.word	0x0800e45c
 800c4b8:	0800e45c 	.word	0x0800e45c
 800c4bc:	0800e45c 	.word	0x0800e45c
 800c4c0:	0800e460 	.word	0x0800e460

0800c4c4 <__retarget_lock_init_recursive>:
 800c4c4:	4770      	bx	lr

0800c4c6 <__retarget_lock_acquire_recursive>:
 800c4c6:	4770      	bx	lr

0800c4c8 <__retarget_lock_release_recursive>:
 800c4c8:	4770      	bx	lr

0800c4ca <memcpy>:
 800c4ca:	440a      	add	r2, r1
 800c4cc:	4291      	cmp	r1, r2
 800c4ce:	f100 33ff 	add.w	r3, r0, #4294967295	@ 0xffffffff
 800c4d2:	d100      	bne.n	800c4d6 <memcpy+0xc>
 800c4d4:	4770      	bx	lr
 800c4d6:	b510      	push	{r4, lr}
 800c4d8:	f811 4b01 	ldrb.w	r4, [r1], #1
 800c4dc:	f803 4f01 	strb.w	r4, [r3, #1]!
 800c4e0:	4291      	cmp	r1, r2
 800c4e2:	d1f9      	bne.n	800c4d8 <memcpy+0xe>
 800c4e4:	bd10      	pop	{r4, pc}

0800c4e6 <quorem>:
 800c4e6:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c4ea:	6903      	ldr	r3, [r0, #16]
 800c4ec:	690c      	ldr	r4, [r1, #16]
 800c4ee:	42a3      	cmp	r3, r4
 800c4f0:	4607      	mov	r7, r0
 800c4f2:	db7e      	blt.n	800c5f2 <quorem+0x10c>
 800c4f4:	3c01      	subs	r4, #1
 800c4f6:	f101 0814 	add.w	r8, r1, #20
 800c4fa:	00a3      	lsls	r3, r4, #2
 800c4fc:	f100 0514 	add.w	r5, r0, #20
 800c500:	9300      	str	r3, [sp, #0]
 800c502:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800c506:	9301      	str	r3, [sp, #4]
 800c508:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 800c50c:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 800c510:	3301      	adds	r3, #1
 800c512:	429a      	cmp	r2, r3
 800c514:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 800c518:	fbb2 f6f3 	udiv	r6, r2, r3
 800c51c:	d32e      	bcc.n	800c57c <quorem+0x96>
 800c51e:	f04f 0a00 	mov.w	sl, #0
 800c522:	46c4      	mov	ip, r8
 800c524:	46ae      	mov	lr, r5
 800c526:	46d3      	mov	fp, sl
 800c528:	f85c 3b04 	ldr.w	r3, [ip], #4
 800c52c:	b298      	uxth	r0, r3
 800c52e:	fb06 a000 	mla	r0, r6, r0, sl
 800c532:	0c02      	lsrs	r2, r0, #16
 800c534:	0c1b      	lsrs	r3, r3, #16
 800c536:	fb06 2303 	mla	r3, r6, r3, r2
 800c53a:	f8de 2000 	ldr.w	r2, [lr]
 800c53e:	b280      	uxth	r0, r0
 800c540:	b292      	uxth	r2, r2
 800c542:	1a12      	subs	r2, r2, r0
 800c544:	445a      	add	r2, fp
 800c546:	f8de 0000 	ldr.w	r0, [lr]
 800c54a:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 800c54e:	b29b      	uxth	r3, r3
 800c550:	ebc3 4322 	rsb	r3, r3, r2, asr #16
 800c554:	eb03 4310 	add.w	r3, r3, r0, lsr #16
 800c558:	b292      	uxth	r2, r2
 800c55a:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 800c55e:	45e1      	cmp	r9, ip
 800c560:	f84e 2b04 	str.w	r2, [lr], #4
 800c564:	ea4f 4b23 	mov.w	fp, r3, asr #16
 800c568:	d2de      	bcs.n	800c528 <quorem+0x42>
 800c56a:	9b00      	ldr	r3, [sp, #0]
 800c56c:	58eb      	ldr	r3, [r5, r3]
 800c56e:	b92b      	cbnz	r3, 800c57c <quorem+0x96>
 800c570:	9b01      	ldr	r3, [sp, #4]
 800c572:	3b04      	subs	r3, #4
 800c574:	429d      	cmp	r5, r3
 800c576:	461a      	mov	r2, r3
 800c578:	d32f      	bcc.n	800c5da <quorem+0xf4>
 800c57a:	613c      	str	r4, [r7, #16]
 800c57c:	4638      	mov	r0, r7
 800c57e:	f001 f8c7 	bl	800d710 <__mcmp>
 800c582:	2800      	cmp	r0, #0
 800c584:	db25      	blt.n	800c5d2 <quorem+0xec>
 800c586:	4629      	mov	r1, r5
 800c588:	2000      	movs	r0, #0
 800c58a:	f858 2b04 	ldr.w	r2, [r8], #4
 800c58e:	f8d1 c000 	ldr.w	ip, [r1]
 800c592:	fa1f fe82 	uxth.w	lr, r2
 800c596:	fa1f f38c 	uxth.w	r3, ip
 800c59a:	eba3 030e 	sub.w	r3, r3, lr
 800c59e:	4403      	add	r3, r0
 800c5a0:	0c12      	lsrs	r2, r2, #16
 800c5a2:	ebc2 4223 	rsb	r2, r2, r3, asr #16
 800c5a6:	eb02 421c 	add.w	r2, r2, ip, lsr #16
 800c5aa:	b29b      	uxth	r3, r3
 800c5ac:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800c5b0:	45c1      	cmp	r9, r8
 800c5b2:	f841 3b04 	str.w	r3, [r1], #4
 800c5b6:	ea4f 4022 	mov.w	r0, r2, asr #16
 800c5ba:	d2e6      	bcs.n	800c58a <quorem+0xa4>
 800c5bc:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 800c5c0:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800c5c4:	b922      	cbnz	r2, 800c5d0 <quorem+0xea>
 800c5c6:	3b04      	subs	r3, #4
 800c5c8:	429d      	cmp	r5, r3
 800c5ca:	461a      	mov	r2, r3
 800c5cc:	d30b      	bcc.n	800c5e6 <quorem+0x100>
 800c5ce:	613c      	str	r4, [r7, #16]
 800c5d0:	3601      	adds	r6, #1
 800c5d2:	4630      	mov	r0, r6
 800c5d4:	b003      	add	sp, #12
 800c5d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c5da:	6812      	ldr	r2, [r2, #0]
 800c5dc:	3b04      	subs	r3, #4
 800c5de:	2a00      	cmp	r2, #0
 800c5e0:	d1cb      	bne.n	800c57a <quorem+0x94>
 800c5e2:	3c01      	subs	r4, #1
 800c5e4:	e7c6      	b.n	800c574 <quorem+0x8e>
 800c5e6:	6812      	ldr	r2, [r2, #0]
 800c5e8:	3b04      	subs	r3, #4
 800c5ea:	2a00      	cmp	r2, #0
 800c5ec:	d1ef      	bne.n	800c5ce <quorem+0xe8>
 800c5ee:	3c01      	subs	r4, #1
 800c5f0:	e7ea      	b.n	800c5c8 <quorem+0xe2>
 800c5f2:	2000      	movs	r0, #0
 800c5f4:	e7ee      	b.n	800c5d4 <quorem+0xee>
	...

0800c5f8 <_dtoa_r>:
 800c5f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c5fc:	69c7      	ldr	r7, [r0, #28]
 800c5fe:	b097      	sub	sp, #92	@ 0x5c
 800c600:	ed8d 0b04 	vstr	d0, [sp, #16]
 800c604:	ec55 4b10 	vmov	r4, r5, d0
 800c608:	9e20      	ldr	r6, [sp, #128]	@ 0x80
 800c60a:	9107      	str	r1, [sp, #28]
 800c60c:	4681      	mov	r9, r0
 800c60e:	920c      	str	r2, [sp, #48]	@ 0x30
 800c610:	9311      	str	r3, [sp, #68]	@ 0x44
 800c612:	b97f      	cbnz	r7, 800c634 <_dtoa_r+0x3c>
 800c614:	2010      	movs	r0, #16
 800c616:	f7fe ffb3 	bl	800b580 <malloc>
 800c61a:	4602      	mov	r2, r0
 800c61c:	f8c9 001c 	str.w	r0, [r9, #28]
 800c620:	b920      	cbnz	r0, 800c62c <_dtoa_r+0x34>
 800c622:	4ba9      	ldr	r3, [pc, #676]	@ (800c8c8 <_dtoa_r+0x2d0>)
 800c624:	21ef      	movs	r1, #239	@ 0xef
 800c626:	48a9      	ldr	r0, [pc, #676]	@ (800c8cc <_dtoa_r+0x2d4>)
 800c628:	f001 fbec 	bl	800de04 <__assert_func>
 800c62c:	e9c0 7701 	strd	r7, r7, [r0, #4]
 800c630:	6007      	str	r7, [r0, #0]
 800c632:	60c7      	str	r7, [r0, #12]
 800c634:	f8d9 301c 	ldr.w	r3, [r9, #28]
 800c638:	6819      	ldr	r1, [r3, #0]
 800c63a:	b159      	cbz	r1, 800c654 <_dtoa_r+0x5c>
 800c63c:	685a      	ldr	r2, [r3, #4]
 800c63e:	604a      	str	r2, [r1, #4]
 800c640:	2301      	movs	r3, #1
 800c642:	4093      	lsls	r3, r2
 800c644:	608b      	str	r3, [r1, #8]
 800c646:	4648      	mov	r0, r9
 800c648:	f000 fe30 	bl	800d2ac <_Bfree>
 800c64c:	f8d9 301c 	ldr.w	r3, [r9, #28]
 800c650:	2200      	movs	r2, #0
 800c652:	601a      	str	r2, [r3, #0]
 800c654:	1e2b      	subs	r3, r5, #0
 800c656:	bfb9      	ittee	lt
 800c658:	f023 4300 	biclt.w	r3, r3, #2147483648	@ 0x80000000
 800c65c:	9305      	strlt	r3, [sp, #20]
 800c65e:	2300      	movge	r3, #0
 800c660:	6033      	strge	r3, [r6, #0]
 800c662:	9f05      	ldr	r7, [sp, #20]
 800c664:	4b9a      	ldr	r3, [pc, #616]	@ (800c8d0 <_dtoa_r+0x2d8>)
 800c666:	bfbc      	itt	lt
 800c668:	2201      	movlt	r2, #1
 800c66a:	6032      	strlt	r2, [r6, #0]
 800c66c:	43bb      	bics	r3, r7
 800c66e:	d112      	bne.n	800c696 <_dtoa_r+0x9e>
 800c670:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 800c672:	f242 730f 	movw	r3, #9999	@ 0x270f
 800c676:	6013      	str	r3, [r2, #0]
 800c678:	f3c7 0313 	ubfx	r3, r7, #0, #20
 800c67c:	4323      	orrs	r3, r4
 800c67e:	f000 855a 	beq.w	800d136 <_dtoa_r+0xb3e>
 800c682:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 800c684:	f8df a25c 	ldr.w	sl, [pc, #604]	@ 800c8e4 <_dtoa_r+0x2ec>
 800c688:	2b00      	cmp	r3, #0
 800c68a:	f000 855c 	beq.w	800d146 <_dtoa_r+0xb4e>
 800c68e:	f10a 0303 	add.w	r3, sl, #3
 800c692:	f000 bd56 	b.w	800d142 <_dtoa_r+0xb4a>
 800c696:	ed9d 7b04 	vldr	d7, [sp, #16]
 800c69a:	2200      	movs	r2, #0
 800c69c:	ec51 0b17 	vmov	r0, r1, d7
 800c6a0:	2300      	movs	r3, #0
 800c6a2:	ed8d 7b0a 	vstr	d7, [sp, #40]	@ 0x28
 800c6a6:	f7f4 fa1f 	bl	8000ae8 <__aeabi_dcmpeq>
 800c6aa:	4680      	mov	r8, r0
 800c6ac:	b158      	cbz	r0, 800c6c6 <_dtoa_r+0xce>
 800c6ae:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 800c6b0:	2301      	movs	r3, #1
 800c6b2:	6013      	str	r3, [r2, #0]
 800c6b4:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 800c6b6:	b113      	cbz	r3, 800c6be <_dtoa_r+0xc6>
 800c6b8:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 800c6ba:	4b86      	ldr	r3, [pc, #536]	@ (800c8d4 <_dtoa_r+0x2dc>)
 800c6bc:	6013      	str	r3, [r2, #0]
 800c6be:	f8df a228 	ldr.w	sl, [pc, #552]	@ 800c8e8 <_dtoa_r+0x2f0>
 800c6c2:	f000 bd40 	b.w	800d146 <_dtoa_r+0xb4e>
 800c6c6:	ed9d 0b0a 	vldr	d0, [sp, #40]	@ 0x28
 800c6ca:	aa14      	add	r2, sp, #80	@ 0x50
 800c6cc:	a915      	add	r1, sp, #84	@ 0x54
 800c6ce:	4648      	mov	r0, r9
 800c6d0:	f001 f8ce 	bl	800d870 <__d2b>
 800c6d4:	f3c7 560a 	ubfx	r6, r7, #20, #11
 800c6d8:	9002      	str	r0, [sp, #8]
 800c6da:	2e00      	cmp	r6, #0
 800c6dc:	d078      	beq.n	800c7d0 <_dtoa_r+0x1d8>
 800c6de:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800c6e0:	f8cd 8048 	str.w	r8, [sp, #72]	@ 0x48
 800c6e4:	f3c3 0313 	ubfx	r3, r3, #0, #20
 800c6e8:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 800c6ec:	f043 537f 	orr.w	r3, r3, #1069547520	@ 0x3fc00000
 800c6f0:	f443 1340 	orr.w	r3, r3, #3145728	@ 0x300000
 800c6f4:	f2a6 36ff 	subw	r6, r6, #1023	@ 0x3ff
 800c6f8:	4619      	mov	r1, r3
 800c6fa:	2200      	movs	r2, #0
 800c6fc:	4b76      	ldr	r3, [pc, #472]	@ (800c8d8 <_dtoa_r+0x2e0>)
 800c6fe:	f7f3 fdd3 	bl	80002a8 <__aeabi_dsub>
 800c702:	a36b      	add	r3, pc, #428	@ (adr r3, 800c8b0 <_dtoa_r+0x2b8>)
 800c704:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c708:	f7f3 ff86 	bl	8000618 <__aeabi_dmul>
 800c70c:	a36a      	add	r3, pc, #424	@ (adr r3, 800c8b8 <_dtoa_r+0x2c0>)
 800c70e:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c712:	f7f3 fdcb 	bl	80002ac <__adddf3>
 800c716:	4604      	mov	r4, r0
 800c718:	4630      	mov	r0, r6
 800c71a:	460d      	mov	r5, r1
 800c71c:	f7f3 ff12 	bl	8000544 <__aeabi_i2d>
 800c720:	a367      	add	r3, pc, #412	@ (adr r3, 800c8c0 <_dtoa_r+0x2c8>)
 800c722:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c726:	f7f3 ff77 	bl	8000618 <__aeabi_dmul>
 800c72a:	4602      	mov	r2, r0
 800c72c:	460b      	mov	r3, r1
 800c72e:	4620      	mov	r0, r4
 800c730:	4629      	mov	r1, r5
 800c732:	f7f3 fdbb 	bl	80002ac <__adddf3>
 800c736:	4604      	mov	r4, r0
 800c738:	460d      	mov	r5, r1
 800c73a:	f7f4 fa1d 	bl	8000b78 <__aeabi_d2iz>
 800c73e:	2200      	movs	r2, #0
 800c740:	4607      	mov	r7, r0
 800c742:	2300      	movs	r3, #0
 800c744:	4620      	mov	r0, r4
 800c746:	4629      	mov	r1, r5
 800c748:	f7f4 f9d8 	bl	8000afc <__aeabi_dcmplt>
 800c74c:	b140      	cbz	r0, 800c760 <_dtoa_r+0x168>
 800c74e:	4638      	mov	r0, r7
 800c750:	f7f3 fef8 	bl	8000544 <__aeabi_i2d>
 800c754:	4622      	mov	r2, r4
 800c756:	462b      	mov	r3, r5
 800c758:	f7f4 f9c6 	bl	8000ae8 <__aeabi_dcmpeq>
 800c75c:	b900      	cbnz	r0, 800c760 <_dtoa_r+0x168>
 800c75e:	3f01      	subs	r7, #1
 800c760:	2f16      	cmp	r7, #22
 800c762:	d852      	bhi.n	800c80a <_dtoa_r+0x212>
 800c764:	4b5d      	ldr	r3, [pc, #372]	@ (800c8dc <_dtoa_r+0x2e4>)
 800c766:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 800c76a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c76e:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 800c772:	f7f4 f9c3 	bl	8000afc <__aeabi_dcmplt>
 800c776:	2800      	cmp	r0, #0
 800c778:	d049      	beq.n	800c80e <_dtoa_r+0x216>
 800c77a:	3f01      	subs	r7, #1
 800c77c:	2300      	movs	r3, #0
 800c77e:	9310      	str	r3, [sp, #64]	@ 0x40
 800c780:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 800c782:	1b9b      	subs	r3, r3, r6
 800c784:	1e5a      	subs	r2, r3, #1
 800c786:	bf45      	ittet	mi
 800c788:	f1c3 0301 	rsbmi	r3, r3, #1
 800c78c:	9300      	strmi	r3, [sp, #0]
 800c78e:	2300      	movpl	r3, #0
 800c790:	2300      	movmi	r3, #0
 800c792:	9206      	str	r2, [sp, #24]
 800c794:	bf54      	ite	pl
 800c796:	9300      	strpl	r3, [sp, #0]
 800c798:	9306      	strmi	r3, [sp, #24]
 800c79a:	2f00      	cmp	r7, #0
 800c79c:	db39      	blt.n	800c812 <_dtoa_r+0x21a>
 800c79e:	9b06      	ldr	r3, [sp, #24]
 800c7a0:	970d      	str	r7, [sp, #52]	@ 0x34
 800c7a2:	443b      	add	r3, r7
 800c7a4:	9306      	str	r3, [sp, #24]
 800c7a6:	2300      	movs	r3, #0
 800c7a8:	9308      	str	r3, [sp, #32]
 800c7aa:	9b07      	ldr	r3, [sp, #28]
 800c7ac:	2b09      	cmp	r3, #9
 800c7ae:	d863      	bhi.n	800c878 <_dtoa_r+0x280>
 800c7b0:	2b05      	cmp	r3, #5
 800c7b2:	bfc4      	itt	gt
 800c7b4:	3b04      	subgt	r3, #4
 800c7b6:	9307      	strgt	r3, [sp, #28]
 800c7b8:	9b07      	ldr	r3, [sp, #28]
 800c7ba:	f1a3 0302 	sub.w	r3, r3, #2
 800c7be:	bfcc      	ite	gt
 800c7c0:	2400      	movgt	r4, #0
 800c7c2:	2401      	movle	r4, #1
 800c7c4:	2b03      	cmp	r3, #3
 800c7c6:	d863      	bhi.n	800c890 <_dtoa_r+0x298>
 800c7c8:	e8df f003 	tbb	[pc, r3]
 800c7cc:	2b375452 	.word	0x2b375452
 800c7d0:	e9dd 6314 	ldrd	r6, r3, [sp, #80]	@ 0x50
 800c7d4:	441e      	add	r6, r3
 800c7d6:	f206 4332 	addw	r3, r6, #1074	@ 0x432
 800c7da:	2b20      	cmp	r3, #32
 800c7dc:	bfc1      	itttt	gt
 800c7de:	f1c3 0340 	rsbgt	r3, r3, #64	@ 0x40
 800c7e2:	409f      	lslgt	r7, r3
 800c7e4:	f206 4312 	addwgt	r3, r6, #1042	@ 0x412
 800c7e8:	fa24 f303 	lsrgt.w	r3, r4, r3
 800c7ec:	bfd6      	itet	le
 800c7ee:	f1c3 0320 	rsble	r3, r3, #32
 800c7f2:	ea47 0003 	orrgt.w	r0, r7, r3
 800c7f6:	fa04 f003 	lslle.w	r0, r4, r3
 800c7fa:	f7f3 fe93 	bl	8000524 <__aeabi_ui2d>
 800c7fe:	2201      	movs	r2, #1
 800c800:	f1a1 73f8 	sub.w	r3, r1, #32505856	@ 0x1f00000
 800c804:	3e01      	subs	r6, #1
 800c806:	9212      	str	r2, [sp, #72]	@ 0x48
 800c808:	e776      	b.n	800c6f8 <_dtoa_r+0x100>
 800c80a:	2301      	movs	r3, #1
 800c80c:	e7b7      	b.n	800c77e <_dtoa_r+0x186>
 800c80e:	9010      	str	r0, [sp, #64]	@ 0x40
 800c810:	e7b6      	b.n	800c780 <_dtoa_r+0x188>
 800c812:	9b00      	ldr	r3, [sp, #0]
 800c814:	1bdb      	subs	r3, r3, r7
 800c816:	9300      	str	r3, [sp, #0]
 800c818:	427b      	negs	r3, r7
 800c81a:	9308      	str	r3, [sp, #32]
 800c81c:	2300      	movs	r3, #0
 800c81e:	930d      	str	r3, [sp, #52]	@ 0x34
 800c820:	e7c3      	b.n	800c7aa <_dtoa_r+0x1b2>
 800c822:	2301      	movs	r3, #1
 800c824:	9309      	str	r3, [sp, #36]	@ 0x24
 800c826:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800c828:	eb07 0b03 	add.w	fp, r7, r3
 800c82c:	f10b 0301 	add.w	r3, fp, #1
 800c830:	2b01      	cmp	r3, #1
 800c832:	9303      	str	r3, [sp, #12]
 800c834:	bfb8      	it	lt
 800c836:	2301      	movlt	r3, #1
 800c838:	e006      	b.n	800c848 <_dtoa_r+0x250>
 800c83a:	2301      	movs	r3, #1
 800c83c:	9309      	str	r3, [sp, #36]	@ 0x24
 800c83e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800c840:	2b00      	cmp	r3, #0
 800c842:	dd28      	ble.n	800c896 <_dtoa_r+0x29e>
 800c844:	469b      	mov	fp, r3
 800c846:	9303      	str	r3, [sp, #12]
 800c848:	f8d9 001c 	ldr.w	r0, [r9, #28]
 800c84c:	2100      	movs	r1, #0
 800c84e:	2204      	movs	r2, #4
 800c850:	f102 0514 	add.w	r5, r2, #20
 800c854:	429d      	cmp	r5, r3
 800c856:	d926      	bls.n	800c8a6 <_dtoa_r+0x2ae>
 800c858:	6041      	str	r1, [r0, #4]
 800c85a:	4648      	mov	r0, r9
 800c85c:	f000 fce6 	bl	800d22c <_Balloc>
 800c860:	4682      	mov	sl, r0
 800c862:	2800      	cmp	r0, #0
 800c864:	d142      	bne.n	800c8ec <_dtoa_r+0x2f4>
 800c866:	4b1e      	ldr	r3, [pc, #120]	@ (800c8e0 <_dtoa_r+0x2e8>)
 800c868:	4602      	mov	r2, r0
 800c86a:	f240 11af 	movw	r1, #431	@ 0x1af
 800c86e:	e6da      	b.n	800c626 <_dtoa_r+0x2e>
 800c870:	2300      	movs	r3, #0
 800c872:	e7e3      	b.n	800c83c <_dtoa_r+0x244>
 800c874:	2300      	movs	r3, #0
 800c876:	e7d5      	b.n	800c824 <_dtoa_r+0x22c>
 800c878:	2401      	movs	r4, #1
 800c87a:	2300      	movs	r3, #0
 800c87c:	9307      	str	r3, [sp, #28]
 800c87e:	9409      	str	r4, [sp, #36]	@ 0x24
 800c880:	f04f 3bff 	mov.w	fp, #4294967295	@ 0xffffffff
 800c884:	2200      	movs	r2, #0
 800c886:	f8cd b00c 	str.w	fp, [sp, #12]
 800c88a:	2312      	movs	r3, #18
 800c88c:	920c      	str	r2, [sp, #48]	@ 0x30
 800c88e:	e7db      	b.n	800c848 <_dtoa_r+0x250>
 800c890:	2301      	movs	r3, #1
 800c892:	9309      	str	r3, [sp, #36]	@ 0x24
 800c894:	e7f4      	b.n	800c880 <_dtoa_r+0x288>
 800c896:	f04f 0b01 	mov.w	fp, #1
 800c89a:	f8cd b00c 	str.w	fp, [sp, #12]
 800c89e:	465b      	mov	r3, fp
 800c8a0:	f8cd b030 	str.w	fp, [sp, #48]	@ 0x30
 800c8a4:	e7d0      	b.n	800c848 <_dtoa_r+0x250>
 800c8a6:	3101      	adds	r1, #1
 800c8a8:	0052      	lsls	r2, r2, #1
 800c8aa:	e7d1      	b.n	800c850 <_dtoa_r+0x258>
 800c8ac:	f3af 8000 	nop.w
 800c8b0:	636f4361 	.word	0x636f4361
 800c8b4:	3fd287a7 	.word	0x3fd287a7
 800c8b8:	8b60c8b3 	.word	0x8b60c8b3
 800c8bc:	3fc68a28 	.word	0x3fc68a28
 800c8c0:	509f79fb 	.word	0x509f79fb
 800c8c4:	3fd34413 	.word	0x3fd34413
 800c8c8:	0800e121 	.word	0x0800e121
 800c8cc:	0800e138 	.word	0x0800e138
 800c8d0:	7ff00000 	.word	0x7ff00000
 800c8d4:	0800e0f1 	.word	0x0800e0f1
 800c8d8:	3ff80000 	.word	0x3ff80000
 800c8dc:	0800e288 	.word	0x0800e288
 800c8e0:	0800e190 	.word	0x0800e190
 800c8e4:	0800e11d 	.word	0x0800e11d
 800c8e8:	0800e0f0 	.word	0x0800e0f0
 800c8ec:	f8d9 301c 	ldr.w	r3, [r9, #28]
 800c8f0:	6018      	str	r0, [r3, #0]
 800c8f2:	9b03      	ldr	r3, [sp, #12]
 800c8f4:	2b0e      	cmp	r3, #14
 800c8f6:	f200 80a1 	bhi.w	800ca3c <_dtoa_r+0x444>
 800c8fa:	2c00      	cmp	r4, #0
 800c8fc:	f000 809e 	beq.w	800ca3c <_dtoa_r+0x444>
 800c900:	2f00      	cmp	r7, #0
 800c902:	dd33      	ble.n	800c96c <_dtoa_r+0x374>
 800c904:	4b9c      	ldr	r3, [pc, #624]	@ (800cb78 <_dtoa_r+0x580>)
 800c906:	f007 020f 	and.w	r2, r7, #15
 800c90a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800c90e:	ed93 7b00 	vldr	d7, [r3]
 800c912:	05f8      	lsls	r0, r7, #23
 800c914:	ed8d 7b0e 	vstr	d7, [sp, #56]	@ 0x38
 800c918:	ea4f 1427 	mov.w	r4, r7, asr #4
 800c91c:	d516      	bpl.n	800c94c <_dtoa_r+0x354>
 800c91e:	4b97      	ldr	r3, [pc, #604]	@ (800cb7c <_dtoa_r+0x584>)
 800c920:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 800c924:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 800c928:	f7f3 ffa0 	bl	800086c <__aeabi_ddiv>
 800c92c:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800c930:	f004 040f 	and.w	r4, r4, #15
 800c934:	2603      	movs	r6, #3
 800c936:	4d91      	ldr	r5, [pc, #580]	@ (800cb7c <_dtoa_r+0x584>)
 800c938:	b954      	cbnz	r4, 800c950 <_dtoa_r+0x358>
 800c93a:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	@ 0x38
 800c93e:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800c942:	f7f3 ff93 	bl	800086c <__aeabi_ddiv>
 800c946:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800c94a:	e028      	b.n	800c99e <_dtoa_r+0x3a6>
 800c94c:	2602      	movs	r6, #2
 800c94e:	e7f2      	b.n	800c936 <_dtoa_r+0x33e>
 800c950:	07e1      	lsls	r1, r4, #31
 800c952:	d508      	bpl.n	800c966 <_dtoa_r+0x36e>
 800c954:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	@ 0x38
 800c958:	e9d5 2300 	ldrd	r2, r3, [r5]
 800c95c:	f7f3 fe5c 	bl	8000618 <__aeabi_dmul>
 800c960:	e9cd 010e 	strd	r0, r1, [sp, #56]	@ 0x38
 800c964:	3601      	adds	r6, #1
 800c966:	1064      	asrs	r4, r4, #1
 800c968:	3508      	adds	r5, #8
 800c96a:	e7e5      	b.n	800c938 <_dtoa_r+0x340>
 800c96c:	f000 80af 	beq.w	800cace <_dtoa_r+0x4d6>
 800c970:	427c      	negs	r4, r7
 800c972:	4b81      	ldr	r3, [pc, #516]	@ (800cb78 <_dtoa_r+0x580>)
 800c974:	4d81      	ldr	r5, [pc, #516]	@ (800cb7c <_dtoa_r+0x584>)
 800c976:	f004 020f 	and.w	r2, r4, #15
 800c97a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800c97e:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c982:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 800c986:	f7f3 fe47 	bl	8000618 <__aeabi_dmul>
 800c98a:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800c98e:	1124      	asrs	r4, r4, #4
 800c990:	2300      	movs	r3, #0
 800c992:	2602      	movs	r6, #2
 800c994:	2c00      	cmp	r4, #0
 800c996:	f040 808f 	bne.w	800cab8 <_dtoa_r+0x4c0>
 800c99a:	2b00      	cmp	r3, #0
 800c99c:	d1d3      	bne.n	800c946 <_dtoa_r+0x34e>
 800c99e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 800c9a0:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
 800c9a4:	2b00      	cmp	r3, #0
 800c9a6:	f000 8094 	beq.w	800cad2 <_dtoa_r+0x4da>
 800c9aa:	4b75      	ldr	r3, [pc, #468]	@ (800cb80 <_dtoa_r+0x588>)
 800c9ac:	2200      	movs	r2, #0
 800c9ae:	4620      	mov	r0, r4
 800c9b0:	4629      	mov	r1, r5
 800c9b2:	f7f4 f8a3 	bl	8000afc <__aeabi_dcmplt>
 800c9b6:	2800      	cmp	r0, #0
 800c9b8:	f000 808b 	beq.w	800cad2 <_dtoa_r+0x4da>
 800c9bc:	9b03      	ldr	r3, [sp, #12]
 800c9be:	2b00      	cmp	r3, #0
 800c9c0:	f000 8087 	beq.w	800cad2 <_dtoa_r+0x4da>
 800c9c4:	f1bb 0f00 	cmp.w	fp, #0
 800c9c8:	dd34      	ble.n	800ca34 <_dtoa_r+0x43c>
 800c9ca:	4620      	mov	r0, r4
 800c9cc:	4b6d      	ldr	r3, [pc, #436]	@ (800cb84 <_dtoa_r+0x58c>)
 800c9ce:	2200      	movs	r2, #0
 800c9d0:	4629      	mov	r1, r5
 800c9d2:	f7f3 fe21 	bl	8000618 <__aeabi_dmul>
 800c9d6:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800c9da:	f107 38ff 	add.w	r8, r7, #4294967295	@ 0xffffffff
 800c9de:	3601      	adds	r6, #1
 800c9e0:	465c      	mov	r4, fp
 800c9e2:	4630      	mov	r0, r6
 800c9e4:	f7f3 fdae 	bl	8000544 <__aeabi_i2d>
 800c9e8:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800c9ec:	f7f3 fe14 	bl	8000618 <__aeabi_dmul>
 800c9f0:	4b65      	ldr	r3, [pc, #404]	@ (800cb88 <_dtoa_r+0x590>)
 800c9f2:	2200      	movs	r2, #0
 800c9f4:	f7f3 fc5a 	bl	80002ac <__adddf3>
 800c9f8:	4605      	mov	r5, r0
 800c9fa:	f1a1 7650 	sub.w	r6, r1, #54525952	@ 0x3400000
 800c9fe:	2c00      	cmp	r4, #0
 800ca00:	d16a      	bne.n	800cad8 <_dtoa_r+0x4e0>
 800ca02:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800ca06:	4b61      	ldr	r3, [pc, #388]	@ (800cb8c <_dtoa_r+0x594>)
 800ca08:	2200      	movs	r2, #0
 800ca0a:	f7f3 fc4d 	bl	80002a8 <__aeabi_dsub>
 800ca0e:	4602      	mov	r2, r0
 800ca10:	460b      	mov	r3, r1
 800ca12:	e9cd 2304 	strd	r2, r3, [sp, #16]
 800ca16:	462a      	mov	r2, r5
 800ca18:	4633      	mov	r3, r6
 800ca1a:	f7f4 f88d 	bl	8000b38 <__aeabi_dcmpgt>
 800ca1e:	2800      	cmp	r0, #0
 800ca20:	f040 8298 	bne.w	800cf54 <_dtoa_r+0x95c>
 800ca24:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800ca28:	462a      	mov	r2, r5
 800ca2a:	f106 4300 	add.w	r3, r6, #2147483648	@ 0x80000000
 800ca2e:	f7f4 f865 	bl	8000afc <__aeabi_dcmplt>
 800ca32:	bb38      	cbnz	r0, 800ca84 <_dtoa_r+0x48c>
 800ca34:	e9dd 340a 	ldrd	r3, r4, [sp, #40]	@ 0x28
 800ca38:	e9cd 3404 	strd	r3, r4, [sp, #16]
 800ca3c:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 800ca3e:	2b00      	cmp	r3, #0
 800ca40:	f2c0 8157 	blt.w	800ccf2 <_dtoa_r+0x6fa>
 800ca44:	2f0e      	cmp	r7, #14
 800ca46:	f300 8154 	bgt.w	800ccf2 <_dtoa_r+0x6fa>
 800ca4a:	4b4b      	ldr	r3, [pc, #300]	@ (800cb78 <_dtoa_r+0x580>)
 800ca4c:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 800ca50:	ed93 7b00 	vldr	d7, [r3]
 800ca54:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800ca56:	2b00      	cmp	r3, #0
 800ca58:	ed8d 7b00 	vstr	d7, [sp]
 800ca5c:	f280 80e5 	bge.w	800cc2a <_dtoa_r+0x632>
 800ca60:	9b03      	ldr	r3, [sp, #12]
 800ca62:	2b00      	cmp	r3, #0
 800ca64:	f300 80e1 	bgt.w	800cc2a <_dtoa_r+0x632>
 800ca68:	d10c      	bne.n	800ca84 <_dtoa_r+0x48c>
 800ca6a:	4b48      	ldr	r3, [pc, #288]	@ (800cb8c <_dtoa_r+0x594>)
 800ca6c:	2200      	movs	r2, #0
 800ca6e:	ec51 0b17 	vmov	r0, r1, d7
 800ca72:	f7f3 fdd1 	bl	8000618 <__aeabi_dmul>
 800ca76:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800ca7a:	f7f4 f853 	bl	8000b24 <__aeabi_dcmpge>
 800ca7e:	2800      	cmp	r0, #0
 800ca80:	f000 8266 	beq.w	800cf50 <_dtoa_r+0x958>
 800ca84:	2400      	movs	r4, #0
 800ca86:	4625      	mov	r5, r4
 800ca88:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800ca8a:	4656      	mov	r6, sl
 800ca8c:	ea6f 0803 	mvn.w	r8, r3
 800ca90:	2700      	movs	r7, #0
 800ca92:	4621      	mov	r1, r4
 800ca94:	4648      	mov	r0, r9
 800ca96:	f000 fc09 	bl	800d2ac <_Bfree>
 800ca9a:	2d00      	cmp	r5, #0
 800ca9c:	f000 80bd 	beq.w	800cc1a <_dtoa_r+0x622>
 800caa0:	b12f      	cbz	r7, 800caae <_dtoa_r+0x4b6>
 800caa2:	42af      	cmp	r7, r5
 800caa4:	d003      	beq.n	800caae <_dtoa_r+0x4b6>
 800caa6:	4639      	mov	r1, r7
 800caa8:	4648      	mov	r0, r9
 800caaa:	f000 fbff 	bl	800d2ac <_Bfree>
 800caae:	4629      	mov	r1, r5
 800cab0:	4648      	mov	r0, r9
 800cab2:	f000 fbfb 	bl	800d2ac <_Bfree>
 800cab6:	e0b0      	b.n	800cc1a <_dtoa_r+0x622>
 800cab8:	07e2      	lsls	r2, r4, #31
 800caba:	d505      	bpl.n	800cac8 <_dtoa_r+0x4d0>
 800cabc:	e9d5 2300 	ldrd	r2, r3, [r5]
 800cac0:	f7f3 fdaa 	bl	8000618 <__aeabi_dmul>
 800cac4:	3601      	adds	r6, #1
 800cac6:	2301      	movs	r3, #1
 800cac8:	1064      	asrs	r4, r4, #1
 800caca:	3508      	adds	r5, #8
 800cacc:	e762      	b.n	800c994 <_dtoa_r+0x39c>
 800cace:	2602      	movs	r6, #2
 800cad0:	e765      	b.n	800c99e <_dtoa_r+0x3a6>
 800cad2:	9c03      	ldr	r4, [sp, #12]
 800cad4:	46b8      	mov	r8, r7
 800cad6:	e784      	b.n	800c9e2 <_dtoa_r+0x3ea>
 800cad8:	4b27      	ldr	r3, [pc, #156]	@ (800cb78 <_dtoa_r+0x580>)
 800cada:	9909      	ldr	r1, [sp, #36]	@ 0x24
 800cadc:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 800cae0:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 800cae4:	4454      	add	r4, sl
 800cae6:	2900      	cmp	r1, #0
 800cae8:	d054      	beq.n	800cb94 <_dtoa_r+0x59c>
 800caea:	4929      	ldr	r1, [pc, #164]	@ (800cb90 <_dtoa_r+0x598>)
 800caec:	2000      	movs	r0, #0
 800caee:	f7f3 febd 	bl	800086c <__aeabi_ddiv>
 800caf2:	4633      	mov	r3, r6
 800caf4:	462a      	mov	r2, r5
 800caf6:	f7f3 fbd7 	bl	80002a8 <__aeabi_dsub>
 800cafa:	e9cd 010e 	strd	r0, r1, [sp, #56]	@ 0x38
 800cafe:	4656      	mov	r6, sl
 800cb00:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800cb04:	f7f4 f838 	bl	8000b78 <__aeabi_d2iz>
 800cb08:	4605      	mov	r5, r0
 800cb0a:	f7f3 fd1b 	bl	8000544 <__aeabi_i2d>
 800cb0e:	4602      	mov	r2, r0
 800cb10:	460b      	mov	r3, r1
 800cb12:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800cb16:	f7f3 fbc7 	bl	80002a8 <__aeabi_dsub>
 800cb1a:	3530      	adds	r5, #48	@ 0x30
 800cb1c:	4602      	mov	r2, r0
 800cb1e:	460b      	mov	r3, r1
 800cb20:	e9cd 2304 	strd	r2, r3, [sp, #16]
 800cb24:	f806 5b01 	strb.w	r5, [r6], #1
 800cb28:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	@ 0x38
 800cb2c:	f7f3 ffe6 	bl	8000afc <__aeabi_dcmplt>
 800cb30:	2800      	cmp	r0, #0
 800cb32:	d172      	bne.n	800cc1a <_dtoa_r+0x622>
 800cb34:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800cb38:	4911      	ldr	r1, [pc, #68]	@ (800cb80 <_dtoa_r+0x588>)
 800cb3a:	2000      	movs	r0, #0
 800cb3c:	f7f3 fbb4 	bl	80002a8 <__aeabi_dsub>
 800cb40:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	@ 0x38
 800cb44:	f7f3 ffda 	bl	8000afc <__aeabi_dcmplt>
 800cb48:	2800      	cmp	r0, #0
 800cb4a:	f040 80b4 	bne.w	800ccb6 <_dtoa_r+0x6be>
 800cb4e:	42a6      	cmp	r6, r4
 800cb50:	f43f af70 	beq.w	800ca34 <_dtoa_r+0x43c>
 800cb54:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	@ 0x38
 800cb58:	4b0a      	ldr	r3, [pc, #40]	@ (800cb84 <_dtoa_r+0x58c>)
 800cb5a:	2200      	movs	r2, #0
 800cb5c:	f7f3 fd5c 	bl	8000618 <__aeabi_dmul>
 800cb60:	4b08      	ldr	r3, [pc, #32]	@ (800cb84 <_dtoa_r+0x58c>)
 800cb62:	e9cd 010e 	strd	r0, r1, [sp, #56]	@ 0x38
 800cb66:	2200      	movs	r2, #0
 800cb68:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800cb6c:	f7f3 fd54 	bl	8000618 <__aeabi_dmul>
 800cb70:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800cb74:	e7c4      	b.n	800cb00 <_dtoa_r+0x508>
 800cb76:	bf00      	nop
 800cb78:	0800e288 	.word	0x0800e288
 800cb7c:	0800e260 	.word	0x0800e260
 800cb80:	3ff00000 	.word	0x3ff00000
 800cb84:	40240000 	.word	0x40240000
 800cb88:	401c0000 	.word	0x401c0000
 800cb8c:	40140000 	.word	0x40140000
 800cb90:	3fe00000 	.word	0x3fe00000
 800cb94:	4631      	mov	r1, r6
 800cb96:	4628      	mov	r0, r5
 800cb98:	f7f3 fd3e 	bl	8000618 <__aeabi_dmul>
 800cb9c:	e9cd 010e 	strd	r0, r1, [sp, #56]	@ 0x38
 800cba0:	9413      	str	r4, [sp, #76]	@ 0x4c
 800cba2:	4656      	mov	r6, sl
 800cba4:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800cba8:	f7f3 ffe6 	bl	8000b78 <__aeabi_d2iz>
 800cbac:	4605      	mov	r5, r0
 800cbae:	f7f3 fcc9 	bl	8000544 <__aeabi_i2d>
 800cbb2:	4602      	mov	r2, r0
 800cbb4:	460b      	mov	r3, r1
 800cbb6:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800cbba:	f7f3 fb75 	bl	80002a8 <__aeabi_dsub>
 800cbbe:	3530      	adds	r5, #48	@ 0x30
 800cbc0:	f806 5b01 	strb.w	r5, [r6], #1
 800cbc4:	4602      	mov	r2, r0
 800cbc6:	460b      	mov	r3, r1
 800cbc8:	42a6      	cmp	r6, r4
 800cbca:	e9cd 2304 	strd	r2, r3, [sp, #16]
 800cbce:	f04f 0200 	mov.w	r2, #0
 800cbd2:	d124      	bne.n	800cc1e <_dtoa_r+0x626>
 800cbd4:	4baf      	ldr	r3, [pc, #700]	@ (800ce94 <_dtoa_r+0x89c>)
 800cbd6:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	@ 0x38
 800cbda:	f7f3 fb67 	bl	80002ac <__adddf3>
 800cbde:	4602      	mov	r2, r0
 800cbe0:	460b      	mov	r3, r1
 800cbe2:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800cbe6:	f7f3 ffa7 	bl	8000b38 <__aeabi_dcmpgt>
 800cbea:	2800      	cmp	r0, #0
 800cbec:	d163      	bne.n	800ccb6 <_dtoa_r+0x6be>
 800cbee:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	@ 0x38
 800cbf2:	49a8      	ldr	r1, [pc, #672]	@ (800ce94 <_dtoa_r+0x89c>)
 800cbf4:	2000      	movs	r0, #0
 800cbf6:	f7f3 fb57 	bl	80002a8 <__aeabi_dsub>
 800cbfa:	4602      	mov	r2, r0
 800cbfc:	460b      	mov	r3, r1
 800cbfe:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800cc02:	f7f3 ff7b 	bl	8000afc <__aeabi_dcmplt>
 800cc06:	2800      	cmp	r0, #0
 800cc08:	f43f af14 	beq.w	800ca34 <_dtoa_r+0x43c>
 800cc0c:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 800cc0e:	1e73      	subs	r3, r6, #1
 800cc10:	9313      	str	r3, [sp, #76]	@ 0x4c
 800cc12:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 800cc16:	2b30      	cmp	r3, #48	@ 0x30
 800cc18:	d0f8      	beq.n	800cc0c <_dtoa_r+0x614>
 800cc1a:	4647      	mov	r7, r8
 800cc1c:	e03b      	b.n	800cc96 <_dtoa_r+0x69e>
 800cc1e:	4b9e      	ldr	r3, [pc, #632]	@ (800ce98 <_dtoa_r+0x8a0>)
 800cc20:	f7f3 fcfa 	bl	8000618 <__aeabi_dmul>
 800cc24:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800cc28:	e7bc      	b.n	800cba4 <_dtoa_r+0x5ac>
 800cc2a:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
 800cc2e:	4656      	mov	r6, sl
 800cc30:	e9dd 2300 	ldrd	r2, r3, [sp]
 800cc34:	4620      	mov	r0, r4
 800cc36:	4629      	mov	r1, r5
 800cc38:	f7f3 fe18 	bl	800086c <__aeabi_ddiv>
 800cc3c:	f7f3 ff9c 	bl	8000b78 <__aeabi_d2iz>
 800cc40:	4680      	mov	r8, r0
 800cc42:	f7f3 fc7f 	bl	8000544 <__aeabi_i2d>
 800cc46:	e9dd 2300 	ldrd	r2, r3, [sp]
 800cc4a:	f7f3 fce5 	bl	8000618 <__aeabi_dmul>
 800cc4e:	4602      	mov	r2, r0
 800cc50:	460b      	mov	r3, r1
 800cc52:	4620      	mov	r0, r4
 800cc54:	4629      	mov	r1, r5
 800cc56:	f108 0430 	add.w	r4, r8, #48	@ 0x30
 800cc5a:	f7f3 fb25 	bl	80002a8 <__aeabi_dsub>
 800cc5e:	f806 4b01 	strb.w	r4, [r6], #1
 800cc62:	9d03      	ldr	r5, [sp, #12]
 800cc64:	eba6 040a 	sub.w	r4, r6, sl
 800cc68:	42a5      	cmp	r5, r4
 800cc6a:	4602      	mov	r2, r0
 800cc6c:	460b      	mov	r3, r1
 800cc6e:	d133      	bne.n	800ccd8 <_dtoa_r+0x6e0>
 800cc70:	f7f3 fb1c 	bl	80002ac <__adddf3>
 800cc74:	e9dd 2300 	ldrd	r2, r3, [sp]
 800cc78:	4604      	mov	r4, r0
 800cc7a:	460d      	mov	r5, r1
 800cc7c:	f7f3 ff5c 	bl	8000b38 <__aeabi_dcmpgt>
 800cc80:	b9c0      	cbnz	r0, 800ccb4 <_dtoa_r+0x6bc>
 800cc82:	e9dd 2300 	ldrd	r2, r3, [sp]
 800cc86:	4620      	mov	r0, r4
 800cc88:	4629      	mov	r1, r5
 800cc8a:	f7f3 ff2d 	bl	8000ae8 <__aeabi_dcmpeq>
 800cc8e:	b110      	cbz	r0, 800cc96 <_dtoa_r+0x69e>
 800cc90:	f018 0f01 	tst.w	r8, #1
 800cc94:	d10e      	bne.n	800ccb4 <_dtoa_r+0x6bc>
 800cc96:	9902      	ldr	r1, [sp, #8]
 800cc98:	4648      	mov	r0, r9
 800cc9a:	f000 fb07 	bl	800d2ac <_Bfree>
 800cc9e:	2300      	movs	r3, #0
 800cca0:	7033      	strb	r3, [r6, #0]
 800cca2:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 800cca4:	3701      	adds	r7, #1
 800cca6:	601f      	str	r7, [r3, #0]
 800cca8:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 800ccaa:	2b00      	cmp	r3, #0
 800ccac:	f000 824b 	beq.w	800d146 <_dtoa_r+0xb4e>
 800ccb0:	601e      	str	r6, [r3, #0]
 800ccb2:	e248      	b.n	800d146 <_dtoa_r+0xb4e>
 800ccb4:	46b8      	mov	r8, r7
 800ccb6:	4633      	mov	r3, r6
 800ccb8:	461e      	mov	r6, r3
 800ccba:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 800ccbe:	2a39      	cmp	r2, #57	@ 0x39
 800ccc0:	d106      	bne.n	800ccd0 <_dtoa_r+0x6d8>
 800ccc2:	459a      	cmp	sl, r3
 800ccc4:	d1f8      	bne.n	800ccb8 <_dtoa_r+0x6c0>
 800ccc6:	2230      	movs	r2, #48	@ 0x30
 800ccc8:	f108 0801 	add.w	r8, r8, #1
 800cccc:	f88a 2000 	strb.w	r2, [sl]
 800ccd0:	781a      	ldrb	r2, [r3, #0]
 800ccd2:	3201      	adds	r2, #1
 800ccd4:	701a      	strb	r2, [r3, #0]
 800ccd6:	e7a0      	b.n	800cc1a <_dtoa_r+0x622>
 800ccd8:	4b6f      	ldr	r3, [pc, #444]	@ (800ce98 <_dtoa_r+0x8a0>)
 800ccda:	2200      	movs	r2, #0
 800ccdc:	f7f3 fc9c 	bl	8000618 <__aeabi_dmul>
 800cce0:	2200      	movs	r2, #0
 800cce2:	2300      	movs	r3, #0
 800cce4:	4604      	mov	r4, r0
 800cce6:	460d      	mov	r5, r1
 800cce8:	f7f3 fefe 	bl	8000ae8 <__aeabi_dcmpeq>
 800ccec:	2800      	cmp	r0, #0
 800ccee:	d09f      	beq.n	800cc30 <_dtoa_r+0x638>
 800ccf0:	e7d1      	b.n	800cc96 <_dtoa_r+0x69e>
 800ccf2:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800ccf4:	2a00      	cmp	r2, #0
 800ccf6:	f000 80ea 	beq.w	800cece <_dtoa_r+0x8d6>
 800ccfa:	9a07      	ldr	r2, [sp, #28]
 800ccfc:	2a01      	cmp	r2, #1
 800ccfe:	f300 80cd 	bgt.w	800ce9c <_dtoa_r+0x8a4>
 800cd02:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 800cd04:	2a00      	cmp	r2, #0
 800cd06:	f000 80c1 	beq.w	800ce8c <_dtoa_r+0x894>
 800cd0a:	f203 4333 	addw	r3, r3, #1075	@ 0x433
 800cd0e:	9c08      	ldr	r4, [sp, #32]
 800cd10:	9e00      	ldr	r6, [sp, #0]
 800cd12:	9a00      	ldr	r2, [sp, #0]
 800cd14:	441a      	add	r2, r3
 800cd16:	9200      	str	r2, [sp, #0]
 800cd18:	9a06      	ldr	r2, [sp, #24]
 800cd1a:	2101      	movs	r1, #1
 800cd1c:	441a      	add	r2, r3
 800cd1e:	4648      	mov	r0, r9
 800cd20:	9206      	str	r2, [sp, #24]
 800cd22:	f000 fb77 	bl	800d414 <__i2b>
 800cd26:	4605      	mov	r5, r0
 800cd28:	b166      	cbz	r6, 800cd44 <_dtoa_r+0x74c>
 800cd2a:	9b06      	ldr	r3, [sp, #24]
 800cd2c:	2b00      	cmp	r3, #0
 800cd2e:	dd09      	ble.n	800cd44 <_dtoa_r+0x74c>
 800cd30:	42b3      	cmp	r3, r6
 800cd32:	9a00      	ldr	r2, [sp, #0]
 800cd34:	bfa8      	it	ge
 800cd36:	4633      	movge	r3, r6
 800cd38:	1ad2      	subs	r2, r2, r3
 800cd3a:	9200      	str	r2, [sp, #0]
 800cd3c:	9a06      	ldr	r2, [sp, #24]
 800cd3e:	1af6      	subs	r6, r6, r3
 800cd40:	1ad3      	subs	r3, r2, r3
 800cd42:	9306      	str	r3, [sp, #24]
 800cd44:	9b08      	ldr	r3, [sp, #32]
 800cd46:	b30b      	cbz	r3, 800cd8c <_dtoa_r+0x794>
 800cd48:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800cd4a:	2b00      	cmp	r3, #0
 800cd4c:	f000 80c6 	beq.w	800cedc <_dtoa_r+0x8e4>
 800cd50:	2c00      	cmp	r4, #0
 800cd52:	f000 80c0 	beq.w	800ced6 <_dtoa_r+0x8de>
 800cd56:	4629      	mov	r1, r5
 800cd58:	4622      	mov	r2, r4
 800cd5a:	4648      	mov	r0, r9
 800cd5c:	f000 fc12 	bl	800d584 <__pow5mult>
 800cd60:	9a02      	ldr	r2, [sp, #8]
 800cd62:	4601      	mov	r1, r0
 800cd64:	4605      	mov	r5, r0
 800cd66:	4648      	mov	r0, r9
 800cd68:	f000 fb6a 	bl	800d440 <__multiply>
 800cd6c:	9902      	ldr	r1, [sp, #8]
 800cd6e:	4680      	mov	r8, r0
 800cd70:	4648      	mov	r0, r9
 800cd72:	f000 fa9b 	bl	800d2ac <_Bfree>
 800cd76:	9b08      	ldr	r3, [sp, #32]
 800cd78:	1b1b      	subs	r3, r3, r4
 800cd7a:	9308      	str	r3, [sp, #32]
 800cd7c:	f000 80b1 	beq.w	800cee2 <_dtoa_r+0x8ea>
 800cd80:	9a08      	ldr	r2, [sp, #32]
 800cd82:	4641      	mov	r1, r8
 800cd84:	4648      	mov	r0, r9
 800cd86:	f000 fbfd 	bl	800d584 <__pow5mult>
 800cd8a:	9002      	str	r0, [sp, #8]
 800cd8c:	2101      	movs	r1, #1
 800cd8e:	4648      	mov	r0, r9
 800cd90:	f000 fb40 	bl	800d414 <__i2b>
 800cd94:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800cd96:	4604      	mov	r4, r0
 800cd98:	2b00      	cmp	r3, #0
 800cd9a:	f000 81d8 	beq.w	800d14e <_dtoa_r+0xb56>
 800cd9e:	461a      	mov	r2, r3
 800cda0:	4601      	mov	r1, r0
 800cda2:	4648      	mov	r0, r9
 800cda4:	f000 fbee 	bl	800d584 <__pow5mult>
 800cda8:	9b07      	ldr	r3, [sp, #28]
 800cdaa:	2b01      	cmp	r3, #1
 800cdac:	4604      	mov	r4, r0
 800cdae:	f300 809f 	bgt.w	800cef0 <_dtoa_r+0x8f8>
 800cdb2:	9b04      	ldr	r3, [sp, #16]
 800cdb4:	2b00      	cmp	r3, #0
 800cdb6:	f040 8097 	bne.w	800cee8 <_dtoa_r+0x8f0>
 800cdba:	9b05      	ldr	r3, [sp, #20]
 800cdbc:	f3c3 0313 	ubfx	r3, r3, #0, #20
 800cdc0:	2b00      	cmp	r3, #0
 800cdc2:	f040 8093 	bne.w	800ceec <_dtoa_r+0x8f4>
 800cdc6:	9b05      	ldr	r3, [sp, #20]
 800cdc8:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 800cdcc:	0d1b      	lsrs	r3, r3, #20
 800cdce:	051b      	lsls	r3, r3, #20
 800cdd0:	b133      	cbz	r3, 800cde0 <_dtoa_r+0x7e8>
 800cdd2:	9b00      	ldr	r3, [sp, #0]
 800cdd4:	3301      	adds	r3, #1
 800cdd6:	9300      	str	r3, [sp, #0]
 800cdd8:	9b06      	ldr	r3, [sp, #24]
 800cdda:	3301      	adds	r3, #1
 800cddc:	9306      	str	r3, [sp, #24]
 800cdde:	2301      	movs	r3, #1
 800cde0:	9308      	str	r3, [sp, #32]
 800cde2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800cde4:	2b00      	cmp	r3, #0
 800cde6:	f000 81b8 	beq.w	800d15a <_dtoa_r+0xb62>
 800cdea:	6923      	ldr	r3, [r4, #16]
 800cdec:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 800cdf0:	6918      	ldr	r0, [r3, #16]
 800cdf2:	f000 fac3 	bl	800d37c <__hi0bits>
 800cdf6:	f1c0 0020 	rsb	r0, r0, #32
 800cdfa:	9b06      	ldr	r3, [sp, #24]
 800cdfc:	4418      	add	r0, r3
 800cdfe:	f010 001f 	ands.w	r0, r0, #31
 800ce02:	f000 8082 	beq.w	800cf0a <_dtoa_r+0x912>
 800ce06:	f1c0 0320 	rsb	r3, r0, #32
 800ce0a:	2b04      	cmp	r3, #4
 800ce0c:	dd73      	ble.n	800cef6 <_dtoa_r+0x8fe>
 800ce0e:	9b00      	ldr	r3, [sp, #0]
 800ce10:	f1c0 001c 	rsb	r0, r0, #28
 800ce14:	4403      	add	r3, r0
 800ce16:	9300      	str	r3, [sp, #0]
 800ce18:	9b06      	ldr	r3, [sp, #24]
 800ce1a:	4403      	add	r3, r0
 800ce1c:	4406      	add	r6, r0
 800ce1e:	9306      	str	r3, [sp, #24]
 800ce20:	9b00      	ldr	r3, [sp, #0]
 800ce22:	2b00      	cmp	r3, #0
 800ce24:	dd05      	ble.n	800ce32 <_dtoa_r+0x83a>
 800ce26:	9902      	ldr	r1, [sp, #8]
 800ce28:	461a      	mov	r2, r3
 800ce2a:	4648      	mov	r0, r9
 800ce2c:	f000 fc04 	bl	800d638 <__lshift>
 800ce30:	9002      	str	r0, [sp, #8]
 800ce32:	9b06      	ldr	r3, [sp, #24]
 800ce34:	2b00      	cmp	r3, #0
 800ce36:	dd05      	ble.n	800ce44 <_dtoa_r+0x84c>
 800ce38:	4621      	mov	r1, r4
 800ce3a:	461a      	mov	r2, r3
 800ce3c:	4648      	mov	r0, r9
 800ce3e:	f000 fbfb 	bl	800d638 <__lshift>
 800ce42:	4604      	mov	r4, r0
 800ce44:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 800ce46:	2b00      	cmp	r3, #0
 800ce48:	d061      	beq.n	800cf0e <_dtoa_r+0x916>
 800ce4a:	9802      	ldr	r0, [sp, #8]
 800ce4c:	4621      	mov	r1, r4
 800ce4e:	f000 fc5f 	bl	800d710 <__mcmp>
 800ce52:	2800      	cmp	r0, #0
 800ce54:	da5b      	bge.n	800cf0e <_dtoa_r+0x916>
 800ce56:	2300      	movs	r3, #0
 800ce58:	9902      	ldr	r1, [sp, #8]
 800ce5a:	220a      	movs	r2, #10
 800ce5c:	4648      	mov	r0, r9
 800ce5e:	f000 fa47 	bl	800d2f0 <__multadd>
 800ce62:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800ce64:	9002      	str	r0, [sp, #8]
 800ce66:	f107 38ff 	add.w	r8, r7, #4294967295	@ 0xffffffff
 800ce6a:	2b00      	cmp	r3, #0
 800ce6c:	f000 8177 	beq.w	800d15e <_dtoa_r+0xb66>
 800ce70:	4629      	mov	r1, r5
 800ce72:	2300      	movs	r3, #0
 800ce74:	220a      	movs	r2, #10
 800ce76:	4648      	mov	r0, r9
 800ce78:	f000 fa3a 	bl	800d2f0 <__multadd>
 800ce7c:	f1bb 0f00 	cmp.w	fp, #0
 800ce80:	4605      	mov	r5, r0
 800ce82:	dc6f      	bgt.n	800cf64 <_dtoa_r+0x96c>
 800ce84:	9b07      	ldr	r3, [sp, #28]
 800ce86:	2b02      	cmp	r3, #2
 800ce88:	dc49      	bgt.n	800cf1e <_dtoa_r+0x926>
 800ce8a:	e06b      	b.n	800cf64 <_dtoa_r+0x96c>
 800ce8c:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 800ce8e:	f1c3 0336 	rsb	r3, r3, #54	@ 0x36
 800ce92:	e73c      	b.n	800cd0e <_dtoa_r+0x716>
 800ce94:	3fe00000 	.word	0x3fe00000
 800ce98:	40240000 	.word	0x40240000
 800ce9c:	9b03      	ldr	r3, [sp, #12]
 800ce9e:	1e5c      	subs	r4, r3, #1
 800cea0:	9b08      	ldr	r3, [sp, #32]
 800cea2:	42a3      	cmp	r3, r4
 800cea4:	db09      	blt.n	800ceba <_dtoa_r+0x8c2>
 800cea6:	1b1c      	subs	r4, r3, r4
 800cea8:	9b03      	ldr	r3, [sp, #12]
 800ceaa:	2b00      	cmp	r3, #0
 800ceac:	f6bf af30 	bge.w	800cd10 <_dtoa_r+0x718>
 800ceb0:	9b00      	ldr	r3, [sp, #0]
 800ceb2:	9a03      	ldr	r2, [sp, #12]
 800ceb4:	1a9e      	subs	r6, r3, r2
 800ceb6:	2300      	movs	r3, #0
 800ceb8:	e72b      	b.n	800cd12 <_dtoa_r+0x71a>
 800ceba:	9b08      	ldr	r3, [sp, #32]
 800cebc:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 800cebe:	9408      	str	r4, [sp, #32]
 800cec0:	1ae3      	subs	r3, r4, r3
 800cec2:	441a      	add	r2, r3
 800cec4:	9e00      	ldr	r6, [sp, #0]
 800cec6:	9b03      	ldr	r3, [sp, #12]
 800cec8:	920d      	str	r2, [sp, #52]	@ 0x34
 800ceca:	2400      	movs	r4, #0
 800cecc:	e721      	b.n	800cd12 <_dtoa_r+0x71a>
 800cece:	9c08      	ldr	r4, [sp, #32]
 800ced0:	9e00      	ldr	r6, [sp, #0]
 800ced2:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 800ced4:	e728      	b.n	800cd28 <_dtoa_r+0x730>
 800ced6:	f8dd 8008 	ldr.w	r8, [sp, #8]
 800ceda:	e751      	b.n	800cd80 <_dtoa_r+0x788>
 800cedc:	9a08      	ldr	r2, [sp, #32]
 800cede:	9902      	ldr	r1, [sp, #8]
 800cee0:	e750      	b.n	800cd84 <_dtoa_r+0x78c>
 800cee2:	f8cd 8008 	str.w	r8, [sp, #8]
 800cee6:	e751      	b.n	800cd8c <_dtoa_r+0x794>
 800cee8:	2300      	movs	r3, #0
 800ceea:	e779      	b.n	800cde0 <_dtoa_r+0x7e8>
 800ceec:	9b04      	ldr	r3, [sp, #16]
 800ceee:	e777      	b.n	800cde0 <_dtoa_r+0x7e8>
 800cef0:	2300      	movs	r3, #0
 800cef2:	9308      	str	r3, [sp, #32]
 800cef4:	e779      	b.n	800cdea <_dtoa_r+0x7f2>
 800cef6:	d093      	beq.n	800ce20 <_dtoa_r+0x828>
 800cef8:	9a00      	ldr	r2, [sp, #0]
 800cefa:	331c      	adds	r3, #28
 800cefc:	441a      	add	r2, r3
 800cefe:	9200      	str	r2, [sp, #0]
 800cf00:	9a06      	ldr	r2, [sp, #24]
 800cf02:	441a      	add	r2, r3
 800cf04:	441e      	add	r6, r3
 800cf06:	9206      	str	r2, [sp, #24]
 800cf08:	e78a      	b.n	800ce20 <_dtoa_r+0x828>
 800cf0a:	4603      	mov	r3, r0
 800cf0c:	e7f4      	b.n	800cef8 <_dtoa_r+0x900>
 800cf0e:	9b03      	ldr	r3, [sp, #12]
 800cf10:	2b00      	cmp	r3, #0
 800cf12:	46b8      	mov	r8, r7
 800cf14:	dc20      	bgt.n	800cf58 <_dtoa_r+0x960>
 800cf16:	469b      	mov	fp, r3
 800cf18:	9b07      	ldr	r3, [sp, #28]
 800cf1a:	2b02      	cmp	r3, #2
 800cf1c:	dd1e      	ble.n	800cf5c <_dtoa_r+0x964>
 800cf1e:	f1bb 0f00 	cmp.w	fp, #0
 800cf22:	f47f adb1 	bne.w	800ca88 <_dtoa_r+0x490>
 800cf26:	4621      	mov	r1, r4
 800cf28:	465b      	mov	r3, fp
 800cf2a:	2205      	movs	r2, #5
 800cf2c:	4648      	mov	r0, r9
 800cf2e:	f000 f9df 	bl	800d2f0 <__multadd>
 800cf32:	4601      	mov	r1, r0
 800cf34:	4604      	mov	r4, r0
 800cf36:	9802      	ldr	r0, [sp, #8]
 800cf38:	f000 fbea 	bl	800d710 <__mcmp>
 800cf3c:	2800      	cmp	r0, #0
 800cf3e:	f77f ada3 	ble.w	800ca88 <_dtoa_r+0x490>
 800cf42:	4656      	mov	r6, sl
 800cf44:	2331      	movs	r3, #49	@ 0x31
 800cf46:	f806 3b01 	strb.w	r3, [r6], #1
 800cf4a:	f108 0801 	add.w	r8, r8, #1
 800cf4e:	e59f      	b.n	800ca90 <_dtoa_r+0x498>
 800cf50:	9c03      	ldr	r4, [sp, #12]
 800cf52:	46b8      	mov	r8, r7
 800cf54:	4625      	mov	r5, r4
 800cf56:	e7f4      	b.n	800cf42 <_dtoa_r+0x94a>
 800cf58:	f8dd b00c 	ldr.w	fp, [sp, #12]
 800cf5c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800cf5e:	2b00      	cmp	r3, #0
 800cf60:	f000 8101 	beq.w	800d166 <_dtoa_r+0xb6e>
 800cf64:	2e00      	cmp	r6, #0
 800cf66:	dd05      	ble.n	800cf74 <_dtoa_r+0x97c>
 800cf68:	4629      	mov	r1, r5
 800cf6a:	4632      	mov	r2, r6
 800cf6c:	4648      	mov	r0, r9
 800cf6e:	f000 fb63 	bl	800d638 <__lshift>
 800cf72:	4605      	mov	r5, r0
 800cf74:	9b08      	ldr	r3, [sp, #32]
 800cf76:	2b00      	cmp	r3, #0
 800cf78:	d05c      	beq.n	800d034 <_dtoa_r+0xa3c>
 800cf7a:	6869      	ldr	r1, [r5, #4]
 800cf7c:	4648      	mov	r0, r9
 800cf7e:	f000 f955 	bl	800d22c <_Balloc>
 800cf82:	4606      	mov	r6, r0
 800cf84:	b928      	cbnz	r0, 800cf92 <_dtoa_r+0x99a>
 800cf86:	4b82      	ldr	r3, [pc, #520]	@ (800d190 <_dtoa_r+0xb98>)
 800cf88:	4602      	mov	r2, r0
 800cf8a:	f240 21ef 	movw	r1, #751	@ 0x2ef
 800cf8e:	f7ff bb4a 	b.w	800c626 <_dtoa_r+0x2e>
 800cf92:	692a      	ldr	r2, [r5, #16]
 800cf94:	3202      	adds	r2, #2
 800cf96:	0092      	lsls	r2, r2, #2
 800cf98:	f105 010c 	add.w	r1, r5, #12
 800cf9c:	300c      	adds	r0, #12
 800cf9e:	f7ff fa94 	bl	800c4ca <memcpy>
 800cfa2:	2201      	movs	r2, #1
 800cfa4:	4631      	mov	r1, r6
 800cfa6:	4648      	mov	r0, r9
 800cfa8:	f000 fb46 	bl	800d638 <__lshift>
 800cfac:	f10a 0301 	add.w	r3, sl, #1
 800cfb0:	9300      	str	r3, [sp, #0]
 800cfb2:	eb0a 030b 	add.w	r3, sl, fp
 800cfb6:	9308      	str	r3, [sp, #32]
 800cfb8:	9b04      	ldr	r3, [sp, #16]
 800cfba:	f003 0301 	and.w	r3, r3, #1
 800cfbe:	462f      	mov	r7, r5
 800cfc0:	9306      	str	r3, [sp, #24]
 800cfc2:	4605      	mov	r5, r0
 800cfc4:	9b00      	ldr	r3, [sp, #0]
 800cfc6:	9802      	ldr	r0, [sp, #8]
 800cfc8:	4621      	mov	r1, r4
 800cfca:	f103 3bff 	add.w	fp, r3, #4294967295	@ 0xffffffff
 800cfce:	f7ff fa8a 	bl	800c4e6 <quorem>
 800cfd2:	4603      	mov	r3, r0
 800cfd4:	3330      	adds	r3, #48	@ 0x30
 800cfd6:	9003      	str	r0, [sp, #12]
 800cfd8:	4639      	mov	r1, r7
 800cfda:	9802      	ldr	r0, [sp, #8]
 800cfdc:	9309      	str	r3, [sp, #36]	@ 0x24
 800cfde:	f000 fb97 	bl	800d710 <__mcmp>
 800cfe2:	462a      	mov	r2, r5
 800cfe4:	9004      	str	r0, [sp, #16]
 800cfe6:	4621      	mov	r1, r4
 800cfe8:	4648      	mov	r0, r9
 800cfea:	f000 fbad 	bl	800d748 <__mdiff>
 800cfee:	68c2      	ldr	r2, [r0, #12]
 800cff0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800cff2:	4606      	mov	r6, r0
 800cff4:	bb02      	cbnz	r2, 800d038 <_dtoa_r+0xa40>
 800cff6:	4601      	mov	r1, r0
 800cff8:	9802      	ldr	r0, [sp, #8]
 800cffa:	f000 fb89 	bl	800d710 <__mcmp>
 800cffe:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800d000:	4602      	mov	r2, r0
 800d002:	4631      	mov	r1, r6
 800d004:	4648      	mov	r0, r9
 800d006:	920c      	str	r2, [sp, #48]	@ 0x30
 800d008:	9309      	str	r3, [sp, #36]	@ 0x24
 800d00a:	f000 f94f 	bl	800d2ac <_Bfree>
 800d00e:	9b07      	ldr	r3, [sp, #28]
 800d010:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 800d012:	9e00      	ldr	r6, [sp, #0]
 800d014:	ea42 0103 	orr.w	r1, r2, r3
 800d018:	9b06      	ldr	r3, [sp, #24]
 800d01a:	4319      	orrs	r1, r3
 800d01c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800d01e:	d10d      	bne.n	800d03c <_dtoa_r+0xa44>
 800d020:	2b39      	cmp	r3, #57	@ 0x39
 800d022:	d027      	beq.n	800d074 <_dtoa_r+0xa7c>
 800d024:	9a04      	ldr	r2, [sp, #16]
 800d026:	2a00      	cmp	r2, #0
 800d028:	dd01      	ble.n	800d02e <_dtoa_r+0xa36>
 800d02a:	9b03      	ldr	r3, [sp, #12]
 800d02c:	3331      	adds	r3, #49	@ 0x31
 800d02e:	f88b 3000 	strb.w	r3, [fp]
 800d032:	e52e      	b.n	800ca92 <_dtoa_r+0x49a>
 800d034:	4628      	mov	r0, r5
 800d036:	e7b9      	b.n	800cfac <_dtoa_r+0x9b4>
 800d038:	2201      	movs	r2, #1
 800d03a:	e7e2      	b.n	800d002 <_dtoa_r+0xa0a>
 800d03c:	9904      	ldr	r1, [sp, #16]
 800d03e:	2900      	cmp	r1, #0
 800d040:	db04      	blt.n	800d04c <_dtoa_r+0xa54>
 800d042:	9807      	ldr	r0, [sp, #28]
 800d044:	4301      	orrs	r1, r0
 800d046:	9806      	ldr	r0, [sp, #24]
 800d048:	4301      	orrs	r1, r0
 800d04a:	d120      	bne.n	800d08e <_dtoa_r+0xa96>
 800d04c:	2a00      	cmp	r2, #0
 800d04e:	ddee      	ble.n	800d02e <_dtoa_r+0xa36>
 800d050:	9902      	ldr	r1, [sp, #8]
 800d052:	9300      	str	r3, [sp, #0]
 800d054:	2201      	movs	r2, #1
 800d056:	4648      	mov	r0, r9
 800d058:	f000 faee 	bl	800d638 <__lshift>
 800d05c:	4621      	mov	r1, r4
 800d05e:	9002      	str	r0, [sp, #8]
 800d060:	f000 fb56 	bl	800d710 <__mcmp>
 800d064:	2800      	cmp	r0, #0
 800d066:	9b00      	ldr	r3, [sp, #0]
 800d068:	dc02      	bgt.n	800d070 <_dtoa_r+0xa78>
 800d06a:	d1e0      	bne.n	800d02e <_dtoa_r+0xa36>
 800d06c:	07da      	lsls	r2, r3, #31
 800d06e:	d5de      	bpl.n	800d02e <_dtoa_r+0xa36>
 800d070:	2b39      	cmp	r3, #57	@ 0x39
 800d072:	d1da      	bne.n	800d02a <_dtoa_r+0xa32>
 800d074:	2339      	movs	r3, #57	@ 0x39
 800d076:	f88b 3000 	strb.w	r3, [fp]
 800d07a:	4633      	mov	r3, r6
 800d07c:	461e      	mov	r6, r3
 800d07e:	3b01      	subs	r3, #1
 800d080:	f816 2c01 	ldrb.w	r2, [r6, #-1]
 800d084:	2a39      	cmp	r2, #57	@ 0x39
 800d086:	d04e      	beq.n	800d126 <_dtoa_r+0xb2e>
 800d088:	3201      	adds	r2, #1
 800d08a:	701a      	strb	r2, [r3, #0]
 800d08c:	e501      	b.n	800ca92 <_dtoa_r+0x49a>
 800d08e:	2a00      	cmp	r2, #0
 800d090:	dd03      	ble.n	800d09a <_dtoa_r+0xaa2>
 800d092:	2b39      	cmp	r3, #57	@ 0x39
 800d094:	d0ee      	beq.n	800d074 <_dtoa_r+0xa7c>
 800d096:	3301      	adds	r3, #1
 800d098:	e7c9      	b.n	800d02e <_dtoa_r+0xa36>
 800d09a:	9a00      	ldr	r2, [sp, #0]
 800d09c:	9908      	ldr	r1, [sp, #32]
 800d09e:	f802 3c01 	strb.w	r3, [r2, #-1]
 800d0a2:	428a      	cmp	r2, r1
 800d0a4:	d028      	beq.n	800d0f8 <_dtoa_r+0xb00>
 800d0a6:	9902      	ldr	r1, [sp, #8]
 800d0a8:	2300      	movs	r3, #0
 800d0aa:	220a      	movs	r2, #10
 800d0ac:	4648      	mov	r0, r9
 800d0ae:	f000 f91f 	bl	800d2f0 <__multadd>
 800d0b2:	42af      	cmp	r7, r5
 800d0b4:	9002      	str	r0, [sp, #8]
 800d0b6:	f04f 0300 	mov.w	r3, #0
 800d0ba:	f04f 020a 	mov.w	r2, #10
 800d0be:	4639      	mov	r1, r7
 800d0c0:	4648      	mov	r0, r9
 800d0c2:	d107      	bne.n	800d0d4 <_dtoa_r+0xadc>
 800d0c4:	f000 f914 	bl	800d2f0 <__multadd>
 800d0c8:	4607      	mov	r7, r0
 800d0ca:	4605      	mov	r5, r0
 800d0cc:	9b00      	ldr	r3, [sp, #0]
 800d0ce:	3301      	adds	r3, #1
 800d0d0:	9300      	str	r3, [sp, #0]
 800d0d2:	e777      	b.n	800cfc4 <_dtoa_r+0x9cc>
 800d0d4:	f000 f90c 	bl	800d2f0 <__multadd>
 800d0d8:	4629      	mov	r1, r5
 800d0da:	4607      	mov	r7, r0
 800d0dc:	2300      	movs	r3, #0
 800d0de:	220a      	movs	r2, #10
 800d0e0:	4648      	mov	r0, r9
 800d0e2:	f000 f905 	bl	800d2f0 <__multadd>
 800d0e6:	4605      	mov	r5, r0
 800d0e8:	e7f0      	b.n	800d0cc <_dtoa_r+0xad4>
 800d0ea:	f1bb 0f00 	cmp.w	fp, #0
 800d0ee:	bfcc      	ite	gt
 800d0f0:	465e      	movgt	r6, fp
 800d0f2:	2601      	movle	r6, #1
 800d0f4:	4456      	add	r6, sl
 800d0f6:	2700      	movs	r7, #0
 800d0f8:	9902      	ldr	r1, [sp, #8]
 800d0fa:	9300      	str	r3, [sp, #0]
 800d0fc:	2201      	movs	r2, #1
 800d0fe:	4648      	mov	r0, r9
 800d100:	f000 fa9a 	bl	800d638 <__lshift>
 800d104:	4621      	mov	r1, r4
 800d106:	9002      	str	r0, [sp, #8]
 800d108:	f000 fb02 	bl	800d710 <__mcmp>
 800d10c:	2800      	cmp	r0, #0
 800d10e:	dcb4      	bgt.n	800d07a <_dtoa_r+0xa82>
 800d110:	d102      	bne.n	800d118 <_dtoa_r+0xb20>
 800d112:	9b00      	ldr	r3, [sp, #0]
 800d114:	07db      	lsls	r3, r3, #31
 800d116:	d4b0      	bmi.n	800d07a <_dtoa_r+0xa82>
 800d118:	4633      	mov	r3, r6
 800d11a:	461e      	mov	r6, r3
 800d11c:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 800d120:	2a30      	cmp	r2, #48	@ 0x30
 800d122:	d0fa      	beq.n	800d11a <_dtoa_r+0xb22>
 800d124:	e4b5      	b.n	800ca92 <_dtoa_r+0x49a>
 800d126:	459a      	cmp	sl, r3
 800d128:	d1a8      	bne.n	800d07c <_dtoa_r+0xa84>
 800d12a:	2331      	movs	r3, #49	@ 0x31
 800d12c:	f108 0801 	add.w	r8, r8, #1
 800d130:	f88a 3000 	strb.w	r3, [sl]
 800d134:	e4ad      	b.n	800ca92 <_dtoa_r+0x49a>
 800d136:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 800d138:	f8df a058 	ldr.w	sl, [pc, #88]	@ 800d194 <_dtoa_r+0xb9c>
 800d13c:	b11b      	cbz	r3, 800d146 <_dtoa_r+0xb4e>
 800d13e:	f10a 0308 	add.w	r3, sl, #8
 800d142:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 800d144:	6013      	str	r3, [r2, #0]
 800d146:	4650      	mov	r0, sl
 800d148:	b017      	add	sp, #92	@ 0x5c
 800d14a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d14e:	9b07      	ldr	r3, [sp, #28]
 800d150:	2b01      	cmp	r3, #1
 800d152:	f77f ae2e 	ble.w	800cdb2 <_dtoa_r+0x7ba>
 800d156:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800d158:	9308      	str	r3, [sp, #32]
 800d15a:	2001      	movs	r0, #1
 800d15c:	e64d      	b.n	800cdfa <_dtoa_r+0x802>
 800d15e:	f1bb 0f00 	cmp.w	fp, #0
 800d162:	f77f aed9 	ble.w	800cf18 <_dtoa_r+0x920>
 800d166:	4656      	mov	r6, sl
 800d168:	9802      	ldr	r0, [sp, #8]
 800d16a:	4621      	mov	r1, r4
 800d16c:	f7ff f9bb 	bl	800c4e6 <quorem>
 800d170:	f100 0330 	add.w	r3, r0, #48	@ 0x30
 800d174:	f806 3b01 	strb.w	r3, [r6], #1
 800d178:	eba6 020a 	sub.w	r2, r6, sl
 800d17c:	4593      	cmp	fp, r2
 800d17e:	ddb4      	ble.n	800d0ea <_dtoa_r+0xaf2>
 800d180:	9902      	ldr	r1, [sp, #8]
 800d182:	2300      	movs	r3, #0
 800d184:	220a      	movs	r2, #10
 800d186:	4648      	mov	r0, r9
 800d188:	f000 f8b2 	bl	800d2f0 <__multadd>
 800d18c:	9002      	str	r0, [sp, #8]
 800d18e:	e7eb      	b.n	800d168 <_dtoa_r+0xb70>
 800d190:	0800e190 	.word	0x0800e190
 800d194:	0800e114 	.word	0x0800e114

0800d198 <_free_r>:
 800d198:	b538      	push	{r3, r4, r5, lr}
 800d19a:	4605      	mov	r5, r0
 800d19c:	2900      	cmp	r1, #0
 800d19e:	d041      	beq.n	800d224 <_free_r+0x8c>
 800d1a0:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800d1a4:	1f0c      	subs	r4, r1, #4
 800d1a6:	2b00      	cmp	r3, #0
 800d1a8:	bfb8      	it	lt
 800d1aa:	18e4      	addlt	r4, r4, r3
 800d1ac:	f7fe fa92 	bl	800b6d4 <__malloc_lock>
 800d1b0:	4a1d      	ldr	r2, [pc, #116]	@ (800d228 <_free_r+0x90>)
 800d1b2:	6813      	ldr	r3, [r2, #0]
 800d1b4:	b933      	cbnz	r3, 800d1c4 <_free_r+0x2c>
 800d1b6:	6063      	str	r3, [r4, #4]
 800d1b8:	6014      	str	r4, [r2, #0]
 800d1ba:	4628      	mov	r0, r5
 800d1bc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800d1c0:	f7fe ba8e 	b.w	800b6e0 <__malloc_unlock>
 800d1c4:	42a3      	cmp	r3, r4
 800d1c6:	d908      	bls.n	800d1da <_free_r+0x42>
 800d1c8:	6820      	ldr	r0, [r4, #0]
 800d1ca:	1821      	adds	r1, r4, r0
 800d1cc:	428b      	cmp	r3, r1
 800d1ce:	bf01      	itttt	eq
 800d1d0:	6819      	ldreq	r1, [r3, #0]
 800d1d2:	685b      	ldreq	r3, [r3, #4]
 800d1d4:	1809      	addeq	r1, r1, r0
 800d1d6:	6021      	streq	r1, [r4, #0]
 800d1d8:	e7ed      	b.n	800d1b6 <_free_r+0x1e>
 800d1da:	461a      	mov	r2, r3
 800d1dc:	685b      	ldr	r3, [r3, #4]
 800d1de:	b10b      	cbz	r3, 800d1e4 <_free_r+0x4c>
 800d1e0:	42a3      	cmp	r3, r4
 800d1e2:	d9fa      	bls.n	800d1da <_free_r+0x42>
 800d1e4:	6811      	ldr	r1, [r2, #0]
 800d1e6:	1850      	adds	r0, r2, r1
 800d1e8:	42a0      	cmp	r0, r4
 800d1ea:	d10b      	bne.n	800d204 <_free_r+0x6c>
 800d1ec:	6820      	ldr	r0, [r4, #0]
 800d1ee:	4401      	add	r1, r0
 800d1f0:	1850      	adds	r0, r2, r1
 800d1f2:	4283      	cmp	r3, r0
 800d1f4:	6011      	str	r1, [r2, #0]
 800d1f6:	d1e0      	bne.n	800d1ba <_free_r+0x22>
 800d1f8:	6818      	ldr	r0, [r3, #0]
 800d1fa:	685b      	ldr	r3, [r3, #4]
 800d1fc:	6053      	str	r3, [r2, #4]
 800d1fe:	4408      	add	r0, r1
 800d200:	6010      	str	r0, [r2, #0]
 800d202:	e7da      	b.n	800d1ba <_free_r+0x22>
 800d204:	d902      	bls.n	800d20c <_free_r+0x74>
 800d206:	230c      	movs	r3, #12
 800d208:	602b      	str	r3, [r5, #0]
 800d20a:	e7d6      	b.n	800d1ba <_free_r+0x22>
 800d20c:	6820      	ldr	r0, [r4, #0]
 800d20e:	1821      	adds	r1, r4, r0
 800d210:	428b      	cmp	r3, r1
 800d212:	bf04      	itt	eq
 800d214:	6819      	ldreq	r1, [r3, #0]
 800d216:	685b      	ldreq	r3, [r3, #4]
 800d218:	6063      	str	r3, [r4, #4]
 800d21a:	bf04      	itt	eq
 800d21c:	1809      	addeq	r1, r1, r0
 800d21e:	6021      	streq	r1, [r4, #0]
 800d220:	6054      	str	r4, [r2, #4]
 800d222:	e7ca      	b.n	800d1ba <_free_r+0x22>
 800d224:	bd38      	pop	{r3, r4, r5, pc}
 800d226:	bf00      	nop
 800d228:	20026348 	.word	0x20026348

0800d22c <_Balloc>:
 800d22c:	b570      	push	{r4, r5, r6, lr}
 800d22e:	69c6      	ldr	r6, [r0, #28]
 800d230:	4604      	mov	r4, r0
 800d232:	460d      	mov	r5, r1
 800d234:	b976      	cbnz	r6, 800d254 <_Balloc+0x28>
 800d236:	2010      	movs	r0, #16
 800d238:	f7fe f9a2 	bl	800b580 <malloc>
 800d23c:	4602      	mov	r2, r0
 800d23e:	61e0      	str	r0, [r4, #28]
 800d240:	b920      	cbnz	r0, 800d24c <_Balloc+0x20>
 800d242:	4b18      	ldr	r3, [pc, #96]	@ (800d2a4 <_Balloc+0x78>)
 800d244:	4818      	ldr	r0, [pc, #96]	@ (800d2a8 <_Balloc+0x7c>)
 800d246:	216b      	movs	r1, #107	@ 0x6b
 800d248:	f000 fddc 	bl	800de04 <__assert_func>
 800d24c:	e9c0 6601 	strd	r6, r6, [r0, #4]
 800d250:	6006      	str	r6, [r0, #0]
 800d252:	60c6      	str	r6, [r0, #12]
 800d254:	69e6      	ldr	r6, [r4, #28]
 800d256:	68f3      	ldr	r3, [r6, #12]
 800d258:	b183      	cbz	r3, 800d27c <_Balloc+0x50>
 800d25a:	69e3      	ldr	r3, [r4, #28]
 800d25c:	68db      	ldr	r3, [r3, #12]
 800d25e:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 800d262:	b9b8      	cbnz	r0, 800d294 <_Balloc+0x68>
 800d264:	2101      	movs	r1, #1
 800d266:	fa01 f605 	lsl.w	r6, r1, r5
 800d26a:	1d72      	adds	r2, r6, #5
 800d26c:	0092      	lsls	r2, r2, #2
 800d26e:	4620      	mov	r0, r4
 800d270:	f000 fde6 	bl	800de40 <_calloc_r>
 800d274:	b160      	cbz	r0, 800d290 <_Balloc+0x64>
 800d276:	e9c0 5601 	strd	r5, r6, [r0, #4]
 800d27a:	e00e      	b.n	800d29a <_Balloc+0x6e>
 800d27c:	2221      	movs	r2, #33	@ 0x21
 800d27e:	2104      	movs	r1, #4
 800d280:	4620      	mov	r0, r4
 800d282:	f000 fddd 	bl	800de40 <_calloc_r>
 800d286:	69e3      	ldr	r3, [r4, #28]
 800d288:	60f0      	str	r0, [r6, #12]
 800d28a:	68db      	ldr	r3, [r3, #12]
 800d28c:	2b00      	cmp	r3, #0
 800d28e:	d1e4      	bne.n	800d25a <_Balloc+0x2e>
 800d290:	2000      	movs	r0, #0
 800d292:	bd70      	pop	{r4, r5, r6, pc}
 800d294:	6802      	ldr	r2, [r0, #0]
 800d296:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 800d29a:	2300      	movs	r3, #0
 800d29c:	e9c0 3303 	strd	r3, r3, [r0, #12]
 800d2a0:	e7f7      	b.n	800d292 <_Balloc+0x66>
 800d2a2:	bf00      	nop
 800d2a4:	0800e121 	.word	0x0800e121
 800d2a8:	0800e1a1 	.word	0x0800e1a1

0800d2ac <_Bfree>:
 800d2ac:	b570      	push	{r4, r5, r6, lr}
 800d2ae:	69c6      	ldr	r6, [r0, #28]
 800d2b0:	4605      	mov	r5, r0
 800d2b2:	460c      	mov	r4, r1
 800d2b4:	b976      	cbnz	r6, 800d2d4 <_Bfree+0x28>
 800d2b6:	2010      	movs	r0, #16
 800d2b8:	f7fe f962 	bl	800b580 <malloc>
 800d2bc:	4602      	mov	r2, r0
 800d2be:	61e8      	str	r0, [r5, #28]
 800d2c0:	b920      	cbnz	r0, 800d2cc <_Bfree+0x20>
 800d2c2:	4b09      	ldr	r3, [pc, #36]	@ (800d2e8 <_Bfree+0x3c>)
 800d2c4:	4809      	ldr	r0, [pc, #36]	@ (800d2ec <_Bfree+0x40>)
 800d2c6:	218f      	movs	r1, #143	@ 0x8f
 800d2c8:	f000 fd9c 	bl	800de04 <__assert_func>
 800d2cc:	e9c0 6601 	strd	r6, r6, [r0, #4]
 800d2d0:	6006      	str	r6, [r0, #0]
 800d2d2:	60c6      	str	r6, [r0, #12]
 800d2d4:	b13c      	cbz	r4, 800d2e6 <_Bfree+0x3a>
 800d2d6:	69eb      	ldr	r3, [r5, #28]
 800d2d8:	6862      	ldr	r2, [r4, #4]
 800d2da:	68db      	ldr	r3, [r3, #12]
 800d2dc:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800d2e0:	6021      	str	r1, [r4, #0]
 800d2e2:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 800d2e6:	bd70      	pop	{r4, r5, r6, pc}
 800d2e8:	0800e121 	.word	0x0800e121
 800d2ec:	0800e1a1 	.word	0x0800e1a1

0800d2f0 <__multadd>:
 800d2f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d2f4:	690d      	ldr	r5, [r1, #16]
 800d2f6:	4607      	mov	r7, r0
 800d2f8:	460c      	mov	r4, r1
 800d2fa:	461e      	mov	r6, r3
 800d2fc:	f101 0c14 	add.w	ip, r1, #20
 800d300:	2000      	movs	r0, #0
 800d302:	f8dc 3000 	ldr.w	r3, [ip]
 800d306:	b299      	uxth	r1, r3
 800d308:	fb02 6101 	mla	r1, r2, r1, r6
 800d30c:	0c1e      	lsrs	r6, r3, #16
 800d30e:	0c0b      	lsrs	r3, r1, #16
 800d310:	fb02 3306 	mla	r3, r2, r6, r3
 800d314:	b289      	uxth	r1, r1
 800d316:	3001      	adds	r0, #1
 800d318:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 800d31c:	4285      	cmp	r5, r0
 800d31e:	f84c 1b04 	str.w	r1, [ip], #4
 800d322:	ea4f 4613 	mov.w	r6, r3, lsr #16
 800d326:	dcec      	bgt.n	800d302 <__multadd+0x12>
 800d328:	b30e      	cbz	r6, 800d36e <__multadd+0x7e>
 800d32a:	68a3      	ldr	r3, [r4, #8]
 800d32c:	42ab      	cmp	r3, r5
 800d32e:	dc19      	bgt.n	800d364 <__multadd+0x74>
 800d330:	6861      	ldr	r1, [r4, #4]
 800d332:	4638      	mov	r0, r7
 800d334:	3101      	adds	r1, #1
 800d336:	f7ff ff79 	bl	800d22c <_Balloc>
 800d33a:	4680      	mov	r8, r0
 800d33c:	b928      	cbnz	r0, 800d34a <__multadd+0x5a>
 800d33e:	4602      	mov	r2, r0
 800d340:	4b0c      	ldr	r3, [pc, #48]	@ (800d374 <__multadd+0x84>)
 800d342:	480d      	ldr	r0, [pc, #52]	@ (800d378 <__multadd+0x88>)
 800d344:	21ba      	movs	r1, #186	@ 0xba
 800d346:	f000 fd5d 	bl	800de04 <__assert_func>
 800d34a:	6922      	ldr	r2, [r4, #16]
 800d34c:	3202      	adds	r2, #2
 800d34e:	f104 010c 	add.w	r1, r4, #12
 800d352:	0092      	lsls	r2, r2, #2
 800d354:	300c      	adds	r0, #12
 800d356:	f7ff f8b8 	bl	800c4ca <memcpy>
 800d35a:	4621      	mov	r1, r4
 800d35c:	4638      	mov	r0, r7
 800d35e:	f7ff ffa5 	bl	800d2ac <_Bfree>
 800d362:	4644      	mov	r4, r8
 800d364:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 800d368:	3501      	adds	r5, #1
 800d36a:	615e      	str	r6, [r3, #20]
 800d36c:	6125      	str	r5, [r4, #16]
 800d36e:	4620      	mov	r0, r4
 800d370:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d374:	0800e190 	.word	0x0800e190
 800d378:	0800e1a1 	.word	0x0800e1a1

0800d37c <__hi0bits>:
 800d37c:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
 800d380:	4603      	mov	r3, r0
 800d382:	bf36      	itet	cc
 800d384:	0403      	lslcc	r3, r0, #16
 800d386:	2000      	movcs	r0, #0
 800d388:	2010      	movcc	r0, #16
 800d38a:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 800d38e:	bf3c      	itt	cc
 800d390:	021b      	lslcc	r3, r3, #8
 800d392:	3008      	addcc	r0, #8
 800d394:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 800d398:	bf3c      	itt	cc
 800d39a:	011b      	lslcc	r3, r3, #4
 800d39c:	3004      	addcc	r0, #4
 800d39e:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800d3a2:	bf3c      	itt	cc
 800d3a4:	009b      	lslcc	r3, r3, #2
 800d3a6:	3002      	addcc	r0, #2
 800d3a8:	2b00      	cmp	r3, #0
 800d3aa:	db05      	blt.n	800d3b8 <__hi0bits+0x3c>
 800d3ac:	f013 4f80 	tst.w	r3, #1073741824	@ 0x40000000
 800d3b0:	f100 0001 	add.w	r0, r0, #1
 800d3b4:	bf08      	it	eq
 800d3b6:	2020      	moveq	r0, #32
 800d3b8:	4770      	bx	lr

0800d3ba <__lo0bits>:
 800d3ba:	6803      	ldr	r3, [r0, #0]
 800d3bc:	4602      	mov	r2, r0
 800d3be:	f013 0007 	ands.w	r0, r3, #7
 800d3c2:	d00b      	beq.n	800d3dc <__lo0bits+0x22>
 800d3c4:	07d9      	lsls	r1, r3, #31
 800d3c6:	d421      	bmi.n	800d40c <__lo0bits+0x52>
 800d3c8:	0798      	lsls	r0, r3, #30
 800d3ca:	bf49      	itett	mi
 800d3cc:	085b      	lsrmi	r3, r3, #1
 800d3ce:	089b      	lsrpl	r3, r3, #2
 800d3d0:	2001      	movmi	r0, #1
 800d3d2:	6013      	strmi	r3, [r2, #0]
 800d3d4:	bf5c      	itt	pl
 800d3d6:	6013      	strpl	r3, [r2, #0]
 800d3d8:	2002      	movpl	r0, #2
 800d3da:	4770      	bx	lr
 800d3dc:	b299      	uxth	r1, r3
 800d3de:	b909      	cbnz	r1, 800d3e4 <__lo0bits+0x2a>
 800d3e0:	0c1b      	lsrs	r3, r3, #16
 800d3e2:	2010      	movs	r0, #16
 800d3e4:	b2d9      	uxtb	r1, r3
 800d3e6:	b909      	cbnz	r1, 800d3ec <__lo0bits+0x32>
 800d3e8:	3008      	adds	r0, #8
 800d3ea:	0a1b      	lsrs	r3, r3, #8
 800d3ec:	0719      	lsls	r1, r3, #28
 800d3ee:	bf04      	itt	eq
 800d3f0:	091b      	lsreq	r3, r3, #4
 800d3f2:	3004      	addeq	r0, #4
 800d3f4:	0799      	lsls	r1, r3, #30
 800d3f6:	bf04      	itt	eq
 800d3f8:	089b      	lsreq	r3, r3, #2
 800d3fa:	3002      	addeq	r0, #2
 800d3fc:	07d9      	lsls	r1, r3, #31
 800d3fe:	d403      	bmi.n	800d408 <__lo0bits+0x4e>
 800d400:	085b      	lsrs	r3, r3, #1
 800d402:	f100 0001 	add.w	r0, r0, #1
 800d406:	d003      	beq.n	800d410 <__lo0bits+0x56>
 800d408:	6013      	str	r3, [r2, #0]
 800d40a:	4770      	bx	lr
 800d40c:	2000      	movs	r0, #0
 800d40e:	4770      	bx	lr
 800d410:	2020      	movs	r0, #32
 800d412:	4770      	bx	lr

0800d414 <__i2b>:
 800d414:	b510      	push	{r4, lr}
 800d416:	460c      	mov	r4, r1
 800d418:	2101      	movs	r1, #1
 800d41a:	f7ff ff07 	bl	800d22c <_Balloc>
 800d41e:	4602      	mov	r2, r0
 800d420:	b928      	cbnz	r0, 800d42e <__i2b+0x1a>
 800d422:	4b05      	ldr	r3, [pc, #20]	@ (800d438 <__i2b+0x24>)
 800d424:	4805      	ldr	r0, [pc, #20]	@ (800d43c <__i2b+0x28>)
 800d426:	f240 1145 	movw	r1, #325	@ 0x145
 800d42a:	f000 fceb 	bl	800de04 <__assert_func>
 800d42e:	2301      	movs	r3, #1
 800d430:	6144      	str	r4, [r0, #20]
 800d432:	6103      	str	r3, [r0, #16]
 800d434:	bd10      	pop	{r4, pc}
 800d436:	bf00      	nop
 800d438:	0800e190 	.word	0x0800e190
 800d43c:	0800e1a1 	.word	0x0800e1a1

0800d440 <__multiply>:
 800d440:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d444:	4617      	mov	r7, r2
 800d446:	690a      	ldr	r2, [r1, #16]
 800d448:	693b      	ldr	r3, [r7, #16]
 800d44a:	429a      	cmp	r2, r3
 800d44c:	bfa8      	it	ge
 800d44e:	463b      	movge	r3, r7
 800d450:	4689      	mov	r9, r1
 800d452:	bfa4      	itt	ge
 800d454:	460f      	movge	r7, r1
 800d456:	4699      	movge	r9, r3
 800d458:	693d      	ldr	r5, [r7, #16]
 800d45a:	f8d9 a010 	ldr.w	sl, [r9, #16]
 800d45e:	68bb      	ldr	r3, [r7, #8]
 800d460:	6879      	ldr	r1, [r7, #4]
 800d462:	eb05 060a 	add.w	r6, r5, sl
 800d466:	42b3      	cmp	r3, r6
 800d468:	b085      	sub	sp, #20
 800d46a:	bfb8      	it	lt
 800d46c:	3101      	addlt	r1, #1
 800d46e:	f7ff fedd 	bl	800d22c <_Balloc>
 800d472:	b930      	cbnz	r0, 800d482 <__multiply+0x42>
 800d474:	4602      	mov	r2, r0
 800d476:	4b41      	ldr	r3, [pc, #260]	@ (800d57c <__multiply+0x13c>)
 800d478:	4841      	ldr	r0, [pc, #260]	@ (800d580 <__multiply+0x140>)
 800d47a:	f44f 71b1 	mov.w	r1, #354	@ 0x162
 800d47e:	f000 fcc1 	bl	800de04 <__assert_func>
 800d482:	f100 0414 	add.w	r4, r0, #20
 800d486:	eb04 0e86 	add.w	lr, r4, r6, lsl #2
 800d48a:	4623      	mov	r3, r4
 800d48c:	2200      	movs	r2, #0
 800d48e:	4573      	cmp	r3, lr
 800d490:	d320      	bcc.n	800d4d4 <__multiply+0x94>
 800d492:	f107 0814 	add.w	r8, r7, #20
 800d496:	f109 0114 	add.w	r1, r9, #20
 800d49a:	eb08 0585 	add.w	r5, r8, r5, lsl #2
 800d49e:	eb01 038a 	add.w	r3, r1, sl, lsl #2
 800d4a2:	9302      	str	r3, [sp, #8]
 800d4a4:	1beb      	subs	r3, r5, r7
 800d4a6:	3b15      	subs	r3, #21
 800d4a8:	f023 0303 	bic.w	r3, r3, #3
 800d4ac:	3304      	adds	r3, #4
 800d4ae:	3715      	adds	r7, #21
 800d4b0:	42bd      	cmp	r5, r7
 800d4b2:	bf38      	it	cc
 800d4b4:	2304      	movcc	r3, #4
 800d4b6:	9301      	str	r3, [sp, #4]
 800d4b8:	9b02      	ldr	r3, [sp, #8]
 800d4ba:	9103      	str	r1, [sp, #12]
 800d4bc:	428b      	cmp	r3, r1
 800d4be:	d80c      	bhi.n	800d4da <__multiply+0x9a>
 800d4c0:	2e00      	cmp	r6, #0
 800d4c2:	dd03      	ble.n	800d4cc <__multiply+0x8c>
 800d4c4:	f85e 3d04 	ldr.w	r3, [lr, #-4]!
 800d4c8:	2b00      	cmp	r3, #0
 800d4ca:	d055      	beq.n	800d578 <__multiply+0x138>
 800d4cc:	6106      	str	r6, [r0, #16]
 800d4ce:	b005      	add	sp, #20
 800d4d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d4d4:	f843 2b04 	str.w	r2, [r3], #4
 800d4d8:	e7d9      	b.n	800d48e <__multiply+0x4e>
 800d4da:	f8b1 a000 	ldrh.w	sl, [r1]
 800d4de:	f1ba 0f00 	cmp.w	sl, #0
 800d4e2:	d01f      	beq.n	800d524 <__multiply+0xe4>
 800d4e4:	46c4      	mov	ip, r8
 800d4e6:	46a1      	mov	r9, r4
 800d4e8:	2700      	movs	r7, #0
 800d4ea:	f85c 2b04 	ldr.w	r2, [ip], #4
 800d4ee:	f8d9 3000 	ldr.w	r3, [r9]
 800d4f2:	fa1f fb82 	uxth.w	fp, r2
 800d4f6:	b29b      	uxth	r3, r3
 800d4f8:	fb0a 330b 	mla	r3, sl, fp, r3
 800d4fc:	443b      	add	r3, r7
 800d4fe:	f8d9 7000 	ldr.w	r7, [r9]
 800d502:	0c12      	lsrs	r2, r2, #16
 800d504:	0c3f      	lsrs	r7, r7, #16
 800d506:	fb0a 7202 	mla	r2, sl, r2, r7
 800d50a:	eb02 4213 	add.w	r2, r2, r3, lsr #16
 800d50e:	b29b      	uxth	r3, r3
 800d510:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800d514:	4565      	cmp	r5, ip
 800d516:	f849 3b04 	str.w	r3, [r9], #4
 800d51a:	ea4f 4712 	mov.w	r7, r2, lsr #16
 800d51e:	d8e4      	bhi.n	800d4ea <__multiply+0xaa>
 800d520:	9b01      	ldr	r3, [sp, #4]
 800d522:	50e7      	str	r7, [r4, r3]
 800d524:	9b03      	ldr	r3, [sp, #12]
 800d526:	f8b3 9002 	ldrh.w	r9, [r3, #2]
 800d52a:	3104      	adds	r1, #4
 800d52c:	f1b9 0f00 	cmp.w	r9, #0
 800d530:	d020      	beq.n	800d574 <__multiply+0x134>
 800d532:	6823      	ldr	r3, [r4, #0]
 800d534:	4647      	mov	r7, r8
 800d536:	46a4      	mov	ip, r4
 800d538:	f04f 0a00 	mov.w	sl, #0
 800d53c:	f8b7 b000 	ldrh.w	fp, [r7]
 800d540:	f8bc 2002 	ldrh.w	r2, [ip, #2]
 800d544:	fb09 220b 	mla	r2, r9, fp, r2
 800d548:	4452      	add	r2, sl
 800d54a:	b29b      	uxth	r3, r3
 800d54c:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800d550:	f84c 3b04 	str.w	r3, [ip], #4
 800d554:	f857 3b04 	ldr.w	r3, [r7], #4
 800d558:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 800d55c:	f8bc 3000 	ldrh.w	r3, [ip]
 800d560:	fb09 330a 	mla	r3, r9, sl, r3
 800d564:	eb03 4312 	add.w	r3, r3, r2, lsr #16
 800d568:	42bd      	cmp	r5, r7
 800d56a:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 800d56e:	d8e5      	bhi.n	800d53c <__multiply+0xfc>
 800d570:	9a01      	ldr	r2, [sp, #4]
 800d572:	50a3      	str	r3, [r4, r2]
 800d574:	3404      	adds	r4, #4
 800d576:	e79f      	b.n	800d4b8 <__multiply+0x78>
 800d578:	3e01      	subs	r6, #1
 800d57a:	e7a1      	b.n	800d4c0 <__multiply+0x80>
 800d57c:	0800e190 	.word	0x0800e190
 800d580:	0800e1a1 	.word	0x0800e1a1

0800d584 <__pow5mult>:
 800d584:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800d588:	4615      	mov	r5, r2
 800d58a:	f012 0203 	ands.w	r2, r2, #3
 800d58e:	4607      	mov	r7, r0
 800d590:	460e      	mov	r6, r1
 800d592:	d007      	beq.n	800d5a4 <__pow5mult+0x20>
 800d594:	4c25      	ldr	r4, [pc, #148]	@ (800d62c <__pow5mult+0xa8>)
 800d596:	3a01      	subs	r2, #1
 800d598:	2300      	movs	r3, #0
 800d59a:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 800d59e:	f7ff fea7 	bl	800d2f0 <__multadd>
 800d5a2:	4606      	mov	r6, r0
 800d5a4:	10ad      	asrs	r5, r5, #2
 800d5a6:	d03d      	beq.n	800d624 <__pow5mult+0xa0>
 800d5a8:	69fc      	ldr	r4, [r7, #28]
 800d5aa:	b97c      	cbnz	r4, 800d5cc <__pow5mult+0x48>
 800d5ac:	2010      	movs	r0, #16
 800d5ae:	f7fd ffe7 	bl	800b580 <malloc>
 800d5b2:	4602      	mov	r2, r0
 800d5b4:	61f8      	str	r0, [r7, #28]
 800d5b6:	b928      	cbnz	r0, 800d5c4 <__pow5mult+0x40>
 800d5b8:	4b1d      	ldr	r3, [pc, #116]	@ (800d630 <__pow5mult+0xac>)
 800d5ba:	481e      	ldr	r0, [pc, #120]	@ (800d634 <__pow5mult+0xb0>)
 800d5bc:	f240 11b3 	movw	r1, #435	@ 0x1b3
 800d5c0:	f000 fc20 	bl	800de04 <__assert_func>
 800d5c4:	e9c0 4401 	strd	r4, r4, [r0, #4]
 800d5c8:	6004      	str	r4, [r0, #0]
 800d5ca:	60c4      	str	r4, [r0, #12]
 800d5cc:	f8d7 801c 	ldr.w	r8, [r7, #28]
 800d5d0:	f8d8 4008 	ldr.w	r4, [r8, #8]
 800d5d4:	b94c      	cbnz	r4, 800d5ea <__pow5mult+0x66>
 800d5d6:	f240 2171 	movw	r1, #625	@ 0x271
 800d5da:	4638      	mov	r0, r7
 800d5dc:	f7ff ff1a 	bl	800d414 <__i2b>
 800d5e0:	2300      	movs	r3, #0
 800d5e2:	f8c8 0008 	str.w	r0, [r8, #8]
 800d5e6:	4604      	mov	r4, r0
 800d5e8:	6003      	str	r3, [r0, #0]
 800d5ea:	f04f 0900 	mov.w	r9, #0
 800d5ee:	07eb      	lsls	r3, r5, #31
 800d5f0:	d50a      	bpl.n	800d608 <__pow5mult+0x84>
 800d5f2:	4631      	mov	r1, r6
 800d5f4:	4622      	mov	r2, r4
 800d5f6:	4638      	mov	r0, r7
 800d5f8:	f7ff ff22 	bl	800d440 <__multiply>
 800d5fc:	4631      	mov	r1, r6
 800d5fe:	4680      	mov	r8, r0
 800d600:	4638      	mov	r0, r7
 800d602:	f7ff fe53 	bl	800d2ac <_Bfree>
 800d606:	4646      	mov	r6, r8
 800d608:	106d      	asrs	r5, r5, #1
 800d60a:	d00b      	beq.n	800d624 <__pow5mult+0xa0>
 800d60c:	6820      	ldr	r0, [r4, #0]
 800d60e:	b938      	cbnz	r0, 800d620 <__pow5mult+0x9c>
 800d610:	4622      	mov	r2, r4
 800d612:	4621      	mov	r1, r4
 800d614:	4638      	mov	r0, r7
 800d616:	f7ff ff13 	bl	800d440 <__multiply>
 800d61a:	6020      	str	r0, [r4, #0]
 800d61c:	f8c0 9000 	str.w	r9, [r0]
 800d620:	4604      	mov	r4, r0
 800d622:	e7e4      	b.n	800d5ee <__pow5mult+0x6a>
 800d624:	4630      	mov	r0, r6
 800d626:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800d62a:	bf00      	nop
 800d62c:	0800e254 	.word	0x0800e254
 800d630:	0800e121 	.word	0x0800e121
 800d634:	0800e1a1 	.word	0x0800e1a1

0800d638 <__lshift>:
 800d638:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d63c:	460c      	mov	r4, r1
 800d63e:	6849      	ldr	r1, [r1, #4]
 800d640:	6923      	ldr	r3, [r4, #16]
 800d642:	eb03 1862 	add.w	r8, r3, r2, asr #5
 800d646:	68a3      	ldr	r3, [r4, #8]
 800d648:	4607      	mov	r7, r0
 800d64a:	4691      	mov	r9, r2
 800d64c:	ea4f 1a62 	mov.w	sl, r2, asr #5
 800d650:	f108 0601 	add.w	r6, r8, #1
 800d654:	42b3      	cmp	r3, r6
 800d656:	db0b      	blt.n	800d670 <__lshift+0x38>
 800d658:	4638      	mov	r0, r7
 800d65a:	f7ff fde7 	bl	800d22c <_Balloc>
 800d65e:	4605      	mov	r5, r0
 800d660:	b948      	cbnz	r0, 800d676 <__lshift+0x3e>
 800d662:	4602      	mov	r2, r0
 800d664:	4b28      	ldr	r3, [pc, #160]	@ (800d708 <__lshift+0xd0>)
 800d666:	4829      	ldr	r0, [pc, #164]	@ (800d70c <__lshift+0xd4>)
 800d668:	f44f 71ef 	mov.w	r1, #478	@ 0x1de
 800d66c:	f000 fbca 	bl	800de04 <__assert_func>
 800d670:	3101      	adds	r1, #1
 800d672:	005b      	lsls	r3, r3, #1
 800d674:	e7ee      	b.n	800d654 <__lshift+0x1c>
 800d676:	2300      	movs	r3, #0
 800d678:	f100 0114 	add.w	r1, r0, #20
 800d67c:	f100 0210 	add.w	r2, r0, #16
 800d680:	4618      	mov	r0, r3
 800d682:	4553      	cmp	r3, sl
 800d684:	db33      	blt.n	800d6ee <__lshift+0xb6>
 800d686:	6920      	ldr	r0, [r4, #16]
 800d688:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 800d68c:	f104 0314 	add.w	r3, r4, #20
 800d690:	f019 091f 	ands.w	r9, r9, #31
 800d694:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 800d698:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 800d69c:	d02b      	beq.n	800d6f6 <__lshift+0xbe>
 800d69e:	f1c9 0e20 	rsb	lr, r9, #32
 800d6a2:	468a      	mov	sl, r1
 800d6a4:	2200      	movs	r2, #0
 800d6a6:	6818      	ldr	r0, [r3, #0]
 800d6a8:	fa00 f009 	lsl.w	r0, r0, r9
 800d6ac:	4310      	orrs	r0, r2
 800d6ae:	f84a 0b04 	str.w	r0, [sl], #4
 800d6b2:	f853 2b04 	ldr.w	r2, [r3], #4
 800d6b6:	459c      	cmp	ip, r3
 800d6b8:	fa22 f20e 	lsr.w	r2, r2, lr
 800d6bc:	d8f3      	bhi.n	800d6a6 <__lshift+0x6e>
 800d6be:	ebac 0304 	sub.w	r3, ip, r4
 800d6c2:	3b15      	subs	r3, #21
 800d6c4:	f023 0303 	bic.w	r3, r3, #3
 800d6c8:	3304      	adds	r3, #4
 800d6ca:	f104 0015 	add.w	r0, r4, #21
 800d6ce:	4560      	cmp	r0, ip
 800d6d0:	bf88      	it	hi
 800d6d2:	2304      	movhi	r3, #4
 800d6d4:	50ca      	str	r2, [r1, r3]
 800d6d6:	b10a      	cbz	r2, 800d6dc <__lshift+0xa4>
 800d6d8:	f108 0602 	add.w	r6, r8, #2
 800d6dc:	3e01      	subs	r6, #1
 800d6de:	4638      	mov	r0, r7
 800d6e0:	612e      	str	r6, [r5, #16]
 800d6e2:	4621      	mov	r1, r4
 800d6e4:	f7ff fde2 	bl	800d2ac <_Bfree>
 800d6e8:	4628      	mov	r0, r5
 800d6ea:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800d6ee:	f842 0f04 	str.w	r0, [r2, #4]!
 800d6f2:	3301      	adds	r3, #1
 800d6f4:	e7c5      	b.n	800d682 <__lshift+0x4a>
 800d6f6:	3904      	subs	r1, #4
 800d6f8:	f853 2b04 	ldr.w	r2, [r3], #4
 800d6fc:	f841 2f04 	str.w	r2, [r1, #4]!
 800d700:	459c      	cmp	ip, r3
 800d702:	d8f9      	bhi.n	800d6f8 <__lshift+0xc0>
 800d704:	e7ea      	b.n	800d6dc <__lshift+0xa4>
 800d706:	bf00      	nop
 800d708:	0800e190 	.word	0x0800e190
 800d70c:	0800e1a1 	.word	0x0800e1a1

0800d710 <__mcmp>:
 800d710:	690a      	ldr	r2, [r1, #16]
 800d712:	4603      	mov	r3, r0
 800d714:	6900      	ldr	r0, [r0, #16]
 800d716:	1a80      	subs	r0, r0, r2
 800d718:	b530      	push	{r4, r5, lr}
 800d71a:	d10e      	bne.n	800d73a <__mcmp+0x2a>
 800d71c:	3314      	adds	r3, #20
 800d71e:	3114      	adds	r1, #20
 800d720:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 800d724:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 800d728:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 800d72c:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 800d730:	4295      	cmp	r5, r2
 800d732:	d003      	beq.n	800d73c <__mcmp+0x2c>
 800d734:	d205      	bcs.n	800d742 <__mcmp+0x32>
 800d736:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 800d73a:	bd30      	pop	{r4, r5, pc}
 800d73c:	42a3      	cmp	r3, r4
 800d73e:	d3f3      	bcc.n	800d728 <__mcmp+0x18>
 800d740:	e7fb      	b.n	800d73a <__mcmp+0x2a>
 800d742:	2001      	movs	r0, #1
 800d744:	e7f9      	b.n	800d73a <__mcmp+0x2a>
	...

0800d748 <__mdiff>:
 800d748:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d74c:	4689      	mov	r9, r1
 800d74e:	4606      	mov	r6, r0
 800d750:	4611      	mov	r1, r2
 800d752:	4648      	mov	r0, r9
 800d754:	4614      	mov	r4, r2
 800d756:	f7ff ffdb 	bl	800d710 <__mcmp>
 800d75a:	1e05      	subs	r5, r0, #0
 800d75c:	d112      	bne.n	800d784 <__mdiff+0x3c>
 800d75e:	4629      	mov	r1, r5
 800d760:	4630      	mov	r0, r6
 800d762:	f7ff fd63 	bl	800d22c <_Balloc>
 800d766:	4602      	mov	r2, r0
 800d768:	b928      	cbnz	r0, 800d776 <__mdiff+0x2e>
 800d76a:	4b3f      	ldr	r3, [pc, #252]	@ (800d868 <__mdiff+0x120>)
 800d76c:	f240 2137 	movw	r1, #567	@ 0x237
 800d770:	483e      	ldr	r0, [pc, #248]	@ (800d86c <__mdiff+0x124>)
 800d772:	f000 fb47 	bl	800de04 <__assert_func>
 800d776:	2301      	movs	r3, #1
 800d778:	e9c0 3504 	strd	r3, r5, [r0, #16]
 800d77c:	4610      	mov	r0, r2
 800d77e:	b003      	add	sp, #12
 800d780:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d784:	bfbc      	itt	lt
 800d786:	464b      	movlt	r3, r9
 800d788:	46a1      	movlt	r9, r4
 800d78a:	4630      	mov	r0, r6
 800d78c:	f8d9 1004 	ldr.w	r1, [r9, #4]
 800d790:	bfba      	itte	lt
 800d792:	461c      	movlt	r4, r3
 800d794:	2501      	movlt	r5, #1
 800d796:	2500      	movge	r5, #0
 800d798:	f7ff fd48 	bl	800d22c <_Balloc>
 800d79c:	4602      	mov	r2, r0
 800d79e:	b918      	cbnz	r0, 800d7a8 <__mdiff+0x60>
 800d7a0:	4b31      	ldr	r3, [pc, #196]	@ (800d868 <__mdiff+0x120>)
 800d7a2:	f240 2145 	movw	r1, #581	@ 0x245
 800d7a6:	e7e3      	b.n	800d770 <__mdiff+0x28>
 800d7a8:	f8d9 7010 	ldr.w	r7, [r9, #16]
 800d7ac:	6926      	ldr	r6, [r4, #16]
 800d7ae:	60c5      	str	r5, [r0, #12]
 800d7b0:	f109 0310 	add.w	r3, r9, #16
 800d7b4:	f109 0514 	add.w	r5, r9, #20
 800d7b8:	f104 0e14 	add.w	lr, r4, #20
 800d7bc:	f100 0b14 	add.w	fp, r0, #20
 800d7c0:	eb05 0887 	add.w	r8, r5, r7, lsl #2
 800d7c4:	eb0e 0686 	add.w	r6, lr, r6, lsl #2
 800d7c8:	9301      	str	r3, [sp, #4]
 800d7ca:	46d9      	mov	r9, fp
 800d7cc:	f04f 0c00 	mov.w	ip, #0
 800d7d0:	9b01      	ldr	r3, [sp, #4]
 800d7d2:	f85e 0b04 	ldr.w	r0, [lr], #4
 800d7d6:	f853 af04 	ldr.w	sl, [r3, #4]!
 800d7da:	9301      	str	r3, [sp, #4]
 800d7dc:	fa1f f38a 	uxth.w	r3, sl
 800d7e0:	4619      	mov	r1, r3
 800d7e2:	b283      	uxth	r3, r0
 800d7e4:	1acb      	subs	r3, r1, r3
 800d7e6:	0c00      	lsrs	r0, r0, #16
 800d7e8:	4463      	add	r3, ip
 800d7ea:	ebc0 401a 	rsb	r0, r0, sl, lsr #16
 800d7ee:	eb00 4023 	add.w	r0, r0, r3, asr #16
 800d7f2:	b29b      	uxth	r3, r3
 800d7f4:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 800d7f8:	4576      	cmp	r6, lr
 800d7fa:	f849 3b04 	str.w	r3, [r9], #4
 800d7fe:	ea4f 4c20 	mov.w	ip, r0, asr #16
 800d802:	d8e5      	bhi.n	800d7d0 <__mdiff+0x88>
 800d804:	1b33      	subs	r3, r6, r4
 800d806:	3b15      	subs	r3, #21
 800d808:	f023 0303 	bic.w	r3, r3, #3
 800d80c:	3415      	adds	r4, #21
 800d80e:	3304      	adds	r3, #4
 800d810:	42a6      	cmp	r6, r4
 800d812:	bf38      	it	cc
 800d814:	2304      	movcc	r3, #4
 800d816:	441d      	add	r5, r3
 800d818:	445b      	add	r3, fp
 800d81a:	461e      	mov	r6, r3
 800d81c:	462c      	mov	r4, r5
 800d81e:	4544      	cmp	r4, r8
 800d820:	d30e      	bcc.n	800d840 <__mdiff+0xf8>
 800d822:	f108 0103 	add.w	r1, r8, #3
 800d826:	1b49      	subs	r1, r1, r5
 800d828:	f021 0103 	bic.w	r1, r1, #3
 800d82c:	3d03      	subs	r5, #3
 800d82e:	45a8      	cmp	r8, r5
 800d830:	bf38      	it	cc
 800d832:	2100      	movcc	r1, #0
 800d834:	440b      	add	r3, r1
 800d836:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 800d83a:	b191      	cbz	r1, 800d862 <__mdiff+0x11a>
 800d83c:	6117      	str	r7, [r2, #16]
 800d83e:	e79d      	b.n	800d77c <__mdiff+0x34>
 800d840:	f854 1b04 	ldr.w	r1, [r4], #4
 800d844:	46e6      	mov	lr, ip
 800d846:	0c08      	lsrs	r0, r1, #16
 800d848:	fa1c fc81 	uxtah	ip, ip, r1
 800d84c:	4471      	add	r1, lr
 800d84e:	eb00 402c 	add.w	r0, r0, ip, asr #16
 800d852:	b289      	uxth	r1, r1
 800d854:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 800d858:	f846 1b04 	str.w	r1, [r6], #4
 800d85c:	ea4f 4c20 	mov.w	ip, r0, asr #16
 800d860:	e7dd      	b.n	800d81e <__mdiff+0xd6>
 800d862:	3f01      	subs	r7, #1
 800d864:	e7e7      	b.n	800d836 <__mdiff+0xee>
 800d866:	bf00      	nop
 800d868:	0800e190 	.word	0x0800e190
 800d86c:	0800e1a1 	.word	0x0800e1a1

0800d870 <__d2b>:
 800d870:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800d874:	460f      	mov	r7, r1
 800d876:	2101      	movs	r1, #1
 800d878:	ec59 8b10 	vmov	r8, r9, d0
 800d87c:	4616      	mov	r6, r2
 800d87e:	f7ff fcd5 	bl	800d22c <_Balloc>
 800d882:	4604      	mov	r4, r0
 800d884:	b930      	cbnz	r0, 800d894 <__d2b+0x24>
 800d886:	4602      	mov	r2, r0
 800d888:	4b23      	ldr	r3, [pc, #140]	@ (800d918 <__d2b+0xa8>)
 800d88a:	4824      	ldr	r0, [pc, #144]	@ (800d91c <__d2b+0xac>)
 800d88c:	f240 310f 	movw	r1, #783	@ 0x30f
 800d890:	f000 fab8 	bl	800de04 <__assert_func>
 800d894:	f3c9 550a 	ubfx	r5, r9, #20, #11
 800d898:	f3c9 0313 	ubfx	r3, r9, #0, #20
 800d89c:	b10d      	cbz	r5, 800d8a2 <__d2b+0x32>
 800d89e:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 800d8a2:	9301      	str	r3, [sp, #4]
 800d8a4:	f1b8 0300 	subs.w	r3, r8, #0
 800d8a8:	d023      	beq.n	800d8f2 <__d2b+0x82>
 800d8aa:	4668      	mov	r0, sp
 800d8ac:	9300      	str	r3, [sp, #0]
 800d8ae:	f7ff fd84 	bl	800d3ba <__lo0bits>
 800d8b2:	e9dd 1200 	ldrd	r1, r2, [sp]
 800d8b6:	b1d0      	cbz	r0, 800d8ee <__d2b+0x7e>
 800d8b8:	f1c0 0320 	rsb	r3, r0, #32
 800d8bc:	fa02 f303 	lsl.w	r3, r2, r3
 800d8c0:	430b      	orrs	r3, r1
 800d8c2:	40c2      	lsrs	r2, r0
 800d8c4:	6163      	str	r3, [r4, #20]
 800d8c6:	9201      	str	r2, [sp, #4]
 800d8c8:	9b01      	ldr	r3, [sp, #4]
 800d8ca:	61a3      	str	r3, [r4, #24]
 800d8cc:	2b00      	cmp	r3, #0
 800d8ce:	bf0c      	ite	eq
 800d8d0:	2201      	moveq	r2, #1
 800d8d2:	2202      	movne	r2, #2
 800d8d4:	6122      	str	r2, [r4, #16]
 800d8d6:	b1a5      	cbz	r5, 800d902 <__d2b+0x92>
 800d8d8:	f2a5 4533 	subw	r5, r5, #1075	@ 0x433
 800d8dc:	4405      	add	r5, r0
 800d8de:	603d      	str	r5, [r7, #0]
 800d8e0:	f1c0 0035 	rsb	r0, r0, #53	@ 0x35
 800d8e4:	6030      	str	r0, [r6, #0]
 800d8e6:	4620      	mov	r0, r4
 800d8e8:	b003      	add	sp, #12
 800d8ea:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800d8ee:	6161      	str	r1, [r4, #20]
 800d8f0:	e7ea      	b.n	800d8c8 <__d2b+0x58>
 800d8f2:	a801      	add	r0, sp, #4
 800d8f4:	f7ff fd61 	bl	800d3ba <__lo0bits>
 800d8f8:	9b01      	ldr	r3, [sp, #4]
 800d8fa:	6163      	str	r3, [r4, #20]
 800d8fc:	3020      	adds	r0, #32
 800d8fe:	2201      	movs	r2, #1
 800d900:	e7e8      	b.n	800d8d4 <__d2b+0x64>
 800d902:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 800d906:	f2a0 4032 	subw	r0, r0, #1074	@ 0x432
 800d90a:	6038      	str	r0, [r7, #0]
 800d90c:	6918      	ldr	r0, [r3, #16]
 800d90e:	f7ff fd35 	bl	800d37c <__hi0bits>
 800d912:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 800d916:	e7e5      	b.n	800d8e4 <__d2b+0x74>
 800d918:	0800e190 	.word	0x0800e190
 800d91c:	0800e1a1 	.word	0x0800e1a1

0800d920 <__sfputc_r>:
 800d920:	6893      	ldr	r3, [r2, #8]
 800d922:	3b01      	subs	r3, #1
 800d924:	2b00      	cmp	r3, #0
 800d926:	b410      	push	{r4}
 800d928:	6093      	str	r3, [r2, #8]
 800d92a:	da08      	bge.n	800d93e <__sfputc_r+0x1e>
 800d92c:	6994      	ldr	r4, [r2, #24]
 800d92e:	42a3      	cmp	r3, r4
 800d930:	db01      	blt.n	800d936 <__sfputc_r+0x16>
 800d932:	290a      	cmp	r1, #10
 800d934:	d103      	bne.n	800d93e <__sfputc_r+0x1e>
 800d936:	f85d 4b04 	ldr.w	r4, [sp], #4
 800d93a:	f7fe bca2 	b.w	800c282 <__swbuf_r>
 800d93e:	6813      	ldr	r3, [r2, #0]
 800d940:	1c58      	adds	r0, r3, #1
 800d942:	6010      	str	r0, [r2, #0]
 800d944:	7019      	strb	r1, [r3, #0]
 800d946:	4608      	mov	r0, r1
 800d948:	f85d 4b04 	ldr.w	r4, [sp], #4
 800d94c:	4770      	bx	lr

0800d94e <__sfputs_r>:
 800d94e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d950:	4606      	mov	r6, r0
 800d952:	460f      	mov	r7, r1
 800d954:	4614      	mov	r4, r2
 800d956:	18d5      	adds	r5, r2, r3
 800d958:	42ac      	cmp	r4, r5
 800d95a:	d101      	bne.n	800d960 <__sfputs_r+0x12>
 800d95c:	2000      	movs	r0, #0
 800d95e:	e007      	b.n	800d970 <__sfputs_r+0x22>
 800d960:	f814 1b01 	ldrb.w	r1, [r4], #1
 800d964:	463a      	mov	r2, r7
 800d966:	4630      	mov	r0, r6
 800d968:	f7ff ffda 	bl	800d920 <__sfputc_r>
 800d96c:	1c43      	adds	r3, r0, #1
 800d96e:	d1f3      	bne.n	800d958 <__sfputs_r+0xa>
 800d970:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0800d974 <_vfiprintf_r>:
 800d974:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d978:	460d      	mov	r5, r1
 800d97a:	b09d      	sub	sp, #116	@ 0x74
 800d97c:	4614      	mov	r4, r2
 800d97e:	4698      	mov	r8, r3
 800d980:	4606      	mov	r6, r0
 800d982:	b118      	cbz	r0, 800d98c <_vfiprintf_r+0x18>
 800d984:	6a03      	ldr	r3, [r0, #32]
 800d986:	b90b      	cbnz	r3, 800d98c <_vfiprintf_r+0x18>
 800d988:	f7fe fb92 	bl	800c0b0 <__sinit>
 800d98c:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 800d98e:	07d9      	lsls	r1, r3, #31
 800d990:	d405      	bmi.n	800d99e <_vfiprintf_r+0x2a>
 800d992:	89ab      	ldrh	r3, [r5, #12]
 800d994:	059a      	lsls	r2, r3, #22
 800d996:	d402      	bmi.n	800d99e <_vfiprintf_r+0x2a>
 800d998:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 800d99a:	f7fe fd94 	bl	800c4c6 <__retarget_lock_acquire_recursive>
 800d99e:	89ab      	ldrh	r3, [r5, #12]
 800d9a0:	071b      	lsls	r3, r3, #28
 800d9a2:	d501      	bpl.n	800d9a8 <_vfiprintf_r+0x34>
 800d9a4:	692b      	ldr	r3, [r5, #16]
 800d9a6:	b99b      	cbnz	r3, 800d9d0 <_vfiprintf_r+0x5c>
 800d9a8:	4629      	mov	r1, r5
 800d9aa:	4630      	mov	r0, r6
 800d9ac:	f7fe fca8 	bl	800c300 <__swsetup_r>
 800d9b0:	b170      	cbz	r0, 800d9d0 <_vfiprintf_r+0x5c>
 800d9b2:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 800d9b4:	07dc      	lsls	r4, r3, #31
 800d9b6:	d504      	bpl.n	800d9c2 <_vfiprintf_r+0x4e>
 800d9b8:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 800d9bc:	b01d      	add	sp, #116	@ 0x74
 800d9be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d9c2:	89ab      	ldrh	r3, [r5, #12]
 800d9c4:	0598      	lsls	r0, r3, #22
 800d9c6:	d4f7      	bmi.n	800d9b8 <_vfiprintf_r+0x44>
 800d9c8:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 800d9ca:	f7fe fd7d 	bl	800c4c8 <__retarget_lock_release_recursive>
 800d9ce:	e7f3      	b.n	800d9b8 <_vfiprintf_r+0x44>
 800d9d0:	2300      	movs	r3, #0
 800d9d2:	9309      	str	r3, [sp, #36]	@ 0x24
 800d9d4:	2320      	movs	r3, #32
 800d9d6:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 800d9da:	f8cd 800c 	str.w	r8, [sp, #12]
 800d9de:	2330      	movs	r3, #48	@ 0x30
 800d9e0:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 800db90 <_vfiprintf_r+0x21c>
 800d9e4:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 800d9e8:	f04f 0901 	mov.w	r9, #1
 800d9ec:	4623      	mov	r3, r4
 800d9ee:	469a      	mov	sl, r3
 800d9f0:	f813 2b01 	ldrb.w	r2, [r3], #1
 800d9f4:	b10a      	cbz	r2, 800d9fa <_vfiprintf_r+0x86>
 800d9f6:	2a25      	cmp	r2, #37	@ 0x25
 800d9f8:	d1f9      	bne.n	800d9ee <_vfiprintf_r+0x7a>
 800d9fa:	ebba 0b04 	subs.w	fp, sl, r4
 800d9fe:	d00b      	beq.n	800da18 <_vfiprintf_r+0xa4>
 800da00:	465b      	mov	r3, fp
 800da02:	4622      	mov	r2, r4
 800da04:	4629      	mov	r1, r5
 800da06:	4630      	mov	r0, r6
 800da08:	f7ff ffa1 	bl	800d94e <__sfputs_r>
 800da0c:	3001      	adds	r0, #1
 800da0e:	f000 80a7 	beq.w	800db60 <_vfiprintf_r+0x1ec>
 800da12:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800da14:	445a      	add	r2, fp
 800da16:	9209      	str	r2, [sp, #36]	@ 0x24
 800da18:	f89a 3000 	ldrb.w	r3, [sl]
 800da1c:	2b00      	cmp	r3, #0
 800da1e:	f000 809f 	beq.w	800db60 <_vfiprintf_r+0x1ec>
 800da22:	2300      	movs	r3, #0
 800da24:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 800da28:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800da2c:	f10a 0a01 	add.w	sl, sl, #1
 800da30:	9304      	str	r3, [sp, #16]
 800da32:	9307      	str	r3, [sp, #28]
 800da34:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 800da38:	931a      	str	r3, [sp, #104]	@ 0x68
 800da3a:	4654      	mov	r4, sl
 800da3c:	2205      	movs	r2, #5
 800da3e:	f814 1b01 	ldrb.w	r1, [r4], #1
 800da42:	4853      	ldr	r0, [pc, #332]	@ (800db90 <_vfiprintf_r+0x21c>)
 800da44:	f7f2 fbd4 	bl	80001f0 <memchr>
 800da48:	9a04      	ldr	r2, [sp, #16]
 800da4a:	b9d8      	cbnz	r0, 800da84 <_vfiprintf_r+0x110>
 800da4c:	06d1      	lsls	r1, r2, #27
 800da4e:	bf44      	itt	mi
 800da50:	2320      	movmi	r3, #32
 800da52:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 800da56:	0713      	lsls	r3, r2, #28
 800da58:	bf44      	itt	mi
 800da5a:	232b      	movmi	r3, #43	@ 0x2b
 800da5c:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 800da60:	f89a 3000 	ldrb.w	r3, [sl]
 800da64:	2b2a      	cmp	r3, #42	@ 0x2a
 800da66:	d015      	beq.n	800da94 <_vfiprintf_r+0x120>
 800da68:	9a07      	ldr	r2, [sp, #28]
 800da6a:	4654      	mov	r4, sl
 800da6c:	2000      	movs	r0, #0
 800da6e:	f04f 0c0a 	mov.w	ip, #10
 800da72:	4621      	mov	r1, r4
 800da74:	f811 3b01 	ldrb.w	r3, [r1], #1
 800da78:	3b30      	subs	r3, #48	@ 0x30
 800da7a:	2b09      	cmp	r3, #9
 800da7c:	d94b      	bls.n	800db16 <_vfiprintf_r+0x1a2>
 800da7e:	b1b0      	cbz	r0, 800daae <_vfiprintf_r+0x13a>
 800da80:	9207      	str	r2, [sp, #28]
 800da82:	e014      	b.n	800daae <_vfiprintf_r+0x13a>
 800da84:	eba0 0308 	sub.w	r3, r0, r8
 800da88:	fa09 f303 	lsl.w	r3, r9, r3
 800da8c:	4313      	orrs	r3, r2
 800da8e:	9304      	str	r3, [sp, #16]
 800da90:	46a2      	mov	sl, r4
 800da92:	e7d2      	b.n	800da3a <_vfiprintf_r+0xc6>
 800da94:	9b03      	ldr	r3, [sp, #12]
 800da96:	1d19      	adds	r1, r3, #4
 800da98:	681b      	ldr	r3, [r3, #0]
 800da9a:	9103      	str	r1, [sp, #12]
 800da9c:	2b00      	cmp	r3, #0
 800da9e:	bfbb      	ittet	lt
 800daa0:	425b      	neglt	r3, r3
 800daa2:	f042 0202 	orrlt.w	r2, r2, #2
 800daa6:	9307      	strge	r3, [sp, #28]
 800daa8:	9307      	strlt	r3, [sp, #28]
 800daaa:	bfb8      	it	lt
 800daac:	9204      	strlt	r2, [sp, #16]
 800daae:	7823      	ldrb	r3, [r4, #0]
 800dab0:	2b2e      	cmp	r3, #46	@ 0x2e
 800dab2:	d10a      	bne.n	800daca <_vfiprintf_r+0x156>
 800dab4:	7863      	ldrb	r3, [r4, #1]
 800dab6:	2b2a      	cmp	r3, #42	@ 0x2a
 800dab8:	d132      	bne.n	800db20 <_vfiprintf_r+0x1ac>
 800daba:	9b03      	ldr	r3, [sp, #12]
 800dabc:	1d1a      	adds	r2, r3, #4
 800dabe:	681b      	ldr	r3, [r3, #0]
 800dac0:	9203      	str	r2, [sp, #12]
 800dac2:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 800dac6:	3402      	adds	r4, #2
 800dac8:	9305      	str	r3, [sp, #20]
 800daca:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 800dba0 <_vfiprintf_r+0x22c>
 800dace:	7821      	ldrb	r1, [r4, #0]
 800dad0:	2203      	movs	r2, #3
 800dad2:	4650      	mov	r0, sl
 800dad4:	f7f2 fb8c 	bl	80001f0 <memchr>
 800dad8:	b138      	cbz	r0, 800daea <_vfiprintf_r+0x176>
 800dada:	9b04      	ldr	r3, [sp, #16]
 800dadc:	eba0 000a 	sub.w	r0, r0, sl
 800dae0:	2240      	movs	r2, #64	@ 0x40
 800dae2:	4082      	lsls	r2, r0
 800dae4:	4313      	orrs	r3, r2
 800dae6:	3401      	adds	r4, #1
 800dae8:	9304      	str	r3, [sp, #16]
 800daea:	f814 1b01 	ldrb.w	r1, [r4], #1
 800daee:	4829      	ldr	r0, [pc, #164]	@ (800db94 <_vfiprintf_r+0x220>)
 800daf0:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 800daf4:	2206      	movs	r2, #6
 800daf6:	f7f2 fb7b 	bl	80001f0 <memchr>
 800dafa:	2800      	cmp	r0, #0
 800dafc:	d03f      	beq.n	800db7e <_vfiprintf_r+0x20a>
 800dafe:	4b26      	ldr	r3, [pc, #152]	@ (800db98 <_vfiprintf_r+0x224>)
 800db00:	bb1b      	cbnz	r3, 800db4a <_vfiprintf_r+0x1d6>
 800db02:	9b03      	ldr	r3, [sp, #12]
 800db04:	3307      	adds	r3, #7
 800db06:	f023 0307 	bic.w	r3, r3, #7
 800db0a:	3308      	adds	r3, #8
 800db0c:	9303      	str	r3, [sp, #12]
 800db0e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800db10:	443b      	add	r3, r7
 800db12:	9309      	str	r3, [sp, #36]	@ 0x24
 800db14:	e76a      	b.n	800d9ec <_vfiprintf_r+0x78>
 800db16:	fb0c 3202 	mla	r2, ip, r2, r3
 800db1a:	460c      	mov	r4, r1
 800db1c:	2001      	movs	r0, #1
 800db1e:	e7a8      	b.n	800da72 <_vfiprintf_r+0xfe>
 800db20:	2300      	movs	r3, #0
 800db22:	3401      	adds	r4, #1
 800db24:	9305      	str	r3, [sp, #20]
 800db26:	4619      	mov	r1, r3
 800db28:	f04f 0c0a 	mov.w	ip, #10
 800db2c:	4620      	mov	r0, r4
 800db2e:	f810 2b01 	ldrb.w	r2, [r0], #1
 800db32:	3a30      	subs	r2, #48	@ 0x30
 800db34:	2a09      	cmp	r2, #9
 800db36:	d903      	bls.n	800db40 <_vfiprintf_r+0x1cc>
 800db38:	2b00      	cmp	r3, #0
 800db3a:	d0c6      	beq.n	800daca <_vfiprintf_r+0x156>
 800db3c:	9105      	str	r1, [sp, #20]
 800db3e:	e7c4      	b.n	800daca <_vfiprintf_r+0x156>
 800db40:	fb0c 2101 	mla	r1, ip, r1, r2
 800db44:	4604      	mov	r4, r0
 800db46:	2301      	movs	r3, #1
 800db48:	e7f0      	b.n	800db2c <_vfiprintf_r+0x1b8>
 800db4a:	ab03      	add	r3, sp, #12
 800db4c:	9300      	str	r3, [sp, #0]
 800db4e:	462a      	mov	r2, r5
 800db50:	4b12      	ldr	r3, [pc, #72]	@ (800db9c <_vfiprintf_r+0x228>)
 800db52:	a904      	add	r1, sp, #16
 800db54:	4630      	mov	r0, r6
 800db56:	f7fd fe69 	bl	800b82c <_printf_float>
 800db5a:	4607      	mov	r7, r0
 800db5c:	1c78      	adds	r0, r7, #1
 800db5e:	d1d6      	bne.n	800db0e <_vfiprintf_r+0x19a>
 800db60:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 800db62:	07d9      	lsls	r1, r3, #31
 800db64:	d405      	bmi.n	800db72 <_vfiprintf_r+0x1fe>
 800db66:	89ab      	ldrh	r3, [r5, #12]
 800db68:	059a      	lsls	r2, r3, #22
 800db6a:	d402      	bmi.n	800db72 <_vfiprintf_r+0x1fe>
 800db6c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 800db6e:	f7fe fcab 	bl	800c4c8 <__retarget_lock_release_recursive>
 800db72:	89ab      	ldrh	r3, [r5, #12]
 800db74:	065b      	lsls	r3, r3, #25
 800db76:	f53f af1f 	bmi.w	800d9b8 <_vfiprintf_r+0x44>
 800db7a:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800db7c:	e71e      	b.n	800d9bc <_vfiprintf_r+0x48>
 800db7e:	ab03      	add	r3, sp, #12
 800db80:	9300      	str	r3, [sp, #0]
 800db82:	462a      	mov	r2, r5
 800db84:	4b05      	ldr	r3, [pc, #20]	@ (800db9c <_vfiprintf_r+0x228>)
 800db86:	a904      	add	r1, sp, #16
 800db88:	4630      	mov	r0, r6
 800db8a:	f7fe f8e7 	bl	800bd5c <_printf_i>
 800db8e:	e7e4      	b.n	800db5a <_vfiprintf_r+0x1e6>
 800db90:	0800e1fa 	.word	0x0800e1fa
 800db94:	0800e204 	.word	0x0800e204
 800db98:	0800b82d 	.word	0x0800b82d
 800db9c:	0800d94f 	.word	0x0800d94f
 800dba0:	0800e200 	.word	0x0800e200

0800dba4 <__sflush_r>:
 800dba4:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 800dba8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800dbac:	0716      	lsls	r6, r2, #28
 800dbae:	4605      	mov	r5, r0
 800dbb0:	460c      	mov	r4, r1
 800dbb2:	d454      	bmi.n	800dc5e <__sflush_r+0xba>
 800dbb4:	684b      	ldr	r3, [r1, #4]
 800dbb6:	2b00      	cmp	r3, #0
 800dbb8:	dc02      	bgt.n	800dbc0 <__sflush_r+0x1c>
 800dbba:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 800dbbc:	2b00      	cmp	r3, #0
 800dbbe:	dd48      	ble.n	800dc52 <__sflush_r+0xae>
 800dbc0:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 800dbc2:	2e00      	cmp	r6, #0
 800dbc4:	d045      	beq.n	800dc52 <__sflush_r+0xae>
 800dbc6:	2300      	movs	r3, #0
 800dbc8:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 800dbcc:	682f      	ldr	r7, [r5, #0]
 800dbce:	6a21      	ldr	r1, [r4, #32]
 800dbd0:	602b      	str	r3, [r5, #0]
 800dbd2:	d030      	beq.n	800dc36 <__sflush_r+0x92>
 800dbd4:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 800dbd6:	89a3      	ldrh	r3, [r4, #12]
 800dbd8:	0759      	lsls	r1, r3, #29
 800dbda:	d505      	bpl.n	800dbe8 <__sflush_r+0x44>
 800dbdc:	6863      	ldr	r3, [r4, #4]
 800dbde:	1ad2      	subs	r2, r2, r3
 800dbe0:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 800dbe2:	b10b      	cbz	r3, 800dbe8 <__sflush_r+0x44>
 800dbe4:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800dbe6:	1ad2      	subs	r2, r2, r3
 800dbe8:	2300      	movs	r3, #0
 800dbea:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 800dbec:	6a21      	ldr	r1, [r4, #32]
 800dbee:	4628      	mov	r0, r5
 800dbf0:	47b0      	blx	r6
 800dbf2:	1c43      	adds	r3, r0, #1
 800dbf4:	89a3      	ldrh	r3, [r4, #12]
 800dbf6:	d106      	bne.n	800dc06 <__sflush_r+0x62>
 800dbf8:	6829      	ldr	r1, [r5, #0]
 800dbfa:	291d      	cmp	r1, #29
 800dbfc:	d82b      	bhi.n	800dc56 <__sflush_r+0xb2>
 800dbfe:	4a2a      	ldr	r2, [pc, #168]	@ (800dca8 <__sflush_r+0x104>)
 800dc00:	40ca      	lsrs	r2, r1
 800dc02:	07d6      	lsls	r6, r2, #31
 800dc04:	d527      	bpl.n	800dc56 <__sflush_r+0xb2>
 800dc06:	2200      	movs	r2, #0
 800dc08:	6062      	str	r2, [r4, #4]
 800dc0a:	04d9      	lsls	r1, r3, #19
 800dc0c:	6922      	ldr	r2, [r4, #16]
 800dc0e:	6022      	str	r2, [r4, #0]
 800dc10:	d504      	bpl.n	800dc1c <__sflush_r+0x78>
 800dc12:	1c42      	adds	r2, r0, #1
 800dc14:	d101      	bne.n	800dc1a <__sflush_r+0x76>
 800dc16:	682b      	ldr	r3, [r5, #0]
 800dc18:	b903      	cbnz	r3, 800dc1c <__sflush_r+0x78>
 800dc1a:	6560      	str	r0, [r4, #84]	@ 0x54
 800dc1c:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 800dc1e:	602f      	str	r7, [r5, #0]
 800dc20:	b1b9      	cbz	r1, 800dc52 <__sflush_r+0xae>
 800dc22:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 800dc26:	4299      	cmp	r1, r3
 800dc28:	d002      	beq.n	800dc30 <__sflush_r+0x8c>
 800dc2a:	4628      	mov	r0, r5
 800dc2c:	f7ff fab4 	bl	800d198 <_free_r>
 800dc30:	2300      	movs	r3, #0
 800dc32:	6363      	str	r3, [r4, #52]	@ 0x34
 800dc34:	e00d      	b.n	800dc52 <__sflush_r+0xae>
 800dc36:	2301      	movs	r3, #1
 800dc38:	4628      	mov	r0, r5
 800dc3a:	47b0      	blx	r6
 800dc3c:	4602      	mov	r2, r0
 800dc3e:	1c50      	adds	r0, r2, #1
 800dc40:	d1c9      	bne.n	800dbd6 <__sflush_r+0x32>
 800dc42:	682b      	ldr	r3, [r5, #0]
 800dc44:	2b00      	cmp	r3, #0
 800dc46:	d0c6      	beq.n	800dbd6 <__sflush_r+0x32>
 800dc48:	2b1d      	cmp	r3, #29
 800dc4a:	d001      	beq.n	800dc50 <__sflush_r+0xac>
 800dc4c:	2b16      	cmp	r3, #22
 800dc4e:	d11e      	bne.n	800dc8e <__sflush_r+0xea>
 800dc50:	602f      	str	r7, [r5, #0]
 800dc52:	2000      	movs	r0, #0
 800dc54:	e022      	b.n	800dc9c <__sflush_r+0xf8>
 800dc56:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800dc5a:	b21b      	sxth	r3, r3
 800dc5c:	e01b      	b.n	800dc96 <__sflush_r+0xf2>
 800dc5e:	690f      	ldr	r7, [r1, #16]
 800dc60:	2f00      	cmp	r7, #0
 800dc62:	d0f6      	beq.n	800dc52 <__sflush_r+0xae>
 800dc64:	0793      	lsls	r3, r2, #30
 800dc66:	680e      	ldr	r6, [r1, #0]
 800dc68:	bf08      	it	eq
 800dc6a:	694b      	ldreq	r3, [r1, #20]
 800dc6c:	600f      	str	r7, [r1, #0]
 800dc6e:	bf18      	it	ne
 800dc70:	2300      	movne	r3, #0
 800dc72:	eba6 0807 	sub.w	r8, r6, r7
 800dc76:	608b      	str	r3, [r1, #8]
 800dc78:	f1b8 0f00 	cmp.w	r8, #0
 800dc7c:	dde9      	ble.n	800dc52 <__sflush_r+0xae>
 800dc7e:	6a21      	ldr	r1, [r4, #32]
 800dc80:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 800dc82:	4643      	mov	r3, r8
 800dc84:	463a      	mov	r2, r7
 800dc86:	4628      	mov	r0, r5
 800dc88:	47b0      	blx	r6
 800dc8a:	2800      	cmp	r0, #0
 800dc8c:	dc08      	bgt.n	800dca0 <__sflush_r+0xfc>
 800dc8e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800dc92:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800dc96:	81a3      	strh	r3, [r4, #12]
 800dc98:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 800dc9c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800dca0:	4407      	add	r7, r0
 800dca2:	eba8 0800 	sub.w	r8, r8, r0
 800dca6:	e7e7      	b.n	800dc78 <__sflush_r+0xd4>
 800dca8:	20400001 	.word	0x20400001

0800dcac <_fflush_r>:
 800dcac:	b538      	push	{r3, r4, r5, lr}
 800dcae:	690b      	ldr	r3, [r1, #16]
 800dcb0:	4605      	mov	r5, r0
 800dcb2:	460c      	mov	r4, r1
 800dcb4:	b913      	cbnz	r3, 800dcbc <_fflush_r+0x10>
 800dcb6:	2500      	movs	r5, #0
 800dcb8:	4628      	mov	r0, r5
 800dcba:	bd38      	pop	{r3, r4, r5, pc}
 800dcbc:	b118      	cbz	r0, 800dcc6 <_fflush_r+0x1a>
 800dcbe:	6a03      	ldr	r3, [r0, #32]
 800dcc0:	b90b      	cbnz	r3, 800dcc6 <_fflush_r+0x1a>
 800dcc2:	f7fe f9f5 	bl	800c0b0 <__sinit>
 800dcc6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800dcca:	2b00      	cmp	r3, #0
 800dccc:	d0f3      	beq.n	800dcb6 <_fflush_r+0xa>
 800dcce:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 800dcd0:	07d0      	lsls	r0, r2, #31
 800dcd2:	d404      	bmi.n	800dcde <_fflush_r+0x32>
 800dcd4:	0599      	lsls	r1, r3, #22
 800dcd6:	d402      	bmi.n	800dcde <_fflush_r+0x32>
 800dcd8:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800dcda:	f7fe fbf4 	bl	800c4c6 <__retarget_lock_acquire_recursive>
 800dcde:	4628      	mov	r0, r5
 800dce0:	4621      	mov	r1, r4
 800dce2:	f7ff ff5f 	bl	800dba4 <__sflush_r>
 800dce6:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 800dce8:	07da      	lsls	r2, r3, #31
 800dcea:	4605      	mov	r5, r0
 800dcec:	d4e4      	bmi.n	800dcb8 <_fflush_r+0xc>
 800dcee:	89a3      	ldrh	r3, [r4, #12]
 800dcf0:	059b      	lsls	r3, r3, #22
 800dcf2:	d4e1      	bmi.n	800dcb8 <_fflush_r+0xc>
 800dcf4:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800dcf6:	f7fe fbe7 	bl	800c4c8 <__retarget_lock_release_recursive>
 800dcfa:	e7dd      	b.n	800dcb8 <_fflush_r+0xc>

0800dcfc <__swhatbuf_r>:
 800dcfc:	b570      	push	{r4, r5, r6, lr}
 800dcfe:	460c      	mov	r4, r1
 800dd00:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800dd04:	2900      	cmp	r1, #0
 800dd06:	b096      	sub	sp, #88	@ 0x58
 800dd08:	4615      	mov	r5, r2
 800dd0a:	461e      	mov	r6, r3
 800dd0c:	da0d      	bge.n	800dd2a <__swhatbuf_r+0x2e>
 800dd0e:	89a3      	ldrh	r3, [r4, #12]
 800dd10:	f013 0f80 	tst.w	r3, #128	@ 0x80
 800dd14:	f04f 0100 	mov.w	r1, #0
 800dd18:	bf14      	ite	ne
 800dd1a:	2340      	movne	r3, #64	@ 0x40
 800dd1c:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 800dd20:	2000      	movs	r0, #0
 800dd22:	6031      	str	r1, [r6, #0]
 800dd24:	602b      	str	r3, [r5, #0]
 800dd26:	b016      	add	sp, #88	@ 0x58
 800dd28:	bd70      	pop	{r4, r5, r6, pc}
 800dd2a:	466a      	mov	r2, sp
 800dd2c:	f000 f848 	bl	800ddc0 <_fstat_r>
 800dd30:	2800      	cmp	r0, #0
 800dd32:	dbec      	blt.n	800dd0e <__swhatbuf_r+0x12>
 800dd34:	9901      	ldr	r1, [sp, #4]
 800dd36:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 800dd3a:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 800dd3e:	4259      	negs	r1, r3
 800dd40:	4159      	adcs	r1, r3
 800dd42:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800dd46:	e7eb      	b.n	800dd20 <__swhatbuf_r+0x24>

0800dd48 <__smakebuf_r>:
 800dd48:	898b      	ldrh	r3, [r1, #12]
 800dd4a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800dd4c:	079d      	lsls	r5, r3, #30
 800dd4e:	4606      	mov	r6, r0
 800dd50:	460c      	mov	r4, r1
 800dd52:	d507      	bpl.n	800dd64 <__smakebuf_r+0x1c>
 800dd54:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 800dd58:	6023      	str	r3, [r4, #0]
 800dd5a:	6123      	str	r3, [r4, #16]
 800dd5c:	2301      	movs	r3, #1
 800dd5e:	6163      	str	r3, [r4, #20]
 800dd60:	b003      	add	sp, #12
 800dd62:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800dd64:	ab01      	add	r3, sp, #4
 800dd66:	466a      	mov	r2, sp
 800dd68:	f7ff ffc8 	bl	800dcfc <__swhatbuf_r>
 800dd6c:	9f00      	ldr	r7, [sp, #0]
 800dd6e:	4605      	mov	r5, r0
 800dd70:	4639      	mov	r1, r7
 800dd72:	4630      	mov	r0, r6
 800dd74:	f7fd fc2e 	bl	800b5d4 <_malloc_r>
 800dd78:	b948      	cbnz	r0, 800dd8e <__smakebuf_r+0x46>
 800dd7a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800dd7e:	059a      	lsls	r2, r3, #22
 800dd80:	d4ee      	bmi.n	800dd60 <__smakebuf_r+0x18>
 800dd82:	f023 0303 	bic.w	r3, r3, #3
 800dd86:	f043 0302 	orr.w	r3, r3, #2
 800dd8a:	81a3      	strh	r3, [r4, #12]
 800dd8c:	e7e2      	b.n	800dd54 <__smakebuf_r+0xc>
 800dd8e:	89a3      	ldrh	r3, [r4, #12]
 800dd90:	6020      	str	r0, [r4, #0]
 800dd92:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800dd96:	81a3      	strh	r3, [r4, #12]
 800dd98:	9b01      	ldr	r3, [sp, #4]
 800dd9a:	e9c4 0704 	strd	r0, r7, [r4, #16]
 800dd9e:	b15b      	cbz	r3, 800ddb8 <__smakebuf_r+0x70>
 800dda0:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800dda4:	4630      	mov	r0, r6
 800dda6:	f000 f81d 	bl	800dde4 <_isatty_r>
 800ddaa:	b128      	cbz	r0, 800ddb8 <__smakebuf_r+0x70>
 800ddac:	89a3      	ldrh	r3, [r4, #12]
 800ddae:	f023 0303 	bic.w	r3, r3, #3
 800ddb2:	f043 0301 	orr.w	r3, r3, #1
 800ddb6:	81a3      	strh	r3, [r4, #12]
 800ddb8:	89a3      	ldrh	r3, [r4, #12]
 800ddba:	431d      	orrs	r5, r3
 800ddbc:	81a5      	strh	r5, [r4, #12]
 800ddbe:	e7cf      	b.n	800dd60 <__smakebuf_r+0x18>

0800ddc0 <_fstat_r>:
 800ddc0:	b538      	push	{r3, r4, r5, lr}
 800ddc2:	4d07      	ldr	r5, [pc, #28]	@ (800dde0 <_fstat_r+0x20>)
 800ddc4:	2300      	movs	r3, #0
 800ddc6:	4604      	mov	r4, r0
 800ddc8:	4608      	mov	r0, r1
 800ddca:	4611      	mov	r1, r2
 800ddcc:	602b      	str	r3, [r5, #0]
 800ddce:	f7f5 faa3 	bl	8003318 <_fstat>
 800ddd2:	1c43      	adds	r3, r0, #1
 800ddd4:	d102      	bne.n	800dddc <_fstat_r+0x1c>
 800ddd6:	682b      	ldr	r3, [r5, #0]
 800ddd8:	b103      	cbz	r3, 800dddc <_fstat_r+0x1c>
 800ddda:	6023      	str	r3, [r4, #0]
 800dddc:	bd38      	pop	{r3, r4, r5, pc}
 800ddde:	bf00      	nop
 800dde0:	20026488 	.word	0x20026488

0800dde4 <_isatty_r>:
 800dde4:	b538      	push	{r3, r4, r5, lr}
 800dde6:	4d06      	ldr	r5, [pc, #24]	@ (800de00 <_isatty_r+0x1c>)
 800dde8:	2300      	movs	r3, #0
 800ddea:	4604      	mov	r4, r0
 800ddec:	4608      	mov	r0, r1
 800ddee:	602b      	str	r3, [r5, #0]
 800ddf0:	f7f5 faa2 	bl	8003338 <_isatty>
 800ddf4:	1c43      	adds	r3, r0, #1
 800ddf6:	d102      	bne.n	800ddfe <_isatty_r+0x1a>
 800ddf8:	682b      	ldr	r3, [r5, #0]
 800ddfa:	b103      	cbz	r3, 800ddfe <_isatty_r+0x1a>
 800ddfc:	6023      	str	r3, [r4, #0]
 800ddfe:	bd38      	pop	{r3, r4, r5, pc}
 800de00:	20026488 	.word	0x20026488

0800de04 <__assert_func>:
 800de04:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800de06:	4614      	mov	r4, r2
 800de08:	461a      	mov	r2, r3
 800de0a:	4b09      	ldr	r3, [pc, #36]	@ (800de30 <__assert_func+0x2c>)
 800de0c:	681b      	ldr	r3, [r3, #0]
 800de0e:	4605      	mov	r5, r0
 800de10:	68d8      	ldr	r0, [r3, #12]
 800de12:	b14c      	cbz	r4, 800de28 <__assert_func+0x24>
 800de14:	4b07      	ldr	r3, [pc, #28]	@ (800de34 <__assert_func+0x30>)
 800de16:	9100      	str	r1, [sp, #0]
 800de18:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800de1c:	4906      	ldr	r1, [pc, #24]	@ (800de38 <__assert_func+0x34>)
 800de1e:	462b      	mov	r3, r5
 800de20:	f000 f842 	bl	800dea8 <fiprintf>
 800de24:	f000 f852 	bl	800decc <abort>
 800de28:	4b04      	ldr	r3, [pc, #16]	@ (800de3c <__assert_func+0x38>)
 800de2a:	461c      	mov	r4, r3
 800de2c:	e7f3      	b.n	800de16 <__assert_func+0x12>
 800de2e:	bf00      	nop
 800de30:	20000024 	.word	0x20000024
 800de34:	0800e215 	.word	0x0800e215
 800de38:	0800e222 	.word	0x0800e222
 800de3c:	0800e250 	.word	0x0800e250

0800de40 <_calloc_r>:
 800de40:	b570      	push	{r4, r5, r6, lr}
 800de42:	fba1 5402 	umull	r5, r4, r1, r2
 800de46:	b934      	cbnz	r4, 800de56 <_calloc_r+0x16>
 800de48:	4629      	mov	r1, r5
 800de4a:	f7fd fbc3 	bl	800b5d4 <_malloc_r>
 800de4e:	4606      	mov	r6, r0
 800de50:	b928      	cbnz	r0, 800de5e <_calloc_r+0x1e>
 800de52:	4630      	mov	r0, r6
 800de54:	bd70      	pop	{r4, r5, r6, pc}
 800de56:	220c      	movs	r2, #12
 800de58:	6002      	str	r2, [r0, #0]
 800de5a:	2600      	movs	r6, #0
 800de5c:	e7f9      	b.n	800de52 <_calloc_r+0x12>
 800de5e:	462a      	mov	r2, r5
 800de60:	4621      	mov	r1, r4
 800de62:	f7fe faa3 	bl	800c3ac <memset>
 800de66:	e7f4      	b.n	800de52 <_calloc_r+0x12>

0800de68 <__ascii_mbtowc>:
 800de68:	b082      	sub	sp, #8
 800de6a:	b901      	cbnz	r1, 800de6e <__ascii_mbtowc+0x6>
 800de6c:	a901      	add	r1, sp, #4
 800de6e:	b142      	cbz	r2, 800de82 <__ascii_mbtowc+0x1a>
 800de70:	b14b      	cbz	r3, 800de86 <__ascii_mbtowc+0x1e>
 800de72:	7813      	ldrb	r3, [r2, #0]
 800de74:	600b      	str	r3, [r1, #0]
 800de76:	7812      	ldrb	r2, [r2, #0]
 800de78:	1e10      	subs	r0, r2, #0
 800de7a:	bf18      	it	ne
 800de7c:	2001      	movne	r0, #1
 800de7e:	b002      	add	sp, #8
 800de80:	4770      	bx	lr
 800de82:	4610      	mov	r0, r2
 800de84:	e7fb      	b.n	800de7e <__ascii_mbtowc+0x16>
 800de86:	f06f 0001 	mvn.w	r0, #1
 800de8a:	e7f8      	b.n	800de7e <__ascii_mbtowc+0x16>

0800de8c <__ascii_wctomb>:
 800de8c:	4603      	mov	r3, r0
 800de8e:	4608      	mov	r0, r1
 800de90:	b141      	cbz	r1, 800dea4 <__ascii_wctomb+0x18>
 800de92:	2aff      	cmp	r2, #255	@ 0xff
 800de94:	d904      	bls.n	800dea0 <__ascii_wctomb+0x14>
 800de96:	228a      	movs	r2, #138	@ 0x8a
 800de98:	601a      	str	r2, [r3, #0]
 800de9a:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 800de9e:	4770      	bx	lr
 800dea0:	700a      	strb	r2, [r1, #0]
 800dea2:	2001      	movs	r0, #1
 800dea4:	4770      	bx	lr
	...

0800dea8 <fiprintf>:
 800dea8:	b40e      	push	{r1, r2, r3}
 800deaa:	b503      	push	{r0, r1, lr}
 800deac:	4601      	mov	r1, r0
 800deae:	ab03      	add	r3, sp, #12
 800deb0:	4805      	ldr	r0, [pc, #20]	@ (800dec8 <fiprintf+0x20>)
 800deb2:	f853 2b04 	ldr.w	r2, [r3], #4
 800deb6:	6800      	ldr	r0, [r0, #0]
 800deb8:	9301      	str	r3, [sp, #4]
 800deba:	f7ff fd5b 	bl	800d974 <_vfiprintf_r>
 800debe:	b002      	add	sp, #8
 800dec0:	f85d eb04 	ldr.w	lr, [sp], #4
 800dec4:	b003      	add	sp, #12
 800dec6:	4770      	bx	lr
 800dec8:	20000024 	.word	0x20000024

0800decc <abort>:
 800decc:	b508      	push	{r3, lr}
 800dece:	2006      	movs	r0, #6
 800ded0:	f000 f82c 	bl	800df2c <raise>
 800ded4:	2001      	movs	r0, #1
 800ded6:	f7f5 f9eb 	bl	80032b0 <_exit>

0800deda <_raise_r>:
 800deda:	291f      	cmp	r1, #31
 800dedc:	b538      	push	{r3, r4, r5, lr}
 800dede:	4605      	mov	r5, r0
 800dee0:	460c      	mov	r4, r1
 800dee2:	d904      	bls.n	800deee <_raise_r+0x14>
 800dee4:	2316      	movs	r3, #22
 800dee6:	6003      	str	r3, [r0, #0]
 800dee8:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 800deec:	bd38      	pop	{r3, r4, r5, pc}
 800deee:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 800def0:	b112      	cbz	r2, 800def8 <_raise_r+0x1e>
 800def2:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 800def6:	b94b      	cbnz	r3, 800df0c <_raise_r+0x32>
 800def8:	4628      	mov	r0, r5
 800defa:	f000 f831 	bl	800df60 <_getpid_r>
 800defe:	4622      	mov	r2, r4
 800df00:	4601      	mov	r1, r0
 800df02:	4628      	mov	r0, r5
 800df04:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800df08:	f000 b818 	b.w	800df3c <_kill_r>
 800df0c:	2b01      	cmp	r3, #1
 800df0e:	d00a      	beq.n	800df26 <_raise_r+0x4c>
 800df10:	1c59      	adds	r1, r3, #1
 800df12:	d103      	bne.n	800df1c <_raise_r+0x42>
 800df14:	2316      	movs	r3, #22
 800df16:	6003      	str	r3, [r0, #0]
 800df18:	2001      	movs	r0, #1
 800df1a:	e7e7      	b.n	800deec <_raise_r+0x12>
 800df1c:	2100      	movs	r1, #0
 800df1e:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 800df22:	4620      	mov	r0, r4
 800df24:	4798      	blx	r3
 800df26:	2000      	movs	r0, #0
 800df28:	e7e0      	b.n	800deec <_raise_r+0x12>
	...

0800df2c <raise>:
 800df2c:	4b02      	ldr	r3, [pc, #8]	@ (800df38 <raise+0xc>)
 800df2e:	4601      	mov	r1, r0
 800df30:	6818      	ldr	r0, [r3, #0]
 800df32:	f7ff bfd2 	b.w	800deda <_raise_r>
 800df36:	bf00      	nop
 800df38:	20000024 	.word	0x20000024

0800df3c <_kill_r>:
 800df3c:	b538      	push	{r3, r4, r5, lr}
 800df3e:	4d07      	ldr	r5, [pc, #28]	@ (800df5c <_kill_r+0x20>)
 800df40:	2300      	movs	r3, #0
 800df42:	4604      	mov	r4, r0
 800df44:	4608      	mov	r0, r1
 800df46:	4611      	mov	r1, r2
 800df48:	602b      	str	r3, [r5, #0]
 800df4a:	f7f5 f9a1 	bl	8003290 <_kill>
 800df4e:	1c43      	adds	r3, r0, #1
 800df50:	d102      	bne.n	800df58 <_kill_r+0x1c>
 800df52:	682b      	ldr	r3, [r5, #0]
 800df54:	b103      	cbz	r3, 800df58 <_kill_r+0x1c>
 800df56:	6023      	str	r3, [r4, #0]
 800df58:	bd38      	pop	{r3, r4, r5, pc}
 800df5a:	bf00      	nop
 800df5c:	20026488 	.word	0x20026488

0800df60 <_getpid_r>:
 800df60:	f7f5 b98e 	b.w	8003280 <_getpid>

0800df64 <_init>:
 800df64:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800df66:	bf00      	nop
 800df68:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800df6a:	bc08      	pop	{r3}
 800df6c:	469e      	mov	lr, r3
 800df6e:	4770      	bx	lr

0800df70 <_fini>:
 800df70:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800df72:	bf00      	nop
 800df74:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800df76:	bc08      	pop	{r3}
 800df78:	469e      	mov	lr, r3
 800df7a:	4770      	bx	lr
